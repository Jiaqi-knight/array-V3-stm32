ARM GAS  /tmp/cc8lNJIB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 1
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_tim.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.TIM_TI1_ConfigInputStage,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	TIM_TI1_ConfigInputStage:
  26              	.LFB221:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @file    stm32f3xx_hal_tim.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @version V1.4.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @date    16-December-2016
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief   TIM HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          functionalities of the Timer (TIM) peripheral:
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Base Initialization
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Base Start
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Base Start Interruption
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Base Start DMA
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Output Compare/PWM Initialization
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Output Compare/PWM Channel Configuration
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Output Compare/PWM  Start
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Output Compare/PWM  Start Interruption
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Output Compare/PWM Start DMA
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Input Capture Initialization
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Input Capture Channel Configuration
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Input Capture Start
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Input Capture Start Interruption 
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Input Capture Start DMA
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time One Pulse Initialization
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time One Pulse Channel Configuration
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time One Pulse Start 
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Encoder Interface Initialization
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Encoder Interface Start
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Encoder Interface Start Interruption
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time Encoder Interface Start DMA
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Commutation Event configuration with Interruption and DMA
ARM GAS  /tmp/cc8lNJIB.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time OCRef clear configuration
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *           + Time External Clock configuration
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   @verbatim
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                       ##### TIMER Generic features #####
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   [..] The Timer features include: 
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (#) 16-bit up, down, up/down auto-reload counter.
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (#) 16-bit programmable prescaler allowing dividing (also on the fly) the 
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            counter clock frequency either by any factor between 1 and 65536.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (#) Up to 4 independent channels for:
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Input Capture
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Output Compare
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) PWM generation (Edge and Center-aligned Mode)
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) One-pulse mode output               
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             ##### How to use this driver #####
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     [..]
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      (#) Initialize the TIM low level resources by implementing the following functions 
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****          depending from feature used :
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_MspInit() 
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Input Capture : HAL_TIM_IC_MspInit()
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_MspInit()
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_MspInit()
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_MspInit()
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_MspInit()
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      (#) Initialize the TIM low level resources :
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         (##) Enable the TIM interface clock using __HAL_RCC_TIMx_CLK_ENABLE  (); 
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         (##) TIM pins configuration
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             (+++) Enable the clock for the TIM GPIOs using the following function:
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****              __HAL_RCC_GPIOx_CLK_ENABLE();   
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             (+++) Configure these TIM pins in Alternate function mode using HAL_GPIO_Init();  
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      (#) The external Clock can be configured, if needed (the default clock is the 
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****          internal clock from the APBx), using the following function:
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****          HAL_TIM_ConfigClockSource, the clock configuration should be done before 
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****          any start function.
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      (#) Configure the TIM in the desired functioning mode using one of the 
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        Initialization function of this driver:
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (++) HAL_TIM_Base_Init: to use the Timer to generate a simple time base
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (++) HAL_TIM_OC_Init and HAL_TIM_OC_ConfigChannel: to use the Timer to generate an 
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             Output Compare signal.
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (++) HAL_TIM_PWM_Init and HAL_TIM_PWM_ConfigChannel: to use the Timer to generate a 
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             PWM signal.
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (++) HAL_TIM_IC_Init and HAL_TIM_IC_ConfigChannel: to use the Timer to measure an 
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             external signal.
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****          (++) HAL_TIM_OnePulse_Init and HAL_TIM_OnePulse_ConfigChannel: to use the Timer 
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****               in One Pulse Mode.
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        (++) HAL_TIM_Encoder_Init: to use the Timer Encoder Interface.
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      (#) Activate the TIM peripheral using one of the start functions depending from the feature us
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Time Base : HAL_TIM_Base_Start(), HAL_TIM_Base_Start_DMA(), HAL_TIM_Base_Start_IT()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Input Capture :  HAL_TIM_IC_Start(), HAL_TIM_IC_Start_DMA(), HAL_TIM_IC_Start_IT()
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Output Compare : HAL_TIM_OC_Start(), HAL_TIM_OC_Start_DMA(), HAL_TIM_OC_Start_IT()
ARM GAS  /tmp/cc8lNJIB.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) PWM generation : HAL_TIM_PWM_Start(), HAL_TIM_PWM_Start_DMA(), HAL_TIM_PWM_Start_IT
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) One-pulse mode output : HAL_TIM_OnePulse_Start(), HAL_TIM_OnePulse_Start_IT()
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****            (++) Encoder mode output : HAL_TIM_Encoder_Start(), HAL_TIM_Encoder_Start_DMA(), HAL_TIM
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      (#) The DMA Burst is managed with the two following functions:
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****          HAL_TIM_DMABurst_WriteStart()
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****          HAL_TIM_DMABurst_ReadStart()
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   @endverbatim
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ******************************************************************************
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @attention
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * Redistribution and use in source and binary forms, with or without modification,
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * are permitted provided that the following conditions are met:
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *      this list of conditions and the following disclaimer.
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *      this list of conditions and the following disclaimer in the documentation
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *      and/or other materials provided with the distribution.
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *      may be used to endorse or promote products derived from this software
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *      without specific prior written permission.
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ******************************************************************************  
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */ 
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /* Includes ------------------------------------------------------------------*/
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #include "stm32f3xx_hal.h"
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @addtogroup STM32F3xx_HAL_Driver
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM TIM
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief TIM HAL module driver
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #ifdef HAL_TIM_MODULE_ENABLED
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /* Private typedef -----------------------------------------------------------*/
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /* Private define ------------------------------------------------------------*/
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /* Private macro -------------------------------------------------------------*/
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /* Private variables ---------------------------------------------------------*/
ARM GAS  /tmp/cc8lNJIB.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /* Private function prototypes -----------------------------------------------*/
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Private_Functions TIM Private Functions
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ICFilter);
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ICFilter);
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ICFilter);
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef* TIMx, uint16_t InputTriggerSource);
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma);
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma);
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                      TIM_SlaveConfigTypeDef * sSlaveConfig);
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /* Exported functions ---------------------------------------------------------*/
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions TIM Exported Functions
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group1 Time Base functions 
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    Time Base functions 
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim    
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****               ##### Time Base functions #####
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   [..]  
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     This section provides functions allowing to:
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Initialize and configure the TIM base. 
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) De-initialize the TIM base.
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Base.
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Base.
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Base and enable interrupt.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Base and disable interrupt.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Base and enable DMA transfer.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Base and disable DMA transfer.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Time base Unit according to the specified
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Base handle
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
ARM GAS  /tmp/cc8lNJIB.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** { 
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the TIM handle allocation */
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance)); 
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {  
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC */
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_Base_MspInit(htim);
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Time Base configuration */
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init); 
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Initialize the TIM state*/
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes the TIM Base peripheral 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Base handle
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_DeInit(TIM_HandleTypeDef *htim)
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_Base_MspDeInit(htim);
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change TIM state */  
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Release Lock */
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
ARM GAS  /tmp/cc8lNJIB.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Base MSP.
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_Base_MspInit(TIM_HandleTypeDef *htim)
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_Base_MspInit could be implemented in the user file
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes TIM Base MSP.
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_Base_MspDeInit(TIM_HandleTypeDef *htim)
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_Base_MspDeInit could be implemented in the user file
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Base generation.
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start(TIM_HandleTypeDef *htim)
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the TIM state*/
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
ARM GAS  /tmp/cc8lNJIB.s 			page 7


 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Base generation.
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop(TIM_HandleTypeDef *htim)
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the TIM state*/
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in interrupt mode.
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Enable the TIM Update interrupt */
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Enable the Peripheral */
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in interrupt mode.
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_IT(TIM_HandleTypeDef *htim)
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Update interrupt */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
ARM GAS  /tmp/cc8lNJIB.s 			page 8


 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Base generation in DMA mode.
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  pData: The source Buffer address.
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Length: The length of data to be transferred from memory to peripheral.
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Start_DMA(TIM_HandleTypeDef *htim, uint32_t *pData, uint16_t Length)
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** { 
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance)); 
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U)) 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     else
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the DMA Period elapsed callback */
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the DMA error callback */
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the DMA channel */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)pData, (uint32_t)&htim->Instance->ARR, 
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the TIM Update DMA request */
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_UPDATE);
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);  
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Base generation in DMA mode.
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
ARM GAS  /tmp/cc8lNJIB.s 			page 9


 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Base_Stop_DMA(TIM_HandleTypeDef *htim)
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_INSTANCE(htim->Instance));
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_UPDATE);
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the htim state */
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group2 Time Output Compare functions 
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    Time Output Compare functions 
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim    
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                   ##### Time Output Compare functions #####
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   [..]
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     This section provides functions allowing to:
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Initialize and configure the TIM Output Compare. 
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) De-initialize the TIM Output Compare.
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Output Compare.
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Output Compare.
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Output Compare and enable interrupt.
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Output Compare and disable interrupt.
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Output Compare and enable DMA transfer.
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Output Compare and disable DMA transfer.
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare according to the specified
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Output Compare handle
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Init(TIM_HandleTypeDef* htim)
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the TIM handle allocation */
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 10


 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {   
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_OC_MspInit(htim);
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Init the base time for the Output Compare */  
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance,  &htim->Init); 
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Initialize the TIM state*/
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral 
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Output Compare handle
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_DeInit(TIM_HandleTypeDef *htim)
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_BUSY;
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_OC_MspDeInit(htim);
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change TIM state */  
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Release Lock */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare MSP.
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
ARM GAS  /tmp/cc8lNJIB.s 			page 11


 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_OC_MspInit(TIM_HandleTypeDef *htim)
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_OC_MspInit could be implemented in the user file
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes TIM Output Compare MSP.
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_OC_MspDeInit(TIM_HandleTypeDef *htim)
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_OC_MspDeInit could be implemented in the user file
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation.
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Output Compare handle  
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channel to be enabled
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected   
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Output compare channel */
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
ARM GAS  /tmp/cc8lNJIB.s 			page 12


 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation.
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channel to be disabled
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Output compare channel */
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);  
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }  
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in interrupt mode.
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM OC handle
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channel to be enabled
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
ARM GAS  /tmp/cc8lNJIB.s 			page 13


 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Output compare channel */
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in interrupt mode.
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Output Compare handle
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channel to be disabled
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
ARM GAS  /tmp/cc8lNJIB.s 			page 14


 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break; 
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Output compare channel */
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE); 
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);  
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Output Compare signal generation in DMA mode.
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Output Compare handle
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channel to be enabled
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/cc8lNJIB.s 			page 15


 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  pData: The source Buffer address.
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Length: The length of data to be transferred from memory to TIM peripheral
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U)) 
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     else
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }    
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
ARM GAS  /tmp/cc8lNJIB.s 			page 16


 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 DMA request */
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      /* Set the DMA Period elapsed callback */
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Output compare channel */
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 17


 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Output Compare signal generation in DMA mode.
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Output Compare handle
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channel to be disabled
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Output compare channel */
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
ARM GAS  /tmp/cc8lNJIB.s 			page 18


 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the htim state */
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group3 Time PWM functions 
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    Time PWM functions 
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim    
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                           ##### Time PWM functions #####
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   [..]  
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     This section provides functions allowing to:
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Initialize and configure the TIM OPWM. 
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) De-initialize the TIM PWM.
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time PWM.
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time PWM.
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time PWM and enable interrupt.
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time PWM and disable interrupt.
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time PWM and enable DMA transfer.
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time PWM and disable DMA transfer.
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM PWM Time Base according to the specified
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the TIM handle allocation */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 19


1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_PWM_MspInit(htim);
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Init the base time for the PWM */  
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init); 
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Initialize the TIM state*/
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral 
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_DeInit(TIM_HandleTypeDef *htim)
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_PWM_MspDeInit(htim);
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change TIM state */  
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Release Lock */
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM PWM MSP.
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
ARM GAS  /tmp/cc8lNJIB.s 			page 20


1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_PWM_MspInit could be implemented in the user file
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes TIM PWM MSP.
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_PWM_MspDeInit(TIM_HandleTypeDef *htim)
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_PWM_MspDeInit could be implemented in the user file
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the PWM signal generation.
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Capture compare channel */
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the PWM signal generation.
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
ARM GAS  /tmp/cc8lNJIB.s 			page 21


1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {   
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Capture compare channel */
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the htim state */
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the PWM signal generation in interrupt mode.
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
ARM GAS  /tmp/cc8lNJIB.s 			page 22


1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Capture compare channel */
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the PWM signal generation in interrupt mode.
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_IT (TIM_HandleTypeDef *htim, uint32_t Channel)
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
ARM GAS  /tmp/cc8lNJIB.s 			page 23


1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break; 
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Capture compare channel */
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM PWM signal generation in DMA mode.
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
ARM GAS  /tmp/cc8lNJIB.s 			page 24


1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  pData: The source Buffer address.
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Length: The length of data to be transferred from memory to TIM peripheral
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData,
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U)) 
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     else
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }    
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 DMA request */
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
ARM GAS  /tmp/cc8lNJIB.s 			page 25


1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Output Capture/Compare 3 request */
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      /* Set the DMA Period elapsed callback */
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 DMA request */
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Capture compare channel */
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM PWM signal generation in DMA mode.
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
ARM GAS  /tmp/cc8lNJIB.s 			page 26


1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_PWM_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 DMA request */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Capture compare channel */
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
ARM GAS  /tmp/cc8lNJIB.s 			page 27


1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the htim state */
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group4 Time Input Capture functions 
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    Time Input Capture functions 
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim    
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****               ##### Time Input Capture functions #####
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  [..]  
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    This section provides functions allowing to:
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Initialize and configure the TIM Input Capture. 
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) De-initialize the TIM Input Capture.
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Start the Time Input Capture.
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Stop the Time Input Capture.
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Start the Time Input Capture and enable interrupt.
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Stop the Time Input Capture and disable interrupt.
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Start the Time Input Capture and enable DMA transfer.
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Stop the Time Input Capture and disable DMA transfer.
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Time base according to the specified
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Input Capture handle
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Init(TIM_HandleTypeDef *htim)
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the TIM handle allocation */
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision)); 
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {  
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
ARM GAS  /tmp/cc8lNJIB.s 			page 28


1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_IC_MspInit(htim);
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY; 
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Init the base time for the input capture */  
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init); 
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Initialize the TIM state*/
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes the TIM peripheral 
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Input Capture handle
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_DeInit(TIM_HandleTypeDef *htim)
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC and DMA */
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_IC_MspDeInit(htim);
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change TIM state */  
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Release Lock */
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture MSP.
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_IC_MspInit(TIM_HandleTypeDef *htim)
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_IC_MspInit could be implemented in the user file
ARM GAS  /tmp/cc8lNJIB.s 			page 29


1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes TIM Input Capture MSP.
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_IC_MspDeInit(TIM_HandleTypeDef *htim)
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_IC_MspDeInit could be implemented in the user file
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement.
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Input Capture handle
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start (TIM_HandleTypeDef *htim, uint32_t Channel)
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Input Capture channel */
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);  
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement.
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** { 
ARM GAS  /tmp/cc8lNJIB.s 			page 30


1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Input Capture channel */
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in interrupt mode.
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Input Capture handle
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_IT (TIM_HandleTypeDef *htim, uint32_t Channel)
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 interrupt */
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2 interrupt */
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3 interrupt */
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4 interrupt */
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
ARM GAS  /tmp/cc8lNJIB.s 			page 31


1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Input Capture channel */
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);  
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in interrupt mode.
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 interrupt */
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 interrupt */
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3 interrupt */
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4 interrupt */
ARM GAS  /tmp/cc8lNJIB.s 			page 32


1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break; 
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Input Capture channel */
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE); 
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Input Capture measurement in DMA mode.
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Input Capture handle
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  pData: The destination Buffer address.
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Length: The length of data to be transferred from TIM peripheral to memory.
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pData, 
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U)) 
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     else
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
ARM GAS  /tmp/cc8lNJIB.s 			page 33


1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 1 DMA request */      
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 2  DMA request */
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->CCR3, (uint32_t)pData
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 3  DMA request */
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->CCR4, (uint32_t)pData
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
ARM GAS  /tmp/cc8lNJIB.s 			page 34


1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Capture/Compare 4  DMA request */
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Input Capture channel */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Input Capture measurement in DMA mode.
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Input Capture handle
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {       
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 1 DMA request */
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 2 DMA request */
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 3  DMA request */
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
ARM GAS  /tmp/cc8lNJIB.s 			page 35


1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the TIM Capture/Compare 4  DMA request */
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Input Capture channel */
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the htim state */
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group5 Time One Pulse functions 
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    Time One Pulse functions 
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim    
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         ##### Time One Pulse functions #####
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   [..]  
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     This section provides functions allowing to:
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Initialize and configure the TIM One Pulse. 
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) De-initialize the TIM One Pulse.
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time One Pulse.
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time One Pulse.
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time One Pulse and enable interrupt.
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time One Pulse and disable interrupt.
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time One Pulse and enable DMA transfer.
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time One Pulse and disable DMA transfer.
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Time Base according to the specified
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_HandleTypeDef and create the associated handle.
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM OnePulse handle
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OnePulseMode: Select the One pulse mode.
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         This parameter can be one of the following values:
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_OPMODE_SINGLE: Only one pulse will be generated.
ARM GAS  /tmp/cc8lNJIB.s 			page 36


1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_OPMODE_REPETITIVE: Repetitive pulses wil be generated.
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Init(TIM_HandleTypeDef *htim, uint32_t OnePulseMode)
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the TIM handle allocation */
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_OPM_MODE(OnePulseMode));
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {   
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_OnePulse_MspInit(htim);
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Configure the Time base in the One Pulse Mode */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the OPM Bit */
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CR1 &= ~TIM_CR1_OPM;
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Configure the OPM Mode */
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CR1 |= OnePulseMode;
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Initialize the TIM state*/
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes the TIM One Pulse  
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM One Pulse handle
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_DeInit(TIM_HandleTypeDef *htim)
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
ARM GAS  /tmp/cc8lNJIB.s 			page 37


2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_OnePulse_MspDeInit(htim);
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change TIM state */  
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Release Lock */
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse MSP.
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspInit(TIM_HandleTypeDef *htim)
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspInit could be implemented in the user file
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes TIM One Pulse MSP.
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_OnePulse_MspDeInit(TIM_HandleTypeDef *htim)
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_OnePulse_MspDeInit could be implemented in the user file
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation.
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM One Pulse handle
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OutputChannel: TIM Channels to be enabled
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels 
ARM GAS  /tmp/cc8lNJIB.s 			page 38


2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together 
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware 
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation.
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM One Pulse handle
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OutputChannel: TIM Channels to be disable
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels 
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM One Pulse signal generation in interrupt mode.
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM One Pulse handle
ARM GAS  /tmp/cc8lNJIB.s 			page 39


2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OutputChannel: TIM Channels to be enabled
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Start_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Capture compare and the Input Capture channels 
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be enabled together 
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     No need to enable the counter, it's enabled automatically by hardware 
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (the counter starts in response to a stimulus and generate a pulse */
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 1 interrupt */
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the TIM Capture/Compare 2 interrupt */
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Enable the main output */
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM One Pulse signal generation in interrupt mode.
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM One Pulse handle
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OutputChannel: TIM Channels to be enabled
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_Stop_IT(TIM_HandleTypeDef *htim, uint32_t OutputChannel)
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 1 interrupt */
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);  
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Capture/Compare 2 interrupt */
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Capture compare and the Input Capture channels 
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   (in the OPM Mode the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHANNEL_2)
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as output, the TIM_CHANNEL_2 will be used as input and
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if TIM_CHANNEL_1 is used as input, the TIM_CHANNEL_2 will be used as output 
ARM GAS  /tmp/cc8lNJIB.s 			page 40


2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   in all combinations, the TIM_CHANNEL_1 and TIM_CHANNEL_2 should be disabled together */  
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the Main Ouput */
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    __HAL_TIM_DISABLE(htim);  
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group6 Time Encoder functions 
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    Time Encoder functions 
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim    
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                           ##### Time Encoder functions #####
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   [..]
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     This section provides functions allowing to:
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Initialize and configure the TIM Encoder. 
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) De-initialize the TIM Encoder.
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Encoder.
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Encoder.
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Encoder and enable interrupt.
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Encoder and disable interrupt.
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Start the Time Encoder and enable DMA transfer.
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     (+) Stop the Time Encoder and disable DMA transfer.
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface and create the associated handle.
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder Interface handle
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sConfig: TIM Encoder Interface configuration structure
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Init(TIM_HandleTypeDef *htim,  TIM_Encoder_InitTypeDef* sConfig)
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the TIM handle allocation */
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
ARM GAS  /tmp/cc8lNJIB.s 			page 41


2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_ENCODER_MODE(sConfig->EncoderMode));
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC1Selection));
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->IC2Selection));
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->IC1Polarity));
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->IC2Polarity));
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC1Prescaler));
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->IC2Prescaler));
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC1Filter));
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->IC2Filter));
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   { 
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Allocate lock resource and initialize it */
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_Encoder_MspInit(htim);
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TIM state */
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the SMS bits */
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR &= ~TIM_SMCR_SMS;
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Configure the Time base in the Encoder Mode */
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);  
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 = htim->Instance->CCMR1;
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCER register value */
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = htim->Instance->CCER;
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the encoder Mode */
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr |= sConfig->EncoderMode;
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Capture Compare 1 and the Capture Compare 2 as input */
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the the Capture Compare 1 and the Capture Compare 2 prescalers and filters */
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1PSC | TIM_CCMR1_IC2PSC);
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
ARM GAS  /tmp/cc8lNJIB.s 			page 42


2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the TI1 and the TI2 Polarities */
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC2P);
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx SMCR */
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CCMR1 = tmpccmr1;
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCER */
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CCER = tmpccer;
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Initialize the TIM state*/
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes the TIM Encoder interface  
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder handle
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_DeInit(TIM_HandleTypeDef *htim)
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Peripheral Clock */
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_Encoder_MspDeInit(htim);
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change TIM state */  
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Release Lock */
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Encoder Interface MSP.
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspInit(TIM_HandleTypeDef *htim)
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cc8lNJIB.s 			page 43


2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_Encoder_MspInit could be implemented in the user file
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  DeInitializes TIM Encoder Interface MSP.
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_Encoder_MspDeInit(TIM_HandleTypeDef *htim)
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_Encoder_MspDeInit could be implemented in the user file
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface.
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder Interface handle
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the encoder interface channels */
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_1:
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }  
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_2:
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }  
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   default :
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
ARM GAS  /tmp/cc8lNJIB.s 			page 44


2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface.
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder Interface handle
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop(TIM_HandleTypeDef *htim, uint32_t Channel)
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHA
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_1:
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }  
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_2:
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }  
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   default :
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in interrupt mode.
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder Interface handle
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
ARM GAS  /tmp/cc8lNJIB.s 			page 45


2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the encoder interface channels */
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the capture compare Interrupts 1 and/or 2U */
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_1:
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }  
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_2:
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }  
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   default :
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }   
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the Peripheral */
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in interrupt mode.
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder Interface handle
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be disabled
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_IT(TIM_HandleTypeDef *htim, uint32_t Channel)
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
ARM GAS  /tmp/cc8lNJIB.s 			page 46


2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHA
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1U */
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {  
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the capture compare Interrupts 2U */
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the capture compare Interrupts 1 and 2U */
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the htim state */
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Starts the TIM Encoder Interface in DMA mode.
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder Interface handle
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  pData1: The destination Buffer address for IC1.
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  pData2: The destination Buffer address for IC2.
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Length: The length of data to be transferred from TIM peripheral to memory.
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Start_DMA(TIM_HandleTypeDef *htim, uint32_t Channel, uint32_t *pD
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_BUSY;
ARM GAS  /tmp/cc8lNJIB.s 			page 47


2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U)) 
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     else
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_1:
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t )pDat
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Input Capture DMA request */      
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Peripheral */
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Capture compare channel */
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_2:
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError;
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Peripheral */
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Capture compare channel */
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
ARM GAS  /tmp/cc8lNJIB.s 			page 48


2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_ALL:
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Peripheral */
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Capture compare channel */
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the TIM Input Capture  DMA request */
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   default:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM Encoder Interface in DMA mode.
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder Interface handle
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_ALL: TIM Channel 1 and TIM Channel 2 are selected
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** */
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_Encoder_Stop_DMA(TIM_HandleTypeDef *htim, uint32_t Channel)
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_CC_INSTANCE(htim->Instance));
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
ARM GAS  /tmp/cc8lNJIB.s 			page 49


2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Input Capture channels 1 and 2
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   (in the EncoderInterface the two possible channels that can be used are TIM_CHANNEL_1 and TIM_CHA
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1U */
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {  
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the capture compare DMA Request 2U */
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Disable the capture compare DMA Request 1 and 2U */
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Peripheral */
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the htim state */
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group7 TIM IRQ handler management 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    IRQ handler management 
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim   
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         ##### IRQ handler management #####
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================  
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   [..]  
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     This section provides Timer IRQ handler function.
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  This function handles TIM interrupts requests.
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM  handle
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
ARM GAS  /tmp/cc8lNJIB.s 			page 50


2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Capture compare 1 event */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) !=RESET)
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         /* Input capture event */
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         if((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         {
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****           HAL_TIM_IC_CaptureCallback(htim);
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         }
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         /* Output compare event */
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         else
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         {
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****           HAL_TIM_OC_DelayElapsedCallback(htim);
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         }
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Capture compare 2 event */
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) !=RESET)
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Input capture event */
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {          
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Output compare event */
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       else
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     } 
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Capture compare 3 event */
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) !=RESET)
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Input capture event */
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {          
ARM GAS  /tmp/cc8lNJIB.s 			page 51


2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Output compare event */
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       else
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim); 
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Capture compare 4 event */
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) !=RESET)
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Input capture event */
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {          
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Output compare event */
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       else
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     } 
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* TIM Update event */
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) !=RESET)
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     { 
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIM_PeriodElapsedCallback(htim);
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* TIM Break input event */
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) !=RESET)
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     { 
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIMEx_BreakCallback(htim);
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* TIM Trigger detection event */
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) !=RESET)
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     { 
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIM_TriggerCallback(htim);
ARM GAS  /tmp/cc8lNJIB.s 			page 52


2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* TIM commutation event */
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) !=RESET)
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     { 
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIMEx_CommutationCallback(htim);
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group8 Peripheral Control functions
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief   	Peripheral Control functions 
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim   
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                    ##### Peripheral Control functions #####
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================  
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  [..] 
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    This section provides functions allowing to:
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       (+) Configure The Input Output channels for OC, PWM, IC or One Pulse mode. 
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       (+) Configure External Clock source.
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       (+) Configure Complementary channels, break features and dead time.
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       (+) Configure Master and the Slave synchronization.
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       (+) Configure the DMA Burst Mode.
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Output Compare Channels according to the specified
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Output Compare handle
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sConfig: TIM Output Compare configuration structure
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected 
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak HAL_StatusTypeDef HAL_TIM_OC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef* sCon
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel)); 
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_OC_MODE(sConfig->OCMode));
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check input state */
ARM GAS  /tmp/cc8lNJIB.s 			page 53


2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim); 
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the TIM Channel 1 in Output Compare */
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the TIM Channel 2 in Output Compare */
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the TIM Channel 3 in Output Compare */
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        /* Configure the TIM Channel 4 in Output Compare */
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        TIM_OC4_SetConfig(htim->Instance, sConfig);
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;    
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim); 
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM Input Capture Channels according to the specified
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_IC_InitTypeDef.
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM IC handle
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sConfig: TIM Input Capture configuration structure
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
ARM GAS  /tmp/cc8lNJIB.s 			page 54


2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected 
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_IC_ConfigChannel(TIM_HandleTypeDef *htim, TIM_IC_InitTypeDef* sConfig, ui
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_POLARITY(sConfig->ICPolarity));
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_SELECTION(sConfig->ICSelection));
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_PRESCALER(sConfig->ICPrescaler));
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_IC_FILTER(sConfig->ICFilter));
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* TI1 Configuration */
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI1_SetConfig(htim->Instance,
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICPolarity,
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICSelection,
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICFilter);
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the IC1PSC Bits */
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the IC1PSC value */
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 |= sConfig->ICPrescaler;
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* TI2 Configuration */
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI2_SetConfig(htim->Instance, 
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                       sConfig->ICPolarity,
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                       sConfig->ICSelection,
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                       sConfig->ICFilter);
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the IC2PSC Bits */
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the IC2PSC value */
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_3)
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* TI3 Configuration */
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI3_SetConfig(htim->Instance,  
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICPolarity,
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICSelection,
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICFilter);
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                
ARM GAS  /tmp/cc8lNJIB.s 			page 55


3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the IC3PSC Bits */
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the IC3PSC value */
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 |= sConfig->ICPrescaler;
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* TI4 Configuration */
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI4_SetConfig(htim->Instance, 
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICPolarity,
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICSelection,
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                sConfig->ICFilter);
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the IC4PSC Bits */
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the IC4PSC value */
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK; 
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM PWM  channels according to the specified
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_OC_InitTypeDef.
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sConfig: TIM PWM configuration structure
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim, TIM_OC_InitTypeDef* sCo
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */ 
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel)); 
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
ARM GAS  /tmp/cc8lNJIB.s 			page 56


3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the Channel 1 in PWM mode */
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the Preload enable bit for channel1 */
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the Output Fast mode */
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the Channel 2 in PWM mode */
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the Preload enable bit for channel2 */
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the Output Fast mode */
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the Channel 3 in PWM mode */
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the Preload enable bit for channel3 */
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      /* Configure the Output Fast mode */
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;  
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the Channel 4 in PWM mode */
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the Preload enable bit for channel4 */
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      /* Configure the Output Fast mode */
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;  
ARM GAS  /tmp/cc8lNJIB.s 			page 57


3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;    
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Initializes the TIM One Pulse Channels according to the specified
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         parameters in the TIM_OnePulse_InitTypeDef.
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM One Pulse handle
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sConfig: TIM One Pulse configuration structure
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OutputChannel: TIM Channels to be enabled
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  InputChannel: TIM Channels to be enabled
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_OnePulse_ConfigChannel(TIM_HandleTypeDef *htim,  TIM_OnePulse_InitTypeDef
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_OC_InitTypeDef temp1;
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(OutputChannel));
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_OPM_CHANNELS(InputChannel));
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(OutputChannel != InputChannel)  
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Extract the Ouput compare configuration from sConfig structure */  
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCMode = sConfig->OCMode;
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.Pulse = sConfig->Pulse;
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCPolarity = sConfig->OCPolarity;
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCNPolarity = sConfig->OCNPolarity;
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCIdleState = sConfig->OCIdleState;
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCNIdleState = sConfig->OCNIdleState; 
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     switch (OutputChannel)
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
ARM GAS  /tmp/cc8lNJIB.s 			page 58


3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, &temp1); 
3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, &temp1);
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;  
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     switch (InputChannel)
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_SetConfig(htim->Instance, sConfig->ICPolarity,
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sConfig->ICSelection, sConfig->ICFilter);
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the IC1PSC Bits */
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Select the Trigger source */
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->SMCR |= TIM_TS_TI1FP1;
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Select the Slave Mode */      
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI2_SetConfig(htim->Instance, sConfig->ICPolarity,
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                  sConfig->ICSelection, sConfig->ICFilter);
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Reset the IC2PSC Bits */
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Select the Trigger source */
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_TS_TI2FP2;
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Select the Slave Mode */      
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;  
3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
ARM GAS  /tmp/cc8lNJIB.s 			page 59


3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the memory to the TIM peripheral  
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstBaseAddress: TIM Base address from where the DMA will start the Data write
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         This parameter can be one of the following values:
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1  
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT   
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC   
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3  
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_DCR
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstRequestSrc: TIM DMA Request sources
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         This parameter can be one of the following values:
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstBuffer: The Buffer address.
3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstLength: DMA Burst length. This parameter can be one value
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress, u
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                               uint32_t* BurstBuffer, uint32_t  BurstLength)
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
ARM GAS  /tmp/cc8lNJIB.s 			page 60


3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U)) 
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     else
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)BurstBuffer, (uint32_t)&htim->Insta
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC1:
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC2:
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC3:
ARM GAS  /tmp/cc8lNJIB.s 			page 61


3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC4:
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMADelayPulseCplt;
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_COM:
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)BurstBuffer, (uint32_t)&htim->
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)BurstBuffer, (uint32_t)&htim->Inst
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;  
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* configure the DMA Burst Mode */
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    htim->Instance->DCR = BurstBaseAddress | BurstLength;  
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Enable the TIM DMA Request */
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);  
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_READY;
ARM GAS  /tmp/cc8lNJIB.s 			page 62


3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stops the TIM DMA Burst mode 
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstRequestSrc: TIM DMA Request sources to disable
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_WriteStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]); 
3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC1:
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);     
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC2:
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);     
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC3:
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);     
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC4:
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);     
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_COM:
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);     
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);     
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;  
3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
ARM GAS  /tmp/cc8lNJIB.s 			page 63


3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the DMA Burst to transfer Data from the TIM peripheral to the memory 
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstBaseAddress: TIM Base address from where the DMA will starts the Data read
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         This parameter can be one of the following values:
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR1  
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CR2
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_SMCR
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_DIER
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_SR
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_EGR
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR1
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCMR2
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCER
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CNT   
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_PSC   
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_ARR
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_RCR
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR1
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR2
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR3  
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_CCR4
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_BDTR
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMABASE_DCR
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstRequestSrc: TIM DMA Request sources
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         This parameter can be one of the following values:
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_UPDATE: TIM update Interrupt source
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC1: TIM Capture Compare 1 DMA source
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC2: TIM Capture Compare 2 DMA source
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC3: TIM Capture Compare 3 DMA source
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_CC4: TIM Capture Compare 4 DMA source
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_COM: TIM Commutation DMA source
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_DMA_TRIGGER: TIM Trigger DMA source
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstBuffer: The Buffer address.
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstLength: DMA Burst length. This parameter can be one value
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         between: TIM_DMABURSTLENGTH_1TRANSFER and TIM_DMABURSTLENGTH_18TRANSFERS.
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStart(TIM_HandleTypeDef *htim, uint32_t BurstBaseAddress, ui
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                              uint32_t  *BurstBuffer, uint32_t  BurstLength)
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMABURST_INSTANCE(htim->Instance));
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_BASE(BurstBaseAddress));
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_LENGTH(BurstLength));
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
ARM GAS  /tmp/cc8lNJIB.s 			page 64


3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U)) 
3571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
3573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     else
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
3577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }  
3579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
3580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
3585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
3588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC1:
3594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMACaptureCplt;
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC2:
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMACaptureCplt;
3609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
3612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC3:
3618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMACaptureCplt;
3621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
ARM GAS  /tmp/cc8lNJIB.s 			page 65


3623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
3624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC4:
3630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMACaptureCplt;
3633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
3636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
3639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_COM:
3642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
3645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
3648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)&htim->Instance->DMAR, (uint32
3651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA Period elapsed callback */
3656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
3657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
3658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the DMA error callback */
3659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
3660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the DMA channel */
3662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
3663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
3666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;  
3667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* configure the DMA Burst Mode */
3670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->DCR = BurstBaseAddress | BurstLength;  
3671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable the TIM DMA Request */
3673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
3674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
3678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
3679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
ARM GAS  /tmp/cc8lNJIB.s 			page 66


3680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Stop the DMA burst reading 
3683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  BurstRequestSrc: TIM DMA Request sources to disable.
3685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
3687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_DMABurst_ReadStop(TIM_HandleTypeDef *htim, uint32_t BurstRequestSrc)
3688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_DMA_SOURCE(BurstRequestSrc));
3691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Abort the DMA transfer (at least disable the DMA channel) */
3693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
3694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_UPDATE:
3696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]); 
3698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC1:
3701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);     
3703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC2:
3706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);     
3708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC3:
3711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);     
3713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_CC4:
3716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);     
3718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_COM:
3721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);     
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_DMA_TRIGGER:
3726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);     
3728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:
3731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;  
3732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the TIM Update DMA request */
3735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
3736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
ARM GAS  /tmp/cc8lNJIB.s 			page 67


3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
3738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
3739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
3740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Generate a software event
3743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  EventSource: specifies the event source.
3745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
3746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_UPDATE: Timer update Event source
3747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC1: Timer Capture Compare 1 Event source
3748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC2: Timer Capture Compare 2 Event source
3749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC3: Timer Capture Compare 3 Event source
3750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_CC4: Timer Capture Compare 4 Event source
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_COM: Timer COM event source  
3752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_TRIGGER: Timer Trigger Event source
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_BREAK: Timer Break event source
3754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_EVENTSOURCE_BREAK2: Timer Break2 event source
3755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @note TIM_EVENTSOURCE_BREAK2 isn't relevant for STM32F37xx and STM32F38xx 
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *       devices
3758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */ 
3759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_GenerateEvent(TIM_HandleTypeDef *htim, uint32_t EventSource)
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_INSTANCE(htim->Instance));
3764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_EVENT_SOURCE(EventSource));
3765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Process Locked */
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
3768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the TIM state */
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the event sources */
3773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->EGR = EventSource;
3774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Change the TIM state */
3776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Return function status */
3781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
3783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configures the OCRef clear feature
3786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sClearInputConfig: pointer to a TIM_ClearInputConfigTypeDef structure that
3788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         contains the OCREF clear feature and parameters for the TIM peripheral. 
3789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: specifies the TIM Channel
3790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
3791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
3792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
3793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
ARM GAS  /tmp/cc8lNJIB.s 			page 68


3794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
3795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */ 
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak HAL_StatusTypeDef HAL_TIM_ConfigOCrefClear(TIM_HandleTypeDef *htim, TIM_ClearInputConfigType
3798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {  
3799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
3801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
3802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLEARINPUT_SOURCE(sClearInputConfig->ClearInputSource));
3803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
3804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Process Locked */
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
3806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(sClearInputConfig->ClearInputSource == TIM_CLEARINPUTSOURCE_ETR)
3810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Check the parameters */
3812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_CLEARINPUT_POLARITY(sClearInputConfig->ClearInputPolarity));
3813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_CLEARINPUT_PRESCALER(sClearInputConfig->ClearInputPrescaler));
3814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_CLEARINPUT_FILTER(sClearInputConfig->ClearInputFilter));
3815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_ETR_SetConfig(htim->Instance, 
3817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                       sClearInputConfig->ClearInputPrescaler,
3818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                       sClearInputConfig->ClearInputPolarity,
3819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                       sClearInputConfig->ClearInputFilter);
3820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
3821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
3823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_1:    
3825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {        
3826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
3827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Ocref clear feature for Channel 1U */
3829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1CE;
3830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
3831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       else
3832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         /* Disable the Ocref clear feature for Channel 1U */
3834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1CE;      
3835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
3836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }    
3837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_2:    
3839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     { 
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance)); 
3841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
3842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Ocref clear feature for Channel 2U */
3844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2CE;
3845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
3846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       else
3847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         /* Disable the Ocref clear feature for Channel 2U */
3849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2CE;      
3850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
ARM GAS  /tmp/cc8lNJIB.s 			page 69


3851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     } 
3852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_3:    
3854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
3856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
3857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Ocref clear feature for Channel 3U */
3859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3CE;
3860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
3861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       else
3862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         /* Disable the Ocref clear feature for Channel 3U */
3864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3CE;      
3865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
3866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     } 
3867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     case TIM_CHANNEL_4:    
3869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {  
3870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
3871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
3872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the Ocref clear feature for Channel 4U */
3874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4CE;
3875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
3876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       else
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       {
3878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         /* Disable the Ocref clear feature for Channel 4U */
3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4CE;      
3880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       }
3881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     } 
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     default:  
3884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
3886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
3890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
3892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }  
3893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
3895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief   Configures the clock source to be used
3896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
3897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sClockSourceConfig: pointer to a TIM_ClockConfigTypeDef structure that
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         contains the clock source information for the TIM peripheral. 
3899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
3900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */ 
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef * sCloc
3902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
3903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
3904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Process Locked */
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
3907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
ARM GAS  /tmp/cc8lNJIB.s 			page 70


3908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
3909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
3911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));
3912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
3914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
3915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
3916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
3917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
3918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
3919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (sClockSourceConfig->ClockSource)
3920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
3921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_INTERNAL:
3922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_INSTANCE(htim->Instance));      
3924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable slave mode to clock the prescaler directly with the internal clock */
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR &= ~TIM_SMCR_SMS;
3926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ETRMODE1:
3930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 1 (ETRF)*/
3932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
3935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
3936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
3937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
3938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the ETR Clock source */
3940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance, 
3941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler, 
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity, 
3943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
3944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Get the TIMx SMCR register value */
3945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
3946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Reset the SMS and TS Bits */
3947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
3948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Select the External clock mode1 and the ETRF trigger */
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
3950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Write to TIMx SMCR */
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
3952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ETRMODE2:
3956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external trigger input mode 2 (ETRF)*/
3958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE2_INSTANCE(htim->Instance));
3959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check ETR input conditioning related parameters */
3961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
3962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
3963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
3964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
ARM GAS  /tmp/cc8lNJIB.s 			page 71


3965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the ETR Clock source */
3966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance, 
3967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sClockSourceConfig->ClockPrescaler, 
3968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sClockSourceConfig->ClockPolarity,
3969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sClockSourceConfig->ClockFilter);
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Enable the External clock mode2 */
3971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_ECE;
3972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
3975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_TI1:
3976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1U */
3978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
3979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
3981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
3982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
3983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance, 
3985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity, 
3986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
3987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
3988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
3989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
3990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_TI2:
3991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
3992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1 (ETRF)*/
3993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
3994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
3995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        /* Check TI2 input conditioning related parameters */
3996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
3997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
3998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
3999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance, 
4000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity, 
4001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
4003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_TI1ED:
4006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1U */
4008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_TIX_INSTANCE(htim->Instance));
4009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check TI1 input conditioning related parameters */
4011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
4012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));
4013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance, 
4015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sClockSourceConfig->ClockPolarity,
4016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sClockSourceConfig->ClockFilter);
4017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
4018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR0:
4021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
ARM GAS  /tmp/cc8lNJIB.s 			page 72


4022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1U */
4023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR0);
4026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR1:
4029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1U */
4031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR1);
4034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR2:
4037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1U */
4039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR2);
4042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CLOCKSOURCE_ITR3:
4045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check whether or not the timer instance supports external clock mode 1U */
4047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));
4048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR3);
4050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   default:
4054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;    
4055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
4059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Selects the signal connected to the TI1 input: direct from CH1_input
4065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         or a XOR combination between CH1_input, CH2_input & CH3_input
4066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle.
4067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TI1_Selection: Indicate whether or not channel 1 is connected to the
4068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         output of a XOR gate.
4069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
4070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_CH1: The TIMx_CH1 pin is connected to TI1 input
4071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TI1SELECTION_XORCOMBINATION: The TIMx_CH1, CH2 and CH3
4072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            pins are connected to the TI1 input (XOR combination)
4073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
4074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_ConfigTI1Input(TIM_HandleTypeDef *htim, uint32_t TI1_Selection)
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpcr2 = 0U;
4078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
ARM GAS  /tmp/cc8lNJIB.s 			page 73


4079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_XOR_INSTANCE(htim->Instance)); 
4081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_TI1SELECTION(TI1_Selection));
4082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 = htim->Instance->CR2;
4085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the TI1 selection */
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 &= ~TIM_CR2_TI1S;
4088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the the TI1 selection */
4090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 |= TI1_Selection;
4091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMxCR2 */
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CR2 = tmpcr2;
4094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle.
4101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sSlaveConfig: pointer to a TIM_SlaveConfigTypeDef structure that
4102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         timer input or external trigger input) and the ) and the Slave 
4104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         mode (Disable, Reset, Gated, Trigger, External clock mode 1). 
4105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchronization(TIM_HandleTypeDef *htim, TIM_SlaveConfigTypeDe
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
4111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
4112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
4113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
4115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
4119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable Trigger Interrupt */
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
4122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable Trigger DMA request */
4124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
4125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);  
4129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
4131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
4132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configures the TIM in Slave mode in interrupt mode
4135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle.
ARM GAS  /tmp/cc8lNJIB.s 			page 74


4136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  sSlaveConfig: pointer to a TIM_SlaveConfigTypeDef structure that
4137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         contains the selected trigger (internal trigger input, filtered
4138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         timer input or external trigger input) and the ) and the Slave 
4139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *         mode (Disable, Reset, Gated, Trigger, External clock mode 1). 
4140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL status
4141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_StatusTypeDef HAL_TIM_SlaveConfigSynchronization_IT(TIM_HandleTypeDef *htim, 
4143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                                         TIM_SlaveConfigTypeDef * sSlaveConfig)
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
4146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_INSTANCE(htim->Instance));
4147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_SLAVE_MODE(sSlaveConfig->SlaveMode));
4148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_TRIGGER_SELECTION(sSlaveConfig->InputTrigger));
4149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
4151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
4153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
4155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Enable Trigger Interrupt */
4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_TRIGGER);
4158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable Trigger DMA request */
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
4161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
4163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
4164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);  
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
4167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Read the captured value from Capture Compare unit
4171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle.
4172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: TIM Channels to be enabled
4173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
4174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1 selected
4175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2 selected
4176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
4177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval Captured value
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** uint32_t HAL_TIM_ReadCapturedValue(TIM_HandleTypeDef *htim, uint32_t Channel)
4181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpreg = 0U;
4183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
4185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
4187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_1:
4189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
ARM GAS  /tmp/cc8lNJIB.s 			page 75


4193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Return the capture 1 value */
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =  htim->Instance->CCR1;
4195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
4197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_2:
4199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Return the capture 2 value */
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR2;
4205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
4207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_3:
4210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));
4213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Return the capture 3 value */
4215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR3;
4216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
4218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_CHANNEL_4:
4221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));
4224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Return the capture 4 value */
4226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR4;
4227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
4229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   default:
4232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;  
4233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      
4235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);  
4236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return tmpreg;
4237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
4241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group9 TIM Callbacks functions
4244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief    TIM Callbacks functions 
4245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
4246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim   
4247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
4248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         ##### TIM Callbacks functions #####
4249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================  
ARM GAS  /tmp/cc8lNJIB.s 			page 76


4250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  [..]  
4251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    This section provides TIM callback functions:
4252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Timer Period elapsed callback
4253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Timer Output Compare callback
4254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Timer Input capture callback
4255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Timer Trigger callback
4256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    (+) Timer Error callback
4257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
4259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
4260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Period elapsed callback in non blocking mode 
4264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
4265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
4268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
4271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the __HAL_TIM_PeriodElapsedCallback could be implemented in the user file
4274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
4275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Output Compare callback in non blocking mode 
4279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM OC handle
4280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
4283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
4286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the __HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
4289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
4290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Input Capture callback in non blocking mode 
4293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM IC handle
4294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
4297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
4300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the __HAL_TIM_IC_CaptureCallback could be implemented in the user file
4303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
4304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
ARM GAS  /tmp/cc8lNJIB.s 			page 77


4307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  PWM Pulse finished callback in non blocking mode 
4308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
4309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
4312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
4315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the __HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
4318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
4319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Hall Trigger detection callback in non blocking mode 
4323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
4324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
4330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_TriggerCallback could be implemented in the user file
4333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
4334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Timer error callback in non blocking mode 
4338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
4339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** __weak void HAL_TIM_ErrorCallback(TIM_HandleTypeDef *htim)
4342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Prevent unused argument(s) compilation warning */
4344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   UNUSED(htim);
4345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
4347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****             the HAL_TIM_ErrorCallback could be implemented in the user file
4348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    */
4349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @defgroup TIM_Exported_Functions_Group10 Peripheral State functions 
4356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *  @brief   Peripheral State functions 
4357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  *
4358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @verbatim   
4359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================
4360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         ##### Peripheral State functions #####
4361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   ==============================================================================  
4362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     [..]
4363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     This subsection permit to get in run-time the status of the peripheral 
ARM GAS  /tmp/cc8lNJIB.s 			page 78


4364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     and the data flow.
4365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** @endverbatim
4367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
4368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Return the TIM Base state
4372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Base handle
4373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL state
4374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Base_GetState(TIM_HandleTypeDef *htim)
4376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
4378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Return the TIM OC state
4382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Ouput Compare handle
4383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL state
4384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OC_GetState(TIM_HandleTypeDef *htim)
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
4388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Return the TIM PWM state
4392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM handle
4393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL state
4394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_PWM_GetState(TIM_HandleTypeDef *htim)
4396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
4398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Return the TIM Input Capture state
4402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM IC handle
4403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL state
4404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_IC_GetState(TIM_HandleTypeDef *htim)
4406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
4408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Return the TIM One Pulse Mode state
4412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM OPM handle
4413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL state
4414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_OnePulse_GetState(TIM_HandleTypeDef *htim)
4416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
4418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
ARM GAS  /tmp/cc8lNJIB.s 			page 79


4421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Return the TIM Encoder Mode state
4422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  htim: TIM Encoder handle
4423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval HAL state
4424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** HAL_TIM_StateTypeDef HAL_TIM_Encoder_GetState(TIM_HandleTypeDef *htim)
4426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
4428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
4432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @}
4436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */  
4437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /** @addtogroup TIM_Private_Functions TIM_Private_Functions
4439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @{
4440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */ 
4441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  TIM DMA error callback 
4444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_DMAError(DMA_HandleTypeDef *hdma)
4448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    
4453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_ErrorCallback(htim);
4454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  TIM DMA Delay Pulse complete callback. 
4458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_DMADelayPulseCplt(DMA_HandleTypeDef *hdma)
4462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY; 
4466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
4468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
4470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
4472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
4474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
4476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
ARM GAS  /tmp/cc8lNJIB.s 			page 80


4478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
4482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedCallback(htim);
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
4487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  TIM DMA Capture complete callback. 
4490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_DMACaptureCplt(DMA_HandleTypeDef *hdma)
4494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
4500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
4502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
4504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
4506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
4508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
4510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
4512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
4514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_IC_CaptureCallback(htim); 
4517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  TIM DMA Period Elapse complete callback. 
4523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_DMAPeriodElapsedCplt(DMA_HandleTypeDef *hdma)
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
4531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_PeriodElapsedCallback(htim);
4533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 81


4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  TIM DMA Trigger callback. 
4537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  hdma : pointer to DMA handle.
4538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_DMATriggerCplt(DMA_HandleTypeDef *hdma)
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;  
4543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY; 
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_TriggerCallback(htim);
4547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Time Base configuration
4551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx: TIM periheral
4552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Structure: TIM Base configuration structure
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
4556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpcr1 = 0U;
4558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr1 = TIMx->CR1;
4559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set TIM Time Base Unit parameters ---------------------------------------*/
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
4562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Select the Counter Mode */
4564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
4565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
4566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
4569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the clock division */
4571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 &= ~TIM_CR1_CKD;
4572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
4573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the auto-reload preload */
4576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
4577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR1 = tmpcr1;
4579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Autoreload value */
4581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->ARR = (uint32_t)Structure->Period ;
4582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
4583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Prescaler value */
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->PSC = (uint32_t)Structure->Prescaler;
4585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))  
4587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Repetition Counter value */
4589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIMx->RCR = Structure->RepetitionCounter;
4590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 82


4592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Generate an update event to reload the Prescaler 
4593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      and the repetition counter(only for TIM1 and TIM8) value immediatly */
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->EGR = TIM_EGR_UG;
4595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Time Ouput Compare 1 configuration
4599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
4600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OC_Config: The ouput configuration structure
4601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpcr2 = 0U; 
4608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Disable the Channel 1: Reset the CC1E Bit */
4610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
4611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
4614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
4616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
4618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
4619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Compare Mode Bits */
4621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC1M;
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC1S;
4623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Output Compare Mode */
4624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
4625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Polarity level */
4627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC1P;
4628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= OC_Config->OCPolarity;
4630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
4632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Check parameters */
4634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
4635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output N Polarity level */
4637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NP;
4638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output N Polarity */
4639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer |= OC_Config->OCNPolarity;
4640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output N State */
4641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NE;
4642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
4645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Check parameters */
4647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
4648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
ARM GAS  /tmp/cc8lNJIB.s 			page 83


4649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
4651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1;
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1N;
4653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output Idle state */
4654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCIdleState;
4655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output N Idle state */
4656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCNIdleState;
4657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CR2 */
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
4660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
4663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR1 = OC_Config->Pulse;
4666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCER */
4668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
4669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
4670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Time Ouput Compare 2 configuration
4673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
4674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OC_Config: The ouput configuration structure
4675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpcr2 = 0U; 
4682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
4684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
4685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
4688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCMR1 register value */
4692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
4693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
4695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_OC2M;
4696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC2S;
4697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Output Compare Mode */
4699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
4700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Polarity level */
4702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC2P;
4703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 4U);
4705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 84


4706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
4707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {   
4708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
4709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output N Polarity level */
4711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NP;
4712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output N Polarity */
4713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 4U);
4714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output N State */
4715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NE;
4716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
4720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Check parameters */
4722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
4723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
4724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output Compare IDLE State */
4726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2;
4727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #else
4729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output Compare N IDLE State */
4730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2N;
4731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #endif
4732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output Idle state */
4733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 2U);
4734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output N Idle state */
4735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 2U);
4736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CR2 */
4739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
4740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR1 */
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
4743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR2 = OC_Config->Pulse;
4746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCER */
4748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
4749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Time Ouput Compare 3 configuration
4753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OC_Config: The ouput configuration structure
4755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpcr2 = 0U; 
4762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 85


4763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC2E Bit */
4764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
4765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
4768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
4770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
4772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
4773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
4775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC3M;
4776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC3S;  
4777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Output Compare Mode */
4778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
4779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Polarity level */
4781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC3P;
4782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 8U);
4784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
4786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {   
4787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));
4788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output N Polarity level */
4790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NP;
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output N Polarity */
4792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 8U);
4793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output N State */
4794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NE;
4795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
4798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Check parameters */
4800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
4802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #else
4805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Reset the Output Compare and Output Compare N IDLE State */
4806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3;
4807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3N;
4808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #endif
4809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output Idle state */
4810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 4U);
4811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output N Idle state */
4812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 4U);
4813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CR2 */
4816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
4817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
4819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
ARM GAS  /tmp/cc8lNJIB.s 			page 86


4820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR3 = OC_Config->Pulse;
4823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCER */
4825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
4829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Time Ouput Compare 4 configuration
4830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
4831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  OC_Config: The ouput configuration structure
4832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
4834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
4835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmrx = 0U;
4837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpcr2 = 0U; 
4839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
4841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
4842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCER register value */
4844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
4845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CR2 register value */
4846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
4847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx CCMR2 register value */
4849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
4850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Compare mode and Capture/Compare selection Bits */
4852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_OC4M;
4853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC4S;
4854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Output Compare Mode */
4856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
4857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Output Polarity level */
4859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC4P;
4860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Output Compare Polarity */
4861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 12U);
4862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
4864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));
4866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #if defined(STM32F373xC) || defined(STM32F378xx)
4868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #else
4869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Reset the Output Compare IDLE State */
4870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS4;
4871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** #endif
4872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     /* Set the Output Idle state */
4873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 6U);
4874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
4875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CR2 */
ARM GAS  /tmp/cc8lNJIB.s 			page 87


4877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
4878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR2 */
4880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
4881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Capture Compare Register value */
4883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR4 = OC_Config->Pulse;
4884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCER */
4886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
4887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
4888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_SlaveTimer_SetConfig(TIM_HandleTypeDef *htim,
4890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                               TIM_SlaveConfigTypeDef * sSlaveConfig)
4891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
4892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
4893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
4894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
4895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Get the TIMx SMCR register value */
4897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
4898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the Trigger Selection Bits */
4900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
4901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Input Trigger source */
4902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->InputTrigger;
4903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the slave mode Bits */
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_SMS;
4906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the slave mode */
4907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->SlaveMode;
4908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
4909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx SMCR */
4910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
4911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****  
4912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Configure the trigger prescaler, filter, and polarity */
4913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (sSlaveConfig->InputTrigger)
4914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
4915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_ETRF:
4916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CLOCKSOURCE_ETRMODE1_INSTANCE(htim->Instance));
4919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPRESCALER(sSlaveConfig->TriggerPrescaler));
4920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
4921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
4922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure the ETR Trigger source */
4923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance, 
4924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sSlaveConfig->TriggerPrescaler, 
4925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sSlaveConfig->TriggerPolarity, 
4926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                         sSlaveConfig->TriggerFilter);
4927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_TI1F_ED:
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
ARM GAS  /tmp/cc8lNJIB.s 			page 88


4934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
4935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Disable the Channel 1: Reset the CC1E Bit */
4937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccer = htim->Instance->CCER;
4938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
4939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;    
4940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Set the filter */
4942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccmr1 &= ~TIM_CCMR1_IC1F;
4943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
4944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       
4945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Write to TIMx CCMR1 and CCER registers */
4946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 = tmpccmr1;
4947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCER = tmpccer;                               
4948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                
4949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_TI1FP1:
4953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));
4956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
4957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
4958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure TI1 Filter and Polarity */
4960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
4961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sSlaveConfig->TriggerPolarity,
4962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                sSlaveConfig->TriggerFilter);
4963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_TI2FP2:
4967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameters */
4969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERPOLARITY(sSlaveConfig->TriggerPolarity));
4971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_TRIGGERFILTER(sSlaveConfig->TriggerFilter));
4972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
4973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Configure TI2 Filter and Polarity */
4974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
4975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                 sSlaveConfig->TriggerPolarity,
4976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                                 sSlaveConfig->TriggerFilter);
4977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_ITR0:
4981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameter */
4983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_ITR1:
4988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameter */
4990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
ARM GAS  /tmp/cc8lNJIB.s 			page 89


4991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
4993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
4994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_ITR2:
4995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
4996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameter */
4997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
4998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
4999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
5000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     
5001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   case TIM_TS_ITR3:
5002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     {
5003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       /* Check the parameter */
5004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));
5005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     }
5006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
5007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        
5008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   default:
5009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
5010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
5011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
5012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the TI1 as Input.
5015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
5016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE  
5021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
5022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 1 is selected to be connected to IC1.
5024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 1 is selected to be connected to IC2.
5025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 1 is selected to be connected to TRC.
5026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
5027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI2FP1 
5030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *       (on channel2 path) is used as the input signal. Therefore CCMR1 must be 
5031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
5032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_TI1_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
5036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
5040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
5041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
5042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
5043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Input */
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
5046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
5047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccmr1 &= ~TIM_CCMR1_CC1S;
ARM GAS  /tmp/cc8lNJIB.s 			page 90


5048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
5049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   } 
5050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else
5051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   {
5052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccmr1 |= TIM_CCMR1_CC1S_0;
5053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   }
5054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the filter */
5056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
5057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
5058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
5060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
5061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
5062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
5065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;
5066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
5067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI1.
5070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
5071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
5076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
5077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
5081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
  28              		.loc 1 5081 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34 0000 10B4     		push	{r4}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
  38              	.LVL1:
5082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 1: Reset the CC1E Bit */
5086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
  39              		.loc 1 5086 0
  40 0002 036A     		ldr	r3, [r0, #32]
  41              	.LVL2:
5087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
  42              		.loc 1 5087 0
  43 0004 046A     		ldr	r4, [r0, #32]
  44 0006 24F00104 		bic	r4, r4, #1
ARM GAS  /tmp/cc8lNJIB.s 			page 91


  45 000a 0462     		str	r4, [r0, #32]
5088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;    
  46              		.loc 1 5088 0
  47 000c 8469     		ldr	r4, [r0, #24]
  48              	.LVL3:
5089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the filter */
5091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
  49              		.loc 1 5091 0
  50 000e 24F0F004 		bic	r4, r4, #240
  51              	.LVL4:
5092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 4U);
  52              		.loc 1 5092 0
  53 0012 44EA0212 		orr	r2, r4, r2, lsl #4
  54              	.LVL5:
5093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Polarity and set the CC1E Bit */
5095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
  55              		.loc 1 5095 0
  56 0016 23F00A03 		bic	r3, r3, #10
  57              	.LVL6:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= TIM_ICPolarity;
  58              		.loc 1 5096 0
  59 001a 1943     		orrs	r1, r1, r3
  60              	.LVL7:
5097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
  61              		.loc 1 5099 0
  62 001c 8261     		str	r2, [r0, #24]
5100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;
  63              		.loc 1 5100 0
  64 001e 0162     		str	r1, [r0, #32]
5101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
  65              		.loc 1 5101 0
  66 0020 5DF8044B 		ldr	r4, [sp], #4
  67 0024 7047     		bx	lr
  68              		.cfi_endproc
  69              	.LFE221:
  71 0026 00BF     		.section	.text.TIM_TI2_SetConfig,"ax",%progbits
  72              		.align	2
  73              		.thumb
  74              		.thumb_func
  76              	TIM_TI2_SetConfig:
  77              	.LFB222:
5102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the TI2 as Input.
5105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE   
5111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
5112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 2 is selected to be connected to IC2.
ARM GAS  /tmp/cc8lNJIB.s 			page 92


5114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 2 is selected to be connected to IC1.
5115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 2 is selected to be connected to TRC.
5116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
5117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI1FP2 
5120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR1 must be 
5121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
5122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI2_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
  78              		.loc 1 5125 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL8:
  84 0000 30B4     		push	{r4, r5}
  85              	.LCFI1:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 5, -4
  89              	.LVL9:
5126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
5130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
  90              		.loc 1 5130 0
  91 0002 046A     		ldr	r4, [r0, #32]
  92 0004 24F01004 		bic	r4, r4, #16
  93 0008 0462     		str	r4, [r0, #32]
5131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
  94              		.loc 1 5131 0
  95 000a 8569     		ldr	r5, [r0, #24]
  96              	.LVL10:
5132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
  97              		.loc 1 5132 0
  98 000c 046A     		ldr	r4, [r0, #32]
  99              	.LVL11:
5133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Input */
5135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_CC2S;
 100              		.loc 1 5135 0
 101 000e 25F44075 		bic	r5, r5, #768
 102              	.LVL12:
5136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICSelection << 8U);
 103              		.loc 1 5136 0
 104 0012 45EA0222 		orr	r2, r5, r2, lsl #8
 105              	.LVL13:
5137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the filter */
5139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 106              		.loc 1 5139 0
 107 0016 22F47045 		bic	r5, r2, #61440
 108              	.LVL14:
ARM GAS  /tmp/cc8lNJIB.s 			page 93


5140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 12U) & TIM_CCMR1_IC2F);
 109              		.loc 1 5140 0
 110 001a 1B03     		lsls	r3, r3, #12
 111              	.LVL15:
 112 001c 9BB2     		uxth	r3, r3
 113 001e 1D43     		orrs	r5, r5, r3
 114              	.LVL16:
5141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
5143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 115              		.loc 1 5143 0
 116 0020 24F0A004 		bic	r4, r4, #160
 117              	.LVL17:
5144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 4U) & (TIM_CCER_CC2P | TIM_CCER_CC2NP));
 118              		.loc 1 5144 0
 119 0024 0901     		lsls	r1, r1, #4
 120              	.LVL18:
 121 0026 01F0A001 		and	r1, r1, #160
 122 002a 0C43     		orrs	r4, r4, r1
 123              	.LVL19:
5145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 124              		.loc 1 5147 0
 125 002c 8561     		str	r5, [r0, #24]
5148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 126              		.loc 1 5148 0
 127 002e 0462     		str	r4, [r0, #32]
5149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 128              		.loc 1 5149 0
 129 0030 30BC     		pop	{r4, r5}
 130              	.LVL20:
 131 0032 7047     		bx	lr
 132              		.cfi_endproc
 133              	.LFE222:
 135              		.section	.text.TIM_TI2_ConfigInputStage,"ax",%progbits
 136              		.align	2
 137              		.thumb
 138              		.thumb_func
 140              	TIM_TI2_ConfigInputStage:
 141              	.LFB223:
5150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the Polarity and Filter for TI2.
5153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral.
5154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE
5159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
5160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFil
5164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 142              		.loc 1 5164 0
ARM GAS  /tmp/cc8lNJIB.s 			page 94


 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 147              	.LVL21:
 148 0000 10B4     		push	{r4}
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 4
 151              		.cfi_offset 4, -4
 152              	.LVL22:
5165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr1 = 0U;
5166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 2: Reset the CC2E Bit */
5169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 153              		.loc 1 5169 0
 154 0002 036A     		ldr	r3, [r0, #32]
 155 0004 23F01003 		bic	r3, r3, #16
 156 0008 0362     		str	r3, [r0, #32]
5170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 157              		.loc 1 5170 0
 158 000a 8469     		ldr	r4, [r0, #24]
 159              	.LVL23:
5171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 160              		.loc 1 5171 0
 161 000c 036A     		ldr	r3, [r0, #32]
 162              	.LVL24:
5172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the filter */
5174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC2F;
 163              		.loc 1 5174 0
 164 000e 24F47044 		bic	r4, r4, #61440
 165              	.LVL25:
5175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= (TIM_ICFilter << 12U);
 166              		.loc 1 5175 0
 167 0012 44EA0232 		orr	r2, r4, r2, lsl #12
 168              	.LVL26:
5176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Polarity and set the CC2E Bit */
5178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 169              		.loc 1 5178 0
 170 0016 23F0A003 		bic	r3, r3, #160
 171              	.LVL27:
5179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity << 4U);
 172              		.loc 1 5179 0
 173 001a 43EA0111 		orr	r1, r3, r1, lsl #4
 174              	.LVL28:
5180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR1 and CCER registers */
5182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1 ;
 175              		.loc 1 5182 0
 176 001e 8261     		str	r2, [r0, #24]
5183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 177              		.loc 1 5183 0
 178 0020 0162     		str	r1, [r0, #32]
5184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 179              		.loc 1 5184 0
ARM GAS  /tmp/cc8lNJIB.s 			page 95


 180 0022 5DF8044B 		ldr	r4, [sp], #4
 181 0026 7047     		bx	lr
 182              		.cfi_endproc
 183              	.LFE223:
 185              		.section	.text.TIM_TI3_SetConfig,"ax",%progbits
 186              		.align	2
 187              		.thumb
 188              		.thumb_func
 190              	TIM_TI3_SetConfig:
 191              	.LFB224:
5185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the TI3 as Input.
5188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE         
5194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
5195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 3 is selected to be connected to IC3.
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 3 is selected to be connected to IC4.
5198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 3 is selected to be connected to TRC.
5199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
5200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI3FP4 
5203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be 
5204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
5205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI3_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 192              		.loc 1 5208 0
 193              		.cfi_startproc
 194              		@ args = 0, pretend = 0, frame = 0
 195              		@ frame_needed = 0, uses_anonymous_args = 0
 196              		@ link register save eliminated.
 197              	.LVL29:
 198 0000 30B4     		push	{r4, r5}
 199              	.LCFI3:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 5, -4
 203              	.LVL30:
5209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr2 = 0U;
5210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 3: Reset the CC3E Bit */
5213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 204              		.loc 1 5213 0
 205 0002 046A     		ldr	r4, [r0, #32]
 206 0004 24F48074 		bic	r4, r4, #256
 207 0008 0462     		str	r4, [r0, #32]
5214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 208              		.loc 1 5214 0
ARM GAS  /tmp/cc8lNJIB.s 			page 96


 209 000a C569     		ldr	r5, [r0, #28]
 210              	.LVL31:
5215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 211              		.loc 1 5215 0
 212 000c 046A     		ldr	r4, [r0, #32]
 213              	.LVL32:
5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Input */
5218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC3S;
 214              		.loc 1 5218 0
 215 000e 25F00305 		bic	r5, r5, #3
 216              	.LVL33:
5219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 |= TIM_ICSelection;
 217              		.loc 1 5219 0
 218 0012 2A43     		orrs	r2, r2, r5
 219              	.LVL34:
5220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the filter */
5222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC3F;
 220              		.loc 1 5222 0
 221 0014 22F0F005 		bic	r5, r2, #240
 222              	.LVL35:
5223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 4U) & TIM_CCMR2_IC3F);
 223              		.loc 1 5223 0
 224 0018 1B01     		lsls	r3, r3, #4
 225              	.LVL36:
 226 001a DBB2     		uxtb	r3, r3
 227 001c 1D43     		orrs	r5, r5, r3
 228              	.LVL37:
5224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Polarity and set the CC3E Bit */
5226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC3P | TIM_CCER_CC3NP);
 229              		.loc 1 5226 0
 230 001e 24F42064 		bic	r4, r4, #2560
 231              	.LVL38:
5227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 8U) & (TIM_CCER_CC3P | TIM_CCER_CC3NP));
 232              		.loc 1 5227 0
 233 0022 0902     		lsls	r1, r1, #8
 234              	.LVL39:
 235 0024 01F42061 		and	r1, r1, #2560
 236 0028 0C43     		orrs	r4, r4, r1
 237              	.LVL40:
5228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
5230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 238              		.loc 1 5230 0
 239 002a C561     		str	r5, [r0, #28]
5231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 240              		.loc 1 5231 0
 241 002c 0462     		str	r4, [r0, #32]
5232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 242              		.loc 1 5232 0
 243 002e 30BC     		pop	{r4, r5}
 244              	.LVL41:
 245 0030 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE224:
ARM GAS  /tmp/cc8lNJIB.s 			page 97


 249 0032 00BF     		.section	.text.TIM_TI4_SetConfig,"ax",%progbits
 250              		.align	2
 251              		.thumb
 252              		.thumb_func
 254              	TIM_TI4_SetConfig:
 255              	.LFB225:
5233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configure the TI4 as Input.
5236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICPolarity : The Input Polarity.
5238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_RISING
5240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_FALLING
5241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICPOLARITY_BOTHEDGE     
5242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICSelection: specifies the input to be used.
5243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_DIRECTTI: TIM Input 4 is selected to be connected to IC4.
5245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_INDIRECTTI: TIM Input 4 is selected to be connected to IC3.
5246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ICSELECTION_TRC: TIM Input 4 is selected to be connected to TRC.
5247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ICFilter: Specifies the Input Capture Filter.
5248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F.
5249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @note TIM_ICFilter and TIM_ICPolarity are not used in INDIRECT mode as TI4FP3 
5250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *       (on channel1 path) is used as the input signal. Therefore CCMR2 must be 
5251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *        protected against un-initialized filter and polarity values.
5252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_TI4_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICSelection,
5255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ICFilter)
5256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 256              		.loc 1 5256 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL42:
 262 0000 30B4     		push	{r4, r5}
 263              	.LCFI4:
 264              		.cfi_def_cfa_offset 8
 265              		.cfi_offset 4, -8
 266              		.cfi_offset 5, -4
 267              	.LVL43:
5257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccmr2 = 0U;
5258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpccer = 0U;
5259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Disable the Channel 4: Reset the CC4E Bit */
5261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 268              		.loc 1 5261 0
 269 0002 046A     		ldr	r4, [r0, #32]
 270 0004 24F48054 		bic	r4, r4, #4096
 271 0008 0462     		str	r4, [r0, #32]
5262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 = TIMx->CCMR2;
 272              		.loc 1 5262 0
 273 000a C569     		ldr	r5, [r0, #28]
 274              	.LVL44:
5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 275              		.loc 1 5263 0
ARM GAS  /tmp/cc8lNJIB.s 			page 98


 276 000c 046A     		ldr	r4, [r0, #32]
 277              	.LVL45:
5264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Input */
5266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_CC4S;
 278              		.loc 1 5266 0
 279 000e 25F44075 		bic	r5, r5, #768
 280              	.LVL46:
5267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 |= (TIM_ICSelection << 8U);
 281              		.loc 1 5267 0
 282 0012 45EA0222 		orr	r2, r5, r2, lsl #8
 283              	.LVL47:
5268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the filter */
5270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 &= ~TIM_CCMR2_IC4F;
 284              		.loc 1 5270 0
 285 0016 22F47045 		bic	r5, r2, #61440
 286              	.LVL48:
5271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr2 |= ((TIM_ICFilter << 12U) & TIM_CCMR2_IC4F);
 287              		.loc 1 5271 0
 288 001a 1B03     		lsls	r3, r3, #12
 289              	.LVL49:
 290 001c 9BB2     		uxth	r3, r3
 291 001e 1D43     		orrs	r5, r5, r3
 292              	.LVL50:
5272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Select the Polarity and set the CC4E Bit */
5274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC4P | TIM_CCER_CC4NP);
 293              		.loc 1 5274 0
 294 0020 24F42044 		bic	r4, r4, #40960
 295              	.LVL51:
5275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= ((TIM_ICPolarity << 12U) & (TIM_CCER_CC4P | TIM_CCER_CC4NP));
 296              		.loc 1 5275 0
 297 0024 0903     		lsls	r1, r1, #12
 298              	.LVL52:
 299 0026 01F42041 		and	r1, r1, #40960
 300 002a 0C43     		orrs	r4, r4, r1
 301              	.LVL53:
5276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx CCMR2 and CCER registers */
5278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmr2;
 302              		.loc 1 5278 0
 303 002c C561     		str	r5, [r0, #28]
5279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer ;
 304              		.loc 1 5279 0
 305 002e 0462     		str	r4, [r0, #32]
5280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 306              		.loc 1 5280 0
 307 0030 30BC     		pop	{r4, r5}
 308              	.LVL54:
 309 0032 7047     		bx	lr
 310              		.cfi_endproc
 311              	.LFE225:
 313              		.section	.text.TIM_ITRx_SetConfig,"ax",%progbits
 314              		.align	2
 315              		.thumb
 316              		.thumb_func
ARM GAS  /tmp/cc8lNJIB.s 			page 99


 318              	TIM_ITRx_SetConfig:
 319              	.LFB226:
5281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Selects the Input Trigger source
5284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  InputTriggerSource: The Input Trigger source.
5286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_ITR0: Internal Trigger 0
5288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_ITR1: Internal Trigger 1
5289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_ITR2: Internal Trigger 2
5290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_ITR3: Internal Trigger 3
5291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_TI1F_ED: TI1 Edge Detector
5292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_TI1FP1: Filtered Timer Input 1
5293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
5294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_TS_ETRF: External Trigger input
5295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint16_t InputTriggerSource)
5298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 320              		.loc 1 5298 0
 321              		.cfi_startproc
 322              		@ args = 0, pretend = 0, frame = 0
 323              		@ frame_needed = 0, uses_anonymous_args = 0
 324              		@ link register save eliminated.
 325              	.LVL55:
5299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
5300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   
5301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Get the TIMx SMCR register value */
5302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    tmpsmcr = TIMx->SMCR;
 326              		.loc 1 5302 0
 327 0000 8368     		ldr	r3, [r0, #8]
 328              	.LVL56:
5303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Reset the TS Bits */
5304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    tmpsmcr &= ~TIM_SMCR_TS;
 329              		.loc 1 5304 0
 330 0002 23F07003 		bic	r3, r3, #112
 331              	.LVL57:
5305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Set the Input Trigger source and the slave mode*/
5306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    tmpsmcr |= InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1;
 332              		.loc 1 5306 0
 333 0006 41F00701 		orr	r1, r1, #7
 334              	.LVL58:
 335 000a 0B43     		orrs	r3, r3, r1
 336              	.LVL59:
5307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    /* Write to TIMx SMCR */
5308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    TIMx->SMCR = tmpsmcr;
 337              		.loc 1 5308 0
 338 000c 8360     		str	r3, [r0, #8]
 339 000e 7047     		bx	lr
 340              		.cfi_endproc
 341              	.LFE226:
 343              		.section	.text.HAL_TIM_Base_MspInit,"ax",%progbits
 344              		.align	2
 345              		.weak	HAL_TIM_Base_MspInit
 346              		.thumb
 347              		.thumb_func
ARM GAS  /tmp/cc8lNJIB.s 			page 100


 349              	HAL_TIM_Base_MspInit:
 350              	.LFB125:
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 351              		.loc 1 270 0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355              		@ link register save eliminated.
 356              	.LVL60:
 357 0000 7047     		bx	lr
 358              		.cfi_endproc
 359              	.LFE125:
 361 0002 00BF     		.section	.text.HAL_TIM_Base_MspDeInit,"ax",%progbits
 362              		.align	2
 363              		.weak	HAL_TIM_Base_MspDeInit
 364              		.thumb
 365              		.thumb_func
 367              	HAL_TIM_Base_MspDeInit:
 368              	.LFB126:
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 369              		.loc 1 285 0
 370              		.cfi_startproc
 371              		@ args = 0, pretend = 0, frame = 0
 372              		@ frame_needed = 0, uses_anonymous_args = 0
 373              		@ link register save eliminated.
 374              	.LVL61:
 375 0000 7047     		bx	lr
 376              		.cfi_endproc
 377              	.LFE126:
 379 0002 00BF     		.section	.text.HAL_TIM_Base_DeInit,"ax",%progbits
 380              		.align	2
 381              		.global	HAL_TIM_Base_DeInit
 382              		.thumb
 383              		.thumb_func
 385              	HAL_TIM_Base_DeInit:
 386              	.LFB124:
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 387              		.loc 1 243 0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              	.LVL62:
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 392              		.loc 1 243 0
 393 0000 10B5     		push	{r4, lr}
 394              	.LCFI5:
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 4, -8
 397              		.cfi_offset 14, -4
 398 0002 0446     		mov	r4, r0
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 399              		.loc 1 247 0
 400 0004 0223     		movs	r3, #2
 401 0006 80F83D30 		strb	r3, [r0, #61]
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 402              		.loc 1 250 0
 403 000a 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc8lNJIB.s 			page 101


 404 000c 196A     		ldr	r1, [r3, #32]
 405 000e 41F21112 		movw	r2, #4369
 406 0012 1142     		tst	r1, r2
 407 0014 08D1     		bne	.L10
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 408              		.loc 1 250 0 is_stmt 0 discriminator 1
 409 0016 196A     		ldr	r1, [r3, #32]
 410 0018 40F24442 		movw	r2, #1092
 411 001c 1142     		tst	r1, r2
 412 001e 03D1     		bne	.L10
 413 0020 1A68     		ldr	r2, [r3]
 414 0022 22F00102 		bic	r2, r2, #1
 415 0026 1A60     		str	r2, [r3]
 416              	.L10:
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_Base_MspDeInit(htim);
 417              		.loc 1 253 0 is_stmt 1
 418 0028 2046     		mov	r0, r4
 419              	.LVL63:
 420 002a FFF7FEFF 		bl	HAL_TIM_Base_MspDeInit
 421              	.LVL64:
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
 422              		.loc 1 256 0
 423 002e 0020     		movs	r0, #0
 424 0030 84F83D00 		strb	r0, [r4, #61]
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 425              		.loc 1 259 0
 426 0034 84F83C00 		strb	r0, [r4, #60]
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 427              		.loc 1 262 0
 428 0038 10BD     		pop	{r4, pc}
 429              		.cfi_endproc
 430              	.LFE124:
 432 003a 00BF     		.section	.text.HAL_TIM_Base_Start,"ax",%progbits
 433              		.align	2
 434              		.global	HAL_TIM_Base_Start
 435              		.thumb
 436              		.thumb_func
 438              	HAL_TIM_Base_Start:
 439              	.LFB127:
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 440              		.loc 1 301 0
 441              		.cfi_startproc
 442              		@ args = 0, pretend = 0, frame = 0
 443              		@ frame_needed = 0, uses_anonymous_args = 0
 444              		@ link register save eliminated.
 445              	.LVL65:
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 446              		.loc 1 306 0
 447 0000 0223     		movs	r3, #2
 448 0002 80F83D30 		strb	r3, [r0, #61]
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 449              		.loc 1 309 0
 450 0006 0368     		ldr	r3, [r0]
 451 0008 1A68     		ldr	r2, [r3]
 452 000a 42F00102 		orr	r2, r2, #1
 453 000e 1A60     		str	r2, [r3]
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
ARM GAS  /tmp/cc8lNJIB.s 			page 102


 454              		.loc 1 312 0
 455 0010 0123     		movs	r3, #1
 456 0012 80F83D30 		strb	r3, [r0, #61]
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 457              		.loc 1 316 0
 458 0016 0020     		movs	r0, #0
 459              	.LVL66:
 460 0018 7047     		bx	lr
 461              		.cfi_endproc
 462              	.LFE127:
 464 001a 00BF     		.section	.text.HAL_TIM_Base_Stop,"ax",%progbits
 465              		.align	2
 466              		.global	HAL_TIM_Base_Stop
 467              		.thumb
 468              		.thumb_func
 470              	HAL_TIM_Base_Stop:
 471              	.LFB128:
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 472              		.loc 1 324 0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		@ link register save eliminated.
 477              	.LVL67:
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 478              		.loc 1 329 0
 479 0000 0223     		movs	r3, #2
 480 0002 80F83D30 		strb	r3, [r0, #61]
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 481              		.loc 1 332 0
 482 0006 0368     		ldr	r3, [r0]
 483 0008 196A     		ldr	r1, [r3, #32]
 484 000a 41F21112 		movw	r2, #4369
 485 000e 1142     		tst	r1, r2
 486 0010 08D1     		bne	.L13
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 487              		.loc 1 332 0 is_stmt 0 discriminator 1
 488 0012 196A     		ldr	r1, [r3, #32]
 489 0014 40F24442 		movw	r2, #1092
 490 0018 1142     		tst	r1, r2
 491 001a 03D1     		bne	.L13
 492 001c 1A68     		ldr	r2, [r3]
 493 001e 22F00102 		bic	r2, r2, #1
 494 0022 1A60     		str	r2, [r3]
 495              	.L13:
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 496              		.loc 1 335 0 is_stmt 1
 497 0024 0123     		movs	r3, #1
 498 0026 80F83D30 		strb	r3, [r0, #61]
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 499              		.loc 1 339 0
 500 002a 0020     		movs	r0, #0
 501              	.LVL68:
 502 002c 7047     		bx	lr
 503              		.cfi_endproc
 504              	.LFE128:
 506 002e 00BF     		.section	.text.HAL_TIM_Base_Start_IT,"ax",%progbits
ARM GAS  /tmp/cc8lNJIB.s 			page 103


 507              		.align	2
 508              		.global	HAL_TIM_Base_Start_IT
 509              		.thumb
 510              		.thumb_func
 512              	HAL_TIM_Base_Start_IT:
 513              	.LFB129:
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 514              		.loc 1 347 0
 515              		.cfi_startproc
 516              		@ args = 0, pretend = 0, frame = 0
 517              		@ frame_needed = 0, uses_anonymous_args = 0
 518              		@ link register save eliminated.
 519              	.LVL69:
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 520              		.loc 1 352 0
 521 0000 0368     		ldr	r3, [r0]
 522 0002 DA68     		ldr	r2, [r3, #12]
 523 0004 42F00102 		orr	r2, r2, #1
 524 0008 DA60     		str	r2, [r3, #12]
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 525              		.loc 1 355 0
 526 000a 0368     		ldr	r3, [r0]
 527 000c 1A68     		ldr	r2, [r3]
 528 000e 42F00102 		orr	r2, r2, #1
 529 0012 1A60     		str	r2, [r3]
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 530              		.loc 1 359 0
 531 0014 0020     		movs	r0, #0
 532              	.LVL70:
 533 0016 7047     		bx	lr
 534              		.cfi_endproc
 535              	.LFE129:
 537              		.section	.text.HAL_TIM_Base_Stop_IT,"ax",%progbits
 538              		.align	2
 539              		.global	HAL_TIM_Base_Stop_IT
 540              		.thumb
 541              		.thumb_func
 543              	HAL_TIM_Base_Stop_IT:
 544              	.LFB130:
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 545              		.loc 1 367 0
 546              		.cfi_startproc
 547              		@ args = 0, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              		@ link register save eliminated.
 550              	.LVL71:
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_UPDATE);
 551              		.loc 1 371 0
 552 0000 0368     		ldr	r3, [r0]
 553 0002 DA68     		ldr	r2, [r3, #12]
 554 0004 22F00102 		bic	r2, r2, #1
 555 0008 DA60     		str	r2, [r3, #12]
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 556              		.loc 1 374 0
 557 000a 0368     		ldr	r3, [r0]
 558 000c 196A     		ldr	r1, [r3, #32]
 559 000e 41F21112 		movw	r2, #4369
ARM GAS  /tmp/cc8lNJIB.s 			page 104


 560 0012 1142     		tst	r1, r2
 561 0014 08D1     		bne	.L16
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 562              		.loc 1 374 0 is_stmt 0 discriminator 1
 563 0016 196A     		ldr	r1, [r3, #32]
 564 0018 40F24442 		movw	r2, #1092
 565 001c 1142     		tst	r1, r2
 566 001e 03D1     		bne	.L16
 567 0020 1A68     		ldr	r2, [r3]
 568 0022 22F00102 		bic	r2, r2, #1
 569 0026 1A60     		str	r2, [r3]
 570              	.L16:
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 571              		.loc 1 378 0 is_stmt 1
 572 0028 0020     		movs	r0, #0
 573              	.LVL72:
 574 002a 7047     		bx	lr
 575              		.cfi_endproc
 576              	.LFE130:
 578              		.section	.text.HAL_TIM_Base_Start_DMA,"ax",%progbits
 579              		.align	2
 580              		.global	HAL_TIM_Base_Start_DMA
 581              		.thumb
 582              		.thumb_func
 584              	HAL_TIM_Base_Start_DMA:
 585              	.LFB131:
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** { 
 586              		.loc 1 388 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              	.LVL73:
 591 0000 10B5     		push	{r4, lr}
 592              	.LCFI6:
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 4, -8
 595              		.cfi_offset 14, -4
 596 0002 0446     		mov	r4, r0
 597 0004 1346     		mov	r3, r2
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 598              		.loc 1 392 0
 599 0006 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 600              	.LVL74:
 601 000a C0B2     		uxtb	r0, r0
 602 000c 0228     		cmp	r0, #2
 603 000e 20D0     		beq	.L21
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 604              		.loc 1 396 0
 605 0010 94F83D20 		ldrb	r2, [r4, #61]	@ zero_extendqisi2
 606              	.LVL75:
 607 0014 D2B2     		uxtb	r2, r2
 608 0016 012A     		cmp	r2, #1
 609 0018 04D1     		bne	.L19
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U)) 
 610              		.loc 1 398 0
 611 001a 01B9     		cbnz	r1, .L20
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U)) 
ARM GAS  /tmp/cc8lNJIB.s 			page 105


 612              		.loc 1 398 0 is_stmt 0 discriminator 1
 613 001c DBB9     		cbnz	r3, .L22
 614              	.L20:
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 615              		.loc 1 404 0 is_stmt 1
 616 001e 0222     		movs	r2, #2
 617 0020 84F83D20 		strb	r2, [r4, #61]
 618              	.L19:
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 619              		.loc 1 408 0
 620 0024 226A     		ldr	r2, [r4, #32]
 621 0026 0D48     		ldr	r0, .L23
 622 0028 9062     		str	r0, [r2, #40]
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 623              		.loc 1 411 0
 624 002a 226A     		ldr	r2, [r4, #32]
 625 002c 0C48     		ldr	r0, .L23+4
 626 002e 1063     		str	r0, [r2, #48]
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)pData, (uint32_t)&htim->Instance->ARR, 
 627              		.loc 1 414 0
 628 0030 2268     		ldr	r2, [r4]
 629 0032 206A     		ldr	r0, [r4, #32]
 630 0034 2C32     		adds	r2, r2, #44
 631 0036 FFF7FEFF 		bl	HAL_DMA_Start_IT
 632              	.LVL76:
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_UPDATE);
 633              		.loc 1 417 0
 634 003a 2368     		ldr	r3, [r4]
 635 003c DA68     		ldr	r2, [r3, #12]
 636 003e 42F48072 		orr	r2, r2, #256
 637 0042 DA60     		str	r2, [r3, #12]
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);  
 638              		.loc 1 420 0
 639 0044 2368     		ldr	r3, [r4]
 640 0046 1A68     		ldr	r2, [r3]
 641 0048 42F00102 		orr	r2, r2, #1
 642 004c 1A60     		str	r2, [r3]
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 643              		.loc 1 423 0
 644 004e 0020     		movs	r0, #0
 645 0050 10BD     		pop	{r4, pc}
 646              	.LVL77:
 647              	.L21:
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 648              		.loc 1 394 0
 649 0052 0220     		movs	r0, #2
 650 0054 10BD     		pop	{r4, pc}
 651              	.LVL78:
 652              	.L22:
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 653              		.loc 1 400 0
 654 0056 0120     		movs	r0, #1
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 655              		.loc 1 424 0
 656 0058 10BD     		pop	{r4, pc}
 657              	.LVL79:
 658              	.L24:
ARM GAS  /tmp/cc8lNJIB.s 			page 106


 659 005a 00BF     		.align	2
 660              	.L23:
 661 005c 00000000 		.word	TIM_DMAPeriodElapsedCplt
 662 0060 00000000 		.word	TIM_DMAError
 663              		.cfi_endproc
 664              	.LFE131:
 666              		.section	.text.HAL_TIM_Base_Stop_DMA,"ax",%progbits
 667              		.align	2
 668              		.global	HAL_TIM_Base_Stop_DMA
 669              		.thumb
 670              		.thumb_func
 672              	HAL_TIM_Base_Stop_DMA:
 673              	.LFB132:
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 674              		.loc 1 432 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 0
 677              		@ frame_needed = 0, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679              	.LVL80:
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_UPDATE);
 680              		.loc 1 437 0
 681 0000 0368     		ldr	r3, [r0]
 682 0002 DA68     		ldr	r2, [r3, #12]
 683 0004 22F48072 		bic	r2, r2, #256
 684 0008 DA60     		str	r2, [r3, #12]
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 685              		.loc 1 440 0
 686 000a 0368     		ldr	r3, [r0]
 687 000c 196A     		ldr	r1, [r3, #32]
 688 000e 41F21112 		movw	r2, #4369
 689 0012 1142     		tst	r1, r2
 690 0014 08D1     		bne	.L26
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 691              		.loc 1 440 0 is_stmt 0 discriminator 1
 692 0016 196A     		ldr	r1, [r3, #32]
 693 0018 40F24442 		movw	r2, #1092
 694 001c 1142     		tst	r1, r2
 695 001e 03D1     		bne	.L26
 696 0020 1A68     		ldr	r2, [r3]
 697 0022 22F00102 		bic	r2, r2, #1
 698 0026 1A60     		str	r2, [r3]
 699              	.L26:
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 700              		.loc 1 443 0 is_stmt 1
 701 0028 0123     		movs	r3, #1
 702 002a 80F83D30 		strb	r3, [r0, #61]
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 703              		.loc 1 447 0
 704 002e 0020     		movs	r0, #0
 705              	.LVL81:
 706 0030 7047     		bx	lr
 707              		.cfi_endproc
 708              	.LFE132:
 710 0032 00BF     		.section	.text.HAL_TIM_OC_MspInit,"ax",%progbits
 711              		.align	2
 712              		.weak	HAL_TIM_OC_MspInit
ARM GAS  /tmp/cc8lNJIB.s 			page 107


 713              		.thumb
 714              		.thumb_func
 716              	HAL_TIM_OC_MspInit:
 717              	.LFB135:
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 718              		.loc 1 548 0
 719              		.cfi_startproc
 720              		@ args = 0, pretend = 0, frame = 0
 721              		@ frame_needed = 0, uses_anonymous_args = 0
 722              		@ link register save eliminated.
 723              	.LVL82:
 724 0000 7047     		bx	lr
 725              		.cfi_endproc
 726              	.LFE135:
 728 0002 00BF     		.section	.text.HAL_TIM_OC_MspDeInit,"ax",%progbits
 729              		.align	2
 730              		.weak	HAL_TIM_OC_MspDeInit
 731              		.thumb
 732              		.thumb_func
 734              	HAL_TIM_OC_MspDeInit:
 735              	.LFB136:
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 736              		.loc 1 563 0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740              		@ link register save eliminated.
 741              	.LVL83:
 742 0000 7047     		bx	lr
 743              		.cfi_endproc
 744              	.LFE136:
 746 0002 00BF     		.section	.text.HAL_TIM_OC_DeInit,"ax",%progbits
 747              		.align	2
 748              		.global	HAL_TIM_OC_DeInit
 749              		.thumb
 750              		.thumb_func
 752              	HAL_TIM_OC_DeInit:
 753              	.LFB134:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 754              		.loc 1 521 0
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 0
 757              		@ frame_needed = 0, uses_anonymous_args = 0
 758              	.LVL84:
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 759              		.loc 1 521 0
 760 0000 10B5     		push	{r4, lr}
 761              	.LCFI7:
 762              		.cfi_def_cfa_offset 8
 763              		.cfi_offset 4, -8
 764              		.cfi_offset 14, -4
 765 0002 0446     		mov	r4, r0
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_BUSY;
 766              		.loc 1 525 0
 767 0004 0223     		movs	r3, #2
 768 0006 80F83D30 		strb	r3, [r0, #61]
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
ARM GAS  /tmp/cc8lNJIB.s 			page 108


 769              		.loc 1 528 0
 770 000a 0368     		ldr	r3, [r0]
 771 000c 196A     		ldr	r1, [r3, #32]
 772 000e 41F21112 		movw	r2, #4369
 773 0012 1142     		tst	r1, r2
 774 0014 08D1     		bne	.L30
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 775              		.loc 1 528 0 is_stmt 0 discriminator 1
 776 0016 196A     		ldr	r1, [r3, #32]
 777 0018 40F24442 		movw	r2, #1092
 778 001c 1142     		tst	r1, r2
 779 001e 03D1     		bne	.L30
 780 0020 1A68     		ldr	r2, [r3]
 781 0022 22F00102 		bic	r2, r2, #1
 782 0026 1A60     		str	r2, [r3]
 783              	.L30:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_OC_MspDeInit(htim);
 784              		.loc 1 531 0 is_stmt 1
 785 0028 2046     		mov	r0, r4
 786              	.LVL85:
 787 002a FFF7FEFF 		bl	HAL_TIM_OC_MspDeInit
 788              	.LVL86:
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
 789              		.loc 1 534 0
 790 002e 0020     		movs	r0, #0
 791 0030 84F83D00 		strb	r0, [r4, #61]
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 792              		.loc 1 537 0
 793 0034 84F83C00 		strb	r0, [r4, #60]
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 794              		.loc 1 540 0
 795 0038 10BD     		pop	{r4, pc}
 796              		.cfi_endproc
 797              	.LFE134:
 799 003a 00BF     		.section	.text.HAL_TIM_PWM_MspInit,"ax",%progbits
 800              		.align	2
 801              		.weak	HAL_TIM_PWM_MspInit
 802              		.thumb
 803              		.thumb_func
 805              	HAL_TIM_PWM_MspInit:
 806              	.LFB145:
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 807              		.loc 1 1055 0
 808              		.cfi_startproc
 809              		@ args = 0, pretend = 0, frame = 0
 810              		@ frame_needed = 0, uses_anonymous_args = 0
 811              		@ link register save eliminated.
 812              	.LVL87:
 813 0000 7047     		bx	lr
 814              		.cfi_endproc
 815              	.LFE145:
 817 0002 00BF     		.section	.text.HAL_TIM_PWM_MspDeInit,"ax",%progbits
 818              		.align	2
 819              		.weak	HAL_TIM_PWM_MspDeInit
 820              		.thumb
 821              		.thumb_func
 823              	HAL_TIM_PWM_MspDeInit:
ARM GAS  /tmp/cc8lNJIB.s 			page 109


 824              	.LFB146:
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 825              		.loc 1 1070 0
 826              		.cfi_startproc
 827              		@ args = 0, pretend = 0, frame = 0
 828              		@ frame_needed = 0, uses_anonymous_args = 0
 829              		@ link register save eliminated.
 830              	.LVL88:
 831 0000 7047     		bx	lr
 832              		.cfi_endproc
 833              	.LFE146:
 835 0002 00BF     		.section	.text.HAL_TIM_PWM_DeInit,"ax",%progbits
 836              		.align	2
 837              		.global	HAL_TIM_PWM_DeInit
 838              		.thumb
 839              		.thumb_func
 841              	HAL_TIM_PWM_DeInit:
 842              	.LFB144:
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 843              		.loc 1 1028 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
 846              		@ frame_needed = 0, uses_anonymous_args = 0
 847              	.LVL89:
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 848              		.loc 1 1028 0
 849 0000 10B5     		push	{r4, lr}
 850              	.LCFI8:
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 4, -8
 853              		.cfi_offset 14, -4
 854 0002 0446     		mov	r4, r0
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 855              		.loc 1 1032 0
 856 0004 0223     		movs	r3, #2
 857 0006 80F83D30 		strb	r3, [r0, #61]
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 858              		.loc 1 1035 0
 859 000a 0368     		ldr	r3, [r0]
 860 000c 196A     		ldr	r1, [r3, #32]
 861 000e 41F21112 		movw	r2, #4369
 862 0012 1142     		tst	r1, r2
 863 0014 08D1     		bne	.L34
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 864              		.loc 1 1035 0 is_stmt 0 discriminator 1
 865 0016 196A     		ldr	r1, [r3, #32]
 866 0018 40F24442 		movw	r2, #1092
 867 001c 1142     		tst	r1, r2
 868 001e 03D1     		bne	.L34
 869 0020 1A68     		ldr	r2, [r3]
 870 0022 22F00102 		bic	r2, r2, #1
 871 0026 1A60     		str	r2, [r3]
 872              	.L34:
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_PWM_MspDeInit(htim);
 873              		.loc 1 1038 0 is_stmt 1
 874 0028 2046     		mov	r0, r4
 875              	.LVL90:
ARM GAS  /tmp/cc8lNJIB.s 			page 110


 876 002a FFF7FEFF 		bl	HAL_TIM_PWM_MspDeInit
 877              	.LVL91:
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
 878              		.loc 1 1041 0
 879 002e 0020     		movs	r0, #0
 880 0030 84F83D00 		strb	r0, [r4, #61]
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 881              		.loc 1 1044 0
 882 0034 84F83C00 		strb	r0, [r4, #60]
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 883              		.loc 1 1047 0
 884 0038 10BD     		pop	{r4, pc}
 885              		.cfi_endproc
 886              	.LFE144:
 888 003a 00BF     		.section	.text.HAL_TIM_IC_MspInit,"ax",%progbits
 889              		.align	2
 890              		.weak	HAL_TIM_IC_MspInit
 891              		.thumb
 892              		.thumb_func
 894              	HAL_TIM_IC_MspInit:
 895              	.LFB155:
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 896              		.loc 1 1565 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901              	.LVL92:
 902 0000 7047     		bx	lr
 903              		.cfi_endproc
 904              	.LFE155:
 906 0002 00BF     		.section	.text.HAL_TIM_IC_MspDeInit,"ax",%progbits
 907              		.align	2
 908              		.weak	HAL_TIM_IC_MspDeInit
 909              		.thumb
 910              		.thumb_func
 912              	HAL_TIM_IC_MspDeInit:
 913              	.LFB156:
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 914              		.loc 1 1580 0
 915              		.cfi_startproc
 916              		@ args = 0, pretend = 0, frame = 0
 917              		@ frame_needed = 0, uses_anonymous_args = 0
 918              		@ link register save eliminated.
 919              	.LVL93:
 920 0000 7047     		bx	lr
 921              		.cfi_endproc
 922              	.LFE156:
 924 0002 00BF     		.section	.text.HAL_TIM_IC_DeInit,"ax",%progbits
 925              		.align	2
 926              		.global	HAL_TIM_IC_DeInit
 927              		.thumb
 928              		.thumb_func
 930              	HAL_TIM_IC_DeInit:
 931              	.LFB154:
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 932              		.loc 1 1538 0
ARM GAS  /tmp/cc8lNJIB.s 			page 111


 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 0
 935              		@ frame_needed = 0, uses_anonymous_args = 0
 936              	.LVL94:
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 937              		.loc 1 1538 0
 938 0000 10B5     		push	{r4, lr}
 939              	.LCFI9:
 940              		.cfi_def_cfa_offset 8
 941              		.cfi_offset 4, -8
 942              		.cfi_offset 14, -4
 943 0002 0446     		mov	r4, r0
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 944              		.loc 1 1542 0
 945 0004 0223     		movs	r3, #2
 946 0006 80F83D30 		strb	r3, [r0, #61]
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 947              		.loc 1 1545 0
 948 000a 0368     		ldr	r3, [r0]
 949 000c 196A     		ldr	r1, [r3, #32]
 950 000e 41F21112 		movw	r2, #4369
 951 0012 1142     		tst	r1, r2
 952 0014 08D1     		bne	.L38
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 953              		.loc 1 1545 0 is_stmt 0 discriminator 1
 954 0016 196A     		ldr	r1, [r3, #32]
 955 0018 40F24442 		movw	r2, #1092
 956 001c 1142     		tst	r1, r2
 957 001e 03D1     		bne	.L38
 958 0020 1A68     		ldr	r2, [r3]
 959 0022 22F00102 		bic	r2, r2, #1
 960 0026 1A60     		str	r2, [r3]
 961              	.L38:
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_IC_MspDeInit(htim);
 962              		.loc 1 1548 0 is_stmt 1
 963 0028 2046     		mov	r0, r4
 964              	.LVL95:
 965 002a FFF7FEFF 		bl	HAL_TIM_IC_MspDeInit
 966              	.LVL96:
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET;
 967              		.loc 1 1551 0
 968 002e 0020     		movs	r0, #0
 969 0030 84F83D00 		strb	r0, [r4, #61]
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 970              		.loc 1 1554 0
 971 0034 84F83C00 		strb	r0, [r4, #60]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 972              		.loc 1 1557 0
 973 0038 10BD     		pop	{r4, pc}
 974              		.cfi_endproc
 975              	.LFE154:
 977 003a 00BF     		.section	.text.HAL_TIM_OnePulse_MspInit,"ax",%progbits
 978              		.align	2
 979              		.weak	HAL_TIM_OnePulse_MspInit
 980              		.thumb
 981              		.thumb_func
 983              	HAL_TIM_OnePulse_MspInit:
ARM GAS  /tmp/cc8lNJIB.s 			page 112


 984              	.LFB165:
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 985              		.loc 1 2048 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 0
 988              		@ frame_needed = 0, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990              	.LVL97:
 991 0000 7047     		bx	lr
 992              		.cfi_endproc
 993              	.LFE165:
 995 0002 00BF     		.section	.text.HAL_TIM_OnePulse_MspDeInit,"ax",%progbits
 996              		.align	2
 997              		.weak	HAL_TIM_OnePulse_MspDeInit
 998              		.thumb
 999              		.thumb_func
 1001              	HAL_TIM_OnePulse_MspDeInit:
 1002              	.LFB166:
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1003              		.loc 1 2063 0
 1004              		.cfi_startproc
 1005              		@ args = 0, pretend = 0, frame = 0
 1006              		@ frame_needed = 0, uses_anonymous_args = 0
 1007              		@ link register save eliminated.
 1008              	.LVL98:
 1009 0000 7047     		bx	lr
 1010              		.cfi_endproc
 1011              	.LFE166:
 1013 0002 00BF     		.section	.text.HAL_TIM_OnePulse_DeInit,"ax",%progbits
 1014              		.align	2
 1015              		.global	HAL_TIM_OnePulse_DeInit
 1016              		.thumb
 1017              		.thumb_func
 1019              	HAL_TIM_OnePulse_DeInit:
 1020              	.LFB164:
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1021              		.loc 1 2021 0
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 0
 1024              		@ frame_needed = 0, uses_anonymous_args = 0
 1025              	.LVL99:
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1026              		.loc 1 2021 0
 1027 0000 10B5     		push	{r4, lr}
 1028              	.LCFI10:
 1029              		.cfi_def_cfa_offset 8
 1030              		.cfi_offset 4, -8
 1031              		.cfi_offset 14, -4
 1032 0002 0446     		mov	r4, r0
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1033              		.loc 1 2025 0
 1034 0004 0223     		movs	r3, #2
 1035 0006 80F83D30 		strb	r3, [r0, #61]
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1036              		.loc 1 2028 0
 1037 000a 0368     		ldr	r3, [r0]
 1038 000c 196A     		ldr	r1, [r3, #32]
ARM GAS  /tmp/cc8lNJIB.s 			page 113


 1039 000e 41F21112 		movw	r2, #4369
 1040 0012 1142     		tst	r1, r2
 1041 0014 08D1     		bne	.L42
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1042              		.loc 1 2028 0 is_stmt 0 discriminator 1
 1043 0016 196A     		ldr	r1, [r3, #32]
 1044 0018 40F24442 		movw	r2, #1092
 1045 001c 1142     		tst	r1, r2
 1046 001e 03D1     		bne	.L42
 1047 0020 1A68     		ldr	r2, [r3]
 1048 0022 22F00102 		bic	r2, r2, #1
 1049 0026 1A60     		str	r2, [r3]
 1050              	.L42:
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_OnePulse_MspDeInit(htim);
 1051              		.loc 1 2031 0 is_stmt 1
 1052 0028 2046     		mov	r0, r4
 1053              	.LVL100:
 1054 002a FFF7FEFF 		bl	HAL_TIM_OnePulse_MspDeInit
 1055              	.LVL101:
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
 1056              		.loc 1 2034 0
 1057 002e 0020     		movs	r0, #0
 1058 0030 84F83D00 		strb	r0, [r4, #61]
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1059              		.loc 1 2037 0
 1060 0034 84F83C00 		strb	r0, [r4, #60]
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1061              		.loc 1 2040 0
 1062 0038 10BD     		pop	{r4, pc}
 1063              		.cfi_endproc
 1064              	.LFE164:
 1066 003a 00BF     		.section	.text.HAL_TIM_Encoder_MspInit,"ax",%progbits
 1067              		.align	2
 1068              		.weak	HAL_TIM_Encoder_MspInit
 1069              		.thumb
 1070              		.thumb_func
 1072              	HAL_TIM_Encoder_MspInit:
 1073              	.LFB173:
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1074              		.loc 1 2367 0
 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
 1078              		@ link register save eliminated.
 1079              	.LVL102:
 1080 0000 7047     		bx	lr
 1081              		.cfi_endproc
 1082              	.LFE173:
 1084 0002 00BF     		.section	.text.HAL_TIM_Encoder_MspDeInit,"ax",%progbits
 1085              		.align	2
 1086              		.weak	HAL_TIM_Encoder_MspDeInit
 1087              		.thumb
 1088              		.thumb_func
 1090              	HAL_TIM_Encoder_MspDeInit:
 1091              	.LFB174:
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1092              		.loc 1 2382 0
ARM GAS  /tmp/cc8lNJIB.s 			page 114


 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              		@ link register save eliminated.
 1097              	.LVL103:
 1098 0000 7047     		bx	lr
 1099              		.cfi_endproc
 1100              	.LFE174:
 1102 0002 00BF     		.section	.text.HAL_TIM_Encoder_DeInit,"ax",%progbits
 1103              		.align	2
 1104              		.global	HAL_TIM_Encoder_DeInit
 1105              		.thumb
 1106              		.thumb_func
 1108              	HAL_TIM_Encoder_DeInit:
 1109              	.LFB172:
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1110              		.loc 1 2340 0
 1111              		.cfi_startproc
 1112              		@ args = 0, pretend = 0, frame = 0
 1113              		@ frame_needed = 0, uses_anonymous_args = 0
 1114              	.LVL104:
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1115              		.loc 1 2340 0
 1116 0000 10B5     		push	{r4, lr}
 1117              	.LCFI11:
 1118              		.cfi_def_cfa_offset 8
 1119              		.cfi_offset 4, -8
 1120              		.cfi_offset 14, -4
 1121 0002 0446     		mov	r4, r0
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1122              		.loc 1 2344 0
 1123 0004 0223     		movs	r3, #2
 1124 0006 80F83D30 		strb	r3, [r0, #61]
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1125              		.loc 1 2347 0
 1126 000a 0368     		ldr	r3, [r0]
 1127 000c 196A     		ldr	r1, [r3, #32]
 1128 000e 41F21112 		movw	r2, #4369
 1129 0012 1142     		tst	r1, r2
 1130 0014 08D1     		bne	.L46
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 1131              		.loc 1 2347 0 is_stmt 0 discriminator 1
 1132 0016 196A     		ldr	r1, [r3, #32]
 1133 0018 40F24442 		movw	r2, #1092
 1134 001c 1142     		tst	r1, r2
 1135 001e 03D1     		bne	.L46
 1136 0020 1A68     		ldr	r2, [r3]
 1137 0022 22F00102 		bic	r2, r2, #1
 1138 0026 1A60     		str	r2, [r3]
 1139              	.L46:
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_Encoder_MspDeInit(htim);
 1140              		.loc 1 2350 0 is_stmt 1
 1141 0028 2046     		mov	r0, r4
 1142              	.LVL105:
 1143 002a FFF7FEFF 		bl	HAL_TIM_Encoder_MspDeInit
 1144              	.LVL106:
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_RESET; 
ARM GAS  /tmp/cc8lNJIB.s 			page 115


 1145              		.loc 1 2353 0
 1146 002e 0020     		movs	r0, #0
 1147 0030 84F83D00 		strb	r0, [r4, #61]
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1148              		.loc 1 2356 0
 1149 0034 84F83C00 		strb	r0, [r4, #60]
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1150              		.loc 1 2359 0
 1151 0038 10BD     		pop	{r4, pc}
 1152              		.cfi_endproc
 1153              	.LFE172:
 1155 003a 00BF     		.section	.text.HAL_TIM_DMABurst_WriteStart,"ax",%progbits
 1156              		.align	2
 1157              		.global	HAL_TIM_DMABurst_WriteStart
 1158              		.thumb
 1159              		.thumb_func
 1161              	HAL_TIM_DMABurst_WriteStart:
 1162              	.LFB186:
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1163              		.loc 1 3334 0
 1164              		.cfi_startproc
 1165              		@ args = 4, pretend = 0, frame = 0
 1166              		@ frame_needed = 0, uses_anonymous_args = 0
 1167              	.LVL107:
 1168 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1169              	.LCFI12:
 1170              		.cfi_def_cfa_offset 24
 1171              		.cfi_offset 3, -24
 1172              		.cfi_offset 4, -20
 1173              		.cfi_offset 5, -16
 1174              		.cfi_offset 6, -12
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 0446     		mov	r4, r0
 1178 0004 0F46     		mov	r7, r1
 1179 0006 1546     		mov	r5, r2
 1180 0008 069E     		ldr	r6, [sp, #24]
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 1181              		.loc 1 3341 0
 1182 000a 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1183              	.LVL108:
 1184 000e D2B2     		uxtb	r2, r2
 1185 0010 022A     		cmp	r2, #2
 1186 0012 00F0A780 		beq	.L60
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 1187              		.loc 1 3345 0
 1188 0016 90F83D20 		ldrb	r2, [r0, #61]	@ zero_extendqisi2
 1189 001a D2B2     		uxtb	r2, r2
 1190 001c 012A     		cmp	r2, #1
 1191 001e 06D1     		bne	.L49
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U)) 
 1192              		.loc 1 3347 0
 1193 0020 13B9     		cbnz	r3, .L50
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U)) 
 1194              		.loc 1 3347 0 is_stmt 0 discriminator 1
 1195 0022 002E     		cmp	r6, #0
 1196 0024 40F0A080 		bne	.L61
ARM GAS  /tmp/cc8lNJIB.s 			page 116


 1197              	.L50:
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 1198              		.loc 1 3353 0 is_stmt 1
 1199 0028 0222     		movs	r2, #2
 1200 002a 84F83D20 		strb	r2, [r4, #61]
 1201              	.L49:
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
 1202              		.loc 1 3356 0
 1203 002e B5F5006F 		cmp	r5, #2048
 1204 0032 48D0     		beq	.L52
 1205 0034 0AD8     		bhi	.L53
 1206 0036 B5F5007F 		cmp	r5, #512
 1207 003a 22D0     		beq	.L54
 1208 003c B5F5806F 		cmp	r5, #1024
 1209 0040 30D0     		beq	.L55
 1210 0042 B5F5807F 		cmp	r5, #256
 1211 0046 40F08180 		bne	.L51
 1212 004a 09E0     		b	.L56
 1213              	.L53:
 1214 004c B5F5005F 		cmp	r5, #8192
 1215 0050 5BD0     		beq	.L57
 1216 0052 B5F5804F 		cmp	r5, #16384
 1217 0056 69D0     		beq	.L58
 1218 0058 B5F5805F 		cmp	r5, #4096
 1219 005c 76D1     		bne	.L51
 1220 005e 43E0     		b	.L59
 1221              	.L56:
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 1222              		.loc 1 3361 0
 1223 0060 226A     		ldr	r2, [r4, #32]
 1224 0062 4249     		ldr	r1, .L62
 1225              	.LVL109:
 1226 0064 9162     		str	r1, [r2, #40]
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 1227              		.loc 1 3364 0
 1228 0066 226A     		ldr	r2, [r4, #32]
 1229 0068 4149     		ldr	r1, .L62+4
 1230 006a 1163     		str	r1, [r2, #48]
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)BurstBuffer, (uint32_t)&htim->Insta
 1231              		.loc 1 3367 0
 1232 006c 2268     		ldr	r2, [r4]
 1233 006e 4FEA162E 		lsr	lr, r6, #8
 1234 0072 206A     		ldr	r0, [r4, #32]
 1235              	.LVL110:
 1236 0074 1946     		mov	r1, r3
 1237 0076 4C32     		adds	r2, r2, #76
 1238 0078 0EF10103 		add	r3, lr, #1
 1239              	.LVL111:
 1240 007c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1241              	.LVL112:
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1242              		.loc 1 3369 0
 1243 0080 64E0     		b	.L51
 1244              	.LVL113:
 1245              	.L54:
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1246              		.loc 1 3373 0
ARM GAS  /tmp/cc8lNJIB.s 			page 117


 1247 0082 626A     		ldr	r2, [r4, #36]
 1248 0084 3B49     		ldr	r1, .L62+8
 1249              	.LVL114:
 1250 0086 9162     		str	r1, [r2, #40]
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 1251              		.loc 1 3376 0
 1252 0088 626A     		ldr	r2, [r4, #36]
 1253 008a 3949     		ldr	r1, .L62+4
 1254 008c 1163     		str	r1, [r2, #48]
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1255              		.loc 1 3379 0
 1256 008e 2268     		ldr	r2, [r4]
 1257 0090 4FEA162E 		lsr	lr, r6, #8
 1258 0094 606A     		ldr	r0, [r4, #36]
 1259              	.LVL115:
 1260 0096 1946     		mov	r1, r3
 1261 0098 4C32     		adds	r2, r2, #76
 1262 009a 0EF10103 		add	r3, lr, #1
 1263              	.LVL116:
 1264 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 1265              	.LVL117:
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1266              		.loc 1 3381 0
 1267 00a2 53E0     		b	.L51
 1268              	.LVL118:
 1269              	.L55:
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1270              		.loc 1 3385 0
 1271 00a4 A26A     		ldr	r2, [r4, #40]
 1272 00a6 3349     		ldr	r1, .L62+8
 1273              	.LVL119:
 1274 00a8 9162     		str	r1, [r2, #40]
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 1275              		.loc 1 3388 0
 1276 00aa A26A     		ldr	r2, [r4, #40]
 1277 00ac 3049     		ldr	r1, .L62+4
 1278 00ae 1163     		str	r1, [r2, #48]
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1279              		.loc 1 3391 0
 1280 00b0 2268     		ldr	r2, [r4]
 1281 00b2 4FEA162E 		lsr	lr, r6, #8
 1282 00b6 A06A     		ldr	r0, [r4, #40]
 1283              	.LVL120:
 1284 00b8 1946     		mov	r1, r3
 1285 00ba 4C32     		adds	r2, r2, #76
 1286 00bc 0EF10103 		add	r3, lr, #1
 1287              	.LVL121:
 1288 00c0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1289              	.LVL122:
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1290              		.loc 1 3393 0
 1291 00c4 42E0     		b	.L51
 1292              	.LVL123:
 1293              	.L52:
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1294              		.loc 1 3397 0
 1295 00c6 E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cc8lNJIB.s 			page 118


 1296 00c8 2A49     		ldr	r1, .L62+8
 1297              	.LVL124:
 1298 00ca 9162     		str	r1, [r2, #40]
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 1299              		.loc 1 3400 0
 1300 00cc E26A     		ldr	r2, [r4, #44]
 1301 00ce 2849     		ldr	r1, .L62+4
 1302 00d0 1163     		str	r1, [r2, #48]
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1303              		.loc 1 3403 0
 1304 00d2 2268     		ldr	r2, [r4]
 1305 00d4 4FEA162E 		lsr	lr, r6, #8
 1306 00d8 E06A     		ldr	r0, [r4, #44]
 1307              	.LVL125:
 1308 00da 1946     		mov	r1, r3
 1309 00dc 4C32     		adds	r2, r2, #76
 1310 00de 0EF10103 		add	r3, lr, #1
 1311              	.LVL126:
 1312 00e2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1313              	.LVL127:
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1314              		.loc 1 3405 0
 1315 00e6 31E0     		b	.L51
 1316              	.LVL128:
 1317              	.L59:
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMADelayPulseCplt;
 1318              		.loc 1 3409 0
 1319 00e8 226B     		ldr	r2, [r4, #48]
 1320 00ea 2249     		ldr	r1, .L62+8
 1321              	.LVL129:
 1322 00ec 9162     		str	r1, [r2, #40]
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 1323              		.loc 1 3412 0
 1324 00ee 226B     		ldr	r2, [r4, #48]
 1325 00f0 1F49     		ldr	r1, .L62+4
 1326 00f2 1163     		str	r1, [r2, #48]
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)BurstBuffer, (uint32_t)&htim->Instance
 1327              		.loc 1 3415 0
 1328 00f4 2268     		ldr	r2, [r4]
 1329 00f6 4FEA162E 		lsr	lr, r6, #8
 1330 00fa 206B     		ldr	r0, [r4, #48]
 1331              	.LVL130:
 1332 00fc 1946     		mov	r1, r3
 1333 00fe 4C32     		adds	r2, r2, #76
 1334 0100 0EF10103 		add	r3, lr, #1
 1335              	.LVL131:
 1336 0104 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1337              	.LVL132:
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1338              		.loc 1 3417 0
 1339 0108 20E0     		b	.L51
 1340              	.LVL133:
 1341              	.L57:
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
 1342              		.loc 1 3421 0
 1343 010a 626B     		ldr	r2, [r4, #52]
 1344 010c 1A49     		ldr	r1, .L62+12
ARM GAS  /tmp/cc8lNJIB.s 			page 119


 1345              	.LVL134:
 1346 010e 9162     		str	r1, [r2, #40]
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
 1347              		.loc 1 3424 0
 1348 0110 626B     		ldr	r2, [r4, #52]
 1349 0112 1749     		ldr	r1, .L62+4
 1350 0114 1163     		str	r1, [r2, #48]
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)BurstBuffer, (uint32_t)&htim->
 1351              		.loc 1 3427 0
 1352 0116 2268     		ldr	r2, [r4]
 1353 0118 4FEA162E 		lsr	lr, r6, #8
 1354 011c 606B     		ldr	r0, [r4, #52]
 1355              	.LVL135:
 1356 011e 1946     		mov	r1, r3
 1357 0120 4C32     		adds	r2, r2, #76
 1358 0122 0EF10103 		add	r3, lr, #1
 1359              	.LVL136:
 1360 0126 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1361              	.LVL137:
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1362              		.loc 1 3429 0
 1363 012a 0FE0     		b	.L51
 1364              	.LVL138:
 1365              	.L58:
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
 1366              		.loc 1 3433 0
 1367 012c A26B     		ldr	r2, [r4, #56]
 1368 012e 1349     		ldr	r1, .L62+16
 1369              	.LVL139:
 1370 0130 9162     		str	r1, [r2, #40]
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
 1371              		.loc 1 3436 0
 1372 0132 A26B     		ldr	r2, [r4, #56]
 1373 0134 0E49     		ldr	r1, .L62+4
 1374 0136 1163     		str	r1, [r2, #48]
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)BurstBuffer, (uint32_t)&htim->Inst
 1375              		.loc 1 3439 0
 1376 0138 2268     		ldr	r2, [r4]
 1377 013a 4FEA162E 		lsr	lr, r6, #8
 1378 013e A06B     		ldr	r0, [r4, #56]
 1379              	.LVL140:
 1380 0140 1946     		mov	r1, r3
 1381 0142 4C32     		adds	r2, r2, #76
 1382 0144 0EF10103 		add	r3, lr, #1
 1383              	.LVL141:
 1384 0148 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1385              	.LVL142:
 1386              	.L51:
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    htim->Instance->DCR = BurstBaseAddress | BurstLength;  
 1387              		.loc 1 3446 0
 1388 014c 2368     		ldr	r3, [r4]
 1389 014e 3E43     		orrs	r6, r6, r7
 1390 0150 9E64     		str	r6, [r3, #72]
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);  
 1391              		.loc 1 3449 0
 1392 0152 2368     		ldr	r3, [r4]
 1393 0154 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc8lNJIB.s 			page 120


 1394 0156 1543     		orrs	r5, r5, r2
 1395              	.LVL143:
 1396 0158 DD60     		str	r5, [r3, #12]
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    htim->State = HAL_TIM_STATE_READY;
 1397              		.loc 1 3451 0
 1398 015a 0123     		movs	r3, #1
 1399 015c 84F83D30 		strb	r3, [r4, #61]
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 1400              		.loc 1 3454 0
 1401 0160 0020     		movs	r0, #0
 1402 0162 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1403              	.LVL144:
 1404              	.L60:
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 1405              		.loc 1 3343 0
 1406 0164 0220     		movs	r0, #2
 1407              	.LVL145:
 1408 0166 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1409              	.LVL146:
 1410              	.L61:
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 1411              		.loc 1 3349 0
 1412 0168 0120     		movs	r0, #1
 1413              	.LVL147:
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1414              		.loc 1 3455 0
 1415 016a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1416              	.LVL148:
 1417              	.L63:
 1418              		.align	2
 1419              	.L62:
 1420 016c 00000000 		.word	TIM_DMAPeriodElapsedCplt
 1421 0170 00000000 		.word	TIM_DMAError
 1422 0174 00000000 		.word	TIM_DMADelayPulseCplt
 1423 0178 00000000 		.word	TIMEx_DMACommutationCplt
 1424 017c 00000000 		.word	TIM_DMATriggerCplt
 1425              		.cfi_endproc
 1426              	.LFE186:
 1428              		.section	.text.HAL_TIM_DMABurst_WriteStop,"ax",%progbits
 1429              		.align	2
 1430              		.global	HAL_TIM_DMABurst_WriteStop
 1431              		.thumb
 1432              		.thumb_func
 1434              	HAL_TIM_DMABurst_WriteStop:
 1435              	.LFB187:
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1436              		.loc 1 3464 0
 1437              		.cfi_startproc
 1438              		@ args = 0, pretend = 0, frame = 0
 1439              		@ frame_needed = 0, uses_anonymous_args = 0
 1440              	.LVL149:
 1441 0000 38B5     		push	{r3, r4, r5, lr}
 1442              	.LCFI13:
 1443              		.cfi_def_cfa_offset 16
 1444              		.cfi_offset 3, -16
 1445              		.cfi_offset 4, -12
 1446              		.cfi_offset 5, -8
ARM GAS  /tmp/cc8lNJIB.s 			page 121


 1447              		.cfi_offset 14, -4
 1448 0002 0546     		mov	r5, r0
 1449 0004 0C46     		mov	r4, r1
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
 1450              		.loc 1 3469 0
 1451 0006 B1F5006F 		cmp	r1, #2048
 1452 000a 20D0     		beq	.L66
 1453 000c 09D8     		bhi	.L67
 1454 000e B1F5007F 		cmp	r1, #512
 1455 0012 14D0     		beq	.L68
 1456 0014 B1F5806F 		cmp	r1, #1024
 1457 0018 15D0     		beq	.L69
 1458 001a B1F5807F 		cmp	r1, #256
 1459 001e 25D1     		bne	.L65
 1460 0020 09E0     		b	.L70
 1461              	.L67:
 1462 0022 B1F5005F 		cmp	r1, #8192
 1463 0026 1AD0     		beq	.L71
 1464 0028 B1F5804F 		cmp	r1, #16384
 1465 002c 1BD0     		beq	.L72
 1466 002e B1F5805F 		cmp	r1, #4096
 1467 0032 1BD1     		bne	.L65
 1468 0034 0FE0     		b	.L73
 1469              	.L70:
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]); 
 1470              		.loc 1 3473 0
 1471 0036 006A     		ldr	r0, [r0, #32]
 1472              	.LVL150:
 1473 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1474              	.LVL151:
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1475              		.loc 1 3475 0
 1476 003c 16E0     		b	.L65
 1477              	.LVL152:
 1478              	.L68:
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);     
 1479              		.loc 1 3478 0
 1480 003e 406A     		ldr	r0, [r0, #36]
 1481              	.LVL153:
 1482 0040 FFF7FEFF 		bl	HAL_DMA_Abort
 1483              	.LVL154:
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1484              		.loc 1 3480 0
 1485 0044 12E0     		b	.L65
 1486              	.LVL155:
 1487              	.L69:
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);     
 1488              		.loc 1 3483 0
 1489 0046 806A     		ldr	r0, [r0, #40]
 1490              	.LVL156:
 1491 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 1492              	.LVL157:
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1493              		.loc 1 3485 0
 1494 004c 0EE0     		b	.L65
 1495              	.LVL158:
 1496              	.L66:
ARM GAS  /tmp/cc8lNJIB.s 			page 122


3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);     
 1497              		.loc 1 3488 0
 1498 004e C06A     		ldr	r0, [r0, #44]
 1499              	.LVL159:
 1500 0050 FFF7FEFF 		bl	HAL_DMA_Abort
 1501              	.LVL160:
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1502              		.loc 1 3490 0
 1503 0054 0AE0     		b	.L65
 1504              	.LVL161:
 1505              	.L73:
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);     
 1506              		.loc 1 3493 0
 1507 0056 006B     		ldr	r0, [r0, #48]
 1508              	.LVL162:
 1509 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 1510              	.LVL163:
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1511              		.loc 1 3495 0
 1512 005c 06E0     		b	.L65
 1513              	.LVL164:
 1514              	.L71:
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);     
 1515              		.loc 1 3498 0
 1516 005e 406B     		ldr	r0, [r0, #52]
 1517              	.LVL165:
 1518 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 1519              	.LVL166:
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1520              		.loc 1 3500 0
 1521 0064 02E0     		b	.L65
 1522              	.LVL167:
 1523              	.L72:
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);     
 1524              		.loc 1 3503 0
 1525 0066 806B     		ldr	r0, [r0, #56]
 1526              	.LVL168:
 1527 0068 FFF7FEFF 		bl	HAL_DMA_Abort
 1528              	.LVL169:
 1529              	.L65:
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
 1530              		.loc 1 3511 0
 1531 006c 2B68     		ldr	r3, [r5]
 1532 006e DA68     		ldr	r2, [r3, #12]
 1533 0070 22EA0404 		bic	r4, r2, r4
 1534              	.LVL170:
 1535 0074 DC60     		str	r4, [r3, #12]
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1536              		.loc 1 3515 0
 1537 0076 0020     		movs	r0, #0
 1538 0078 38BD     		pop	{r3, r4, r5, pc}
 1539              		.cfi_endproc
 1540              	.LFE187:
 1542 007a 00BF     		.section	.text.HAL_TIM_DMABurst_ReadStart,"ax",%progbits
 1543              		.align	2
 1544              		.global	HAL_TIM_DMABurst_ReadStart
 1545              		.thumb
ARM GAS  /tmp/cc8lNJIB.s 			page 123


 1546              		.thumb_func
 1548              	HAL_TIM_DMABurst_ReadStart:
 1549              	.LFB188:
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1550              		.loc 1 3557 0
 1551              		.cfi_startproc
 1552              		@ args = 4, pretend = 0, frame = 0
 1553              		@ frame_needed = 0, uses_anonymous_args = 0
 1554              	.LVL171:
 1555 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1556              	.LCFI14:
 1557              		.cfi_def_cfa_offset 24
 1558              		.cfi_offset 3, -24
 1559              		.cfi_offset 4, -20
 1560              		.cfi_offset 5, -16
 1561              		.cfi_offset 6, -12
 1562              		.cfi_offset 7, -8
 1563              		.cfi_offset 14, -4
 1564 0002 0446     		mov	r4, r0
 1565 0004 0F46     		mov	r7, r1
 1566 0006 1546     		mov	r5, r2
 1567 0008 069E     		ldr	r6, [sp, #24]
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 1568              		.loc 1 3564 0
 1569 000a 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 1570              	.LVL172:
 1571 000e C0B2     		uxtb	r0, r0
 1572 0010 0228     		cmp	r0, #2
 1573 0012 00F0A780 		beq	.L87
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 1574              		.loc 1 3568 0
 1575 0016 94F83D20 		ldrb	r2, [r4, #61]	@ zero_extendqisi2
 1576              	.LVL173:
 1577 001a D2B2     		uxtb	r2, r2
 1578 001c 012A     		cmp	r2, #1
 1579 001e 06D1     		bne	.L76
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U)) 
 1580              		.loc 1 3570 0
 1581 0020 13B9     		cbnz	r3, .L77
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((BurstBuffer == 0U ) && (BurstLength > 0U)) 
 1582              		.loc 1 3570 0 is_stmt 0 discriminator 1
 1583 0022 002E     		cmp	r6, #0
 1584 0024 40F0A080 		bne	.L88
 1585              	.L77:
3576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 1586              		.loc 1 3576 0 is_stmt 1
 1587 0028 0222     		movs	r2, #2
 1588 002a 84F83D20 		strb	r2, [r4, #61]
 1589              	.L76:
3579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
 1590              		.loc 1 3579 0
 1591 002e B5F5006F 		cmp	r5, #2048
 1592 0032 48D0     		beq	.L79
 1593 0034 0AD8     		bhi	.L80
 1594 0036 B5F5007F 		cmp	r5, #512
 1595 003a 22D0     		beq	.L81
 1596 003c B5F5806F 		cmp	r5, #1024
ARM GAS  /tmp/cc8lNJIB.s 			page 124


 1597 0040 30D0     		beq	.L82
 1598 0042 B5F5807F 		cmp	r5, #256
 1599 0046 40F08180 		bne	.L78
 1600 004a 09E0     		b	.L83
 1601              	.L80:
 1602 004c B5F5005F 		cmp	r5, #8192
 1603 0050 5BD0     		beq	.L84
 1604 0052 B5F5804F 		cmp	r5, #16384
 1605 0056 69D0     		beq	.L85
 1606 0058 B5F5805F 		cmp	r5, #4096
 1607 005c 76D1     		bne	.L78
 1608 005e 43E0     		b	.L86
 1609              	.L83:
3584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferCpltCallback = TIM_DMAPeriodElapsedCplt;
 1610              		.loc 1 3584 0
 1611 0060 226A     		ldr	r2, [r4, #32]
 1612 0062 4249     		ldr	r1, .L89
 1613              	.LVL174:
 1614 0064 9162     		str	r1, [r2, #40]
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_UPDATE]->XferErrorCallback = TIM_DMAError ;
 1615              		.loc 1 3587 0
 1616 0066 226A     		ldr	r2, [r4, #32]
 1617 0068 4149     		ldr	r1, .L89+4
 1618 006a 1163     		str	r1, [r2, #48]
3590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_UPDATE], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 1619              		.loc 1 3590 0
 1620 006c 2168     		ldr	r1, [r4]
 1621 006e 4FEA162E 		lsr	lr, r6, #8
 1622 0072 206A     		ldr	r0, [r4, #32]
 1623 0074 4C31     		adds	r1, r1, #76
 1624 0076 1A46     		mov	r2, r3
 1625 0078 0EF10103 		add	r3, lr, #1
 1626              	.LVL175:
 1627 007c FFF7FEFF 		bl	HAL_DMA_Start_IT
 1628              	.LVL176:
3592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1629              		.loc 1 3592 0
 1630 0080 64E0     		b	.L78
 1631              	.LVL177:
 1632              	.L81:
3596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback =  TIM_DMACaptureCplt;
 1633              		.loc 1 3596 0
 1634 0082 626A     		ldr	r2, [r4, #36]
 1635 0084 3B49     		ldr	r1, .L89+8
 1636              	.LVL178:
 1637 0086 9162     		str	r1, [r2, #40]
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 1638              		.loc 1 3599 0
 1639 0088 626A     		ldr	r2, [r4, #36]
 1640 008a 3949     		ldr	r1, .L89+4
 1641 008c 1163     		str	r1, [r2, #48]
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 1642              		.loc 1 3602 0
 1643 008e 2168     		ldr	r1, [r4]
 1644 0090 4FEA162E 		lsr	lr, r6, #8
 1645 0094 606A     		ldr	r0, [r4, #36]
 1646 0096 4C31     		adds	r1, r1, #76
ARM GAS  /tmp/cc8lNJIB.s 			page 125


 1647 0098 1A46     		mov	r2, r3
 1648 009a 0EF10103 		add	r3, lr, #1
 1649              	.LVL179:
 1650 009e FFF7FEFF 		bl	HAL_DMA_Start_IT
 1651              	.LVL180:
3604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1652              		.loc 1 3604 0
 1653 00a2 53E0     		b	.L78
 1654              	.LVL181:
 1655              	.L82:
3608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback =  TIM_DMACaptureCplt;
 1656              		.loc 1 3608 0
 1657 00a4 A26A     		ldr	r2, [r4, #40]
 1658 00a6 3349     		ldr	r1, .L89+8
 1659              	.LVL182:
 1660 00a8 9162     		str	r1, [r2, #40]
3611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 1661              		.loc 1 3611 0
 1662 00aa A26A     		ldr	r2, [r4, #40]
 1663 00ac 3049     		ldr	r1, .L89+4
 1664 00ae 1163     		str	r1, [r2, #48]
3614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 1665              		.loc 1 3614 0
 1666 00b0 2168     		ldr	r1, [r4]
 1667 00b2 4FEA162E 		lsr	lr, r6, #8
 1668 00b6 A06A     		ldr	r0, [r4, #40]
 1669 00b8 4C31     		adds	r1, r1, #76
 1670 00ba 1A46     		mov	r2, r3
 1671 00bc 0EF10103 		add	r3, lr, #1
 1672              	.LVL183:
 1673 00c0 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1674              	.LVL184:
3616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1675              		.loc 1 3616 0
 1676 00c4 42E0     		b	.L78
 1677              	.LVL185:
 1678              	.L79:
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback =  TIM_DMACaptureCplt;
 1679              		.loc 1 3620 0
 1680 00c6 E26A     		ldr	r2, [r4, #44]
 1681 00c8 2A49     		ldr	r1, .L89+8
 1682              	.LVL186:
 1683 00ca 9162     		str	r1, [r2, #40]
3623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 1684              		.loc 1 3623 0
 1685 00cc E26A     		ldr	r2, [r4, #44]
 1686 00ce 2849     		ldr	r1, .L89+4
 1687 00d0 1163     		str	r1, [r2, #48]
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 1688              		.loc 1 3626 0
 1689 00d2 2168     		ldr	r1, [r4]
 1690 00d4 4FEA162E 		lsr	lr, r6, #8
 1691 00d8 E06A     		ldr	r0, [r4, #44]
 1692 00da 4C31     		adds	r1, r1, #76
 1693 00dc 1A46     		mov	r2, r3
 1694 00de 0EF10103 		add	r3, lr, #1
 1695              	.LVL187:
ARM GAS  /tmp/cc8lNJIB.s 			page 126


 1696 00e2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1697              	.LVL188:
3628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1698              		.loc 1 3628 0
 1699 00e6 31E0     		b	.L78
 1700              	.LVL189:
 1701              	.L86:
3632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback =  TIM_DMACaptureCplt;
 1702              		.loc 1 3632 0
 1703 00e8 226B     		ldr	r2, [r4, #48]
 1704 00ea 2249     		ldr	r1, .L89+8
 1705              	.LVL190:
 1706 00ec 9162     		str	r1, [r2, #40]
3635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 1707              		.loc 1 3635 0
 1708 00ee 226B     		ldr	r2, [r4, #48]
 1709 00f0 1F49     		ldr	r1, .L89+4
 1710 00f2 1163     		str	r1, [r2, #48]
3638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->DMAR, (uint32_t)Burst
 1711              		.loc 1 3638 0
 1712 00f4 2168     		ldr	r1, [r4]
 1713 00f6 4FEA162E 		lsr	lr, r6, #8
 1714 00fa 206B     		ldr	r0, [r4, #48]
 1715 00fc 4C31     		adds	r1, r1, #76
 1716 00fe 1A46     		mov	r2, r3
 1717 0100 0EF10103 		add	r3, lr, #1
 1718              	.LVL191:
 1719 0104 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1720              	.LVL192:
3640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1721              		.loc 1 3640 0
 1722 0108 20E0     		b	.L78
 1723              	.LVL193:
 1724              	.L84:
3644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferCpltCallback =  TIMEx_DMACommutationCplt;
 1725              		.loc 1 3644 0
 1726 010a 626B     		ldr	r2, [r4, #52]
 1727 010c 1A49     		ldr	r1, .L89+12
 1728              	.LVL194:
 1729 010e 9162     		str	r1, [r2, #40]
3647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_COMMUTATION]->XferErrorCallback = TIM_DMAError ;
 1730              		.loc 1 3647 0
 1731 0110 626B     		ldr	r2, [r4, #52]
 1732 0112 1749     		ldr	r1, .L89+4
 1733 0114 1163     		str	r1, [r2, #48]
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_COMMUTATION], (uint32_t)&htim->Instance->DMAR, (uint32
 1734              		.loc 1 3650 0
 1735 0116 2168     		ldr	r1, [r4]
 1736 0118 4FEA162E 		lsr	lr, r6, #8
 1737 011c 606B     		ldr	r0, [r4, #52]
 1738 011e 4C31     		adds	r1, r1, #76
 1739 0120 1A46     		mov	r2, r3
 1740 0122 0EF10103 		add	r3, lr, #1
 1741              	.LVL195:
 1742 0126 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1743              	.LVL196:
3652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
ARM GAS  /tmp/cc8lNJIB.s 			page 127


 1744              		.loc 1 3652 0
 1745 012a 0FE0     		b	.L78
 1746              	.LVL197:
 1747              	.L85:
3656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferCpltCallback = TIM_DMATriggerCplt;
 1748              		.loc 1 3656 0
 1749 012c A26B     		ldr	r2, [r4, #56]
 1750 012e 1349     		ldr	r1, .L89+16
 1751              	.LVL198:
 1752 0130 9162     		str	r1, [r2, #40]
3659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_TRIGGER]->XferErrorCallback = TIM_DMAError ;
 1753              		.loc 1 3659 0
 1754 0132 A26B     		ldr	r2, [r4, #56]
 1755 0134 0E49     		ldr	r1, .L89+4
 1756 0136 1163     		str	r1, [r2, #48]
3662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_TRIGGER], (uint32_t)&htim->Instance->DMAR, (uint32_t)B
 1757              		.loc 1 3662 0
 1758 0138 2168     		ldr	r1, [r4]
 1759 013a 4FEA162E 		lsr	lr, r6, #8
 1760 013e A06B     		ldr	r0, [r4, #56]
 1761 0140 4C31     		adds	r1, r1, #76
 1762 0142 1A46     		mov	r2, r3
 1763 0144 0EF10103 		add	r3, lr, #1
 1764              	.LVL199:
 1765 0148 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1766              	.LVL200:
 1767              	.L78:
3670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->DCR = BurstBaseAddress | BurstLength;  
 1768              		.loc 1 3670 0
 1769 014c 2368     		ldr	r3, [r4]
 1770 014e 3E43     		orrs	r6, r6, r7
 1771 0150 9E64     		str	r6, [r3, #72]
3673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_DMA(htim, BurstRequestSrc);
 1772              		.loc 1 3673 0
 1773 0152 2368     		ldr	r3, [r4]
 1774 0154 DA68     		ldr	r2, [r3, #12]
 1775 0156 1543     		orrs	r5, r5, r2
 1776              	.LVL201:
 1777 0158 DD60     		str	r5, [r3, #12]
3675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 1778              		.loc 1 3675 0
 1779 015a 0123     		movs	r3, #1
 1780 015c 84F83D30 		strb	r3, [r4, #61]
3678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 1781              		.loc 1 3678 0
 1782 0160 0020     		movs	r0, #0
 1783 0162 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1784              	.LVL202:
 1785              	.L87:
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 1786              		.loc 1 3566 0
 1787 0164 0220     		movs	r0, #2
 1788 0166 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1789              	.LVL203:
 1790              	.L88:
3572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 1791              		.loc 1 3572 0
ARM GAS  /tmp/cc8lNJIB.s 			page 128


 1792 0168 0120     		movs	r0, #1
3679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1793              		.loc 1 3679 0
 1794 016a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1795              	.LVL204:
 1796              	.L90:
 1797              		.align	2
 1798              	.L89:
 1799 016c 00000000 		.word	TIM_DMAPeriodElapsedCplt
 1800 0170 00000000 		.word	TIM_DMAError
 1801 0174 00000000 		.word	TIM_DMACaptureCplt
 1802 0178 00000000 		.word	TIMEx_DMACommutationCplt
 1803 017c 00000000 		.word	TIM_DMATriggerCplt
 1804              		.cfi_endproc
 1805              	.LFE188:
 1807              		.section	.text.HAL_TIM_DMABurst_ReadStop,"ax",%progbits
 1808              		.align	2
 1809              		.global	HAL_TIM_DMABurst_ReadStop
 1810              		.thumb
 1811              		.thumb_func
 1813              	HAL_TIM_DMABurst_ReadStop:
 1814              	.LFB189:
3688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1815              		.loc 1 3688 0
 1816              		.cfi_startproc
 1817              		@ args = 0, pretend = 0, frame = 0
 1818              		@ frame_needed = 0, uses_anonymous_args = 0
 1819              	.LVL205:
 1820 0000 38B5     		push	{r3, r4, r5, lr}
 1821              	.LCFI15:
 1822              		.cfi_def_cfa_offset 16
 1823              		.cfi_offset 3, -16
 1824              		.cfi_offset 4, -12
 1825              		.cfi_offset 5, -8
 1826              		.cfi_offset 14, -4
 1827 0002 0546     		mov	r5, r0
 1828 0004 0C46     		mov	r4, r1
3693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch(BurstRequestSrc)
 1829              		.loc 1 3693 0
 1830 0006 B1F5006F 		cmp	r1, #2048
 1831 000a 20D0     		beq	.L93
 1832 000c 09D8     		bhi	.L94
 1833 000e B1F5007F 		cmp	r1, #512
 1834 0012 14D0     		beq	.L95
 1835 0014 B1F5806F 		cmp	r1, #1024
 1836 0018 15D0     		beq	.L96
 1837 001a B1F5807F 		cmp	r1, #256
 1838 001e 25D1     		bne	.L92
 1839 0020 09E0     		b	.L97
 1840              	.L94:
 1841 0022 B1F5005F 		cmp	r1, #8192
 1842 0026 1AD0     		beq	.L98
 1843 0028 B1F5804F 		cmp	r1, #16384
 1844 002c 1BD0     		beq	.L99
 1845 002e B1F5805F 		cmp	r1, #4096
 1846 0032 1BD1     		bne	.L92
 1847 0034 0FE0     		b	.L100
ARM GAS  /tmp/cc8lNJIB.s 			page 129


 1848              	.L97:
3697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_UPDATE]); 
 1849              		.loc 1 3697 0
 1850 0036 006A     		ldr	r0, [r0, #32]
 1851              	.LVL206:
 1852 0038 FFF7FEFF 		bl	HAL_DMA_Abort
 1853              	.LVL207:
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1854              		.loc 1 3699 0
 1855 003c 16E0     		b	.L92
 1856              	.LVL208:
 1857              	.L95:
3702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC1]);     
 1858              		.loc 1 3702 0
 1859 003e 406A     		ldr	r0, [r0, #36]
 1860              	.LVL209:
 1861 0040 FFF7FEFF 		bl	HAL_DMA_Abort
 1862              	.LVL210:
3704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1863              		.loc 1 3704 0
 1864 0044 12E0     		b	.L92
 1865              	.LVL211:
 1866              	.L96:
3707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC2]);     
 1867              		.loc 1 3707 0
 1868 0046 806A     		ldr	r0, [r0, #40]
 1869              	.LVL212:
 1870 0048 FFF7FEFF 		bl	HAL_DMA_Abort
 1871              	.LVL213:
3709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1872              		.loc 1 3709 0
 1873 004c 0EE0     		b	.L92
 1874              	.LVL214:
 1875              	.L93:
3712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC3]);     
 1876              		.loc 1 3712 0
 1877 004e C06A     		ldr	r0, [r0, #44]
 1878              	.LVL215:
 1879 0050 FFF7FEFF 		bl	HAL_DMA_Abort
 1880              	.LVL216:
3714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1881              		.loc 1 3714 0
 1882 0054 0AE0     		b	.L92
 1883              	.LVL217:
 1884              	.L100:
3717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_CC4]);     
 1885              		.loc 1 3717 0
 1886 0056 006B     		ldr	r0, [r0, #48]
 1887              	.LVL218:
 1888 0058 FFF7FEFF 		bl	HAL_DMA_Abort
 1889              	.LVL219:
3719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1890              		.loc 1 3719 0
 1891 005c 06E0     		b	.L92
 1892              	.LVL220:
 1893              	.L98:
3722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_COMMUTATION]);     
ARM GAS  /tmp/cc8lNJIB.s 			page 130


 1894              		.loc 1 3722 0
 1895 005e 406B     		ldr	r0, [r0, #52]
 1896              	.LVL221:
 1897 0060 FFF7FEFF 		bl	HAL_DMA_Abort
 1898              	.LVL222:
3724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 1899              		.loc 1 3724 0
 1900 0064 02E0     		b	.L92
 1901              	.LVL223:
 1902              	.L99:
3727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Abort(htim->hdma[TIM_DMA_ID_TRIGGER]);     
 1903              		.loc 1 3727 0
 1904 0066 806B     		ldr	r0, [r0, #56]
 1905              	.LVL224:
 1906 0068 FFF7FEFF 		bl	HAL_DMA_Abort
 1907              	.LVL225:
 1908              	.L92:
3735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, BurstRequestSrc);
 1909              		.loc 1 3735 0
 1910 006c 2B68     		ldr	r3, [r5]
 1911 006e DA68     		ldr	r2, [r3, #12]
 1912 0070 22EA0404 		bic	r4, r2, r4
 1913              	.LVL226:
 1914 0074 DC60     		str	r4, [r3, #12]
3739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1915              		.loc 1 3739 0
 1916 0076 0020     		movs	r0, #0
 1917 0078 38BD     		pop	{r3, r4, r5, pc}
 1918              		.cfi_endproc
 1919              	.LFE189:
 1921 007a 00BF     		.section	.text.HAL_TIM_GenerateEvent,"ax",%progbits
 1922              		.align	2
 1923              		.global	HAL_TIM_GenerateEvent
 1924              		.thumb
 1925              		.thumb_func
 1927              	HAL_TIM_GenerateEvent:
 1928              	.LFB190:
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1929              		.loc 1 3761 0
 1930              		.cfi_startproc
 1931              		@ args = 0, pretend = 0, frame = 0
 1932              		@ frame_needed = 0, uses_anonymous_args = 0
 1933              		@ link register save eliminated.
 1934              	.LVL227:
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 1935              		.loc 1 3767 0
 1936 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 1937 0004 012B     		cmp	r3, #1
 1938 0006 0CD0     		beq	.L103
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 1939              		.loc 1 3770 0 discriminator 2
 1940 0008 0223     		movs	r3, #2
 1941 000a 80F83D30 		strb	r3, [r0, #61]
3773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->EGR = EventSource;
 1942              		.loc 1 3773 0 discriminator 2
 1943 000e 0368     		ldr	r3, [r0]
 1944 0010 5961     		str	r1, [r3, #20]
ARM GAS  /tmp/cc8lNJIB.s 			page 131


3776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 1945              		.loc 1 3776 0 discriminator 2
 1946 0012 0123     		movs	r3, #1
 1947 0014 80F83D30 		strb	r3, [r0, #61]
3778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 1948              		.loc 1 3778 0 discriminator 2
 1949 0018 0023     		movs	r3, #0
 1950 001a 80F83C30 		strb	r3, [r0, #60]
3781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
 1951              		.loc 1 3781 0 discriminator 2
 1952 001e 1846     		mov	r0, r3
 1953              	.LVL228:
 1954 0020 7047     		bx	lr
 1955              	.LVL229:
 1956              	.L103:
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 1957              		.loc 1 3767 0
 1958 0022 0220     		movs	r0, #2
 1959              	.LVL230:
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1960              		.loc 1 3782 0
 1961 0024 7047     		bx	lr
 1962              		.cfi_endproc
 1963              	.LFE190:
 1965 0026 00BF     		.section	.text.HAL_TIM_ConfigTI1Input,"ax",%progbits
 1966              		.align	2
 1967              		.global	HAL_TIM_ConfigTI1Input
 1968              		.thumb
 1969              		.thumb_func
 1971              	HAL_TIM_ConfigTI1Input:
 1972              	.LFB193:
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 1973              		.loc 1 4076 0
 1974              		.cfi_startproc
 1975              		@ args = 0, pretend = 0, frame = 0
 1976              		@ frame_needed = 0, uses_anonymous_args = 0
 1977              		@ link register save eliminated.
 1978              	.LVL231:
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 = htim->Instance->CR2;
 1979              		.loc 1 4084 0
 1980 0000 0368     		ldr	r3, [r0]
 1981 0002 5A68     		ldr	r2, [r3, #4]
 1982              	.LVL232:
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 &= ~TIM_CR2_TI1S;
 1983              		.loc 1 4087 0
 1984 0004 22F08002 		bic	r2, r2, #128
 1985              	.LVL233:
4090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 |= TI1_Selection;
 1986              		.loc 1 4090 0
 1987 0008 1143     		orrs	r1, r1, r2
 1988              	.LVL234:
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CR2 = tmpcr2;
 1989              		.loc 1 4093 0
 1990 000a 5960     		str	r1, [r3, #4]
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 1991              		.loc 1 4096 0
 1992 000c 0020     		movs	r0, #0
ARM GAS  /tmp/cc8lNJIB.s 			page 132


 1993              	.LVL235:
 1994 000e 7047     		bx	lr
 1995              		.cfi_endproc
 1996              	.LFE193:
 1998              		.section	.text.HAL_TIM_ReadCapturedValue,"ax",%progbits
 1999              		.align	2
 2000              		.global	HAL_TIM_ReadCapturedValue
 2001              		.thumb
 2002              		.thumb_func
 2004              	HAL_TIM_ReadCapturedValue:
 2005              	.LFB196:
4181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2006              		.loc 1 4181 0
 2007              		.cfi_startproc
 2008              		@ args = 0, pretend = 0, frame = 0
 2009              		@ frame_needed = 0, uses_anonymous_args = 0
 2010              		@ link register save eliminated.
 2011              	.LVL236:
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 2012              		.loc 1 4184 0
 2013 0000 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 2014 0004 012B     		cmp	r3, #1
 2015 0006 1FD0     		beq	.L113
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 2016              		.loc 1 4184 0 is_stmt 0 discriminator 2
 2017 0008 0123     		movs	r3, #1
 2018 000a 80F83C30 		strb	r3, [r0, #60]
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 2019              		.loc 1 4186 0 is_stmt 1 discriminator 2
 2020 000e 0C29     		cmp	r1, #12
 2021 0010 14D8     		bhi	.L114
 2022 0012 DFE801F0 		tbb	[pc, r1]
 2023              	.L109:
 2024 0016 07       		.byte	(.L108-.L109)/2
 2025 0017 13       		.byte	(.L114-.L109)/2
 2026 0018 13       		.byte	(.L114-.L109)/2
 2027 0019 13       		.byte	(.L114-.L109)/2
 2028 001a 0A       		.byte	(.L110-.L109)/2
 2029 001b 13       		.byte	(.L114-.L109)/2
 2030 001c 13       		.byte	(.L114-.L109)/2
 2031 001d 13       		.byte	(.L114-.L109)/2
 2032 001e 0D       		.byte	(.L111-.L109)/2
 2033 001f 13       		.byte	(.L114-.L109)/2
 2034 0020 13       		.byte	(.L114-.L109)/2
 2035 0021 13       		.byte	(.L114-.L109)/2
 2036 0022 10       		.byte	(.L112-.L109)/2
 2037 0023 00       		.p2align 1
 2038              	.L108:
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =  htim->Instance->CCR1;
 2039              		.loc 1 4194 0
 2040 0024 0368     		ldr	r3, [r0]
 2041 0026 5A6B     		ldr	r2, [r3, #52]
 2042              	.LVL237:
4196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
 2043              		.loc 1 4196 0
 2044 0028 09E0     		b	.L107
 2045              	.LVL238:
ARM GAS  /tmp/cc8lNJIB.s 			page 133


 2046              	.L110:
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR2;
 2047              		.loc 1 4204 0
 2048 002a 0368     		ldr	r3, [r0]
 2049 002c 9A6B     		ldr	r2, [r3, #56]
 2050              	.LVL239:
4206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
 2051              		.loc 1 4206 0
 2052 002e 06E0     		b	.L107
 2053              	.LVL240:
 2054              	.L111:
4215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR3;
 2055              		.loc 1 4215 0
 2056 0030 0368     		ldr	r3, [r0]
 2057 0032 DA6B     		ldr	r2, [r3, #60]
 2058              	.LVL241:
4217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
 2059              		.loc 1 4217 0
 2060 0034 03E0     		b	.L107
 2061              	.LVL242:
 2062              	.L112:
4226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpreg =   htim->Instance->CCR4;
 2063              		.loc 1 4226 0
 2064 0036 0368     		ldr	r3, [r0]
 2065 0038 1A6C     		ldr	r2, [r3, #64]
 2066              	.LVL243:
4228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
 2067              		.loc 1 4228 0
 2068 003a 00E0     		b	.L107
 2069              	.LVL244:
 2070              	.L114:
4182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpreg = 0U;
 2071              		.loc 1 4182 0
 2072 003c 0022     		movs	r2, #0
 2073              	.LVL245:
 2074              	.L107:
4235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);  
 2075              		.loc 1 4235 0
 2076 003e 0023     		movs	r3, #0
 2077 0040 80F83C30 		strb	r3, [r0, #60]
4236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return tmpreg;
 2078              		.loc 1 4236 0
 2079 0044 1046     		mov	r0, r2
 2080              	.LVL246:
 2081 0046 7047     		bx	lr
 2082              	.LVL247:
 2083              	.L113:
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 2084              		.loc 1 4184 0
 2085 0048 0220     		movs	r0, #2
 2086              	.LVL248:
4237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2087              		.loc 1 4237 0
 2088 004a 7047     		bx	lr
 2089              		.cfi_endproc
 2090              	.LFE196:
 2092              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
ARM GAS  /tmp/cc8lNJIB.s 			page 134


 2093              		.align	2
 2094              		.weak	HAL_TIM_PeriodElapsedCallback
 2095              		.thumb
 2096              		.thumb_func
 2098              	HAL_TIM_PeriodElapsedCallback:
 2099              	.LFB197:
4268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2100              		.loc 1 4268 0
 2101              		.cfi_startproc
 2102              		@ args = 0, pretend = 0, frame = 0
 2103              		@ frame_needed = 0, uses_anonymous_args = 0
 2104              		@ link register save eliminated.
 2105              	.LVL249:
 2106 0000 7047     		bx	lr
 2107              		.cfi_endproc
 2108              	.LFE197:
 2110 0002 00BF     		.section	.text.TIM_DMAPeriodElapsedCplt,"ax",%progbits
 2111              		.align	2
 2112              		.thumb
 2113              		.thumb_func
 2115              	TIM_DMAPeriodElapsedCplt:
 2116              	.LFB212:
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2117              		.loc 1 4527 0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 0
 2120              		@ frame_needed = 0, uses_anonymous_args = 0
 2121              	.LVL250:
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2122              		.loc 1 4527 0
 2123 0000 08B5     		push	{r3, lr}
 2124              	.LCFI16:
 2125              		.cfi_def_cfa_offset 8
 2126              		.cfi_offset 3, -8
 2127              		.cfi_offset 14, -4
4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2128              		.loc 1 4528 0
 2129 0002 406A     		ldr	r0, [r0, #36]
 2130              	.LVL251:
4530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 2131              		.loc 1 4530 0
 2132 0004 0123     		movs	r3, #1
 2133 0006 80F83D30 		strb	r3, [r0, #61]
4532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_PeriodElapsedCallback(htim);
 2134              		.loc 1 4532 0
 2135 000a FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback
 2136              	.LVL252:
 2137 000e 08BD     		pop	{r3, pc}
 2138              		.cfi_endproc
 2139              	.LFE212:
 2141              		.section	.text.HAL_TIM_OC_DelayElapsedCallback,"ax",%progbits
 2142              		.align	2
 2143              		.weak	HAL_TIM_OC_DelayElapsedCallback
 2144              		.thumb
 2145              		.thumb_func
 2147              	HAL_TIM_OC_DelayElapsedCallback:
 2148              	.LFB198:
ARM GAS  /tmp/cc8lNJIB.s 			page 135


4283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2149              		.loc 1 4283 0
 2150              		.cfi_startproc
 2151              		@ args = 0, pretend = 0, frame = 0
 2152              		@ frame_needed = 0, uses_anonymous_args = 0
 2153              		@ link register save eliminated.
 2154              	.LVL253:
 2155 0000 7047     		bx	lr
 2156              		.cfi_endproc
 2157              	.LFE198:
 2159 0002 00BF     		.section	.text.HAL_TIM_IC_CaptureCallback,"ax",%progbits
 2160              		.align	2
 2161              		.weak	HAL_TIM_IC_CaptureCallback
 2162              		.thumb
 2163              		.thumb_func
 2165              	HAL_TIM_IC_CaptureCallback:
 2166              	.LFB199:
4297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2167              		.loc 1 4297 0
 2168              		.cfi_startproc
 2169              		@ args = 0, pretend = 0, frame = 0
 2170              		@ frame_needed = 0, uses_anonymous_args = 0
 2171              		@ link register save eliminated.
 2172              	.LVL254:
 2173 0000 7047     		bx	lr
 2174              		.cfi_endproc
 2175              	.LFE199:
 2177 0002 00BF     		.section	.text.TIM_DMACaptureCplt,"ax",%progbits
 2178              		.align	2
 2179              		.global	TIM_DMACaptureCplt
 2180              		.thumb
 2181              		.thumb_func
 2183              	TIM_DMACaptureCplt:
 2184              	.LFB211:
4494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2185              		.loc 1 4494 0
 2186              		.cfi_startproc
 2187              		@ args = 0, pretend = 0, frame = 0
 2188              		@ frame_needed = 0, uses_anonymous_args = 0
 2189              	.LVL255:
4494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2190              		.loc 1 4494 0
 2191 0000 10B5     		push	{r4, lr}
 2192              	.LCFI17:
 2193              		.cfi_def_cfa_offset 8
 2194              		.cfi_offset 4, -8
 2195              		.cfi_offset 14, -4
4495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2196              		.loc 1 4495 0
 2197 0002 446A     		ldr	r4, [r0, #36]
 2198              	.LVL256:
4497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 2199              		.loc 1 4497 0
 2200 0004 0123     		movs	r3, #1
 2201 0006 84F83D30 		strb	r3, [r4, #61]
4499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 2202              		.loc 1 4499 0
ARM GAS  /tmp/cc8lNJIB.s 			page 136


 2203 000a 636A     		ldr	r3, [r4, #36]
 2204 000c 8342     		cmp	r3, r0
 2205 000e 02D1     		bne	.L120
4501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 2206              		.loc 1 4501 0
 2207 0010 0123     		movs	r3, #1
 2208 0012 2377     		strb	r3, [r4, #28]
 2209 0014 10E0     		b	.L121
 2210              	.L120:
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 2211              		.loc 1 4503 0
 2212 0016 A36A     		ldr	r3, [r4, #40]
 2213 0018 8342     		cmp	r3, r0
 2214 001a 02D1     		bne	.L122
4505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 2215              		.loc 1 4505 0
 2216 001c 0223     		movs	r3, #2
 2217 001e 2377     		strb	r3, [r4, #28]
 2218 0020 0AE0     		b	.L121
 2219              	.L122:
4507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 2220              		.loc 1 4507 0
 2221 0022 E36A     		ldr	r3, [r4, #44]
 2222 0024 8342     		cmp	r3, r0
 2223 0026 02D1     		bne	.L123
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 2224              		.loc 1 4509 0
 2225 0028 0423     		movs	r3, #4
 2226 002a 2377     		strb	r3, [r4, #28]
 2227 002c 04E0     		b	.L121
 2228              	.L123:
4511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 2229              		.loc 1 4511 0
 2230 002e 236B     		ldr	r3, [r4, #48]
 2231 0030 8342     		cmp	r3, r0
 2232 0032 01D1     		bne	.L121
4513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 2233              		.loc 1 4513 0
 2234 0034 0823     		movs	r3, #8
 2235 0036 2377     		strb	r3, [r4, #28]
 2236              	.L121:
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_IC_CaptureCallback(htim); 
 2237              		.loc 1 4516 0
 2238 0038 2046     		mov	r0, r4
 2239              	.LVL257:
 2240 003a FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 2241              	.LVL258:
4518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2242              		.loc 1 4518 0
 2243 003e 0023     		movs	r3, #0
 2244 0040 2377     		strb	r3, [r4, #28]
 2245 0042 10BD     		pop	{r4, pc}
 2246              		.cfi_endproc
 2247              	.LFE211:
 2249              		.section	.text.HAL_TIM_PWM_PulseFinishedCallback,"ax",%progbits
 2250              		.align	2
 2251              		.weak	HAL_TIM_PWM_PulseFinishedCallback
ARM GAS  /tmp/cc8lNJIB.s 			page 137


 2252              		.thumb
 2253              		.thumb_func
 2255              	HAL_TIM_PWM_PulseFinishedCallback:
 2256              	.LFB200:
4312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2257              		.loc 1 4312 0
 2258              		.cfi_startproc
 2259              		@ args = 0, pretend = 0, frame = 0
 2260              		@ frame_needed = 0, uses_anonymous_args = 0
 2261              		@ link register save eliminated.
 2262              	.LVL259:
 2263 0000 7047     		bx	lr
 2264              		.cfi_endproc
 2265              	.LFE200:
 2267 0002 00BF     		.section	.text.TIM_DMADelayPulseCplt,"ax",%progbits
 2268              		.align	2
 2269              		.global	TIM_DMADelayPulseCplt
 2270              		.thumb
 2271              		.thumb_func
 2273              	TIM_DMADelayPulseCplt:
 2274              	.LFB210:
4462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2275              		.loc 1 4462 0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 0
 2278              		@ frame_needed = 0, uses_anonymous_args = 0
 2279              	.LVL260:
4462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2280              		.loc 1 4462 0
 2281 0000 10B5     		push	{r4, lr}
 2282              	.LCFI18:
 2283              		.cfi_def_cfa_offset 8
 2284              		.cfi_offset 4, -8
 2285              		.cfi_offset 14, -4
4463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2286              		.loc 1 4463 0
 2287 0002 446A     		ldr	r4, [r0, #36]
 2288              	.LVL261:
4465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY; 
 2289              		.loc 1 4465 0
 2290 0004 0123     		movs	r3, #1
 2291 0006 84F83D30 		strb	r3, [r4, #61]
4467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (hdma == htim->hdma[TIM_DMA_ID_CC1])
 2292              		.loc 1 4467 0
 2293 000a 636A     		ldr	r3, [r4, #36]
 2294 000c 8342     		cmp	r3, r0
 2295 000e 02D1     		bne	.L126
4469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 2296              		.loc 1 4469 0
 2297 0010 0123     		movs	r3, #1
 2298 0012 2377     		strb	r3, [r4, #28]
 2299 0014 10E0     		b	.L127
 2300              	.L126:
4471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC2])
 2301              		.loc 1 4471 0
 2302 0016 A36A     		ldr	r3, [r4, #40]
 2303 0018 8342     		cmp	r3, r0
ARM GAS  /tmp/cc8lNJIB.s 			page 138


 2304 001a 02D1     		bne	.L128
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 2305              		.loc 1 4473 0
 2306 001c 0223     		movs	r3, #2
 2307 001e 2377     		strb	r3, [r4, #28]
 2308 0020 0AE0     		b	.L127
 2309              	.L128:
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC3])
 2310              		.loc 1 4475 0
 2311 0022 E36A     		ldr	r3, [r4, #44]
 2312 0024 8342     		cmp	r3, r0
 2313 0026 02D1     		bne	.L129
4477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 2314              		.loc 1 4477 0
 2315 0028 0423     		movs	r3, #4
 2316 002a 2377     		strb	r3, [r4, #28]
 2317 002c 04E0     		b	.L127
 2318              	.L129:
4479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (hdma == htim->hdma[TIM_DMA_ID_CC4])
 2319              		.loc 1 4479 0
 2320 002e 236B     		ldr	r3, [r4, #48]
 2321 0030 8342     		cmp	r3, r0
 2322 0032 01D1     		bne	.L127
4481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 2323              		.loc 1 4481 0
 2324 0034 0823     		movs	r3, #8
 2325 0036 2377     		strb	r3, [r4, #28]
 2326              	.L127:
4484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_PWM_PulseFinishedCallback(htim);
 2327              		.loc 1 4484 0
 2328 0038 2046     		mov	r0, r4
 2329              	.LVL262:
 2330 003a FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 2331              	.LVL263:
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2332              		.loc 1 4486 0
 2333 003e 0023     		movs	r3, #0
 2334 0040 2377     		strb	r3, [r4, #28]
 2335 0042 10BD     		pop	{r4, pc}
 2336              		.cfi_endproc
 2337              	.LFE210:
 2339              		.section	.text.HAL_TIM_TriggerCallback,"ax",%progbits
 2340              		.align	2
 2341              		.weak	HAL_TIM_TriggerCallback
 2342              		.thumb
 2343              		.thumb_func
 2345              	HAL_TIM_TriggerCallback:
 2346              	.LFB201:
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2347              		.loc 1 4327 0
 2348              		.cfi_startproc
 2349              		@ args = 0, pretend = 0, frame = 0
 2350              		@ frame_needed = 0, uses_anonymous_args = 0
 2351              		@ link register save eliminated.
 2352              	.LVL264:
 2353 0000 7047     		bx	lr
 2354              		.cfi_endproc
ARM GAS  /tmp/cc8lNJIB.s 			page 139


 2355              	.LFE201:
 2357 0002 00BF     		.section	.text.HAL_TIM_IRQHandler,"ax",%progbits
 2358              		.align	2
 2359              		.global	HAL_TIM_IRQHandler
 2360              		.thumb
 2361              		.thumb_func
 2363              	HAL_TIM_IRQHandler:
 2364              	.LFB181:
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2365              		.loc 1 2769 0
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 0
 2368              		@ frame_needed = 0, uses_anonymous_args = 0
 2369              	.LVL265:
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2370              		.loc 1 2769 0
 2371 0000 10B5     		push	{r4, lr}
 2372              	.LCFI19:
 2373              		.cfi_def_cfa_offset 8
 2374              		.cfi_offset 4, -8
 2375              		.cfi_offset 14, -4
 2376 0002 0446     		mov	r4, r0
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 2377              		.loc 1 2771 0
 2378 0004 0368     		ldr	r3, [r0]
 2379 0006 1A69     		ldr	r2, [r3, #16]
 2380 0008 12F0020F 		tst	r2, #2
 2381 000c 17D0     		beq	.L132
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) !=RESET)
 2382              		.loc 1 2773 0
 2383 000e DA68     		ldr	r2, [r3, #12]
 2384 0010 12F0020F 		tst	r2, #2
 2385 0014 13D0     		beq	.L132
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 2386              		.loc 1 2776 0
 2387 0016 6FF00202 		mvn	r2, #2
 2388 001a 1A61     		str	r2, [r3, #16]
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 2389              		.loc 1 2777 0
 2390 001c 0123     		movs	r3, #1
 2391 001e 0377     		strb	r3, [r0, #28]
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         if((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 2392              		.loc 1 2780 0
 2393 0020 0368     		ldr	r3, [r0]
 2394 0022 9B69     		ldr	r3, [r3, #24]
 2395 0024 13F0030F 		tst	r3, #3
 2396 0028 02D0     		beq	.L133
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****           HAL_TIM_IC_CaptureCallback(htim);
 2397              		.loc 1 2782 0
 2398 002a FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 2399              	.LVL266:
 2400 002e 04E0     		b	.L134
 2401              	.LVL267:
 2402              	.L133:
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****           HAL_TIM_OC_DelayElapsedCallback(htim);
 2403              		.loc 1 2787 0
 2404 0030 FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
ARM GAS  /tmp/cc8lNJIB.s 			page 140


 2405              	.LVL268:
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****           HAL_TIM_PWM_PulseFinishedCallback(htim);
 2406              		.loc 1 2788 0
 2407 0034 2046     		mov	r0, r4
 2408 0036 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 2409              	.LVL269:
 2410              	.L134:
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2411              		.loc 1 2790 0
 2412 003a 0023     		movs	r3, #0
 2413 003c 2377     		strb	r3, [r4, #28]
 2414              	.L132:
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 2415              		.loc 1 2795 0
 2416 003e 2368     		ldr	r3, [r4]
 2417 0040 1A69     		ldr	r2, [r3, #16]
 2418 0042 12F0040F 		tst	r2, #4
 2419 0046 19D0     		beq	.L135
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) !=RESET)
 2420              		.loc 1 2797 0
 2421 0048 DA68     		ldr	r2, [r3, #12]
 2422 004a 12F0040F 		tst	r2, #4
 2423 004e 15D0     		beq	.L135
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 2424              		.loc 1 2799 0
 2425 0050 6FF00402 		mvn	r2, #4
 2426 0054 1A61     		str	r2, [r3, #16]
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 2427              		.loc 1 2800 0
 2428 0056 0223     		movs	r3, #2
 2429 0058 2377     		strb	r3, [r4, #28]
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 2430              		.loc 1 2802 0
 2431 005a 2368     		ldr	r3, [r4]
 2432 005c 9B69     		ldr	r3, [r3, #24]
 2433 005e 13F4407F 		tst	r3, #768
 2434 0062 03D0     		beq	.L136
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 2435              		.loc 1 2804 0
 2436 0064 2046     		mov	r0, r4
 2437 0066 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 2438              	.LVL270:
 2439 006a 05E0     		b	.L137
 2440              	.L136:
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 2441              		.loc 1 2809 0
 2442 006c 2046     		mov	r0, r4
 2443 006e FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
 2444              	.LVL271:
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 2445              		.loc 1 2810 0
 2446 0072 2046     		mov	r0, r4
 2447 0074 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 2448              	.LVL272:
 2449              	.L137:
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2450              		.loc 1 2812 0
ARM GAS  /tmp/cc8lNJIB.s 			page 141


 2451 0078 0023     		movs	r3, #0
 2452 007a 2377     		strb	r3, [r4, #28]
 2453              	.L135:
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 2454              		.loc 1 2816 0
 2455 007c 2368     		ldr	r3, [r4]
 2456 007e 1A69     		ldr	r2, [r3, #16]
 2457 0080 12F0080F 		tst	r2, #8
 2458 0084 19D0     		beq	.L138
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) !=RESET)
 2459              		.loc 1 2818 0
 2460 0086 DA68     		ldr	r2, [r3, #12]
 2461 0088 12F0080F 		tst	r2, #8
 2462 008c 15D0     		beq	.L138
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 2463              		.loc 1 2820 0
 2464 008e 6FF00802 		mvn	r2, #8
 2465 0092 1A61     		str	r2, [r3, #16]
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 2466              		.loc 1 2821 0
 2467 0094 0423     		movs	r3, #4
 2468 0096 2377     		strb	r3, [r4, #28]
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 2469              		.loc 1 2823 0
 2470 0098 2368     		ldr	r3, [r4]
 2471 009a DB69     		ldr	r3, [r3, #28]
 2472 009c 13F0030F 		tst	r3, #3
 2473 00a0 03D0     		beq	.L139
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 2474              		.loc 1 2825 0
 2475 00a2 2046     		mov	r0, r4
 2476 00a4 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 2477              	.LVL273:
 2478 00a8 05E0     		b	.L140
 2479              	.L139:
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 2480              		.loc 1 2830 0
 2481 00aa 2046     		mov	r0, r4
 2482 00ac FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
 2483              	.LVL274:
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim); 
 2484              		.loc 1 2831 0
 2485 00b0 2046     		mov	r0, r4
 2486 00b2 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 2487              	.LVL275:
 2488              	.L140:
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2489              		.loc 1 2833 0
 2490 00b6 0023     		movs	r3, #0
 2491 00b8 2377     		strb	r3, [r4, #28]
 2492              	.L138:
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 2493              		.loc 1 2837 0
 2494 00ba 2368     		ldr	r3, [r4]
 2495 00bc 1A69     		ldr	r2, [r3, #16]
 2496 00be 12F0100F 		tst	r2, #16
 2497 00c2 19D0     		beq	.L141
ARM GAS  /tmp/cc8lNJIB.s 			page 142


2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) !=RESET)
 2498              		.loc 1 2839 0
 2499 00c4 DA68     		ldr	r2, [r3, #12]
 2500 00c6 12F0100F 		tst	r2, #16
 2501 00ca 15D0     		beq	.L141
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 2502              		.loc 1 2841 0
 2503 00cc 6FF01002 		mvn	r2, #16
 2504 00d0 1A61     		str	r2, [r3, #16]
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 2505              		.loc 1 2842 0
 2506 00d2 0823     		movs	r3, #8
 2507 00d4 2377     		strb	r3, [r4, #28]
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 2508              		.loc 1 2844 0
 2509 00d6 2368     		ldr	r3, [r4]
 2510 00d8 DB69     		ldr	r3, [r3, #28]
 2511 00da 13F4407F 		tst	r3, #768
 2512 00de 03D0     		beq	.L142
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_IC_CaptureCallback(htim);
 2513              		.loc 1 2846 0
 2514 00e0 2046     		mov	r0, r4
 2515 00e2 FFF7FEFF 		bl	HAL_TIM_IC_CaptureCallback
 2516              	.LVL276:
 2517 00e6 05E0     		b	.L143
 2518              	.L142:
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_OC_DelayElapsedCallback(htim);
 2519              		.loc 1 2851 0
 2520 00e8 2046     		mov	r0, r4
 2521 00ea FFF7FEFF 		bl	HAL_TIM_OC_DelayElapsedCallback
 2522              	.LVL277:
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         HAL_TIM_PWM_PulseFinishedCallback(htim);
 2523              		.loc 1 2852 0
 2524 00ee 2046     		mov	r0, r4
 2525 00f0 FFF7FEFF 		bl	HAL_TIM_PWM_PulseFinishedCallback
 2526              	.LVL278:
 2527              	.L143:
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 2528              		.loc 1 2854 0
 2529 00f4 0023     		movs	r3, #0
 2530 00f6 2377     		strb	r3, [r4, #28]
 2531              	.L141:
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 2532              		.loc 1 2858 0
 2533 00f8 2368     		ldr	r3, [r4]
 2534 00fa 1A69     		ldr	r2, [r3, #16]
 2535 00fc 12F0010F 		tst	r2, #1
 2536 0100 09D0     		beq	.L144
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) !=RESET)
 2537              		.loc 1 2860 0
 2538 0102 DA68     		ldr	r2, [r3, #12]
 2539 0104 12F0010F 		tst	r2, #1
 2540 0108 05D0     		beq	.L144
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 2541              		.loc 1 2862 0
 2542 010a 6FF00102 		mvn	r2, #1
 2543 010e 1A61     		str	r2, [r3, #16]
ARM GAS  /tmp/cc8lNJIB.s 			page 143


2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIM_PeriodElapsedCallback(htim);
 2544              		.loc 1 2863 0
 2545 0110 2046     		mov	r0, r4
 2546 0112 FFF7FEFF 		bl	HAL_TIM_PeriodElapsedCallback
 2547              	.LVL279:
 2548              	.L144:
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_BREAK) != RESET)
 2549              		.loc 1 2867 0
 2550 0116 2368     		ldr	r3, [r4]
 2551 0118 1A69     		ldr	r2, [r3, #16]
 2552 011a 12F0800F 		tst	r2, #128
 2553 011e 09D0     		beq	.L145
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_BREAK) !=RESET)
 2554              		.loc 1 2869 0
 2555 0120 DA68     		ldr	r2, [r3, #12]
 2556 0122 12F0800F 		tst	r2, #128
 2557 0126 05D0     		beq	.L145
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_BREAK);
 2558              		.loc 1 2871 0
 2559 0128 6FF08002 		mvn	r2, #128
 2560 012c 1A61     		str	r2, [r3, #16]
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIMEx_BreakCallback(htim);
 2561              		.loc 1 2872 0
 2562 012e 2046     		mov	r0, r4
 2563 0130 FFF7FEFF 		bl	HAL_TIMEx_BreakCallback
 2564              	.LVL280:
 2565              	.L145:
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 2566              		.loc 1 2876 0
 2567 0134 2368     		ldr	r3, [r4]
 2568 0136 1A69     		ldr	r2, [r3, #16]
 2569 0138 12F0400F 		tst	r2, #64
 2570 013c 09D0     		beq	.L146
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) !=RESET)
 2571              		.loc 1 2878 0
 2572 013e DA68     		ldr	r2, [r3, #12]
 2573 0140 12F0400F 		tst	r2, #64
 2574 0144 05D0     		beq	.L146
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 2575              		.loc 1 2880 0
 2576 0146 6FF04002 		mvn	r2, #64
 2577 014a 1A61     		str	r2, [r3, #16]
2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIM_TriggerCallback(htim);
 2578              		.loc 1 2881 0
 2579 014c 2046     		mov	r0, r4
 2580 014e FFF7FEFF 		bl	HAL_TIM_TriggerCallback
 2581              	.LVL281:
 2582              	.L146:
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(__HAL_TIM_GET_FLAG(htim, TIM_FLAG_COM) != RESET)
 2583              		.loc 1 2885 0
 2584 0152 2368     		ldr	r3, [r4]
 2585 0154 1A69     		ldr	r2, [r3, #16]
 2586 0156 12F0200F 		tst	r2, #32
 2587 015a 09D0     		beq	.L131
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_COM) !=RESET)
 2588              		.loc 1 2887 0
 2589 015c DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc8lNJIB.s 			page 144


 2590 015e 12F0200F 		tst	r2, #32
 2591 0162 05D0     		beq	.L131
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_CLEAR_IT(htim, TIM_FLAG_COM);
 2592              		.loc 1 2889 0
 2593 0164 6FF02002 		mvn	r2, #32
 2594 0168 1A61     		str	r2, [r3, #16]
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_TIMEx_CommutationCallback(htim);
 2595              		.loc 1 2890 0
 2596 016a 2046     		mov	r0, r4
 2597 016c FFF7FEFF 		bl	HAL_TIMEx_CommutationCallback
 2598              	.LVL282:
 2599              	.L131:
 2600 0170 10BD     		pop	{r4, pc}
 2601              		.cfi_endproc
 2602              	.LFE181:
 2604 0172 00BF     		.section	.text.TIM_DMATriggerCplt,"ax",%progbits
 2605              		.align	2
 2606              		.thumb
 2607              		.thumb_func
 2609              	TIM_DMATriggerCplt:
 2610              	.LFB213:
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2611              		.loc 1 4541 0
 2612              		.cfi_startproc
 2613              		@ args = 0, pretend = 0, frame = 0
 2614              		@ frame_needed = 0, uses_anonymous_args = 0
 2615              	.LVL283:
 2616 0000 08B5     		push	{r3, lr}
 2617              	.LCFI20:
 2618              		.cfi_def_cfa_offset 8
 2619              		.cfi_offset 3, -8
 2620              		.cfi_offset 14, -4
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;  
 2621              		.loc 1 4542 0
 2622 0002 406A     		ldr	r0, [r0, #36]
 2623              	.LVL284:
4544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY; 
 2624              		.loc 1 4544 0
 2625 0004 0123     		movs	r3, #1
 2626 0006 80F83D30 		strb	r3, [r0, #61]
4546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_TriggerCallback(htim);
 2627              		.loc 1 4546 0
 2628 000a FFF7FEFF 		bl	HAL_TIM_TriggerCallback
 2629              	.LVL285:
 2630 000e 08BD     		pop	{r3, pc}
 2631              		.cfi_endproc
 2632              	.LFE213:
 2634              		.section	.text.HAL_TIM_ErrorCallback,"ax",%progbits
 2635              		.align	2
 2636              		.weak	HAL_TIM_ErrorCallback
 2637              		.thumb
 2638              		.thumb_func
 2640              	HAL_TIM_ErrorCallback:
 2641              	.LFB202:
4342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2642              		.loc 1 4342 0
 2643              		.cfi_startproc
ARM GAS  /tmp/cc8lNJIB.s 			page 145


 2644              		@ args = 0, pretend = 0, frame = 0
 2645              		@ frame_needed = 0, uses_anonymous_args = 0
 2646              		@ link register save eliminated.
 2647              	.LVL286:
 2648 0000 7047     		bx	lr
 2649              		.cfi_endproc
 2650              	.LFE202:
 2652 0002 00BF     		.section	.text.TIM_DMAError,"ax",%progbits
 2653              		.align	2
 2654              		.global	TIM_DMAError
 2655              		.thumb
 2656              		.thumb_func
 2658              	TIM_DMAError:
 2659              	.LFB209:
4448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2660              		.loc 1 4448 0
 2661              		.cfi_startproc
 2662              		@ args = 0, pretend = 0, frame = 0
 2663              		@ frame_needed = 0, uses_anonymous_args = 0
 2664              	.LVL287:
4448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2665              		.loc 1 4448 0
 2666 0000 08B5     		push	{r3, lr}
 2667              	.LCFI21:
 2668              		.cfi_def_cfa_offset 8
 2669              		.cfi_offset 3, -8
 2670              		.cfi_offset 14, -4
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_HandleTypeDef* htim = ( TIM_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 2671              		.loc 1 4449 0
 2672 0002 406A     		ldr	r0, [r0, #36]
 2673              	.LVL288:
4451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 2674              		.loc 1 4451 0
 2675 0004 0123     		movs	r3, #1
 2676 0006 80F83D30 		strb	r3, [r0, #61]
4453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   HAL_TIM_ErrorCallback(htim);
 2677              		.loc 1 4453 0
 2678 000a FFF7FEFF 		bl	HAL_TIM_ErrorCallback
 2679              	.LVL289:
 2680 000e 08BD     		pop	{r3, pc}
 2681              		.cfi_endproc
 2682              	.LFE209:
 2684              		.section	.text.HAL_TIM_Base_GetState,"ax",%progbits
 2685              		.align	2
 2686              		.global	HAL_TIM_Base_GetState
 2687              		.thumb
 2688              		.thumb_func
 2690              	HAL_TIM_Base_GetState:
 2691              	.LFB203:
4376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2692              		.loc 1 4376 0
 2693              		.cfi_startproc
 2694              		@ args = 0, pretend = 0, frame = 0
 2695              		@ frame_needed = 0, uses_anonymous_args = 0
 2696              		@ link register save eliminated.
 2697              	.LVL290:
4377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
ARM GAS  /tmp/cc8lNJIB.s 			page 146


 2698              		.loc 1 4377 0
 2699 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2700              	.LVL291:
4378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2701              		.loc 1 4378 0
 2702 0004 7047     		bx	lr
 2703              		.cfi_endproc
 2704              	.LFE203:
 2706 0006 00BF     		.section	.text.HAL_TIM_OC_GetState,"ax",%progbits
 2707              		.align	2
 2708              		.global	HAL_TIM_OC_GetState
 2709              		.thumb
 2710              		.thumb_func
 2712              	HAL_TIM_OC_GetState:
 2713              	.LFB204:
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2714              		.loc 1 4386 0
 2715              		.cfi_startproc
 2716              		@ args = 0, pretend = 0, frame = 0
 2717              		@ frame_needed = 0, uses_anonymous_args = 0
 2718              		@ link register save eliminated.
 2719              	.LVL292:
4387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
 2720              		.loc 1 4387 0
 2721 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2722              	.LVL293:
4388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2723              		.loc 1 4388 0
 2724 0004 7047     		bx	lr
 2725              		.cfi_endproc
 2726              	.LFE204:
 2728 0006 00BF     		.section	.text.HAL_TIM_PWM_GetState,"ax",%progbits
 2729              		.align	2
 2730              		.global	HAL_TIM_PWM_GetState
 2731              		.thumb
 2732              		.thumb_func
 2734              	HAL_TIM_PWM_GetState:
 2735              	.LFB205:
4396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2736              		.loc 1 4396 0
 2737              		.cfi_startproc
 2738              		@ args = 0, pretend = 0, frame = 0
 2739              		@ frame_needed = 0, uses_anonymous_args = 0
 2740              		@ link register save eliminated.
 2741              	.LVL294:
4397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
 2742              		.loc 1 4397 0
 2743 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2744              	.LVL295:
4398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2745              		.loc 1 4398 0
 2746 0004 7047     		bx	lr
 2747              		.cfi_endproc
 2748              	.LFE205:
 2750 0006 00BF     		.section	.text.HAL_TIM_IC_GetState,"ax",%progbits
 2751              		.align	2
 2752              		.global	HAL_TIM_IC_GetState
ARM GAS  /tmp/cc8lNJIB.s 			page 147


 2753              		.thumb
 2754              		.thumb_func
 2756              	HAL_TIM_IC_GetState:
 2757              	.LFB206:
4406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2758              		.loc 1 4406 0
 2759              		.cfi_startproc
 2760              		@ args = 0, pretend = 0, frame = 0
 2761              		@ frame_needed = 0, uses_anonymous_args = 0
 2762              		@ link register save eliminated.
 2763              	.LVL296:
4407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
 2764              		.loc 1 4407 0
 2765 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2766              	.LVL297:
4408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2767              		.loc 1 4408 0
 2768 0004 7047     		bx	lr
 2769              		.cfi_endproc
 2770              	.LFE206:
 2772 0006 00BF     		.section	.text.HAL_TIM_OnePulse_GetState,"ax",%progbits
 2773              		.align	2
 2774              		.global	HAL_TIM_OnePulse_GetState
 2775              		.thumb
 2776              		.thumb_func
 2778              	HAL_TIM_OnePulse_GetState:
 2779              	.LFB207:
4416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2780              		.loc 1 4416 0
 2781              		.cfi_startproc
 2782              		@ args = 0, pretend = 0, frame = 0
 2783              		@ frame_needed = 0, uses_anonymous_args = 0
 2784              		@ link register save eliminated.
 2785              	.LVL298:
4417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
 2786              		.loc 1 4417 0
 2787 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2788              	.LVL299:
4418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2789              		.loc 1 4418 0
 2790 0004 7047     		bx	lr
 2791              		.cfi_endproc
 2792              	.LFE207:
 2794 0006 00BF     		.section	.text.HAL_TIM_Encoder_GetState,"ax",%progbits
 2795              		.align	2
 2796              		.global	HAL_TIM_Encoder_GetState
 2797              		.thumb
 2798              		.thumb_func
 2800              	HAL_TIM_Encoder_GetState:
 2801              	.LFB208:
4426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2802              		.loc 1 4426 0
 2803              		.cfi_startproc
 2804              		@ args = 0, pretend = 0, frame = 0
 2805              		@ frame_needed = 0, uses_anonymous_args = 0
 2806              		@ link register save eliminated.
 2807              	.LVL300:
ARM GAS  /tmp/cc8lNJIB.s 			page 148


4427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return htim->State;
 2808              		.loc 1 4427 0
 2809 0000 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 2810              	.LVL301:
4428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2811              		.loc 1 4428 0
 2812 0004 7047     		bx	lr
 2813              		.cfi_endproc
 2814              	.LFE208:
 2816 0006 00BF     		.section	.text.TIM_Base_SetConfig,"ax",%progbits
 2817              		.align	2
 2818              		.global	TIM_Base_SetConfig
 2819              		.thumb
 2820              		.thumb_func
 2822              	TIM_Base_SetConfig:
 2823              	.LFB214:
4556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2824              		.loc 1 4556 0
 2825              		.cfi_startproc
 2826              		@ args = 0, pretend = 0, frame = 0
 2827              		@ frame_needed = 0, uses_anonymous_args = 0
 2828              		@ link register save eliminated.
 2829              	.LVL302:
4558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr1 = TIMx->CR1;
 2830              		.loc 1 4558 0
 2831 0000 0368     		ldr	r3, [r0]
 2832              	.LVL303:
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 2833              		.loc 1 4561 0
 2834 0002 224A     		ldr	r2, .L164
 2835 0004 9042     		cmp	r0, r2
 2836 0006 06D0     		beq	.L158
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 2837              		.loc 1 4561 0 is_stmt 0 discriminator 1
 2838 0008 B0F1804F 		cmp	r0, #1073741824
 2839 000c 03D0     		beq	.L158
 2840 000e A2F59432 		sub	r2, r2, #75776
 2841 0012 9042     		cmp	r0, r2
 2842 0014 03D1     		bne	.L159
 2843              	.L158:
4564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 2844              		.loc 1 4564 0 is_stmt 1
 2845 0016 23F07003 		bic	r3, r3, #112
 2846              	.LVL304:
4565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 |= Structure->CounterMode;
 2847              		.loc 1 4565 0
 2848 001a 4A68     		ldr	r2, [r1, #4]
 2849 001c 1343     		orrs	r3, r3, r2
 2850              	.LVL305:
 2851              	.L159:
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 2852              		.loc 1 4568 0
 2853 001e 1B4A     		ldr	r2, .L164
 2854 0020 9042     		cmp	r0, r2
 2855 0022 12D0     		beq	.L160
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 2856              		.loc 1 4568 0 is_stmt 0 discriminator 1
ARM GAS  /tmp/cc8lNJIB.s 			page 149


 2857 0024 B0F1804F 		cmp	r0, #1073741824
 2858 0028 0FD0     		beq	.L160
 2859 002a A2F59432 		sub	r2, r2, #75776
 2860 002e 9042     		cmp	r0, r2
 2861 0030 0BD0     		beq	.L160
 2862 0032 02F59E32 		add	r2, r2, #80896
 2863 0036 9042     		cmp	r0, r2
 2864 0038 07D0     		beq	.L160
 2865 003a 02F58062 		add	r2, r2, #1024
 2866 003e 9042     		cmp	r0, r2
 2867 0040 03D0     		beq	.L160
 2868 0042 02F58062 		add	r2, r2, #1024
 2869 0046 9042     		cmp	r0, r2
 2870 0048 03D1     		bne	.L161
 2871              	.L160:
4571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 &= ~TIM_CR1_CKD;
 2872              		.loc 1 4571 0 is_stmt 1
 2873 004a 23F44073 		bic	r3, r3, #768
 2874              	.LVL306:
4572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr1 |= (uint32_t)Structure->ClockDivision;
 2875              		.loc 1 4572 0
 2876 004e CA68     		ldr	r2, [r1, #12]
 2877 0050 1343     		orrs	r3, r3, r2
 2878              	.LVL307:
 2879              	.L161:
4576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 2880              		.loc 1 4576 0
 2881 0052 23F08003 		bic	r3, r3, #128
 2882              	.LVL308:
 2883 0056 4A69     		ldr	r2, [r1, #20]
 2884 0058 1A43     		orrs	r2, r2, r3
 2885              	.LVL309:
4578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR1 = tmpcr1;
 2886              		.loc 1 4578 0
 2887 005a 0260     		str	r2, [r0]
4581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->ARR = (uint32_t)Structure->Period ;
 2888              		.loc 1 4581 0
 2889 005c 8B68     		ldr	r3, [r1, #8]
 2890 005e C362     		str	r3, [r0, #44]
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->PSC = (uint32_t)Structure->Prescaler;
 2891              		.loc 1 4584 0
 2892 0060 0B68     		ldr	r3, [r1]
 2893 0062 8362     		str	r3, [r0, #40]
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))  
 2894              		.loc 1 4586 0
 2895 0064 094B     		ldr	r3, .L164
 2896 0066 9842     		cmp	r0, r3
 2897 0068 0BD0     		beq	.L162
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))  
 2898              		.loc 1 4586 0 is_stmt 0 discriminator 1
 2899 006a 03F5A053 		add	r3, r3, #5120
 2900 006e 9842     		cmp	r0, r3
 2901 0070 07D0     		beq	.L162
 2902 0072 03F58063 		add	r3, r3, #1024
 2903 0076 9842     		cmp	r0, r3
 2904 0078 03D0     		beq	.L162
 2905 007a 03F58063 		add	r3, r3, #1024
ARM GAS  /tmp/cc8lNJIB.s 			page 150


 2906 007e 9842     		cmp	r0, r3
 2907 0080 01D1     		bne	.L163
 2908              	.L162:
4589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIMx->RCR = Structure->RepetitionCounter;
 2909              		.loc 1 4589 0 is_stmt 1
 2910 0082 0B69     		ldr	r3, [r1, #16]
 2911 0084 0363     		str	r3, [r0, #48]
 2912              	.L163:
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->EGR = TIM_EGR_UG;
 2913              		.loc 1 4594 0
 2914 0086 0123     		movs	r3, #1
 2915 0088 4361     		str	r3, [r0, #20]
 2916 008a 7047     		bx	lr
 2917              	.L165:
 2918              		.align	2
 2919              	.L164:
 2920 008c 002C0140 		.word	1073818624
 2921              		.cfi_endproc
 2922              	.LFE214:
 2924              		.section	.text.HAL_TIM_Base_Init,"ax",%progbits
 2925              		.align	2
 2926              		.global	HAL_TIM_Base_Init
 2927              		.thumb
 2928              		.thumb_func
 2930              	HAL_TIM_Base_Init:
 2931              	.LFB123:
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** { 
 2932              		.loc 1 203 0
 2933              		.cfi_startproc
 2934              		@ args = 0, pretend = 0, frame = 0
 2935              		@ frame_needed = 0, uses_anonymous_args = 0
 2936              	.LVL310:
 2937 0000 10B5     		push	{r4, lr}
 2938              	.LCFI22:
 2939              		.cfi_def_cfa_offset 8
 2940              		.cfi_offset 4, -8
 2941              		.cfi_offset 14, -4
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 2942              		.loc 1 205 0
 2943 0002 0446     		mov	r4, r0
 2944 0004 B0B1     		cbz	r0, .L169
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 2945              		.loc 1 216 0
 2946 0006 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 2947 000a 13F0FF0F 		tst	r3, #255
 2948 000e 04D1     		bne	.L168
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 2949              		.loc 1 219 0
 2950 0010 0023     		movs	r3, #0
 2951 0012 80F83C30 		strb	r3, [r0, #60]
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_Base_MspInit(htim);
 2952              		.loc 1 222 0
 2953 0016 FFF7FEFF 		bl	HAL_TIM_Base_MspInit
 2954              	.LVL311:
 2955              	.L168:
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 2956              		.loc 1 226 0
ARM GAS  /tmp/cc8lNJIB.s 			page 151


 2957 001a 0223     		movs	r3, #2
 2958 001c 84F83D30 		strb	r3, [r4, #61]
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init); 
 2959              		.loc 1 229 0
 2960 0020 2146     		mov	r1, r4
 2961 0022 51F8040B 		ldr	r0, [r1], #4
 2962 0026 FFF7FEFF 		bl	TIM_Base_SetConfig
 2963              	.LVL312:
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 2964              		.loc 1 232 0
 2965 002a 0123     		movs	r3, #1
 2966 002c 84F83D30 		strb	r3, [r4, #61]
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 2967              		.loc 1 234 0
 2968 0030 0020     		movs	r0, #0
 2969 0032 10BD     		pop	{r4, pc}
 2970              	.LVL313:
 2971              	.L169:
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 2972              		.loc 1 207 0
 2973 0034 0120     		movs	r0, #1
 2974              	.LVL314:
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 2975              		.loc 1 235 0
 2976 0036 10BD     		pop	{r4, pc}
 2977              		.cfi_endproc
 2978              	.LFE123:
 2980              		.section	.text.HAL_TIM_OC_Init,"ax",%progbits
 2981              		.align	2
 2982              		.global	HAL_TIM_OC_Init
 2983              		.thumb
 2984              		.thumb_func
 2986              	HAL_TIM_OC_Init:
 2987              	.LFB133:
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 2988              		.loc 1 481 0
 2989              		.cfi_startproc
 2990              		@ args = 0, pretend = 0, frame = 0
 2991              		@ frame_needed = 0, uses_anonymous_args = 0
 2992              	.LVL315:
 2993 0000 10B5     		push	{r4, lr}
 2994              	.LCFI23:
 2995              		.cfi_def_cfa_offset 8
 2996              		.cfi_offset 4, -8
 2997              		.cfi_offset 14, -4
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 2998              		.loc 1 483 0
 2999 0002 0446     		mov	r4, r0
 3000 0004 B0B1     		cbz	r0, .L173
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3001              		.loc 1 494 0
 3002 0006 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 3003 000a 13F0FF0F 		tst	r3, #255
 3004 000e 04D1     		bne	.L172
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3005              		.loc 1 497 0
 3006 0010 0023     		movs	r3, #0
ARM GAS  /tmp/cc8lNJIB.s 			page 152


 3007 0012 80F83C30 		strb	r3, [r0, #60]
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_OC_MspInit(htim);
 3008              		.loc 1 500 0
 3009 0016 FFF7FEFF 		bl	HAL_TIM_OC_MspInit
 3010              	.LVL316:
 3011              	.L172:
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3012              		.loc 1 504 0
 3013 001a 0223     		movs	r3, #2
 3014 001c 84F83D30 		strb	r3, [r4, #61]
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance,  &htim->Init); 
 3015              		.loc 1 507 0
 3016 0020 2146     		mov	r1, r4
 3017 0022 51F8040B 		ldr	r0, [r1], #4
 3018 0026 FFF7FEFF 		bl	TIM_Base_SetConfig
 3019              	.LVL317:
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3020              		.loc 1 510 0
 3021 002a 0123     		movs	r3, #1
 3022 002c 84F83D30 		strb	r3, [r4, #61]
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 3023              		.loc 1 512 0
 3024 0030 0020     		movs	r0, #0
 3025 0032 10BD     		pop	{r4, pc}
 3026              	.LVL318:
 3027              	.L173:
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 3028              		.loc 1 485 0
 3029 0034 0120     		movs	r0, #1
 3030              	.LVL319:
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3031              		.loc 1 513 0
 3032 0036 10BD     		pop	{r4, pc}
 3033              		.cfi_endproc
 3034              	.LFE133:
 3036              		.section	.text.HAL_TIM_PWM_Init,"ax",%progbits
 3037              		.align	2
 3038              		.global	HAL_TIM_PWM_Init
 3039              		.thumb
 3040              		.thumb_func
 3042              	HAL_TIM_PWM_Init:
 3043              	.LFB143:
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3044              		.loc 1 988 0
 3045              		.cfi_startproc
 3046              		@ args = 0, pretend = 0, frame = 0
 3047              		@ frame_needed = 0, uses_anonymous_args = 0
 3048              	.LVL320:
 3049 0000 10B5     		push	{r4, lr}
 3050              	.LCFI24:
 3051              		.cfi_def_cfa_offset 8
 3052              		.cfi_offset 4, -8
 3053              		.cfi_offset 14, -4
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 3054              		.loc 1 990 0
 3055 0002 0446     		mov	r4, r0
 3056 0004 B0B1     		cbz	r0, .L177
ARM GAS  /tmp/cc8lNJIB.s 			page 153


1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3057              		.loc 1 1001 0
 3058 0006 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 3059 000a 13F0FF0F 		tst	r3, #255
 3060 000e 04D1     		bne	.L176
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3061              		.loc 1 1004 0
 3062 0010 0023     		movs	r3, #0
 3063 0012 80F83C30 		strb	r3, [r0, #60]
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_PWM_MspInit(htim);
 3064              		.loc 1 1007 0
 3065 0016 FFF7FEFF 		bl	HAL_TIM_PWM_MspInit
 3066              	.LVL321:
 3067              	.L176:
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3068              		.loc 1 1011 0
 3069 001a 0223     		movs	r3, #2
 3070 001c 84F83D30 		strb	r3, [r4, #61]
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init); 
 3071              		.loc 1 1014 0
 3072 0020 2146     		mov	r1, r4
 3073 0022 51F8040B 		ldr	r0, [r1], #4
 3074 0026 FFF7FEFF 		bl	TIM_Base_SetConfig
 3075              	.LVL322:
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3076              		.loc 1 1017 0
 3077 002a 0123     		movs	r3, #1
 3078 002c 84F83D30 		strb	r3, [r4, #61]
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 3079              		.loc 1 1019 0
 3080 0030 0020     		movs	r0, #0
 3081 0032 10BD     		pop	{r4, pc}
 3082              	.LVL323:
 3083              	.L177:
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 3084              		.loc 1 992 0
 3085 0034 0120     		movs	r0, #1
 3086              	.LVL324:
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3087              		.loc 1 1020 0
 3088 0036 10BD     		pop	{r4, pc}
 3089              		.cfi_endproc
 3090              	.LFE143:
 3092              		.section	.text.HAL_TIM_IC_Init,"ax",%progbits
 3093              		.align	2
 3094              		.global	HAL_TIM_IC_Init
 3095              		.thumb
 3096              		.thumb_func
 3098              	HAL_TIM_IC_Init:
 3099              	.LFB153:
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3100              		.loc 1 1498 0
 3101              		.cfi_startproc
 3102              		@ args = 0, pretend = 0, frame = 0
 3103              		@ frame_needed = 0, uses_anonymous_args = 0
 3104              	.LVL325:
 3105 0000 10B5     		push	{r4, lr}
ARM GAS  /tmp/cc8lNJIB.s 			page 154


 3106              	.LCFI25:
 3107              		.cfi_def_cfa_offset 8
 3108              		.cfi_offset 4, -8
 3109              		.cfi_offset 14, -4
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 3110              		.loc 1 1500 0
 3111 0002 0446     		mov	r4, r0
 3112 0004 B0B1     		cbz	r0, .L181
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3113              		.loc 1 1511 0
 3114 0006 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 3115 000a 13F0FF0F 		tst	r3, #255
 3116 000e 04D1     		bne	.L180
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3117              		.loc 1 1514 0
 3118 0010 0023     		movs	r3, #0
 3119 0012 80F83C30 		strb	r3, [r0, #60]
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_IC_MspInit(htim);
 3120              		.loc 1 1517 0
 3121 0016 FFF7FEFF 		bl	HAL_TIM_IC_MspInit
 3122              	.LVL326:
 3123              	.L180:
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY; 
 3124              		.loc 1 1521 0
 3125 001a 0223     		movs	r3, #2
 3126 001c 84F83D30 		strb	r3, [r4, #61]
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init); 
 3127              		.loc 1 1524 0
 3128 0020 2146     		mov	r1, r4
 3129 0022 51F8040B 		ldr	r0, [r1], #4
 3130 0026 FFF7FEFF 		bl	TIM_Base_SetConfig
 3131              	.LVL327:
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3132              		.loc 1 1527 0
 3133 002a 0123     		movs	r3, #1
 3134 002c 84F83D30 		strb	r3, [r4, #61]
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 3135              		.loc 1 1529 0
 3136 0030 0020     		movs	r0, #0
 3137 0032 10BD     		pop	{r4, pc}
 3138              	.LVL328:
 3139              	.L181:
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 3140              		.loc 1 1502 0
 3141 0034 0120     		movs	r0, #1
 3142              	.LVL329:
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3143              		.loc 1 1530 0
 3144 0036 10BD     		pop	{r4, pc}
 3145              		.cfi_endproc
 3146              	.LFE153:
 3148              		.section	.text.HAL_TIM_OnePulse_Init,"ax",%progbits
 3149              		.align	2
 3150              		.global	HAL_TIM_OnePulse_Init
 3151              		.thumb
 3152              		.thumb_func
 3154              	HAL_TIM_OnePulse_Init:
ARM GAS  /tmp/cc8lNJIB.s 			page 155


 3155              	.LFB163:
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3156              		.loc 1 1974 0
 3157              		.cfi_startproc
 3158              		@ args = 0, pretend = 0, frame = 0
 3159              		@ frame_needed = 0, uses_anonymous_args = 0
 3160              	.LVL330:
 3161 0000 38B5     		push	{r3, r4, r5, lr}
 3162              	.LCFI26:
 3163              		.cfi_def_cfa_offset 16
 3164              		.cfi_offset 3, -16
 3165              		.cfi_offset 4, -12
 3166              		.cfi_offset 5, -8
 3167              		.cfi_offset 14, -4
 3168 0002 0D46     		mov	r5, r1
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 3169              		.loc 1 1976 0
 3170 0004 0446     		mov	r4, r0
 3171 0006 F8B1     		cbz	r0, .L185
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3172              		.loc 1 1988 0
 3173 0008 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 3174 000c 13F0FF0F 		tst	r3, #255
 3175 0010 04D1     		bne	.L184
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3176              		.loc 1 1991 0
 3177 0012 0023     		movs	r3, #0
 3178 0014 80F83C30 		strb	r3, [r0, #60]
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_OnePulse_MspInit(htim);
 3179              		.loc 1 1994 0
 3180 0018 FFF7FEFF 		bl	HAL_TIM_OnePulse_MspInit
 3181              	.LVL331:
 3182              	.L184:
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3183              		.loc 1 1998 0
 3184 001c 0223     		movs	r3, #2
 3185 001e 84F83D30 		strb	r3, [r4, #61]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);
 3186              		.loc 1 2001 0
 3187 0022 2146     		mov	r1, r4
 3188 0024 51F8040B 		ldr	r0, [r1], #4
 3189 0028 FFF7FEFF 		bl	TIM_Base_SetConfig
 3190              	.LVL332:
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CR1 &= ~TIM_CR1_OPM;
 3191              		.loc 1 2004 0
 3192 002c 2368     		ldr	r3, [r4]
 3193 002e 1A68     		ldr	r2, [r3]
 3194 0030 22F00802 		bic	r2, r2, #8
 3195 0034 1A60     		str	r2, [r3]
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CR1 |= OnePulseMode;
 3196              		.loc 1 2007 0
 3197 0036 2368     		ldr	r3, [r4]
 3198 0038 1A68     		ldr	r2, [r3]
 3199 003a 1543     		orrs	r5, r5, r2
 3200              	.LVL333:
 3201 003c 1D60     		str	r5, [r3]
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
ARM GAS  /tmp/cc8lNJIB.s 			page 156


 3202              		.loc 1 2010 0
 3203 003e 0123     		movs	r3, #1
 3204 0040 84F83D30 		strb	r3, [r4, #61]
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 3205              		.loc 1 2012 0
 3206 0044 0020     		movs	r0, #0
 3207 0046 38BD     		pop	{r3, r4, r5, pc}
 3208              	.LVL334:
 3209              	.L185:
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 3210              		.loc 1 1978 0
 3211 0048 0120     		movs	r0, #1
 3212              	.LVL335:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3213              		.loc 1 2013 0
 3214 004a 38BD     		pop	{r3, r4, r5, pc}
 3215              		.cfi_endproc
 3216              	.LFE163:
 3218              		.section	.text.HAL_TIM_Encoder_Init,"ax",%progbits
 3219              		.align	2
 3220              		.global	HAL_TIM_Encoder_Init
 3221              		.thumb
 3222              		.thumb_func
 3224              	HAL_TIM_Encoder_Init:
 3225              	.LFB171:
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3226              		.loc 1 2247 0
 3227              		.cfi_startproc
 3228              		@ args = 0, pretend = 0, frame = 0
 3229              		@ frame_needed = 0, uses_anonymous_args = 0
 3230              	.LVL336:
 3231 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3232              	.LCFI27:
 3233              		.cfi_def_cfa_offset 24
 3234              		.cfi_offset 3, -24
 3235              		.cfi_offset 4, -20
 3236              		.cfi_offset 5, -16
 3237              		.cfi_offset 6, -12
 3238              		.cfi_offset 7, -8
 3239              		.cfi_offset 14, -4
 3240 0002 0C46     		mov	r4, r1
 3241              	.LVL337:
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim == NULL)
 3242              		.loc 1 2253 0
 3243 0004 0546     		mov	r5, r0
 3244 0006 0028     		cmp	r0, #0
 3245 0008 47D0     		beq	.L189
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(htim->State == HAL_TIM_STATE_RESET)
 3246              		.loc 1 2273 0
 3247 000a 90F83D30 		ldrb	r3, [r0, #61]	@ zero_extendqisi2
 3248 000e 13F0FF0F 		tst	r3, #255
 3249 0012 04D1     		bne	.L188
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Lock = HAL_UNLOCKED;
 3250              		.loc 1 2276 0
 3251 0014 0023     		movs	r3, #0
 3252 0016 80F83C30 		strb	r3, [r0, #60]
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     HAL_TIM_Encoder_MspInit(htim);
ARM GAS  /tmp/cc8lNJIB.s 			page 157


 3253              		.loc 1 2279 0
 3254 001a FFF7FEFF 		bl	HAL_TIM_Encoder_MspInit
 3255              	.LVL338:
 3256              	.L188:
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_BUSY;
 3257              		.loc 1 2283 0
 3258 001e 0223     		movs	r3, #2
 3259 0020 85F83D30 		strb	r3, [r5, #61]
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 3260              		.loc 1 2286 0
 3261 0024 2A68     		ldr	r2, [r5]
 3262 0026 9368     		ldr	r3, [r2, #8]
 3263 0028 23F48033 		bic	r3, r3, #65536
 3264 002c 23F00703 		bic	r3, r3, #7
 3265 0030 9360     		str	r3, [r2, #8]
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_Base_SetConfig(htim->Instance, &htim->Init);  
 3266              		.loc 1 2289 0
 3267 0032 2946     		mov	r1, r5
 3268 0034 51F8040B 		ldr	r0, [r1], #4
 3269 0038 FFF7FEFF 		bl	TIM_Base_SetConfig
 3270              	.LVL339:
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 3271              		.loc 1 2292 0
 3272 003c 2B68     		ldr	r3, [r5]
 3273 003e 9F68     		ldr	r7, [r3, #8]
 3274              	.LVL340:
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 = htim->Instance->CCMR1;
 3275              		.loc 1 2295 0
 3276 0040 9969     		ldr	r1, [r3, #24]
 3277              	.LVL341:
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = htim->Instance->CCER;
 3278              		.loc 1 2298 0
 3279 0042 1E6A     		ldr	r6, [r3, #32]
 3280              	.LVL342:
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr |= sConfig->EncoderMode;
 3281              		.loc 1 2301 0
 3282 0044 2068     		ldr	r0, [r4]
 3283 0046 0743     		orrs	r7, r7, r0
 3284              	.LVL343:
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_CC1S | TIM_CCMR1_CC2S);
 3285              		.loc 1 2304 0
 3286 0048 21F44071 		bic	r1, r1, #768
 3287              	.LVL344:
 3288 004c 21F00301 		bic	r1, r1, #3
 3289              	.LVL345:
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Selection | (sConfig->IC2Selection << 8U));
 3290              		.loc 1 2305 0
 3291 0050 A268     		ldr	r2, [r4, #8]
 3292 0052 A069     		ldr	r0, [r4, #24]
 3293 0054 42EA0022 		orr	r2, r2, r0, lsl #8
 3294 0058 0A43     		orrs	r2, r2, r1
 3295              	.LVL346:
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~(TIM_CCMR1_IC1F | TIM_CCMR1_IC2F);
 3296              		.loc 1 2309 0
 3297 005a 22F47C42 		bic	r2, r2, #64512
 3298              	.LVL347:
 3299 005e 22F0FC02 		bic	r2, r2, #252
ARM GAS  /tmp/cc8lNJIB.s 			page 158


 3300              	.LVL348:
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= sConfig->IC1Prescaler | (sConfig->IC2Prescaler << 8U);
 3301              		.loc 1 2310 0
 3302 0062 E168     		ldr	r1, [r4, #12]
 3303 0064 E069     		ldr	r0, [r4, #28]
 3304 0066 41EA0021 		orr	r1, r1, r0, lsl #8
 3305 006a 0A43     		orrs	r2, r2, r1
 3306              	.LVL349:
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= (sConfig->IC1Filter << 4U) | (sConfig->IC2Filter << 12U);
 3307              		.loc 1 2311 0
 3308 006c 2169     		ldr	r1, [r4, #16]
 3309 006e 206A     		ldr	r0, [r4, #32]
 3310 0070 0003     		lsls	r0, r0, #12
 3311 0072 40EA0111 		orr	r1, r0, r1, lsl #4
 3312 0076 1143     		orrs	r1, r1, r2
 3313              	.LVL350:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1NP | TIM_CCER_CC2NP);
 3314              		.loc 1 2315 0
 3315 0078 26F0AA06 		bic	r6, r6, #170
 3316              	.LVL351:
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= sConfig->IC1Polarity | (sConfig->IC2Polarity << 4U);
 3317              		.loc 1 2316 0
 3318 007c 6268     		ldr	r2, [r4, #4]
 3319 007e 6069     		ldr	r0, [r4, #20]
 3320 0080 42EA0012 		orr	r2, r2, r0, lsl #4
 3321 0084 1643     		orrs	r6, r6, r2
 3322              	.LVL352:
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 3323              		.loc 1 2319 0
 3324 0086 9F60     		str	r7, [r3, #8]
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CCMR1 = tmpccmr1;
 3325              		.loc 1 2322 0
 3326 0088 2B68     		ldr	r3, [r5]
 3327 008a 9961     		str	r1, [r3, #24]
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->CCER = tmpccer;
 3328              		.loc 1 2325 0
 3329 008c 2B68     		ldr	r3, [r5]
 3330 008e 1E62     		str	r6, [r3, #32]
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State= HAL_TIM_STATE_READY;
 3331              		.loc 1 2328 0
 3332 0090 0123     		movs	r3, #1
 3333 0092 85F83D30 		strb	r3, [r5, #61]
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 3334              		.loc 1 2330 0
 3335 0096 0020     		movs	r0, #0
 3336 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3337              	.LVL353:
 3338              	.L189:
2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 3339              		.loc 1 2255 0
 3340 009a 0120     		movs	r0, #1
 3341              	.LVL354:
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3342              		.loc 1 2331 0
 3343 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3344              		.cfi_endproc
 3345              	.LFE171:
ARM GAS  /tmp/cc8lNJIB.s 			page 159


 3347 009e 00BF     		.section	.text.TIM_OC1_SetConfig,"ax",%progbits
 3348              		.align	2
 3349              		.global	TIM_OC1_SetConfig
 3350              		.thumb
 3351              		.thumb_func
 3353              	TIM_OC1_SetConfig:
 3354              	.LFB215:
4604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3355              		.loc 1 4604 0
 3356              		.cfi_startproc
 3357              		@ args = 0, pretend = 0, frame = 0
 3358              		@ frame_needed = 0, uses_anonymous_args = 0
 3359              		@ link register save eliminated.
 3360              	.LVL355:
 3361 0000 30B4     		push	{r4, r5}
 3362              	.LCFI28:
 3363              		.cfi_def_cfa_offset 8
 3364              		.cfi_offset 4, -8
 3365              		.cfi_offset 5, -4
 3366              	.LVL356:
4610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 3367              		.loc 1 4610 0
 3368 0002 036A     		ldr	r3, [r0, #32]
 3369 0004 23F00103 		bic	r3, r3, #1
 3370 0008 0362     		str	r3, [r0, #32]
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 3371              		.loc 1 4613 0
 3372 000a 046A     		ldr	r4, [r0, #32]
 3373              	.LVL357:
4615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
 3374              		.loc 1 4615 0
 3375 000c 4268     		ldr	r2, [r0, #4]
 3376              	.LVL358:
4618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
 3377              		.loc 1 4618 0
 3378 000e 8369     		ldr	r3, [r0, #24]
 3379              	.LVL359:
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC1S;
 3380              		.loc 1 4622 0
 3381 0010 23F48033 		bic	r3, r3, #65536
 3382              	.LVL360:
 3383 0014 23F07303 		bic	r3, r3, #115
 3384              	.LVL361:
4624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 3385              		.loc 1 4624 0
 3386 0018 0D68     		ldr	r5, [r1]
 3387 001a 2B43     		orrs	r3, r3, r5
 3388              	.LVL362:
4627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC1P;
 3389              		.loc 1 4627 0
 3390 001c 24F00204 		bic	r4, r4, #2
 3391              	.LVL363:
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= OC_Config->OCPolarity;
 3392              		.loc 1 4629 0
 3393 0020 8D68     		ldr	r5, [r1, #8]
 3394 0022 2C43     		orrs	r4, r4, r5
 3395              	.LVL364:
ARM GAS  /tmp/cc8lNJIB.s 			page 160


4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 3396              		.loc 1 4631 0
 3397 0024 184D     		ldr	r5, .L195
 3398 0026 A842     		cmp	r0, r5
 3399 0028 0BD0     		beq	.L191
4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 3400              		.loc 1 4631 0 is_stmt 0 discriminator 1
 3401 002a 05F5A055 		add	r5, r5, #5120
 3402 002e A842     		cmp	r0, r5
 3403 0030 07D0     		beq	.L191
 3404 0032 05F58065 		add	r5, r5, #1024
 3405 0036 A842     		cmp	r0, r5
 3406 0038 03D0     		beq	.L191
 3407 003a 05F58065 		add	r5, r5, #1024
 3408 003e A842     		cmp	r0, r5
 3409 0040 05D1     		bne	.L192
 3410              	.L191:
4637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NP;
 3411              		.loc 1 4637 0 is_stmt 1
 3412 0042 24F00804 		bic	r4, r4, #8
 3413              	.LVL365:
4639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer |= OC_Config->OCNPolarity;
 3414              		.loc 1 4639 0
 3415 0046 CD68     		ldr	r5, [r1, #12]
 3416 0048 2C43     		orrs	r4, r4, r5
 3417              	.LVL366:
4641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC1NE;
 3418              		.loc 1 4641 0
 3419 004a 24F00404 		bic	r4, r4, #4
 3420              	.LVL367:
 3421              	.L192:
4644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3422              		.loc 1 4644 0
 3423 004e 0E4D     		ldr	r5, .L195
 3424 0050 A842     		cmp	r0, r5
 3425 0052 0BD0     		beq	.L193
4644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3426              		.loc 1 4644 0 is_stmt 0 discriminator 1
 3427 0054 05F5A055 		add	r5, r5, #5120
 3428 0058 A842     		cmp	r0, r5
 3429 005a 07D0     		beq	.L193
 3430 005c 05F58065 		add	r5, r5, #1024
 3431 0060 A842     		cmp	r0, r5
 3432 0062 03D0     		beq	.L193
 3433 0064 05F58065 		add	r5, r5, #1024
 3434 0068 A842     		cmp	r0, r5
 3435 006a 05D1     		bne	.L194
 3436              	.L193:
 3437              	.LVL368:
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS1N;
 3438              		.loc 1 4652 0 is_stmt 1
 3439 006c 22F44072 		bic	r2, r2, #768
 3440              	.LVL369:
4654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCIdleState;
 3441              		.loc 1 4654 0
 3442 0070 4D69     		ldr	r5, [r1, #20]
 3443 0072 2A43     		orrs	r2, r2, r5
ARM GAS  /tmp/cc8lNJIB.s 			page 161


 3444              	.LVL370:
4656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= OC_Config->OCNIdleState;
 3445              		.loc 1 4656 0
 3446 0074 8D69     		ldr	r5, [r1, #24]
 3447 0076 2A43     		orrs	r2, r2, r5
 3448              	.LVL371:
 3449              	.L194:
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 3450              		.loc 1 4659 0
 3451 0078 4260     		str	r2, [r0, #4]
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 3452              		.loc 1 4662 0
 3453 007a 8361     		str	r3, [r0, #24]
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR1 = OC_Config->Pulse;
 3454              		.loc 1 4665 0
 3455 007c 4B68     		ldr	r3, [r1, #4]
 3456              	.LVL372:
 3457 007e 4363     		str	r3, [r0, #52]
 3458              	.LVL373:
4668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
 3459              		.loc 1 4668 0
 3460 0080 0462     		str	r4, [r0, #32]
4669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 3461              		.loc 1 4669 0
 3462 0082 30BC     		pop	{r4, r5}
 3463              	.LVL374:
 3464 0084 7047     		bx	lr
 3465              	.L196:
 3466 0086 00BF     		.align	2
 3467              	.L195:
 3468 0088 002C0140 		.word	1073818624
 3469              		.cfi_endproc
 3470              	.LFE215:
 3472              		.section	.text.TIM_OC2_SetConfig,"ax",%progbits
 3473              		.align	2
 3474              		.global	TIM_OC2_SetConfig
 3475              		.thumb
 3476              		.thumb_func
 3478              	TIM_OC2_SetConfig:
 3479              	.LFB216:
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3480              		.loc 1 4678 0
 3481              		.cfi_startproc
 3482              		@ args = 0, pretend = 0, frame = 0
 3483              		@ frame_needed = 0, uses_anonymous_args = 0
 3484              		@ link register save eliminated.
 3485              	.LVL375:
 3486 0000 30B4     		push	{r4, r5}
 3487              	.LCFI29:
 3488              		.cfi_def_cfa_offset 8
 3489              		.cfi_offset 4, -8
 3490              		.cfi_offset 5, -4
 3491              	.LVL376:
4684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC2E;
 3492              		.loc 1 4684 0
 3493 0002 036A     		ldr	r3, [r0, #32]
 3494 0004 23F01003 		bic	r3, r3, #16
ARM GAS  /tmp/cc8lNJIB.s 			page 162


 3495 0008 0362     		str	r3, [r0, #32]
4687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 3496              		.loc 1 4687 0
 3497 000a 046A     		ldr	r4, [r0, #32]
 3498              	.LVL377:
4689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
 3499              		.loc 1 4689 0
 3500 000c 4268     		ldr	r2, [r0, #4]
 3501              	.LVL378:
4692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR1;
 3502              		.loc 1 4692 0
 3503 000e 8369     		ldr	r3, [r0, #24]
 3504              	.LVL379:
4696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR1_CC2S;
 3505              		.loc 1 4696 0
 3506 0010 23F08073 		bic	r3, r3, #16777216
 3507              	.LVL380:
 3508 0014 23F4E643 		bic	r3, r3, #29440
 3509              	.LVL381:
4699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 3510              		.loc 1 4699 0
 3511 0018 0D68     		ldr	r5, [r1]
 3512 001a 43EA0523 		orr	r3, r3, r5, lsl #8
 3513              	.LVL382:
4702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC2P;
 3514              		.loc 1 4702 0
 3515 001e 24F02004 		bic	r4, r4, #32
 3516              	.LVL383:
4704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 4U);
 3517              		.loc 1 4704 0
 3518 0022 8D68     		ldr	r5, [r1, #8]
 3519 0024 44EA0514 		orr	r4, r4, r5, lsl #4
 3520              	.LVL384:
4706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 3521              		.loc 1 4706 0
 3522 0028 134D     		ldr	r5, .L201
 3523 002a A842     		cmp	r0, r5
 3524 002c 06D1     		bne	.L198
4711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NP;
 3525              		.loc 1 4711 0
 3526 002e 24F08004 		bic	r4, r4, #128
 3527              	.LVL385:
4713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 4U);
 3528              		.loc 1 4713 0
 3529 0032 CD68     		ldr	r5, [r1, #12]
 3530 0034 44EA0514 		orr	r4, r4, r5, lsl #4
 3531              	.LVL386:
4715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC2NE;
 3532              		.loc 1 4715 0
 3533 0038 24F04004 		bic	r4, r4, #64
 3534              	.LVL387:
 3535              	.L198:
4719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3536              		.loc 1 4719 0
 3537 003c 0E4D     		ldr	r5, .L201
 3538 003e A842     		cmp	r0, r5
 3539 0040 0BD0     		beq	.L199
ARM GAS  /tmp/cc8lNJIB.s 			page 163


4719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3540              		.loc 1 4719 0 is_stmt 0 discriminator 1
 3541 0042 05F5A055 		add	r5, r5, #5120
 3542 0046 A842     		cmp	r0, r5
 3543 0048 07D0     		beq	.L199
 3544 004a 05F58065 		add	r5, r5, #1024
 3545 004e A842     		cmp	r0, r5
 3546 0050 03D0     		beq	.L199
 3547 0052 05F58065 		add	r5, r5, #1024
 3548 0056 A842     		cmp	r0, r5
 3549 0058 07D1     		bne	.L200
 3550              	.L199:
 3551              	.LVL388:
4730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS2N;
 3552              		.loc 1 4730 0 is_stmt 1
 3553 005a 22F44062 		bic	r2, r2, #3072
 3554              	.LVL389:
4733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 2U);
 3555              		.loc 1 4733 0
 3556 005e 4D69     		ldr	r5, [r1, #20]
 3557 0060 42EA8502 		orr	r2, r2, r5, lsl #2
 3558              	.LVL390:
4735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 3559              		.loc 1 4735 0
 3560 0064 8D69     		ldr	r5, [r1, #24]
 3561 0066 42EA8502 		orr	r2, r2, r5, lsl #2
 3562              	.LVL391:
 3563              	.L200:
4739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 3564              		.loc 1 4739 0
 3565 006a 4260     		str	r2, [r0, #4]
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmrx;
 3566              		.loc 1 4742 0
 3567 006c 8361     		str	r3, [r0, #24]
4745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR2 = OC_Config->Pulse;
 3568              		.loc 1 4745 0
 3569 006e 4B68     		ldr	r3, [r1, #4]
 3570              	.LVL392:
 3571 0070 8363     		str	r3, [r0, #56]
 3572              	.LVL393:
4748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
 3573              		.loc 1 4748 0
 3574 0072 0462     		str	r4, [r0, #32]
4749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3575              		.loc 1 4749 0
 3576 0074 30BC     		pop	{r4, r5}
 3577              	.LVL394:
 3578 0076 7047     		bx	lr
 3579              	.L202:
 3580              		.align	2
 3581              	.L201:
 3582 0078 002C0140 		.word	1073818624
 3583              		.cfi_endproc
 3584              	.LFE216:
 3586              		.section	.text.TIM_OC3_SetConfig,"ax",%progbits
 3587              		.align	2
 3588              		.global	TIM_OC3_SetConfig
ARM GAS  /tmp/cc8lNJIB.s 			page 164


 3589              		.thumb
 3590              		.thumb_func
 3592              	TIM_OC3_SetConfig:
 3593              	.LFB217:
4758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3594              		.loc 1 4758 0
 3595              		.cfi_startproc
 3596              		@ args = 0, pretend = 0, frame = 0
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
 3598              		@ link register save eliminated.
 3599              	.LVL395:
 3600 0000 30B4     		push	{r4, r5}
 3601              	.LCFI30:
 3602              		.cfi_def_cfa_offset 8
 3603              		.cfi_offset 4, -8
 3604              		.cfi_offset 5, -4
 3605              	.LVL396:
4764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC3E;
 3606              		.loc 1 4764 0
 3607 0002 036A     		ldr	r3, [r0, #32]
 3608 0004 23F48073 		bic	r3, r3, #256
 3609 0008 0362     		str	r3, [r0, #32]
4767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 3610              		.loc 1 4767 0
 3611 000a 046A     		ldr	r4, [r0, #32]
 3612              	.LVL397:
4769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
 3613              		.loc 1 4769 0
 3614 000c 4268     		ldr	r2, [r0, #4]
 3615              	.LVL398:
4772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 3616              		.loc 1 4772 0
 3617 000e C369     		ldr	r3, [r0, #28]
 3618              	.LVL399:
4776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC3S;  
 3619              		.loc 1 4776 0
 3620 0010 23F48033 		bic	r3, r3, #65536
 3621              	.LVL400:
 3622 0014 23F07303 		bic	r3, r3, #115
 3623              	.LVL401:
4778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= OC_Config->OCMode;
 3624              		.loc 1 4778 0
 3625 0018 0D68     		ldr	r5, [r1]
 3626 001a 2B43     		orrs	r3, r3, r5
 3627              	.LVL402:
4781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC3P;
 3628              		.loc 1 4781 0
 3629 001c 24F40074 		bic	r4, r4, #512
 3630              	.LVL403:
4783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 8U);
 3631              		.loc 1 4783 0
 3632 0020 8D68     		ldr	r5, [r1, #8]
 3633 0022 44EA0524 		orr	r4, r4, r5, lsl #8
 3634              	.LVL404:
4785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 3635              		.loc 1 4785 0
 3636 0026 144D     		ldr	r5, .L207
ARM GAS  /tmp/cc8lNJIB.s 			page 165


 3637 0028 A842     		cmp	r0, r5
 3638 002a 06D1     		bne	.L204
4790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NP;
 3639              		.loc 1 4790 0
 3640 002c 24F40064 		bic	r4, r4, #2048
 3641              	.LVL405:
4792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer |= (OC_Config->OCNPolarity << 8U);
 3642              		.loc 1 4792 0
 3643 0030 CD68     		ldr	r5, [r1, #12]
 3644 0032 44EA0524 		orr	r4, r4, r5, lsl #8
 3645              	.LVL406:
4794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccer &= ~TIM_CCER_CC3NE;
 3646              		.loc 1 4794 0
 3647 0036 24F48064 		bic	r4, r4, #1024
 3648              	.LVL407:
 3649              	.L204:
4797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3650              		.loc 1 4797 0
 3651 003a 0F4D     		ldr	r5, .L207
 3652 003c A842     		cmp	r0, r5
 3653 003e 0BD0     		beq	.L205
4797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3654              		.loc 1 4797 0 is_stmt 0 discriminator 1
 3655 0040 05F5A055 		add	r5, r5, #5120
 3656 0044 A842     		cmp	r0, r5
 3657 0046 07D0     		beq	.L205
 3658 0048 05F58065 		add	r5, r5, #1024
 3659 004c A842     		cmp	r0, r5
 3660 004e 03D0     		beq	.L205
 3661 0050 05F58065 		add	r5, r5, #1024
 3662 0054 A842     		cmp	r0, r5
 3663 0056 07D1     		bne	.L206
 3664              	.L205:
 3665              	.LVL408:
4807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS3N;
 3666              		.loc 1 4807 0 is_stmt 1
 3667 0058 22F44052 		bic	r2, r2, #12288
 3668              	.LVL409:
4810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 4U);
 3669              		.loc 1 4810 0
 3670 005c 4D69     		ldr	r5, [r1, #20]
 3671 005e 42EA0512 		orr	r2, r2, r5, lsl #4
 3672              	.LVL410:
4812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 3673              		.loc 1 4812 0
 3674 0062 8D69     		ldr	r5, [r1, #24]
 3675 0064 42EA0512 		orr	r2, r2, r5, lsl #4
 3676              	.LVL411:
 3677              	.L206:
4816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 3678              		.loc 1 4816 0
 3679 0068 4260     		str	r2, [r0, #4]
4819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 3680              		.loc 1 4819 0
 3681 006a C361     		str	r3, [r0, #28]
4822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR3 = OC_Config->Pulse;
 3682              		.loc 1 4822 0
ARM GAS  /tmp/cc8lNJIB.s 			page 166


 3683 006c 4B68     		ldr	r3, [r1, #4]
 3684              	.LVL412:
 3685 006e C363     		str	r3, [r0, #60]
 3686              	.LVL413:
4825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
 3687              		.loc 1 4825 0
 3688 0070 0462     		str	r4, [r0, #32]
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3689              		.loc 1 4826 0
 3690 0072 30BC     		pop	{r4, r5}
 3691              	.LVL414:
 3692 0074 7047     		bx	lr
 3693              	.L208:
 3694 0076 00BF     		.align	2
 3695              	.L207:
 3696 0078 002C0140 		.word	1073818624
 3697              		.cfi_endproc
 3698              	.LFE217:
 3700              		.section	.text.TIM_OC4_SetConfig,"ax",%progbits
 3701              		.align	2
 3702              		.global	TIM_OC4_SetConfig
 3703              		.thumb
 3704              		.thumb_func
 3706              	TIM_OC4_SetConfig:
 3707              	.LFB218:
4835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3708              		.loc 1 4835 0
 3709              		.cfi_startproc
 3710              		@ args = 0, pretend = 0, frame = 0
 3711              		@ frame_needed = 0, uses_anonymous_args = 0
 3712              		@ link register save eliminated.
 3713              	.LVL415:
 3714 0000 30B4     		push	{r4, r5}
 3715              	.LCFI31:
 3716              		.cfi_def_cfa_offset 8
 3717              		.cfi_offset 4, -8
 3718              		.cfi_offset 5, -4
 3719              	.LVL416:
4841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC4E;
 3720              		.loc 1 4841 0
 3721 0002 036A     		ldr	r3, [r0, #32]
 3722 0004 23F48053 		bic	r3, r3, #4096
 3723 0008 0362     		str	r3, [r0, #32]
4844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 3724              		.loc 1 4844 0
 3725 000a 046A     		ldr	r4, [r0, #32]
 3726              	.LVL417:
4846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpcr2 =  TIMx->CR2; 
 3727              		.loc 1 4846 0
 3728 000c 4268     		ldr	r2, [r0, #4]
 3729              	.LVL418:
4849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx = TIMx->CCMR2;
 3730              		.loc 1 4849 0
 3731 000e C369     		ldr	r3, [r0, #28]
 3732              	.LVL419:
4853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx &= ~TIM_CCMR2_CC4S;
 3733              		.loc 1 4853 0
ARM GAS  /tmp/cc8lNJIB.s 			page 167


 3734 0010 23F08073 		bic	r3, r3, #16777216
 3735              	.LVL420:
 3736 0014 23F4E643 		bic	r3, r3, #29440
 3737              	.LVL421:
4856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmrx |= (OC_Config->OCMode << 8U);
 3738              		.loc 1 4856 0
 3739 0018 0D68     		ldr	r5, [r1]
 3740 001a 43EA0523 		orr	r3, r3, r5, lsl #8
 3741              	.LVL422:
4859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~TIM_CCER_CC4P;
 3742              		.loc 1 4859 0
 3743 001e 24F40055 		bic	r5, r4, #8192
 3744              	.LVL423:
4861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (OC_Config->OCPolarity << 12U);
 3745              		.loc 1 4861 0
 3746 0022 8C68     		ldr	r4, [r1, #8]
 3747 0024 45EA0434 		orr	r4, r5, r4, lsl #12
 3748              	.LVL424:
4863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3749              		.loc 1 4863 0
 3750 0028 0D4D     		ldr	r5, .L212
 3751 002a A842     		cmp	r0, r5
 3752 002c 0BD0     		beq	.L210
4863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(TIMx))
 3753              		.loc 1 4863 0 is_stmt 0 discriminator 1
 3754 002e 05F5A055 		add	r5, r5, #5120
 3755 0032 A842     		cmp	r0, r5
 3756 0034 07D0     		beq	.L210
 3757 0036 05F58065 		add	r5, r5, #1024
 3758 003a A842     		cmp	r0, r5
 3759 003c 03D0     		beq	.L210
 3760 003e 05F58065 		add	r5, r5, #1024
 3761 0042 A842     		cmp	r0, r5
 3762 0044 04D1     		bne	.L211
 3763              	.L210:
4870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 &= ~TIM_CR2_OIS4;
 3764              		.loc 1 4870 0 is_stmt 1
 3765 0046 22F48042 		bic	r2, r2, #16384
 3766              	.LVL425:
4873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpcr2 |= (OC_Config->OCIdleState << 6U);
 3767              		.loc 1 4873 0
 3768 004a 4D69     		ldr	r5, [r1, #20]
 3769 004c 42EA8512 		orr	r2, r2, r5, lsl #6
 3770              	.LVL426:
 3771              	.L211:
4877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CR2 = tmpcr2;
 3772              		.loc 1 4877 0
 3773 0050 4260     		str	r2, [r0, #4]
4880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR2 = tmpccmrx;
 3774              		.loc 1 4880 0
 3775 0052 C361     		str	r3, [r0, #28]
4883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCR4 = OC_Config->Pulse;
 3776              		.loc 1 4883 0
 3777 0054 4B68     		ldr	r3, [r1, #4]
 3778              	.LVL427:
 3779 0056 0364     		str	r3, [r0, #64]
 3780              	.LVL428:
ARM GAS  /tmp/cc8lNJIB.s 			page 168


4886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;  
 3781              		.loc 1 4886 0
 3782 0058 0462     		str	r4, [r0, #32]
4887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3783              		.loc 1 4887 0
 3784 005a 30BC     		pop	{r4, r5}
 3785              	.LVL429:
 3786 005c 7047     		bx	lr
 3787              	.L213:
 3788 005e 00BF     		.align	2
 3789              	.L212:
 3790 0060 002C0140 		.word	1073818624
 3791              		.cfi_endproc
 3792              	.LFE218:
 3794              		.section	.text.HAL_TIM_OC_ConfigChannel,"ax",%progbits
 3795              		.align	2
 3796              		.weak	HAL_TIM_OC_ConfigChannel
 3797              		.thumb
 3798              		.thumb_func
 3800              	HAL_TIM_OC_ConfigChannel:
 3801              	.LFB182:
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3802              		.loc 1 2932 0
 3803              		.cfi_startproc
 3804              		@ args = 0, pretend = 0, frame = 0
 3805              		@ frame_needed = 0, uses_anonymous_args = 0
 3806              	.LVL430:
 3807 0000 10B5     		push	{r4, lr}
 3808              	.LCFI32:
 3809              		.cfi_def_cfa_offset 8
 3810              		.cfi_offset 4, -8
 3811              		.cfi_offset 14, -4
 3812 0002 0446     		mov	r4, r0
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim); 
 3813              		.loc 1 2939 0
 3814 0004 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3815 0008 012B     		cmp	r3, #1
 3816 000a 26D0     		beq	.L222
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim); 
 3817              		.loc 1 2939 0 is_stmt 0 discriminator 2
 3818 000c 0123     		movs	r3, #1
 3819 000e 80F83C30 		strb	r3, [r0, #60]
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 3820              		.loc 1 2941 0 is_stmt 1 discriminator 2
 3821 0012 0223     		movs	r3, #2
 3822 0014 80F83D30 		strb	r3, [r0, #61]
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 3823              		.loc 1 2943 0 discriminator 2
 3824 0018 0C2A     		cmp	r2, #12
 3825 001a 17D8     		bhi	.L216
 3826 001c DFE802F0 		tbb	[pc, r2]
 3827              	.L218:
 3828 0020 07       		.byte	(.L217-.L218)/2
 3829 0021 16       		.byte	(.L216-.L218)/2
 3830 0022 16       		.byte	(.L216-.L218)/2
 3831 0023 16       		.byte	(.L216-.L218)/2
 3832 0024 0B       		.byte	(.L219-.L218)/2
ARM GAS  /tmp/cc8lNJIB.s 			page 169


 3833 0025 16       		.byte	(.L216-.L218)/2
 3834 0026 16       		.byte	(.L216-.L218)/2
 3835 0027 16       		.byte	(.L216-.L218)/2
 3836 0028 0F       		.byte	(.L220-.L218)/2
 3837 0029 16       		.byte	(.L216-.L218)/2
 3838 002a 16       		.byte	(.L216-.L218)/2
 3839 002b 16       		.byte	(.L216-.L218)/2
 3840 002c 13       		.byte	(.L221-.L218)/2
 3841 002d 00       		.p2align 1
 3842              	.L217:
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
 3843              		.loc 1 2949 0
 3844 002e 0068     		ldr	r0, [r0]
 3845              	.LVL431:
 3846 0030 FFF7FEFF 		bl	TIM_OC1_SetConfig
 3847              	.LVL432:
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 3848              		.loc 1 2951 0
 3849 0034 0AE0     		b	.L216
 3850              	.LVL433:
 3851              	.L219:
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
 3852              		.loc 1 2957 0
 3853 0036 0068     		ldr	r0, [r0]
 3854              	.LVL434:
 3855 0038 FFF7FEFF 		bl	TIM_OC2_SetConfig
 3856              	.LVL435:
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 3857              		.loc 1 2959 0
 3858 003c 06E0     		b	.L216
 3859              	.LVL436:
 3860              	.L220:
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
 3861              		.loc 1 2965 0
 3862 003e 0068     		ldr	r0, [r0]
 3863              	.LVL437:
 3864 0040 FFF7FEFF 		bl	TIM_OC3_SetConfig
 3865              	.LVL438:
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 3866              		.loc 1 2967 0
 3867 0044 02E0     		b	.L216
 3868              	.LVL439:
 3869              	.L221:
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****        TIM_OC4_SetConfig(htim->Instance, sConfig);
 3870              		.loc 1 2973 0
 3871 0046 0068     		ldr	r0, [r0]
 3872              	.LVL440:
 3873 0048 FFF7FEFF 		bl	TIM_OC4_SetConfig
 3874              	.LVL441:
 3875              	.L216:
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 3876              		.loc 1 2980 0
 3877 004c 0123     		movs	r3, #1
 3878 004e 84F83D30 		strb	r3, [r4, #61]
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim); 
 3879              		.loc 1 2982 0
 3880 0052 0020     		movs	r0, #0
ARM GAS  /tmp/cc8lNJIB.s 			page 170


 3881 0054 84F83C00 		strb	r0, [r4, #60]
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 3882              		.loc 1 2984 0
 3883 0058 10BD     		pop	{r4, pc}
 3884              	.LVL442:
 3885              	.L222:
2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim); 
 3886              		.loc 1 2939 0
 3887 005a 0220     		movs	r0, #2
 3888              	.LVL443:
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 3889              		.loc 1 2985 0
 3890 005c 10BD     		pop	{r4, pc}
 3891              		.cfi_endproc
 3892              	.LFE182:
 3894 005e 00BF     		.section	.text.HAL_TIM_PWM_ConfigChannel,"ax",%progbits
 3895              		.align	2
 3896              		.weak	HAL_TIM_PWM_ConfigChannel
 3897              		.thumb
 3898              		.thumb_func
 3900              	HAL_TIM_PWM_ConfigChannel:
 3901              	.LFB184:
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 3902              		.loc 1 3097 0
 3903              		.cfi_startproc
 3904              		@ args = 0, pretend = 0, frame = 0
 3905              		@ frame_needed = 0, uses_anonymous_args = 0
 3906              	.LVL444:
 3907 0000 38B5     		push	{r3, r4, r5, lr}
 3908              	.LCFI33:
 3909              		.cfi_def_cfa_offset 16
 3910              		.cfi_offset 3, -16
 3911              		.cfi_offset 4, -12
 3912              		.cfi_offset 5, -8
 3913              		.cfi_offset 14, -4
 3914 0002 0446     		mov	r4, r0
 3915 0004 0D46     		mov	r5, r1
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 3916              		.loc 1 3098 0
 3917 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 3918 000a 012B     		cmp	r3, #1
 3919 000c 64D0     		beq	.L231
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 3920              		.loc 1 3098 0 is_stmt 0 discriminator 2
 3921 000e 0123     		movs	r3, #1
 3922 0010 80F83C30 		strb	r3, [r0, #60]
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 3923              		.loc 1 3106 0 is_stmt 1 discriminator 2
 3924 0014 0223     		movs	r3, #2
 3925 0016 80F83D30 		strb	r3, [r0, #61]
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 3926              		.loc 1 3108 0 discriminator 2
 3927 001a 0C2A     		cmp	r2, #12
 3928 001c 55D8     		bhi	.L225
 3929 001e DFE802F0 		tbb	[pc, r2]
 3930              	.L227:
 3931 0022 07       		.byte	(.L226-.L227)/2
ARM GAS  /tmp/cc8lNJIB.s 			page 171


 3932 0023 54       		.byte	(.L225-.L227)/2
 3933 0024 54       		.byte	(.L225-.L227)/2
 3934 0025 54       		.byte	(.L225-.L227)/2
 3935 0026 1A       		.byte	(.L228-.L227)/2
 3936 0027 54       		.byte	(.L225-.L227)/2
 3937 0028 54       		.byte	(.L225-.L227)/2
 3938 0029 54       		.byte	(.L225-.L227)/2
 3939 002a 2E       		.byte	(.L229-.L227)/2
 3940 002b 54       		.byte	(.L225-.L227)/2
 3941 002c 54       		.byte	(.L225-.L227)/2
 3942 002d 54       		.byte	(.L225-.L227)/2
 3943 002e 41       		.byte	(.L230-.L227)/2
 3944 002f 00       		.p2align 1
 3945              	.L226:
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, sConfig);
 3946              		.loc 1 3114 0
 3947 0030 0068     		ldr	r0, [r0]
 3948              	.LVL445:
 3949 0032 FFF7FEFF 		bl	TIM_OC1_SetConfig
 3950              	.LVL446:
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 3951              		.loc 1 3117 0
 3952 0036 2368     		ldr	r3, [r4]
 3953 0038 9A69     		ldr	r2, [r3, #24]
 3954 003a 42F00802 		orr	r2, r2, #8
 3955 003e 9A61     		str	r2, [r3, #24]
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 3956              		.loc 1 3120 0
 3957 0040 2368     		ldr	r3, [r4]
 3958 0042 9A69     		ldr	r2, [r3, #24]
 3959 0044 22F00402 		bic	r2, r2, #4
 3960 0048 9A61     		str	r2, [r3, #24]
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode;
 3961              		.loc 1 3121 0
 3962 004a 2368     		ldr	r3, [r4]
 3963 004c 9969     		ldr	r1, [r3, #24]
 3964 004e 2A69     		ldr	r2, [r5, #16]
 3965 0050 0A43     		orrs	r2, r2, r1
 3966 0052 9A61     		str	r2, [r3, #24]
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 3967              		.loc 1 3123 0
 3968 0054 39E0     		b	.L225
 3969              	.LVL447:
 3970              	.L228:
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, sConfig);
 3971              		.loc 1 3129 0
 3972 0056 0068     		ldr	r0, [r0]
 3973              	.LVL448:
 3974 0058 FFF7FEFF 		bl	TIM_OC2_SetConfig
 3975              	.LVL449:
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 3976              		.loc 1 3132 0
 3977 005c 2368     		ldr	r3, [r4]
 3978 005e 9A69     		ldr	r2, [r3, #24]
 3979 0060 42F40062 		orr	r2, r2, #2048
 3980 0064 9A61     		str	r2, [r3, #24]
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
ARM GAS  /tmp/cc8lNJIB.s 			page 172


 3981              		.loc 1 3135 0
 3982 0066 2368     		ldr	r3, [r4]
 3983 0068 9A69     		ldr	r2, [r3, #24]
 3984 006a 22F48062 		bic	r2, r2, #1024
 3985 006e 9A61     		str	r2, [r3, #24]
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 3986              		.loc 1 3136 0
 3987 0070 2368     		ldr	r3, [r4]
 3988 0072 9A69     		ldr	r2, [r3, #24]
 3989 0074 2969     		ldr	r1, [r5, #16]
 3990 0076 42EA0122 		orr	r2, r2, r1, lsl #8
 3991 007a 9A61     		str	r2, [r3, #24]
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 3992              		.loc 1 3138 0
 3993 007c 25E0     		b	.L225
 3994              	.LVL450:
 3995              	.L229:
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC3_SetConfig(htim->Instance, sConfig);
 3996              		.loc 1 3144 0
 3997 007e 0068     		ldr	r0, [r0]
 3998              	.LVL451:
 3999 0080 FFF7FEFF 		bl	TIM_OC3_SetConfig
 4000              	.LVL452:
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 4001              		.loc 1 3147 0
 4002 0084 2368     		ldr	r3, [r4]
 4003 0086 DA69     		ldr	r2, [r3, #28]
 4004 0088 42F00802 		orr	r2, r2, #8
 4005 008c DA61     		str	r2, [r3, #28]
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 4006              		.loc 1 3150 0
 4007 008e 2368     		ldr	r3, [r4]
 4008 0090 DA69     		ldr	r2, [r3, #28]
 4009 0092 22F00402 		bic	r2, r2, #4
 4010 0096 DA61     		str	r2, [r3, #28]
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode;  
 4011              		.loc 1 3151 0
 4012 0098 2368     		ldr	r3, [r4]
 4013 009a D969     		ldr	r1, [r3, #28]
 4014 009c 2A69     		ldr	r2, [r5, #16]
 4015 009e 0A43     		orrs	r2, r2, r1
 4016 00a0 DA61     		str	r2, [r3, #28]
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4017              		.loc 1 3153 0
 4018 00a2 12E0     		b	.L225
 4019              	.LVL453:
 4020              	.L230:
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC4_SetConfig(htim->Instance, sConfig);
 4021              		.loc 1 3159 0
 4022 00a4 0068     		ldr	r0, [r0]
 4023              	.LVL454:
 4024 00a6 FFF7FEFF 		bl	TIM_OC4_SetConfig
 4025              	.LVL455:
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 4026              		.loc 1 3162 0
 4027 00aa 2368     		ldr	r3, [r4]
 4028 00ac DA69     		ldr	r2, [r3, #28]
ARM GAS  /tmp/cc8lNJIB.s 			page 173


 4029 00ae 42F40062 		orr	r2, r2, #2048
 4030 00b2 DA61     		str	r2, [r3, #28]
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 4031              		.loc 1 3165 0
 4032 00b4 2368     		ldr	r3, [r4]
 4033 00b6 DA69     		ldr	r2, [r3, #28]
 4034 00b8 22F48062 		bic	r2, r2, #1024
 4035 00bc DA61     		str	r2, [r3, #28]
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;  
 4036              		.loc 1 3166 0
 4037 00be 2368     		ldr	r3, [r4]
 4038 00c0 DA69     		ldr	r2, [r3, #28]
 4039 00c2 2969     		ldr	r1, [r5, #16]
 4040 00c4 42EA0122 		orr	r2, r2, r1, lsl #8
 4041 00c8 DA61     		str	r2, [r3, #28]
 4042              	.L225:
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4043              		.loc 1 3174 0
 4044 00ca 0123     		movs	r3, #1
 4045 00cc 84F83D30 		strb	r3, [r4, #61]
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4046              		.loc 1 3176 0
 4047 00d0 0020     		movs	r0, #0
 4048 00d2 84F83C00 		strb	r0, [r4, #60]
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 4049              		.loc 1 3178 0
 4050 00d6 38BD     		pop	{r3, r4, r5, pc}
 4051              	.LVL456:
 4052              	.L231:
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4053              		.loc 1 3098 0
 4054 00d8 0220     		movs	r0, #2
 4055              	.LVL457:
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 4056              		.loc 1 3179 0
 4057 00da 38BD     		pop	{r3, r4, r5, pc}
 4058              		.cfi_endproc
 4059              	.LFE184:
 4061              		.section	.text.TIM_TI1_SetConfig,"ax",%progbits
 4062              		.align	2
 4063              		.global	TIM_TI1_SetConfig
 4064              		.thumb
 4065              		.thumb_func
 4067              	TIM_TI1_SetConfig:
 4068              	.LFB220:
5035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 4069              		.loc 1 5035 0
 4070              		.cfi_startproc
 4071              		@ args = 0, pretend = 0, frame = 0
 4072              		@ frame_needed = 0, uses_anonymous_args = 0
 4073              		@ link register save eliminated.
 4074              	.LVL458:
 4075 0000 70B4     		push	{r4, r5, r6}
 4076              	.LCFI34:
 4077              		.cfi_def_cfa_offset 12
 4078              		.cfi_offset 4, -12
 4079              		.cfi_offset 5, -8
ARM GAS  /tmp/cc8lNJIB.s 			page 174


 4080              		.cfi_offset 6, -4
 4081              	.LVL459:
5040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~TIM_CCER_CC1E;
 4082              		.loc 1 5040 0
 4083 0002 046A     		ldr	r4, [r0, #32]
 4084 0004 24F00104 		bic	r4, r4, #1
 4085 0008 0462     		str	r4, [r0, #32]
5041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 = TIMx->CCMR1;
 4086              		.loc 1 5041 0
 4087 000a 8569     		ldr	r5, [r0, #24]
 4088              	.LVL460:
5042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer = TIMx->CCER;
 4089              		.loc 1 5042 0
 4090 000c 046A     		ldr	r4, [r0, #32]
 4091              	.LVL461:
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4092              		.loc 1 5045 0
 4093 000e 164E     		ldr	r6, .L240
 4094 0010 B042     		cmp	r0, r6
 4095 0012 0CD0     		beq	.L236
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4096              		.loc 1 5045 0 is_stmt 0 discriminator 2
 4097 0014 B0F1804F 		cmp	r0, #1073741824
 4098 0018 0BD0     		beq	.L237
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4099              		.loc 1 5045 0 discriminator 1
 4100 001a A6F59436 		sub	r6, r6, #75776
 4101 001e B042     		cmp	r0, r6
 4102 0020 09D0     		beq	.L238
 4103 0022 06F59E36 		add	r6, r6, #80896
 4104 0026 B042     		cmp	r0, r6
 4105 0028 07D1     		bne	.L239
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4106              		.loc 1 5045 0
 4107 002a 0126     		movs	r6, #1
 4108 002c 06E0     		b	.L233
 4109              	.L236:
 4110 002e 0126     		movs	r6, #1
 4111 0030 04E0     		b	.L233
 4112              	.L237:
 4113 0032 0126     		movs	r6, #1
 4114 0034 02E0     		b	.L233
 4115              	.L238:
 4116 0036 0126     		movs	r6, #1
 4117 0038 00E0     		b	.L233
 4118              	.L239:
 4119 003a 0026     		movs	r6, #0
 4120              	.L233:
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_CC2_INSTANCE(TIMx) != RESET)
 4121              		.loc 1 5045 0 discriminator 4
 4122 003c 1EB1     		cbz	r6, .L234
5047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccmr1 &= ~TIM_CCMR1_CC1S;
 4123              		.loc 1 5047 0 is_stmt 1
 4124 003e 25F00305 		bic	r5, r5, #3
 4125              	.LVL462:
5048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccmr1 |= TIM_ICSelection;
 4126              		.loc 1 5048 0
ARM GAS  /tmp/cc8lNJIB.s 			page 175


 4127 0042 2A43     		orrs	r2, r2, r5
 4128              	.LVL463:
 4129 0044 01E0     		b	.L235
 4130              	.LVL464:
 4131              	.L234:
5052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     tmpccmr1 |= TIM_CCMR1_CC1S_0;
 4132              		.loc 1 5052 0
 4133 0046 45F00102 		orr	r2, r5, #1
 4134              	.LVL465:
 4135              	.L235:
5056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 &= ~TIM_CCMR1_IC1F;
 4136              		.loc 1 5056 0
 4137 004a 22F0F002 		bic	r2, r2, #240
 4138              	.LVL466:
5057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccmr1 |= ((TIM_ICFilter << 4U) & TIM_CCMR1_IC1F);
 4139              		.loc 1 5057 0
 4140 004e 1B01     		lsls	r3, r3, #4
 4141              	.LVL467:
 4142 0050 DBB2     		uxtb	r3, r3
 4143 0052 1343     		orrs	r3, r3, r2
 4144              	.LVL468:
5060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 4145              		.loc 1 5060 0
 4146 0054 24F00A02 		bic	r2, r4, #10
 4147              	.LVL469:
5061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpccer |= (TIM_ICPolarity & (TIM_CCER_CC1P | TIM_CCER_CC1NP));
 4148              		.loc 1 5061 0
 4149 0058 01F00A01 		and	r1, r1, #10
 4150              	.LVL470:
 4151 005c 1143     		orrs	r1, r1, r2
 4152              	.LVL471:
5064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCMR1 = tmpccmr1;
 4153              		.loc 1 5064 0
 4154 005e 8361     		str	r3, [r0, #24]
5065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER = tmpccer;
 4155              		.loc 1 5065 0
 4156 0060 0162     		str	r1, [r0, #32]
5066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 4157              		.loc 1 5066 0
 4158 0062 70BC     		pop	{r4, r5, r6}
 4159 0064 7047     		bx	lr
 4160              	.L241:
 4161 0066 00BF     		.align	2
 4162              	.L240:
 4163 0068 002C0140 		.word	1073818624
 4164              		.cfi_endproc
 4165              	.LFE220:
 4167              		.section	.text.HAL_TIM_IC_ConfigChannel,"ax",%progbits
 4168              		.align	2
 4169              		.global	HAL_TIM_IC_ConfigChannel
 4170              		.thumb
 4171              		.thumb_func
 4173              	HAL_TIM_IC_ConfigChannel:
 4174              	.LFB183:
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 4175              		.loc 1 3001 0
 4176              		.cfi_startproc
ARM GAS  /tmp/cc8lNJIB.s 			page 176


 4177              		@ args = 0, pretend = 0, frame = 0
 4178              		@ frame_needed = 0, uses_anonymous_args = 0
 4179              	.LVL472:
 4180 0000 38B5     		push	{r3, r4, r5, lr}
 4181              	.LCFI35:
 4182              		.cfi_def_cfa_offset 16
 4183              		.cfi_offset 3, -16
 4184              		.cfi_offset 4, -12
 4185              		.cfi_offset 5, -8
 4186              		.cfi_offset 14, -4
 4187 0002 0446     		mov	r4, r0
 4188 0004 0D46     		mov	r5, r1
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4189              		.loc 1 3009 0
 4190 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 4191 000a 012B     		cmp	r3, #1
 4192 000c 56D0     		beq	.L248
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4193              		.loc 1 3009 0 is_stmt 0 discriminator 2
 4194 000e 0123     		movs	r3, #1
 4195 0010 80F83C30 		strb	r3, [r0, #60]
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4196              		.loc 1 3011 0 is_stmt 1 discriminator 2
 4197 0014 0223     		movs	r3, #2
 4198 0016 80F83D30 		strb	r3, [r0, #61]
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if (Channel == TIM_CHANNEL_1)
 4199              		.loc 1 3013 0 discriminator 2
 4200 001a 82B9     		cbnz	r2, .L244
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI1_SetConfig(htim->Instance,
 4201              		.loc 1 3016 0
 4202 001c 0068     		ldr	r0, [r0]
 4203              	.LVL473:
 4204 001e 0968     		ldr	r1, [r1]
 4205              	.LVL474:
 4206 0020 6A68     		ldr	r2, [r5, #4]
 4207              	.LVL475:
 4208 0022 EB68     		ldr	r3, [r5, #12]
 4209 0024 FFF7FEFF 		bl	TIM_TI1_SetConfig
 4210              	.LVL476:
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 4211              		.loc 1 3022 0
 4212 0028 2368     		ldr	r3, [r4]
 4213 002a 9A69     		ldr	r2, [r3, #24]
 4214 002c 22F00C02 		bic	r2, r2, #12
 4215 0030 9A61     		str	r2, [r3, #24]
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 |= sConfig->ICPrescaler;
 4216              		.loc 1 3025 0
 4217 0032 2368     		ldr	r3, [r4]
 4218 0034 9969     		ldr	r1, [r3, #24]
 4219 0036 AA68     		ldr	r2, [r5, #8]
 4220 0038 0A43     		orrs	r2, r2, r1
 4221 003a 9A61     		str	r2, [r3, #24]
 4222 003c 37E0     		b	.L245
 4223              	.LVL477:
 4224              	.L244:
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_2)
 4225              		.loc 1 3027 0
ARM GAS  /tmp/cc8lNJIB.s 			page 177


 4226 003e 042A     		cmp	r2, #4
 4227 0040 11D1     		bne	.L246
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI2_SetConfig(htim->Instance, 
 4228              		.loc 1 3032 0
 4229 0042 0068     		ldr	r0, [r0]
 4230              	.LVL478:
 4231 0044 0968     		ldr	r1, [r1]
 4232              	.LVL479:
 4233 0046 6A68     		ldr	r2, [r5, #4]
 4234              	.LVL480:
 4235 0048 EB68     		ldr	r3, [r5, #12]
 4236 004a FFF7FEFF 		bl	TIM_TI2_SetConfig
 4237              	.LVL481:
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 4238              		.loc 1 3038 0
 4239 004e 2368     		ldr	r3, [r4]
 4240 0050 9A69     		ldr	r2, [r3, #24]
 4241 0052 22F44062 		bic	r2, r2, #3072
 4242 0056 9A61     		str	r2, [r3, #24]
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 |= (sConfig->ICPrescaler << 8U);
 4243              		.loc 1 3041 0
 4244 0058 2368     		ldr	r3, [r4]
 4245 005a 9A69     		ldr	r2, [r3, #24]
 4246 005c A968     		ldr	r1, [r5, #8]
 4247 005e 42EA0122 		orr	r2, r2, r1, lsl #8
 4248 0062 9A61     		str	r2, [r3, #24]
 4249 0064 23E0     		b	.L245
 4250              	.LVL482:
 4251              	.L246:
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if (Channel == TIM_CHANNEL_3)
 4252              		.loc 1 3043 0
 4253 0066 082A     		cmp	r2, #8
 4254 0068 10D1     		bne	.L247
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI3_SetConfig(htim->Instance,  
 4255              		.loc 1 3048 0
 4256 006a 0068     		ldr	r0, [r0]
 4257              	.LVL483:
 4258 006c 0968     		ldr	r1, [r1]
 4259              	.LVL484:
 4260 006e 6A68     		ldr	r2, [r5, #4]
 4261              	.LVL485:
 4262 0070 EB68     		ldr	r3, [r5, #12]
 4263 0072 FFF7FEFF 		bl	TIM_TI3_SetConfig
 4264              	.LVL486:
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC3PSC;
 4265              		.loc 1 3054 0
 4266 0076 2368     		ldr	r3, [r4]
 4267 0078 DA69     		ldr	r2, [r3, #28]
 4268 007a 22F00C02 		bic	r2, r2, #12
 4269 007e DA61     		str	r2, [r3, #28]
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 |= sConfig->ICPrescaler;
 4270              		.loc 1 3057 0
 4271 0080 2368     		ldr	r3, [r4]
 4272 0082 D969     		ldr	r1, [r3, #28]
 4273 0084 AA68     		ldr	r2, [r5, #8]
 4274 0086 0A43     		orrs	r2, r2, r1
 4275 0088 DA61     		str	r2, [r3, #28]
ARM GAS  /tmp/cc8lNJIB.s 			page 178


 4276 008a 10E0     		b	.L245
 4277              	.LVL487:
 4278              	.L247:
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_TI4_SetConfig(htim->Instance, 
 4279              		.loc 1 3064 0
 4280 008c 0068     		ldr	r0, [r0]
 4281              	.LVL488:
 4282 008e 0968     		ldr	r1, [r1]
 4283              	.LVL489:
 4284 0090 6A68     		ldr	r2, [r5, #4]
 4285              	.LVL490:
 4286 0092 EB68     		ldr	r3, [r5, #12]
 4287 0094 FFF7FEFF 		bl	TIM_TI4_SetConfig
 4288              	.LVL491:
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 &= ~TIM_CCMR2_IC4PSC;
 4289              		.loc 1 3070 0
 4290 0098 2368     		ldr	r3, [r4]
 4291 009a DA69     		ldr	r2, [r3, #28]
 4292 009c 22F44062 		bic	r2, r2, #3072
 4293 00a0 DA61     		str	r2, [r3, #28]
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR2 |= (sConfig->ICPrescaler << 8U);
 4294              		.loc 1 3073 0
 4295 00a2 2368     		ldr	r3, [r4]
 4296 00a4 DA69     		ldr	r2, [r3, #28]
 4297 00a6 A968     		ldr	r1, [r5, #8]
 4298 00a8 42EA0122 		orr	r2, r2, r1, lsl #8
 4299 00ac DA61     		str	r2, [r3, #28]
 4300              	.L245:
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4301              		.loc 1 3076 0
 4302 00ae 0123     		movs	r3, #1
 4303 00b0 84F83D30 		strb	r3, [r4, #61]
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4304              		.loc 1 3078 0
 4305 00b4 0020     		movs	r0, #0
 4306 00b6 84F83C00 		strb	r0, [r4, #60]
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK; 
 4307              		.loc 1 3080 0
 4308 00ba 38BD     		pop	{r3, r4, r5, pc}
 4309              	.LVL492:
 4310              	.L248:
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4311              		.loc 1 3009 0
 4312 00bc 0220     		movs	r0, #2
 4313              	.LVL493:
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 4314              		.loc 1 3081 0
 4315 00be 38BD     		pop	{r3, r4, r5, pc}
 4316              		.cfi_endproc
 4317              	.LFE183:
 4319              		.section	.text.HAL_TIM_OnePulse_ConfigChannel,"ax",%progbits
 4320              		.align	2
 4321              		.global	HAL_TIM_OnePulse_ConfigChannel
 4322              		.thumb
 4323              		.thumb_func
 4325              	HAL_TIM_OnePulse_ConfigChannel:
 4326              	.LFB185:
ARM GAS  /tmp/cc8lNJIB.s 			page 179


3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 4327              		.loc 1 3197 0
 4328              		.cfi_startproc
 4329              		@ args = 0, pretend = 0, frame = 32
 4330              		@ frame_needed = 0, uses_anonymous_args = 0
 4331              	.LVL494:
 4332 0000 70B5     		push	{r4, r5, r6, lr}
 4333              	.LCFI36:
 4334              		.cfi_def_cfa_offset 16
 4335              		.cfi_offset 4, -16
 4336              		.cfi_offset 5, -12
 4337              		.cfi_offset 6, -8
 4338              		.cfi_offset 14, -4
 4339 0002 88B0     		sub	sp, sp, #32
 4340              	.LCFI37:
 4341              		.cfi_def_cfa_offset 48
 4342 0004 0446     		mov	r4, r0
 4343 0006 0D46     		mov	r5, r1
 4344 0008 1E46     		mov	r6, r3
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(OutputChannel != InputChannel)  
 4345              		.loc 1 3204 0
 4346 000a 9A42     		cmp	r2, r3
 4347 000c 70D0     		beq	.L257
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4348              		.loc 1 3206 0
 4349 000e 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 4350              	.LVL495:
 4351 0012 012B     		cmp	r3, #1
 4352 0014 6ED0     		beq	.L258
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4353              		.loc 1 3206 0 is_stmt 0 discriminator 2
 4354 0016 0123     		movs	r3, #1
 4355 0018 80F83C30 		strb	r3, [r0, #60]
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4356              		.loc 1 3208 0 is_stmt 1 discriminator 2
 4357 001c 0223     		movs	r3, #2
 4358 001e 80F83D30 		strb	r3, [r0, #61]
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCMode = sConfig->OCMode;
 4359              		.loc 1 3211 0 discriminator 2
 4360 0022 0B68     		ldr	r3, [r1]
 4361 0024 0193     		str	r3, [sp, #4]
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.Pulse = sConfig->Pulse;
 4362              		.loc 1 3212 0 discriminator 2
 4363 0026 4B68     		ldr	r3, [r1, #4]
 4364 0028 0293     		str	r3, [sp, #8]
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCPolarity = sConfig->OCPolarity;
 4365              		.loc 1 3213 0 discriminator 2
 4366 002a 8B68     		ldr	r3, [r1, #8]
 4367 002c 0393     		str	r3, [sp, #12]
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCNPolarity = sConfig->OCNPolarity;
 4368              		.loc 1 3214 0 discriminator 2
 4369 002e CB68     		ldr	r3, [r1, #12]
 4370 0030 0493     		str	r3, [sp, #16]
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCIdleState = sConfig->OCIdleState;
 4371              		.loc 1 3215 0 discriminator 2
 4372 0032 0B69     		ldr	r3, [r1, #16]
 4373 0034 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/cc8lNJIB.s 			page 180


3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   temp1.OCNIdleState = sConfig->OCNIdleState; 
 4374              		.loc 1 3216 0 discriminator 2
 4375 0036 4B69     		ldr	r3, [r1, #20]
 4376 0038 0793     		str	r3, [sp, #28]
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     switch (OutputChannel)
 4377              		.loc 1 3218 0 discriminator 2
 4378 003a 12B1     		cbz	r2, .L252
 4379 003c 042A     		cmp	r2, #4
 4380 003e 05D0     		beq	.L253
 4381 0040 08E0     		b	.L251
 4382              	.L252:
3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC1_SetConfig(htim->Instance, &temp1); 
 4383              		.loc 1 3224 0
 4384 0042 0068     		ldr	r0, [r0]
 4385              	.LVL496:
 4386 0044 01A9     		add	r1, sp, #4
 4387              	.LVL497:
 4388 0046 FFF7FEFF 		bl	TIM_OC1_SetConfig
 4389              	.LVL498:
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4390              		.loc 1 3226 0
 4391 004a 03E0     		b	.L251
 4392              	.LVL499:
 4393              	.L253:
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_OC2_SetConfig(htim->Instance, &temp1);
 4394              		.loc 1 3231 0
 4395 004c 0068     		ldr	r0, [r0]
 4396              	.LVL500:
 4397 004e 01A9     		add	r1, sp, #4
 4398              	.LVL501:
 4399 0050 FFF7FEFF 		bl	TIM_OC2_SetConfig
 4400              	.LVL502:
 4401              	.L251:
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     switch (InputChannel)
 4402              		.loc 1 3237 0
 4403 0054 16B1     		cbz	r6, .L255
 4404 0056 042E     		cmp	r6, #4
 4405 0058 22D0     		beq	.L256
 4406 005a 42E0     		b	.L254
 4407              	.L255:
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_SetConfig(htim->Instance, sConfig->ICPolarity,
 4408              		.loc 1 3243 0
 4409 005c 2068     		ldr	r0, [r4]
 4410 005e A969     		ldr	r1, [r5, #24]
 4411 0060 EA69     		ldr	r2, [r5, #28]
 4412 0062 2B6A     		ldr	r3, [r5, #32]
 4413 0064 FFF7FEFF 		bl	TIM_TI1_SetConfig
 4414              	.LVL503:
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->CCMR1 &= ~TIM_CCMR1_IC1PSC;
 4415              		.loc 1 3247 0
 4416 0068 2368     		ldr	r3, [r4]
 4417 006a 9A69     		ldr	r2, [r3, #24]
 4418 006c 22F00C02 		bic	r2, r2, #12
 4419 0070 9A61     		str	r2, [r3, #24]
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
 4420              		.loc 1 3250 0
 4421 0072 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc8lNJIB.s 			page 181


 4422 0074 9A68     		ldr	r2, [r3, #8]
 4423 0076 22F07002 		bic	r2, r2, #112
 4424 007a 9A60     		str	r2, [r3, #8]
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->SMCR |= TIM_TS_TI1FP1;
 4425              		.loc 1 3251 0
 4426 007c 2368     		ldr	r3, [r4]
 4427 007e 9A68     		ldr	r2, [r3, #8]
 4428 0080 42F05002 		orr	r2, r2, #80
 4429 0084 9A60     		str	r2, [r3, #8]
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 4430              		.loc 1 3254 0
 4431 0086 2268     		ldr	r2, [r4]
 4432 0088 9368     		ldr	r3, [r2, #8]
 4433 008a 23F48033 		bic	r3, r3, #65536
 4434 008e 23F00703 		bic	r3, r3, #7
 4435 0092 9360     		str	r3, [r2, #8]
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
 4436              		.loc 1 3255 0
 4437 0094 2368     		ldr	r3, [r4]
 4438 0096 9A68     		ldr	r2, [r3, #8]
 4439 0098 42F00602 		orr	r2, r2, #6
 4440 009c 9A60     		str	r2, [r3, #8]
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4441              		.loc 1 3257 0
 4442 009e 20E0     		b	.L254
 4443              	.L256:
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI2_SetConfig(htim->Instance, sConfig->ICPolarity,
 4444              		.loc 1 3262 0
 4445 00a0 2068     		ldr	r0, [r4]
 4446 00a2 A969     		ldr	r1, [r5, #24]
 4447 00a4 EA69     		ldr	r2, [r5, #28]
 4448 00a6 2B6A     		ldr	r3, [r5, #32]
 4449 00a8 FFF7FEFF 		bl	TIM_TI2_SetConfig
 4450              	.LVL504:
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_IC2PSC;
 4451              		.loc 1 3266 0
 4452 00ac 2368     		ldr	r3, [r4]
 4453 00ae 9A69     		ldr	r2, [r3, #24]
 4454 00b0 22F44062 		bic	r2, r2, #3072
 4455 00b4 9A61     		str	r2, [r3, #24]
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_TS;
 4456              		.loc 1 3269 0
 4457 00b6 2368     		ldr	r3, [r4]
 4458 00b8 9A68     		ldr	r2, [r3, #8]
 4459 00ba 22F07002 		bic	r2, r2, #112
 4460 00be 9A60     		str	r2, [r3, #8]
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_TS_TI2FP2;
 4461              		.loc 1 3270 0
 4462 00c0 2368     		ldr	r3, [r4]
 4463 00c2 9A68     		ldr	r2, [r3, #8]
 4464 00c4 42F06002 		orr	r2, r2, #96
 4465 00c8 9A60     		str	r2, [r3, #8]
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 4466              		.loc 1 3273 0
 4467 00ca 2268     		ldr	r2, [r4]
 4468 00cc 9368     		ldr	r3, [r2, #8]
 4469 00ce 23F48033 		bic	r3, r3, #65536
ARM GAS  /tmp/cc8lNJIB.s 			page 182


 4470 00d2 23F00703 		bic	r3, r3, #7
 4471 00d6 9360     		str	r3, [r2, #8]
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SLAVEMODE_TRIGGER;
 4472              		.loc 1 3274 0
 4473 00d8 2368     		ldr	r3, [r4]
 4474 00da 9A68     		ldr	r2, [r3, #8]
 4475 00dc 42F00602 		orr	r2, r2, #6
 4476 00e0 9A60     		str	r2, [r3, #8]
 4477              	.L254:
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4478              		.loc 1 3282 0
 4479 00e2 0123     		movs	r3, #1
 4480 00e4 84F83D30 		strb	r3, [r4, #61]
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4481              		.loc 1 3284 0
 4482 00e8 0020     		movs	r0, #0
 4483 00ea 84F83C00 		strb	r0, [r4, #60]
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 4484              		.loc 1 3286 0
 4485 00ee 02E0     		b	.L250
 4486              	.LVL505:
 4487              	.L257:
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_ERROR;
 4488              		.loc 1 3290 0
 4489 00f0 0120     		movs	r0, #1
 4490              	.LVL506:
 4491 00f2 00E0     		b	.L250
 4492              	.LVL507:
 4493              	.L258:
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4494              		.loc 1 3206 0
 4495 00f4 0220     		movs	r0, #2
 4496              	.LVL508:
 4497              	.L250:
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 4498              		.loc 1 3292 0
 4499 00f6 08B0     		add	sp, sp, #32
 4500              		@ sp needed
 4501 00f8 70BD     		pop	{r4, r5, r6, pc}
 4502              		.cfi_endproc
 4503              	.LFE185:
 4505              		.section	.text.TIM_ETR_SetConfig,"ax",%progbits
 4506              		.align	2
 4507              		.global	TIM_ETR_SetConfig
 4508              		.thumb
 4509              		.thumb_func
 4511              	TIM_ETR_SetConfig:
 4512              	.LFB227:
5309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
5310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Configures the TIMx External Trigger (ETR).
5312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ExtTRGPrescaler: The external Trigger Prescaler.
5314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV1 : ETRP Prescaler OFF.
5316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV2 : ETRP frequency divided by 2.
5317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV4 : ETRP frequency divided by 4.
ARM GAS  /tmp/cc8lNJIB.s 			page 183


5318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ETRPRESCALER_DIV8 : ETRP frequency divided by 8.
5319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIM_ExtTRGPolarity: The external Trigger Polarity.
5320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_INVERTED : active low or falling edge active.
5322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_ETRPOLARITY_NONINVERTED : active high or rising edge active.
5323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  ExtTRGFilter: External Trigger Filter.
5324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter must be a value between 0x00 and 0x0F
5325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_ETR_SetConfig(TIM_TypeDef* TIMx, uint32_t TIM_ExtTRGPrescaler,
5328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****                        uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
5329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 4513              		.loc 1 5329 0
 4514              		.cfi_startproc
 4515              		@ args = 0, pretend = 0, frame = 0
 4516              		@ frame_needed = 0, uses_anonymous_args = 0
 4517              		@ link register save eliminated.
 4518              	.LVL509:
 4519 0000 10B4     		push	{r4}
 4520              	.LCFI38:
 4521              		.cfi_def_cfa_offset 4
 4522              		.cfi_offset 4, -4
 4523              	.LVL510:
5330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmpsmcr = 0U;
5331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr = TIMx->SMCR;
 4524              		.loc 1 5332 0
 4525 0002 8468     		ldr	r4, [r0, #8]
 4526              	.LVL511:
5333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the ETR Bits */
5335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 4527              		.loc 1 5335 0
 4528 0004 24F47F44 		bic	r4, r4, #65280
 4529              	.LVL512:
5336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set the Prescaler, the Filter value and the Polarity */
5338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 4530              		.loc 1 5338 0
 4531 0008 42EA0323 		orr	r3, r2, r3, lsl #8
 4532              	.LVL513:
 4533 000c 1943     		orrs	r1, r1, r3
 4534              	.LVL514:
 4535 000e 0C43     		orrs	r4, r4, r1
 4536              	.LVL515:
5339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Write to TIMx SMCR */
5341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->SMCR = tmpsmcr;
 4537              		.loc 1 5341 0
 4538 0010 8460     		str	r4, [r0, #8]
5342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 4539              		.loc 1 5342 0
 4540 0012 5DF8044B 		ldr	r4, [sp], #4
 4541              	.LVL516:
 4542 0016 7047     		bx	lr
 4543              		.cfi_endproc
 4544              	.LFE227:
ARM GAS  /tmp/cc8lNJIB.s 			page 184


 4546              		.section	.text.HAL_TIM_ConfigOCrefClear,"ax",%progbits
 4547              		.align	2
 4548              		.weak	HAL_TIM_ConfigOCrefClear
 4549              		.thumb
 4550              		.thumb_func
 4552              	HAL_TIM_ConfigOCrefClear:
 4553              	.LFB191:
3798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {  
 4554              		.loc 1 3798 0
 4555              		.cfi_startproc
 4556              		@ args = 0, pretend = 0, frame = 0
 4557              		@ frame_needed = 0, uses_anonymous_args = 0
 4558              	.LVL517:
 4559 0000 70B5     		push	{r4, r5, r6, lr}
 4560              	.LCFI39:
 4561              		.cfi_def_cfa_offset 16
 4562              		.cfi_offset 4, -16
 4563              		.cfi_offset 5, -12
 4564              		.cfi_offset 6, -8
 4565              		.cfi_offset 14, -4
 4566 0002 0446     		mov	r4, r0
 4567 0004 0D46     		mov	r5, r1
 4568 0006 1646     		mov	r6, r2
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4569              		.loc 1 3805 0
 4570 0008 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 4571 000c 012B     		cmp	r3, #1
 4572 000e 57D0     		beq	.L273
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4573              		.loc 1 3805 0 is_stmt 0 discriminator 2
 4574 0010 0123     		movs	r3, #1
 4575 0012 80F83C30 		strb	r3, [r0, #60]
3807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4576              		.loc 1 3807 0 is_stmt 1 discriminator 2
 4577 0016 0223     		movs	r3, #2
 4578 0018 80F83D30 		strb	r3, [r0, #61]
3809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(sClearInputConfig->ClearInputSource == TIM_CLEARINPUTSOURCE_ETR)
 4579              		.loc 1 3809 0 discriminator 2
 4580 001c 4B68     		ldr	r3, [r1, #4]
 4581 001e 012B     		cmp	r3, #1
 4582 0020 05D1     		bne	.L262
3816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_ETR_SetConfig(htim->Instance, 
 4583              		.loc 1 3816 0
 4584 0022 0068     		ldr	r0, [r0]
 4585              	.LVL518:
 4586 0024 C968     		ldr	r1, [r1, #12]
 4587              	.LVL519:
 4588 0026 AA68     		ldr	r2, [r5, #8]
 4589              	.LVL520:
 4590 0028 2B69     		ldr	r3, [r5, #16]
 4591 002a FFF7FEFF 		bl	TIM_ETR_SetConfig
 4592              	.LVL521:
 4593              	.L262:
3822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 4594              		.loc 1 3822 0
 4595 002e 0C2E     		cmp	r6, #12
 4596 0030 3FD8     		bhi	.L263
ARM GAS  /tmp/cc8lNJIB.s 			page 185


 4597 0032 DFE806F0 		tbb	[pc, r6]
 4598              	.L265:
 4599 0036 07       		.byte	(.L264-.L265)/2
 4600 0037 3E       		.byte	(.L263-.L265)/2
 4601 0038 3E       		.byte	(.L263-.L265)/2
 4602 0039 3E       		.byte	(.L263-.L265)/2
 4603 003a 15       		.byte	(.L266-.L265)/2
 4604 003b 3E       		.byte	(.L263-.L265)/2
 4605 003c 3E       		.byte	(.L263-.L265)/2
 4606 003d 3E       		.byte	(.L263-.L265)/2
 4607 003e 23       		.byte	(.L267-.L265)/2
 4608 003f 3E       		.byte	(.L263-.L265)/2
 4609 0040 3E       		.byte	(.L263-.L265)/2
 4610 0041 3E       		.byte	(.L263-.L265)/2
 4611 0042 31       		.byte	(.L268-.L265)/2
 4612 0043 00       		.p2align 1
 4613              	.L264:
3826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
 4614              		.loc 1 3826 0
 4615 0044 2B68     		ldr	r3, [r5]
 4616 0046 2BB1     		cbz	r3, .L269
3829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC1CE;
 4617              		.loc 1 3829 0
 4618 0048 2368     		ldr	r3, [r4]
 4619 004a 9A69     		ldr	r2, [r3, #24]
 4620 004c 42F08002 		orr	r2, r2, #128
 4621 0050 9A61     		str	r2, [r3, #24]
 4622 0052 2EE0     		b	.L263
 4623              	.L269:
3834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1CE;      
 4624              		.loc 1 3834 0
 4625 0054 2368     		ldr	r3, [r4]
 4626 0056 9A69     		ldr	r2, [r3, #24]
 4627 0058 22F08002 		bic	r2, r2, #128
 4628 005c 9A61     		str	r2, [r3, #24]
 4629 005e 28E0     		b	.L263
 4630              	.L266:
3841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
 4631              		.loc 1 3841 0
 4632 0060 2B68     		ldr	r3, [r5]
 4633 0062 2BB1     		cbz	r3, .L270
3844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 |= TIM_CCMR1_OC2CE;
 4634              		.loc 1 3844 0
 4635 0064 2368     		ldr	r3, [r4]
 4636 0066 9A69     		ldr	r2, [r3, #24]
 4637 0068 42F40042 		orr	r2, r2, #32768
 4638 006c 9A61     		str	r2, [r3, #24]
 4639 006e 20E0     		b	.L263
 4640              	.L270:
3849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2CE;      
 4641              		.loc 1 3849 0
 4642 0070 2368     		ldr	r3, [r4]
 4643 0072 9A69     		ldr	r2, [r3, #24]
 4644 0074 22F40042 		bic	r2, r2, #32768
 4645 0078 9A61     		str	r2, [r3, #24]
 4646 007a 1AE0     		b	.L263
 4647              	.L267:
ARM GAS  /tmp/cc8lNJIB.s 			page 186


3856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
 4648              		.loc 1 3856 0
 4649 007c 2B68     		ldr	r3, [r5]
 4650 007e 2BB1     		cbz	r3, .L271
3859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC3CE;
 4651              		.loc 1 3859 0
 4652 0080 2368     		ldr	r3, [r4]
 4653 0082 DA69     		ldr	r2, [r3, #28]
 4654 0084 42F08002 		orr	r2, r2, #128
 4655 0088 DA61     		str	r2, [r3, #28]
 4656 008a 12E0     		b	.L263
 4657              	.L271:
3864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3CE;      
 4658              		.loc 1 3864 0
 4659 008c 2368     		ldr	r3, [r4]
 4660 008e DA69     		ldr	r2, [r3, #28]
 4661 0090 22F08002 		bic	r2, r2, #128
 4662 0094 DA61     		str	r2, [r3, #28]
 4663 0096 0CE0     		b	.L263
 4664              	.L268:
3871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       if(sClearInputConfig->ClearInputState != RESET)  
 4665              		.loc 1 3871 0
 4666 0098 2B68     		ldr	r3, [r5]
 4667 009a 2BB1     		cbz	r3, .L272
3874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR2 |= TIM_CCMR2_OC4CE;
 4668              		.loc 1 3874 0
 4669 009c 2368     		ldr	r3, [r4]
 4670 009e DA69     		ldr	r2, [r3, #28]
 4671 00a0 42F40042 		orr	r2, r2, #32768
 4672 00a4 DA61     		str	r2, [r3, #28]
 4673 00a6 04E0     		b	.L263
 4674              	.L272:
3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****         htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4CE;      
 4675              		.loc 1 3879 0
 4676 00a8 2368     		ldr	r3, [r4]
 4677 00aa DA69     		ldr	r2, [r3, #28]
 4678 00ac 22F40042 		bic	r2, r2, #32768
 4679 00b0 DA61     		str	r2, [r3, #28]
 4680              	.L263:
3887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4681              		.loc 1 3887 0
 4682 00b2 0123     		movs	r3, #1
 4683 00b4 84F83D30 		strb	r3, [r4, #61]
3889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4684              		.loc 1 3889 0
 4685 00b8 0020     		movs	r0, #0
 4686 00ba 84F83C00 		strb	r0, [r4, #60]
3891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;  
 4687              		.loc 1 3891 0
 4688 00be 70BD     		pop	{r4, r5, r6, pc}
 4689              	.LVL522:
 4690              	.L273:
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4691              		.loc 1 3805 0
 4692 00c0 0220     		movs	r0, #2
 4693              	.LVL523:
3892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }  
ARM GAS  /tmp/cc8lNJIB.s 			page 187


 4694              		.loc 1 3892 0
 4695 00c2 70BD     		pop	{r4, r5, r6, pc}
 4696              		.cfi_endproc
 4697              	.LFE191:
 4699              		.section	.text.HAL_TIM_ConfigClockSource,"ax",%progbits
 4700              		.align	2
 4701              		.global	HAL_TIM_ConfigClockSource
 4702              		.thumb
 4703              		.thumb_func
 4705              	HAL_TIM_ConfigClockSource:
 4706              	.LFB192:
3902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 4707              		.loc 1 3902 0
 4708              		.cfi_startproc
 4709              		@ args = 0, pretend = 0, frame = 0
 4710              		@ frame_needed = 0, uses_anonymous_args = 0
 4711              	.LVL524:
 4712 0000 38B5     		push	{r3, r4, r5, lr}
 4713              	.LCFI40:
 4714              		.cfi_def_cfa_offset 16
 4715              		.cfi_offset 3, -16
 4716              		.cfi_offset 4, -12
 4717              		.cfi_offset 5, -8
 4718              		.cfi_offset 14, -4
 4719 0002 0446     		mov	r4, r0
 4720 0004 0D46     		mov	r5, r1
 4721              	.LVL525:
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4722              		.loc 1 3906 0
 4723 0006 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 4724 000a 012B     		cmp	r3, #1
 4725 000c 00F08580 		beq	.L290
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4726              		.loc 1 3906 0 is_stmt 0 discriminator 2
 4727 0010 0123     		movs	r3, #1
 4728 0012 80F83C30 		strb	r3, [r0, #60]
3908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 4729              		.loc 1 3908 0 is_stmt 1 discriminator 2
 4730 0016 0223     		movs	r3, #2
 4731 0018 80F83D30 		strb	r3, [r0, #61]
3914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 4732              		.loc 1 3914 0 discriminator 2
 4733 001c 0268     		ldr	r2, [r0]
 4734 001e 9168     		ldr	r1, [r2, #8]
 4735              	.LVL526:
3916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 4736              		.loc 1 3916 0 discriminator 2
 4737 0020 3F4B     		ldr	r3, .L291
 4738 0022 0B40     		ands	r3, r3, r1
 4739              	.LVL527:
3917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 4740              		.loc 1 3917 0 discriminator 2
 4741 0024 9360     		str	r3, [r2, #8]
3919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (sClockSourceConfig->ClockSource)
 4742              		.loc 1 3919 0 discriminator 2
 4743 0026 2B68     		ldr	r3, [r5]
 4744              	.LVL528:
ARM GAS  /tmp/cc8lNJIB.s 			page 188


 4745 0028 402B     		cmp	r3, #64
 4746 002a 52D0     		beq	.L277
 4747 002c 0AD8     		bhi	.L278
 4748 002e 102B     		cmp	r3, #16
 4749 0030 5ED0     		beq	.L279
 4750 0032 02D8     		bhi	.L280
 4751 0034 002B     		cmp	r3, #0
 4752 0036 56D0     		beq	.L281
 4753 0038 68E0     		b	.L276
 4754              	.L280:
 4755 003a 202B     		cmp	r3, #32
 4756 003c 5DD0     		beq	.L282
 4757 003e 302B     		cmp	r3, #48
 4758 0040 60D0     		beq	.L283
 4759 0042 63E0     		b	.L276
 4760              	.L278:
 4761 0044 702B     		cmp	r3, #112
 4762 0046 14D0     		beq	.L284
 4763 0048 04D8     		bhi	.L285
 4764 004a 502B     		cmp	r3, #80
 4765 004c 2DD0     		beq	.L286
 4766 004e 602B     		cmp	r3, #96
 4767 0050 35D0     		beq	.L287
 4768 0052 5BE0     		b	.L276
 4769              	.L285:
 4770 0054 B3F5805F 		cmp	r3, #4096
 4771 0058 03D0     		beq	.L288
 4772 005a B3F5005F 		cmp	r3, #8192
 4773 005e 18D0     		beq	.L289
 4774 0060 54E0     		b	.L276
 4775              	.L288:
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR &= ~TIM_SMCR_SMS;
 4776              		.loc 1 3925 0
 4777 0062 0268     		ldr	r2, [r0]
 4778              	.LVL529:
 4779 0064 9368     		ldr	r3, [r2, #8]
 4780 0066 23F48033 		bic	r3, r3, #65536
 4781 006a 23F00703 		bic	r3, r3, #7
 4782 006e 9360     		str	r3, [r2, #8]
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4783              		.loc 1 3927 0
 4784 0070 4CE0     		b	.L276
 4785              	.LVL530:
 4786              	.L284:
3940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance, 
 4787              		.loc 1 3940 0
 4788 0072 0068     		ldr	r0, [r0]
 4789              	.LVL531:
 4790 0074 A968     		ldr	r1, [r5, #8]
 4791 0076 6A68     		ldr	r2, [r5, #4]
 4792              	.LVL532:
 4793 0078 EB68     		ldr	r3, [r5, #12]
 4794 007a FFF7FEFF 		bl	TIM_ETR_SetConfig
 4795              	.LVL533:
3945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpsmcr = htim->Instance->SMCR;
 4796              		.loc 1 3945 0
 4797 007e 2268     		ldr	r2, [r4]
ARM GAS  /tmp/cc8lNJIB.s 			page 189


 4798 0080 9368     		ldr	r3, [r2, #8]
 4799              	.LVL534:
3947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 4800              		.loc 1 3947 0
 4801 0082 23F48033 		bic	r3, r3, #65536
 4802              	.LVL535:
 4803 0086 23F07703 		bic	r3, r3, #119
 4804              	.LVL536:
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 4805              		.loc 1 3949 0
 4806 008a 43F07703 		orr	r3, r3, #119
 4807              	.LVL537:
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR = tmpsmcr;
 4808              		.loc 1 3951 0
 4809 008e 9360     		str	r3, [r2, #8]
3953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4810              		.loc 1 3953 0
 4811 0090 3CE0     		b	.L276
 4812              	.LVL538:
 4813              	.L289:
3966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance, 
 4814              		.loc 1 3966 0
 4815 0092 0068     		ldr	r0, [r0]
 4816              	.LVL539:
 4817 0094 A968     		ldr	r1, [r5, #8]
 4818 0096 6A68     		ldr	r2, [r5, #4]
 4819              	.LVL540:
 4820 0098 EB68     		ldr	r3, [r5, #12]
 4821 009a FFF7FEFF 		bl	TIM_ETR_SetConfig
 4822              	.LVL541:
3971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->SMCR |= TIM_SMCR_ECE;
 4823              		.loc 1 3971 0
 4824 009e 2368     		ldr	r3, [r4]
 4825 00a0 9A68     		ldr	r2, [r3, #8]
 4826 00a2 42F48042 		orr	r2, r2, #16384
 4827 00a6 9A60     		str	r2, [r3, #8]
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4828              		.loc 1 3973 0
 4829 00a8 30E0     		b	.L276
 4830              	.LVL542:
 4831              	.L286:
3984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance, 
 4832              		.loc 1 3984 0
 4833 00aa 0068     		ldr	r0, [r0]
 4834              	.LVL543:
 4835 00ac 6968     		ldr	r1, [r5, #4]
 4836 00ae EA68     		ldr	r2, [r5, #12]
 4837              	.LVL544:
 4838 00b0 FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
 4839              	.LVL545:
3987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 4840              		.loc 1 3987 0
 4841 00b4 2068     		ldr	r0, [r4]
 4842 00b6 5021     		movs	r1, #80
 4843 00b8 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 4844              	.LVL546:
3989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
ARM GAS  /tmp/cc8lNJIB.s 			page 190


 4845              		.loc 1 3989 0
 4846 00bc 26E0     		b	.L276
 4847              	.LVL547:
 4848              	.L287:
3999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance, 
 4849              		.loc 1 3999 0
 4850 00be 0068     		ldr	r0, [r0]
 4851              	.LVL548:
 4852 00c0 6968     		ldr	r1, [r5, #4]
 4853 00c2 EA68     		ldr	r2, [r5, #12]
 4854              	.LVL549:
 4855 00c4 FFF7FEFF 		bl	TIM_TI2_ConfigInputStage
 4856              	.LVL550:
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 4857              		.loc 1 4002 0
 4858 00c8 2068     		ldr	r0, [r4]
 4859 00ca 6021     		movs	r1, #96
 4860 00cc FFF7FEFF 		bl	TIM_ITRx_SetConfig
 4861              	.LVL551:
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4862              		.loc 1 4004 0
 4863 00d0 1CE0     		b	.L276
 4864              	.LVL552:
 4865              	.L277:
4014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance, 
 4866              		.loc 1 4014 0
 4867 00d2 0068     		ldr	r0, [r0]
 4868              	.LVL553:
 4869 00d4 6968     		ldr	r1, [r5, #4]
 4870 00d6 EA68     		ldr	r2, [r5, #12]
 4871              	.LVL554:
 4872 00d8 FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
 4873              	.LVL555:
4017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 4874              		.loc 1 4017 0
 4875 00dc 2068     		ldr	r0, [r4]
 4876 00de 4021     		movs	r1, #64
 4877 00e0 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 4878              	.LVL556:
4019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4879              		.loc 1 4019 0
 4880 00e4 12E0     		b	.L276
 4881              	.LVL557:
 4882              	.L281:
4025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR0);
 4883              		.loc 1 4025 0
 4884 00e6 0068     		ldr	r0, [r0]
 4885              	.LVL558:
 4886 00e8 0021     		movs	r1, #0
 4887 00ea FFF7FEFF 		bl	TIM_ITRx_SetConfig
 4888              	.LVL559:
4027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4889              		.loc 1 4027 0
 4890 00ee 0DE0     		b	.L276
 4891              	.LVL560:
 4892              	.L279:
4033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR1);
ARM GAS  /tmp/cc8lNJIB.s 			page 191


 4893              		.loc 1 4033 0
 4894 00f0 0068     		ldr	r0, [r0]
 4895              	.LVL561:
 4896 00f2 1021     		movs	r1, #16
 4897 00f4 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 4898              	.LVL562:
4035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4899              		.loc 1 4035 0
 4900 00f8 08E0     		b	.L276
 4901              	.LVL563:
 4902              	.L282:
4041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR2);
 4903              		.loc 1 4041 0
 4904 00fa 0068     		ldr	r0, [r0]
 4905              	.LVL564:
 4906 00fc 2021     		movs	r1, #32
 4907 00fe FFF7FEFF 		bl	TIM_ITRx_SetConfig
 4908              	.LVL565:
4043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 4909              		.loc 1 4043 0
 4910 0102 03E0     		b	.L276
 4911              	.LVL566:
 4912              	.L283:
4049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_ITR3);
 4913              		.loc 1 4049 0
 4914 0104 0068     		ldr	r0, [r0]
 4915              	.LVL567:
 4916 0106 3021     		movs	r1, #48
 4917 0108 FFF7FEFF 		bl	TIM_ITRx_SetConfig
 4918              	.LVL568:
 4919              	.L276:
4056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 4920              		.loc 1 4056 0
 4921 010c 0123     		movs	r3, #1
 4922 010e 84F83D30 		strb	r3, [r4, #61]
4058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);
 4923              		.loc 1 4058 0
 4924 0112 0020     		movs	r0, #0
 4925 0114 84F83C00 		strb	r0, [r4, #60]
4060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 4926              		.loc 1 4060 0
 4927 0118 38BD     		pop	{r3, r4, r5, pc}
 4928              	.LVL569:
 4929              	.L290:
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 4930              		.loc 1 3906 0
 4931 011a 0220     		movs	r0, #2
 4932              	.LVL570:
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 4933              		.loc 1 4061 0
 4934 011c 38BD     		pop	{r3, r4, r5, pc}
 4935              	.LVL571:
 4936              	.L292:
 4937 011e 00BF     		.align	2
 4938              	.L291:
 4939 0120 8800FEFF 		.word	-130936
 4940              		.cfi_endproc
ARM GAS  /tmp/cc8lNJIB.s 			page 192


 4941              	.LFE192:
 4943              		.section	.text.TIM_SlaveTimer_SetConfig,"ax",%progbits
 4944              		.align	2
 4945              		.thumb
 4946              		.thumb_func
 4948              	TIM_SlaveTimer_SetConfig:
 4949              	.LFB219:
4891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 4950              		.loc 1 4891 0
 4951              		.cfi_startproc
 4952              		@ args = 0, pretend = 0, frame = 0
 4953              		@ frame_needed = 0, uses_anonymous_args = 0
 4954              	.LVL572:
 4955 0000 10B5     		push	{r4, lr}
 4956              	.LCFI41:
 4957              		.cfi_def_cfa_offset 8
 4958              		.cfi_offset 4, -8
 4959              		.cfi_offset 14, -4
 4960 0002 0B46     		mov	r3, r1
 4961              	.LVL573:
4897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr = htim->Instance->SMCR;
 4962              		.loc 1 4897 0
 4963 0004 0168     		ldr	r1, [r0]
 4964              	.LVL574:
 4965 0006 8A68     		ldr	r2, [r1, #8]
 4966              	.LVL575:
4900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_TS;
 4967              		.loc 1 4900 0
 4968 0008 22F07002 		bic	r2, r2, #112
 4969              	.LVL576:
4902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->InputTrigger;
 4970              		.loc 1 4902 0
 4971 000c 5C68     		ldr	r4, [r3, #4]
 4972 000e 2243     		orrs	r2, r2, r4
 4973              	.LVL577:
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr &= ~TIM_SMCR_SMS;
 4974              		.loc 1 4905 0
 4975 0010 22F48032 		bic	r2, r2, #65536
 4976              	.LVL578:
 4977 0014 22F00702 		bic	r2, r2, #7
 4978              	.LVL579:
4907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmpsmcr |= sSlaveConfig->SlaveMode;
 4979              		.loc 1 4907 0
 4980 0018 1C68     		ldr	r4, [r3]
 4981 001a 2243     		orrs	r2, r2, r4
 4982              	.LVL580:
4910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->Instance->SMCR = tmpsmcr;
 4983              		.loc 1 4910 0
 4984 001c 8A60     		str	r2, [r1, #8]
4913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (sSlaveConfig->InputTrigger)
 4985              		.loc 1 4913 0
 4986 001e 5A68     		ldr	r2, [r3, #4]
 4987              	.LVL581:
 4988 0020 502A     		cmp	r2, #80
 4989 0022 1FD0     		beq	.L295
 4990 0024 02D8     		bhi	.L296
 4991 0026 402A     		cmp	r2, #64
ARM GAS  /tmp/cc8lNJIB.s 			page 193


 4992 0028 0BD0     		beq	.L297
 4993 002a 10BD     		pop	{r4, pc}
 4994              	.L296:
 4995 002c 602A     		cmp	r2, #96
 4996 002e 1FD0     		beq	.L298
 4997 0030 702A     		cmp	r2, #112
 4998 0032 22D1     		bne	.L293
4923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_ETR_SetConfig(htim->Instance, 
 4999              		.loc 1 4923 0
 5000 0034 0068     		ldr	r0, [r0]
 5001              	.LVL582:
 5002 0036 D968     		ldr	r1, [r3, #12]
 5003              	.LVL583:
 5004 0038 9A68     		ldr	r2, [r3, #8]
 5005 003a 1B69     		ldr	r3, [r3, #16]
 5006              	.LVL584:
 5007 003c FFF7FEFF 		bl	TIM_ETR_SetConfig
 5008              	.LVL585:
4928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5009              		.loc 1 4928 0
 5010 0040 10BD     		pop	{r4, pc}
 5011              	.LVL586:
 5012              	.L297:
4937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccer = htim->Instance->CCER;
 5013              		.loc 1 4937 0
 5014 0042 0268     		ldr	r2, [r0]
 5015 0044 116A     		ldr	r1, [r2, #32]
 5016              	.LVL587:
4938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCER &= ~TIM_CCER_CC1E;
 5017              		.loc 1 4938 0
 5018 0046 146A     		ldr	r4, [r2, #32]
 5019 0048 24F00104 		bic	r4, r4, #1
 5020 004c 1462     		str	r4, [r2, #32]
4939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccmr1 = htim->Instance->CCMR1;    
 5021              		.loc 1 4939 0
 5022 004e 0268     		ldr	r2, [r0]
 5023 0050 9469     		ldr	r4, [r2, #24]
 5024              	.LVL588:
4942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccmr1 &= ~TIM_CCMR1_IC1F;
 5025              		.loc 1 4942 0
 5026 0052 24F0F004 		bic	r4, r4, #240
 5027              	.LVL589:
4943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       tmpccmr1 |= ((sSlaveConfig->TriggerFilter) << 4U);
 5028              		.loc 1 4943 0
 5029 0056 1B69     		ldr	r3, [r3, #16]
 5030              	.LVL590:
 5031 0058 44EA0313 		orr	r3, r4, r3, lsl #4
 5032              	.LVL591:
4946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCMR1 = tmpccmr1;
 5033              		.loc 1 4946 0
 5034 005c 9361     		str	r3, [r2, #24]
4947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->Instance->CCER = tmpccer;                               
 5035              		.loc 1 4947 0
 5036 005e 0368     		ldr	r3, [r0]
 5037              	.LVL592:
 5038 0060 1962     		str	r1, [r3, #32]
 5039              	.LVL593:
ARM GAS  /tmp/cc8lNJIB.s 			page 194


4950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5040              		.loc 1 4950 0
 5041 0062 10BD     		pop	{r4, pc}
 5042              	.LVL594:
 5043              	.L295:
4960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI1_ConfigInputStage(htim->Instance,
 5044              		.loc 1 4960 0
 5045 0064 0068     		ldr	r0, [r0]
 5046              	.LVL595:
 5047 0066 9968     		ldr	r1, [r3, #8]
 5048              	.LVL596:
 5049 0068 1A69     		ldr	r2, [r3, #16]
 5050 006a FFF7FEFF 		bl	TIM_TI1_ConfigInputStage
 5051              	.LVL597:
4964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5052              		.loc 1 4964 0
 5053 006e 10BD     		pop	{r4, pc}
 5054              	.LVL598:
 5055              	.L298:
4974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_TI2_ConfigInputStage(htim->Instance,
 5056              		.loc 1 4974 0
 5057 0070 0068     		ldr	r0, [r0]
 5058              	.LVL599:
 5059 0072 9968     		ldr	r1, [r3, #8]
 5060              	.LVL600:
 5061 0074 1A69     		ldr	r2, [r3, #16]
 5062 0076 FFF7FEFF 		bl	TIM_TI2_ConfigInputStage
 5063              	.LVL601:
 5064              	.L293:
 5065 007a 10BD     		pop	{r4, pc}
 5066              		.cfi_endproc
 5067              	.LFE219:
 5069              		.section	.text.HAL_TIM_SlaveConfigSynchronization,"ax",%progbits
 5070              		.align	2
 5071              		.global	HAL_TIM_SlaveConfigSynchronization
 5072              		.thumb
 5073              		.thumb_func
 5075              	HAL_TIM_SlaveConfigSynchronization:
 5076              	.LFB194:
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5077              		.loc 1 4108 0
 5078              		.cfi_startproc
 5079              		@ args = 0, pretend = 0, frame = 0
 5080              		@ frame_needed = 0, uses_anonymous_args = 0
 5081              	.LVL602:
 5082 0000 38B5     		push	{r3, r4, r5, lr}
 5083              	.LCFI42:
 5084              		.cfi_def_cfa_offset 16
 5085              		.cfi_offset 3, -16
 5086              		.cfi_offset 4, -12
 5087              		.cfi_offset 5, -8
 5088              		.cfi_offset 14, -4
 5089 0002 0446     		mov	r4, r0
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 5090              		.loc 1 4114 0
 5091 0004 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 5092 0008 012B     		cmp	r3, #1
ARM GAS  /tmp/cc8lNJIB.s 			page 195


 5093 000a 17D0     		beq	.L302
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 5094              		.loc 1 4114 0 is_stmt 0 discriminator 2
 5095 000c 0125     		movs	r5, #1
 5096 000e 80F83C50 		strb	r5, [r0, #60]
4116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5097              		.loc 1 4116 0 is_stmt 1 discriminator 2
 5098 0012 0223     		movs	r3, #2
 5099 0014 80F83D30 		strb	r3, [r0, #61]
4118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
 5100              		.loc 1 4118 0 discriminator 2
 5101 0018 FFF7FEFF 		bl	TIM_SlaveTimer_SetConfig
 5102              	.LVL603:
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_TRIGGER);
 5103              		.loc 1 4121 0 discriminator 2
 5104 001c 2368     		ldr	r3, [r4]
 5105 001e DA68     		ldr	r2, [r3, #12]
 5106 0020 22F04002 		bic	r2, r2, #64
 5107 0024 DA60     		str	r2, [r3, #12]
4124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 5108              		.loc 1 4124 0 discriminator 2
 5109 0026 2368     		ldr	r3, [r4]
 5110 0028 DA68     		ldr	r2, [r3, #12]
 5111 002a 22F48042 		bic	r2, r2, #16384
 5112 002e DA60     		str	r2, [r3, #12]
4126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 5113              		.loc 1 4126 0 discriminator 2
 5114 0030 84F83D50 		strb	r5, [r4, #61]
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);  
 5115              		.loc 1 4128 0 discriminator 2
 5116 0034 0020     		movs	r0, #0
 5117 0036 84F83C00 		strb	r0, [r4, #60]
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 5118              		.loc 1 4130 0 discriminator 2
 5119 003a 38BD     		pop	{r3, r4, r5, pc}
 5120              	.LVL604:
 5121              	.L302:
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 5122              		.loc 1 4114 0
 5123 003c 0220     		movs	r0, #2
 5124              	.LVL605:
4131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 5125              		.loc 1 4131 0
 5126 003e 38BD     		pop	{r3, r4, r5, pc}
 5127              		.cfi_endproc
 5128              	.LFE194:
 5130              		.section	.text.HAL_TIM_SlaveConfigSynchronization_IT,"ax",%progbits
 5131              		.align	2
 5132              		.global	HAL_TIM_SlaveConfigSynchronization_IT
 5133              		.thumb
 5134              		.thumb_func
 5136              	HAL_TIM_SlaveConfigSynchronization_IT:
 5137              	.LFB195:
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5138              		.loc 1 4144 0
 5139              		.cfi_startproc
 5140              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cc8lNJIB.s 			page 196


 5141              		@ frame_needed = 0, uses_anonymous_args = 0
 5142              	.LVL606:
 5143 0000 38B5     		push	{r3, r4, r5, lr}
 5144              	.LCFI43:
 5145              		.cfi_def_cfa_offset 16
 5146              		.cfi_offset 3, -16
 5147              		.cfi_offset 4, -12
 5148              		.cfi_offset 5, -8
 5149              		.cfi_offset 14, -4
 5150 0002 0446     		mov	r4, r0
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 5151              		.loc 1 4150 0
 5152 0004 90F83C30 		ldrb	r3, [r0, #60]	@ zero_extendqisi2
 5153 0008 012B     		cmp	r3, #1
 5154 000a 17D0     		beq	.L305
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 5155              		.loc 1 4150 0 is_stmt 0 discriminator 2
 5156 000c 0125     		movs	r5, #1
 5157 000e 80F83C50 		strb	r5, [r0, #60]
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_BUSY;
 5158              		.loc 1 4152 0 is_stmt 1 discriminator 2
 5159 0012 0223     		movs	r3, #2
 5160 0014 80F83D30 		strb	r3, [r0, #61]
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_SlaveTimer_SetConfig(htim, sSlaveConfig);
 5161              		.loc 1 4154 0 discriminator 2
 5162 0018 FFF7FEFF 		bl	TIM_SlaveTimer_SetConfig
 5163              	.LVL607:
4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_TRIGGER);
 5164              		.loc 1 4157 0 discriminator 2
 5165 001c 2368     		ldr	r3, [r4]
 5166 001e DA68     		ldr	r2, [r3, #12]
 5167 0020 42F04002 		orr	r2, r2, #64
 5168 0024 DA60     		str	r2, [r3, #12]
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_TRIGGER);
 5169              		.loc 1 4160 0 discriminator 2
 5170 0026 2368     		ldr	r3, [r4]
 5171 0028 DA68     		ldr	r2, [r3, #12]
 5172 002a 22F48042 		bic	r2, r2, #16384
 5173 002e DA60     		str	r2, [r3, #12]
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 5174              		.loc 1 4162 0 discriminator 2
 5175 0030 84F83D50 		strb	r5, [r4, #61]
4164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_UNLOCK(htim);  
 5176              		.loc 1 4164 0 discriminator 2
 5177 0034 0020     		movs	r0, #0
 5178 0036 84F83C00 		strb	r0, [r4, #60]
4166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 5179              		.loc 1 4166 0 discriminator 2
 5180 003a 38BD     		pop	{r3, r4, r5, pc}
 5181              	.LVL608:
 5182              	.L305:
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_LOCK(htim);
 5183              		.loc 1 4150 0
 5184 003c 0220     		movs	r0, #2
 5185              	.LVL609:
4167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 5186              		.loc 1 4167 0
ARM GAS  /tmp/cc8lNJIB.s 			page 197


 5187 003e 38BD     		pop	{r3, r4, r5, pc}
 5188              		.cfi_endproc
 5189              	.LFE195:
 5191              		.section	.text.TIM_CCxChannelCmd,"ax",%progbits
 5192              		.align	2
 5193              		.global	TIM_CCxChannelCmd
 5194              		.thumb
 5195              		.thumb_func
 5197              	TIM_CCxChannelCmd:
 5198              	.LFB228:
5343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** /**
5345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @brief  Enables or disables the TIM Capture Compare Channel x.
5346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  TIMx to select the TIM peripheral
5347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  Channel: specifies the TIM Channel
5348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be one of the following values:
5349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_1: TIM Channel 1
5350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_2: TIM Channel 2
5351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_3: TIM Channel 3
5352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *            @arg TIM_CHANNEL_4: TIM Channel 4
5353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @param  ChannelState: specifies the TIM Channel CCxE bit new state.
5354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_Disable. 
5355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   * @retval None
5356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   */
5357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** void TIM_CCxChannelCmd(TIM_TypeDef* TIMx, uint32_t Channel, uint32_t ChannelState)
5358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5199              		.loc 1 5358 0
 5200              		.cfi_startproc
 5201              		@ args = 0, pretend = 0, frame = 0
 5202              		@ frame_needed = 0, uses_anonymous_args = 0
 5203              		@ link register save eliminated.
 5204              	.LVL610:
 5205 0000 10B4     		push	{r4}
 5206              	.LCFI44:
 5207              		.cfi_def_cfa_offset 4
 5208              		.cfi_offset 4, -4
 5209              	.LVL611:
5359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   uint32_t tmp = 0U;
5360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Check the parameters */
5362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CC1_INSTANCE(TIMx)); 
5363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   assert_param(IS_TIM_CHANNELS(Channel));
5364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   tmp = TIM_CCER_CC1E << Channel;
 5210              		.loc 1 5365 0
 5211 0002 0123     		movs	r3, #1
 5212 0004 8B40     		lsls	r3, r3, r1
 5213              	.LVL612:
5366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
5367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Reset the CCxE Bit */
5368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER &= ~tmp;
 5214              		.loc 1 5368 0
 5215 0006 046A     		ldr	r4, [r0, #32]
 5216 0008 24EA0303 		bic	r3, r4, r3
 5217              	.LVL613:
 5218 000c 0362     		str	r3, [r0, #32]
5369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** 
ARM GAS  /tmp/cc8lNJIB.s 			page 198


5370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   /* Set or reset the CCxE Bit */ 
5371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIMx->CCER |=  (uint32_t)(ChannelState << Channel);
 5219              		.loc 1 5371 0
 5220 000e 036A     		ldr	r3, [r0, #32]
 5221 0010 8A40     		lsls	r2, r2, r1
 5222              	.LVL614:
 5223 0012 1343     		orrs	r3, r3, r2
 5224 0014 0362     		str	r3, [r0, #32]
5372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 5225              		.loc 1 5372 0
 5226 0016 5DF8044B 		ldr	r4, [sp], #4
 5227 001a 7047     		bx	lr
 5228              		.cfi_endproc
 5229              	.LFE228:
 5231              		.section	.text.HAL_TIM_OC_Start,"ax",%progbits
 5232              		.align	2
 5233              		.global	HAL_TIM_OC_Start
 5234              		.thumb
 5235              		.thumb_func
 5237              	HAL_TIM_OC_Start:
 5238              	.LFB137:
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5239              		.loc 1 584 0
 5240              		.cfi_startproc
 5241              		@ args = 0, pretend = 0, frame = 0
 5242              		@ frame_needed = 0, uses_anonymous_args = 0
 5243              	.LVL615:
 5244 0000 10B5     		push	{r4, lr}
 5245              	.LCFI45:
 5246              		.cfi_def_cfa_offset 8
 5247              		.cfi_offset 4, -8
 5248              		.cfi_offset 14, -4
 5249 0002 0446     		mov	r4, r0
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 5250              		.loc 1 589 0
 5251 0004 0068     		ldr	r0, [r0]
 5252              	.LVL616:
 5253 0006 0122     		movs	r2, #1
 5254 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 5255              	.LVL617:
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5256              		.loc 1 591 0
 5257 000c 2368     		ldr	r3, [r4]
 5258 000e 124A     		ldr	r2, .L314
 5259 0010 9342     		cmp	r3, r2
 5260 0012 0DD0     		beq	.L310
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5261              		.loc 1 591 0 is_stmt 0 discriminator 2
 5262 0014 02F5A052 		add	r2, r2, #5120
 5263 0018 9342     		cmp	r3, r2
 5264 001a 0BD0     		beq	.L311
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5265              		.loc 1 591 0 discriminator 1
 5266 001c 02F58062 		add	r2, r2, #1024
 5267 0020 9342     		cmp	r3, r2
 5268 0022 09D0     		beq	.L312
 5269 0024 02F58062 		add	r2, r2, #1024
ARM GAS  /tmp/cc8lNJIB.s 			page 199


 5270 0028 9342     		cmp	r3, r2
 5271 002a 07D1     		bne	.L313
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5272              		.loc 1 591 0
 5273 002c 0122     		movs	r2, #1
 5274 002e 06E0     		b	.L308
 5275              	.L310:
 5276 0030 0122     		movs	r2, #1
 5277 0032 04E0     		b	.L308
 5278              	.L311:
 5279 0034 0122     		movs	r2, #1
 5280 0036 02E0     		b	.L308
 5281              	.L312:
 5282 0038 0122     		movs	r2, #1
 5283 003a 00E0     		b	.L308
 5284              	.L313:
 5285 003c 0022     		movs	r2, #0
 5286              	.L308:
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5287              		.loc 1 591 0 discriminator 4
 5288 003e 1AB1     		cbz	r2, .L309
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 5289              		.loc 1 594 0 is_stmt 1
 5290 0040 5A6C     		ldr	r2, [r3, #68]
 5291 0042 42F40042 		orr	r2, r2, #32768
 5292 0046 5A64     		str	r2, [r3, #68]
 5293              	.L309:
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
 5294              		.loc 1 598 0
 5295 0048 2368     		ldr	r3, [r4]
 5296 004a 1A68     		ldr	r2, [r3]
 5297 004c 42F00102 		orr	r2, r2, #1
 5298 0050 1A60     		str	r2, [r3]
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 5299              		.loc 1 602 0
 5300 0052 0020     		movs	r0, #0
 5301 0054 10BD     		pop	{r4, pc}
 5302              	.LVL618:
 5303              	.L315:
 5304 0056 00BF     		.align	2
 5305              	.L314:
 5306 0058 002C0140 		.word	1073818624
 5307              		.cfi_endproc
 5308              	.LFE137:
 5310              		.section	.text.HAL_TIM_OC_Stop,"ax",%progbits
 5311              		.align	2
 5312              		.global	HAL_TIM_OC_Stop
 5313              		.thumb
 5314              		.thumb_func
 5316              	HAL_TIM_OC_Stop:
 5317              	.LFB138:
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5318              		.loc 1 616 0
 5319              		.cfi_startproc
 5320              		@ args = 0, pretend = 0, frame = 0
 5321              		@ frame_needed = 0, uses_anonymous_args = 0
 5322              	.LVL619:
ARM GAS  /tmp/cc8lNJIB.s 			page 200


 5323 0000 10B5     		push	{r4, lr}
 5324              	.LCFI46:
 5325              		.cfi_def_cfa_offset 8
 5326              		.cfi_offset 4, -8
 5327              		.cfi_offset 14, -4
 5328 0002 0446     		mov	r4, r0
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 5329              		.loc 1 621 0
 5330 0004 0068     		ldr	r0, [r0]
 5331              	.LVL620:
 5332 0006 0022     		movs	r2, #0
 5333 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 5334              	.LVL621:
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5335              		.loc 1 623 0
 5336 000c 2368     		ldr	r3, [r4]
 5337 000e 1C4A     		ldr	r2, .L324
 5338 0010 9342     		cmp	r3, r2
 5339 0012 0DD0     		beq	.L320
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5340              		.loc 1 623 0 is_stmt 0 discriminator 2
 5341 0014 02F5A052 		add	r2, r2, #5120
 5342 0018 9342     		cmp	r3, r2
 5343 001a 0BD0     		beq	.L321
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5344              		.loc 1 623 0 discriminator 1
 5345 001c 02F58062 		add	r2, r2, #1024
 5346 0020 9342     		cmp	r3, r2
 5347 0022 09D0     		beq	.L322
 5348 0024 02F58062 		add	r2, r2, #1024
 5349 0028 9342     		cmp	r3, r2
 5350 002a 07D1     		bne	.L323
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5351              		.loc 1 623 0
 5352 002c 0122     		movs	r2, #1
 5353 002e 06E0     		b	.L317
 5354              	.L320:
 5355 0030 0122     		movs	r2, #1
 5356 0032 04E0     		b	.L317
 5357              	.L321:
 5358 0034 0122     		movs	r2, #1
 5359 0036 02E0     		b	.L317
 5360              	.L322:
 5361 0038 0122     		movs	r2, #1
 5362 003a 00E0     		b	.L317
 5363              	.L323:
 5364 003c 0022     		movs	r2, #0
 5365              	.L317:
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5366              		.loc 1 623 0 discriminator 4
 5367 003e 6AB1     		cbz	r2, .L318
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 5368              		.loc 1 626 0 is_stmt 1
 5369 0040 196A     		ldr	r1, [r3, #32]
 5370 0042 41F21112 		movw	r2, #4369
 5371 0046 1142     		tst	r1, r2
 5372 0048 08D1     		bne	.L318
ARM GAS  /tmp/cc8lNJIB.s 			page 201


 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 5373              		.loc 1 626 0 is_stmt 0 discriminator 1
 5374 004a 196A     		ldr	r1, [r3, #32]
 5375 004c 40F24442 		movw	r2, #1092
 5376 0050 1142     		tst	r1, r2
 5377 0052 03D1     		bne	.L318
 5378 0054 5A6C     		ldr	r2, [r3, #68]
 5379 0056 22F40042 		bic	r2, r2, #32768
 5380 005a 5A64     		str	r2, [r3, #68]
 5381              	.L318:
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);  
 5382              		.loc 1 630 0 is_stmt 1
 5383 005c 2368     		ldr	r3, [r4]
 5384 005e 196A     		ldr	r1, [r3, #32]
 5385 0060 41F21112 		movw	r2, #4369
 5386 0064 1142     		tst	r1, r2
 5387 0066 08D1     		bne	.L319
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);  
 5388              		.loc 1 630 0 is_stmt 0 discriminator 1
 5389 0068 196A     		ldr	r1, [r3, #32]
 5390 006a 40F24442 		movw	r2, #1092
 5391 006e 1142     		tst	r1, r2
 5392 0070 03D1     		bne	.L319
 5393 0072 1A68     		ldr	r2, [r3]
 5394 0074 22F00102 		bic	r2, r2, #1
 5395 0078 1A60     		str	r2, [r3]
 5396              	.L319:
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }  
 5397              		.loc 1 634 0 is_stmt 1
 5398 007a 0020     		movs	r0, #0
 5399 007c 10BD     		pop	{r4, pc}
 5400              	.LVL622:
 5401              	.L325:
 5402 007e 00BF     		.align	2
 5403              	.L324:
 5404 0080 002C0140 		.word	1073818624
 5405              		.cfi_endproc
 5406              	.LFE138:
 5408              		.section	.text.HAL_TIM_OC_Start_IT,"ax",%progbits
 5409              		.align	2
 5410              		.global	HAL_TIM_OC_Start_IT
 5411              		.thumb
 5412              		.thumb_func
 5414              	HAL_TIM_OC_Start_IT:
 5415              	.LFB139:
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5416              		.loc 1 648 0
 5417              		.cfi_startproc
 5418              		@ args = 0, pretend = 0, frame = 0
 5419              		@ frame_needed = 0, uses_anonymous_args = 0
 5420              	.LVL623:
 5421 0000 10B5     		push	{r4, lr}
 5422              	.LCFI47:
 5423              		.cfi_def_cfa_offset 8
 5424              		.cfi_offset 4, -8
 5425              		.cfi_offset 14, -4
 5426 0002 0446     		mov	r4, r0
ARM GAS  /tmp/cc8lNJIB.s 			page 202


 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 5427              		.loc 1 652 0
 5428 0004 0C29     		cmp	r1, #12
 5429 0006 1FD8     		bhi	.L327
 5430 0008 DFE801F0 		tbb	[pc, r1]
 5431              	.L329:
 5432 000c 07       		.byte	(.L328-.L329)/2
 5433 000d 1E       		.byte	(.L327-.L329)/2
 5434 000e 1E       		.byte	(.L327-.L329)/2
 5435 000f 1E       		.byte	(.L327-.L329)/2
 5436 0010 0D       		.byte	(.L330-.L329)/2
 5437 0011 1E       		.byte	(.L327-.L329)/2
 5438 0012 1E       		.byte	(.L327-.L329)/2
 5439 0013 1E       		.byte	(.L327-.L329)/2
 5440 0014 13       		.byte	(.L331-.L329)/2
 5441 0015 1E       		.byte	(.L327-.L329)/2
 5442 0016 1E       		.byte	(.L327-.L329)/2
 5443 0017 1E       		.byte	(.L327-.L329)/2
 5444 0018 19       		.byte	(.L332-.L329)/2
 5445 0019 00       		.p2align 1
 5446              	.L328:
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 5447              		.loc 1 657 0
 5448 001a 0368     		ldr	r3, [r0]
 5449 001c DA68     		ldr	r2, [r3, #12]
 5450 001e 42F00202 		orr	r2, r2, #2
 5451 0022 DA60     		str	r2, [r3, #12]
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5452              		.loc 1 659 0
 5453 0024 10E0     		b	.L327
 5454              	.L330:
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 5455              		.loc 1 664 0
 5456 0026 0368     		ldr	r3, [r0]
 5457 0028 DA68     		ldr	r2, [r3, #12]
 5458 002a 42F00402 		orr	r2, r2, #4
 5459 002e DA60     		str	r2, [r3, #12]
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5460              		.loc 1 666 0
 5461 0030 0AE0     		b	.L327
 5462              	.L331:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 5463              		.loc 1 671 0
 5464 0032 0368     		ldr	r3, [r0]
 5465 0034 DA68     		ldr	r2, [r3, #12]
 5466 0036 42F00802 		orr	r2, r2, #8
 5467 003a DA60     		str	r2, [r3, #12]
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5468              		.loc 1 673 0
 5469 003c 04E0     		b	.L327
 5470              	.L332:
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 5471              		.loc 1 678 0
 5472 003e 0368     		ldr	r3, [r0]
 5473 0040 DA68     		ldr	r2, [r3, #12]
 5474 0042 42F01002 		orr	r2, r2, #16
 5475 0046 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cc8lNJIB.s 			page 203


 5476              	.L327:
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 5477              		.loc 1 687 0
 5478 0048 2068     		ldr	r0, [r4]
 5479              	.LVL624:
 5480 004a 0122     		movs	r2, #1
 5481 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 5482              	.LVL625:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5483              		.loc 1 689 0
 5484 0050 2368     		ldr	r3, [r4]
 5485 0052 124A     		ldr	r2, .L339
 5486 0054 9342     		cmp	r3, r2
 5487 0056 0DD0     		beq	.L335
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5488              		.loc 1 689 0 is_stmt 0 discriminator 2
 5489 0058 02F5A052 		add	r2, r2, #5120
 5490 005c 9342     		cmp	r3, r2
 5491 005e 0BD0     		beq	.L336
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5492              		.loc 1 689 0 discriminator 1
 5493 0060 02F58062 		add	r2, r2, #1024
 5494 0064 9342     		cmp	r3, r2
 5495 0066 09D0     		beq	.L337
 5496 0068 02F58062 		add	r2, r2, #1024
 5497 006c 9342     		cmp	r3, r2
 5498 006e 07D1     		bne	.L338
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5499              		.loc 1 689 0
 5500 0070 0122     		movs	r2, #1
 5501 0072 06E0     		b	.L333
 5502              	.L335:
 5503 0074 0122     		movs	r2, #1
 5504 0076 04E0     		b	.L333
 5505              	.L336:
 5506 0078 0122     		movs	r2, #1
 5507 007a 02E0     		b	.L333
 5508              	.L337:
 5509 007c 0122     		movs	r2, #1
 5510 007e 00E0     		b	.L333
 5511              	.L338:
 5512 0080 0022     		movs	r2, #0
 5513              	.L333:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5514              		.loc 1 689 0 discriminator 4
 5515 0082 1AB1     		cbz	r2, .L334
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 5516              		.loc 1 692 0 is_stmt 1
 5517 0084 5A6C     		ldr	r2, [r3, #68]
 5518 0086 42F40042 		orr	r2, r2, #32768
 5519 008a 5A64     		str	r2, [r3, #68]
 5520              	.L334:
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 5521              		.loc 1 696 0
 5522 008c 2368     		ldr	r3, [r4]
 5523 008e 1A68     		ldr	r2, [r3]
 5524 0090 42F00102 		orr	r2, r2, #1
ARM GAS  /tmp/cc8lNJIB.s 			page 204


 5525 0094 1A60     		str	r2, [r3]
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 5526              		.loc 1 700 0
 5527 0096 0020     		movs	r0, #0
 5528 0098 10BD     		pop	{r4, pc}
 5529              	.LVL626:
 5530              	.L340:
 5531 009a 00BF     		.align	2
 5532              	.L339:
 5533 009c 002C0140 		.word	1073818624
 5534              		.cfi_endproc
 5535              	.LFE139:
 5537              		.section	.text.HAL_TIM_OC_Stop_IT,"ax",%progbits
 5538              		.align	2
 5539              		.global	HAL_TIM_OC_Stop_IT
 5540              		.thumb
 5541              		.thumb_func
 5543              	HAL_TIM_OC_Stop_IT:
 5544              	.LFB140:
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5545              		.loc 1 714 0
 5546              		.cfi_startproc
 5547              		@ args = 0, pretend = 0, frame = 0
 5548              		@ frame_needed = 0, uses_anonymous_args = 0
 5549              	.LVL627:
 5550 0000 10B5     		push	{r4, lr}
 5551              	.LCFI48:
 5552              		.cfi_def_cfa_offset 8
 5553              		.cfi_offset 4, -8
 5554              		.cfi_offset 14, -4
 5555 0002 0446     		mov	r4, r0
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 5556              		.loc 1 718 0
 5557 0004 0C29     		cmp	r1, #12
 5558 0006 1FD8     		bhi	.L342
 5559 0008 DFE801F0 		tbb	[pc, r1]
 5560              	.L344:
 5561 000c 07       		.byte	(.L343-.L344)/2
 5562 000d 1E       		.byte	(.L342-.L344)/2
 5563 000e 1E       		.byte	(.L342-.L344)/2
 5564 000f 1E       		.byte	(.L342-.L344)/2
 5565 0010 0D       		.byte	(.L345-.L344)/2
 5566 0011 1E       		.byte	(.L342-.L344)/2
 5567 0012 1E       		.byte	(.L342-.L344)/2
 5568 0013 1E       		.byte	(.L342-.L344)/2
 5569 0014 13       		.byte	(.L346-.L344)/2
 5570 0015 1E       		.byte	(.L342-.L344)/2
 5571 0016 1E       		.byte	(.L342-.L344)/2
 5572 0017 1E       		.byte	(.L342-.L344)/2
 5573 0018 19       		.byte	(.L347-.L344)/2
 5574 0019 00       		.p2align 1
 5575              	.L343:
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 5576              		.loc 1 723 0
 5577 001a 0368     		ldr	r3, [r0]
 5578 001c DA68     		ldr	r2, [r3, #12]
 5579 001e 22F00202 		bic	r2, r2, #2
ARM GAS  /tmp/cc8lNJIB.s 			page 205


 5580 0022 DA60     		str	r2, [r3, #12]
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5581              		.loc 1 725 0
 5582 0024 10E0     		b	.L342
 5583              	.L345:
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 5584              		.loc 1 730 0
 5585 0026 0368     		ldr	r3, [r0]
 5586 0028 DA68     		ldr	r2, [r3, #12]
 5587 002a 22F00402 		bic	r2, r2, #4
 5588 002e DA60     		str	r2, [r3, #12]
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5589              		.loc 1 732 0
 5590 0030 0AE0     		b	.L342
 5591              	.L346:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 5592              		.loc 1 737 0
 5593 0032 0368     		ldr	r3, [r0]
 5594 0034 DA68     		ldr	r2, [r3, #12]
 5595 0036 22F00802 		bic	r2, r2, #8
 5596 003a DA60     		str	r2, [r3, #12]
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5597              		.loc 1 739 0
 5598 003c 04E0     		b	.L342
 5599              	.L347:
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 5600              		.loc 1 744 0
 5601 003e 0368     		ldr	r3, [r0]
 5602 0040 DA68     		ldr	r2, [r3, #12]
 5603 0042 22F01002 		bic	r2, r2, #16
 5604 0046 DA60     		str	r2, [r3, #12]
 5605              	.L342:
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE); 
 5606              		.loc 1 753 0
 5607 0048 2068     		ldr	r0, [r4]
 5608              	.LVL628:
 5609 004a 0022     		movs	r2, #0
 5610 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 5611              	.LVL629:
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5612              		.loc 1 755 0
 5613 0050 2368     		ldr	r3, [r4]
 5614 0052 1C4A     		ldr	r2, .L355
 5615 0054 9342     		cmp	r3, r2
 5616 0056 0DD0     		beq	.L351
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5617              		.loc 1 755 0 is_stmt 0 discriminator 2
 5618 0058 02F5A052 		add	r2, r2, #5120
 5619 005c 9342     		cmp	r3, r2
 5620 005e 0BD0     		beq	.L352
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5621              		.loc 1 755 0 discriminator 1
 5622 0060 02F58062 		add	r2, r2, #1024
 5623 0064 9342     		cmp	r3, r2
 5624 0066 09D0     		beq	.L353
 5625 0068 02F58062 		add	r2, r2, #1024
 5626 006c 9342     		cmp	r3, r2
ARM GAS  /tmp/cc8lNJIB.s 			page 206


 5627 006e 07D1     		bne	.L354
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5628              		.loc 1 755 0
 5629 0070 0122     		movs	r2, #1
 5630 0072 06E0     		b	.L348
 5631              	.L351:
 5632 0074 0122     		movs	r2, #1
 5633 0076 04E0     		b	.L348
 5634              	.L352:
 5635 0078 0122     		movs	r2, #1
 5636 007a 02E0     		b	.L348
 5637              	.L353:
 5638 007c 0122     		movs	r2, #1
 5639 007e 00E0     		b	.L348
 5640              	.L354:
 5641 0080 0022     		movs	r2, #0
 5642              	.L348:
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5643              		.loc 1 755 0 discriminator 4
 5644 0082 6AB1     		cbz	r2, .L349
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 5645              		.loc 1 758 0 is_stmt 1
 5646 0084 196A     		ldr	r1, [r3, #32]
 5647 0086 41F21112 		movw	r2, #4369
 5648 008a 1142     		tst	r1, r2
 5649 008c 08D1     		bne	.L349
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 5650              		.loc 1 758 0 is_stmt 0 discriminator 1
 5651 008e 196A     		ldr	r1, [r3, #32]
 5652 0090 40F24442 		movw	r2, #1092
 5653 0094 1142     		tst	r1, r2
 5654 0096 03D1     		bne	.L349
 5655 0098 5A6C     		ldr	r2, [r3, #68]
 5656 009a 22F40042 		bic	r2, r2, #32768
 5657 009e 5A64     		str	r2, [r3, #68]
 5658              	.L349:
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);  
 5659              		.loc 1 762 0 is_stmt 1
 5660 00a0 2368     		ldr	r3, [r4]
 5661 00a2 196A     		ldr	r1, [r3, #32]
 5662 00a4 41F21112 		movw	r2, #4369
 5663 00a8 1142     		tst	r1, r2
 5664 00aa 08D1     		bne	.L350
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);  
 5665              		.loc 1 762 0 is_stmt 0 discriminator 1
 5666 00ac 196A     		ldr	r1, [r3, #32]
 5667 00ae 40F24442 		movw	r2, #1092
 5668 00b2 1142     		tst	r1, r2
 5669 00b4 03D1     		bne	.L350
 5670 00b6 1A68     		ldr	r2, [r3]
 5671 00b8 22F00102 		bic	r2, r2, #1
 5672 00bc 1A60     		str	r2, [r3]
 5673              	.L350:
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 5674              		.loc 1 766 0 is_stmt 1
 5675 00be 0020     		movs	r0, #0
 5676 00c0 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc8lNJIB.s 			page 207


 5677              	.LVL630:
 5678              	.L356:
 5679 00c2 00BF     		.align	2
 5680              	.L355:
 5681 00c4 002C0140 		.word	1073818624
 5682              		.cfi_endproc
 5683              	.LFE140:
 5685              		.section	.text.HAL_TIM_OC_Start_DMA,"ax",%progbits
 5686              		.align	2
 5687              		.global	HAL_TIM_OC_Start_DMA
 5688              		.thumb
 5689              		.thumb_func
 5691              	HAL_TIM_OC_Start_DMA:
 5692              	.LFB141:
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 5693              		.loc 1 782 0
 5694              		.cfi_startproc
 5695              		@ args = 0, pretend = 0, frame = 0
 5696              		@ frame_needed = 0, uses_anonymous_args = 0
 5697              	.LVL631:
 5698 0000 70B5     		push	{r4, r5, r6, lr}
 5699              	.LCFI49:
 5700              		.cfi_def_cfa_offset 16
 5701              		.cfi_offset 4, -16
 5702              		.cfi_offset 5, -12
 5703              		.cfi_offset 6, -8
 5704              		.cfi_offset 14, -4
 5705 0002 0446     		mov	r4, r0
 5706 0004 0D46     		mov	r5, r1
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 5707              		.loc 1 786 0
 5708 0006 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 5709              	.LVL632:
 5710 000a C0B2     		uxtb	r0, r0
 5711 000c 0228     		cmp	r0, #2
 5712 000e 00F08C80 		beq	.L369
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 5713              		.loc 1 790 0
 5714 0012 94F83D10 		ldrb	r1, [r4, #61]	@ zero_extendqisi2
 5715              	.LVL633:
 5716 0016 C9B2     		uxtb	r1, r1
 5717 0018 0129     		cmp	r1, #1
 5718 001a 06D1     		bne	.L359
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U)) 
 5719              		.loc 1 792 0
 5720 001c 12B9     		cbnz	r2, .L360
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U)) 
 5721              		.loc 1 792 0 is_stmt 0 discriminator 1
 5722 001e 002B     		cmp	r3, #0
 5723 0020 40F08580 		bne	.L370
 5724              	.L360:
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 5725              		.loc 1 798 0 is_stmt 1
 5726 0024 0221     		movs	r1, #2
 5727 0026 84F83D10 		strb	r1, [r4, #61]
 5728              	.L359:
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
ARM GAS  /tmp/cc8lNJIB.s 			page 208


 5729              		.loc 1 801 0
 5730 002a 0C2D     		cmp	r5, #12
 5731 002c 53D8     		bhi	.L361
 5732 002e DFE805F0 		tbb	[pc, r5]
 5733              	.L363:
 5734 0032 07       		.byte	(.L362-.L363)/2
 5735 0033 52       		.byte	(.L361-.L363)/2
 5736 0034 52       		.byte	(.L361-.L363)/2
 5737 0035 52       		.byte	(.L361-.L363)/2
 5738 0036 1A       		.byte	(.L364-.L363)/2
 5739 0037 52       		.byte	(.L361-.L363)/2
 5740 0038 52       		.byte	(.L361-.L363)/2
 5741 0039 52       		.byte	(.L361-.L363)/2
 5742 003a 2D       		.byte	(.L365-.L363)/2
 5743 003b 52       		.byte	(.L361-.L363)/2
 5744 003c 52       		.byte	(.L361-.L363)/2
 5745 003d 52       		.byte	(.L361-.L363)/2
 5746 003e 40       		.byte	(.L366-.L363)/2
 5747 003f 00       		.p2align 1
 5748              	.L362:
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 5749              		.loc 1 806 0
 5750 0040 616A     		ldr	r1, [r4, #36]
 5751 0042 3C48     		ldr	r0, .L375
 5752 0044 8862     		str	r0, [r1, #40]
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 5753              		.loc 1 809 0
 5754 0046 616A     		ldr	r1, [r4, #36]
 5755 0048 3B48     		ldr	r0, .L375+4
 5756 004a 0863     		str	r0, [r1, #48]
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
 5757              		.loc 1 812 0
 5758 004c 2668     		ldr	r6, [r4]
 5759 004e 606A     		ldr	r0, [r4, #36]
 5760 0050 1146     		mov	r1, r2
 5761 0052 06F13402 		add	r2, r6, #52
 5762              	.LVL634:
 5763 0056 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5764              	.LVL635:
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 5765              		.loc 1 815 0
 5766 005a 2368     		ldr	r3, [r4]
 5767 005c DA68     		ldr	r2, [r3, #12]
 5768 005e 42F40072 		orr	r2, r2, #512
 5769 0062 DA60     		str	r2, [r3, #12]
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5770              		.loc 1 817 0
 5771 0064 37E0     		b	.L361
 5772              	.LVL636:
 5773              	.L364:
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 5774              		.loc 1 822 0
 5775 0066 A16A     		ldr	r1, [r4, #40]
 5776 0068 3248     		ldr	r0, .L375
 5777 006a 8862     		str	r0, [r1, #40]
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 5778              		.loc 1 825 0
ARM GAS  /tmp/cc8lNJIB.s 			page 209


 5779 006c A16A     		ldr	r1, [r4, #40]
 5780 006e 3248     		ldr	r0, .L375+4
 5781 0070 0863     		str	r0, [r1, #48]
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
 5782              		.loc 1 828 0
 5783 0072 2668     		ldr	r6, [r4]
 5784 0074 A06A     		ldr	r0, [r4, #40]
 5785 0076 1146     		mov	r1, r2
 5786 0078 06F13802 		add	r2, r6, #56
 5787              	.LVL637:
 5788 007c FFF7FEFF 		bl	HAL_DMA_Start_IT
 5789              	.LVL638:
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 5790              		.loc 1 831 0
 5791 0080 2368     		ldr	r3, [r4]
 5792 0082 DA68     		ldr	r2, [r3, #12]
 5793 0084 42F48062 		orr	r2, r2, #1024
 5794 0088 DA60     		str	r2, [r3, #12]
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5795              		.loc 1 833 0
 5796 008a 24E0     		b	.L361
 5797              	.LVL639:
 5798              	.L365:
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 5799              		.loc 1 838 0
 5800 008c E16A     		ldr	r1, [r4, #44]
 5801 008e 2948     		ldr	r0, .L375
 5802 0090 8862     		str	r0, [r1, #40]
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 5803              		.loc 1 841 0
 5804 0092 E16A     		ldr	r1, [r4, #44]
 5805 0094 2848     		ldr	r0, .L375+4
 5806 0096 0863     		str	r0, [r1, #48]
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
 5807              		.loc 1 844 0
 5808 0098 2668     		ldr	r6, [r4]
 5809 009a E06A     		ldr	r0, [r4, #44]
 5810 009c 1146     		mov	r1, r2
 5811 009e 06F13C02 		add	r2, r6, #60
 5812              	.LVL640:
 5813 00a2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5814              	.LVL641:
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 5815              		.loc 1 847 0
 5816 00a6 2368     		ldr	r3, [r4]
 5817 00a8 DA68     		ldr	r2, [r3, #12]
 5818 00aa 42F40062 		orr	r2, r2, #2048
 5819 00ae DA60     		str	r2, [r3, #12]
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5820              		.loc 1 849 0
 5821 00b0 11E0     		b	.L361
 5822              	.LVL642:
 5823              	.L366:
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 5824              		.loc 1 854 0
 5825 00b2 216B     		ldr	r1, [r4, #48]
 5826 00b4 1F48     		ldr	r0, .L375
ARM GAS  /tmp/cc8lNJIB.s 			page 210


 5827 00b6 8862     		str	r0, [r1, #40]
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 5828              		.loc 1 857 0
 5829 00b8 216B     		ldr	r1, [r4, #48]
 5830 00ba 1F48     		ldr	r0, .L375+4
 5831 00bc 0863     		str	r0, [r1, #48]
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
 5832              		.loc 1 860 0
 5833 00be 2668     		ldr	r6, [r4]
 5834 00c0 206B     		ldr	r0, [r4, #48]
 5835 00c2 1146     		mov	r1, r2
 5836 00c4 06F14002 		add	r2, r6, #64
 5837              	.LVL643:
 5838 00c8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5839              	.LVL644:
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 5840              		.loc 1 863 0
 5841 00cc 2368     		ldr	r3, [r4]
 5842 00ce DA68     		ldr	r2, [r3, #12]
 5843 00d0 42F48052 		orr	r2, r2, #4096
 5844 00d4 DA60     		str	r2, [r3, #12]
 5845              	.L361:
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 5846              		.loc 1 872 0
 5847 00d6 2068     		ldr	r0, [r4]
 5848 00d8 2946     		mov	r1, r5
 5849 00da 0122     		movs	r2, #1
 5850 00dc FFF7FEFF 		bl	TIM_CCxChannelCmd
 5851              	.LVL645:
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5852              		.loc 1 874 0
 5853 00e0 2368     		ldr	r3, [r4]
 5854 00e2 164A     		ldr	r2, .L375+8
 5855 00e4 9342     		cmp	r3, r2
 5856 00e6 0DD0     		beq	.L371
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5857              		.loc 1 874 0 is_stmt 0 discriminator 2
 5858 00e8 02F5A052 		add	r2, r2, #5120
 5859 00ec 9342     		cmp	r3, r2
 5860 00ee 0BD0     		beq	.L372
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5861              		.loc 1 874 0 discriminator 1
 5862 00f0 02F58062 		add	r2, r2, #1024
 5863 00f4 9342     		cmp	r3, r2
 5864 00f6 09D0     		beq	.L373
 5865 00f8 02F58062 		add	r2, r2, #1024
 5866 00fc 9342     		cmp	r3, r2
 5867 00fe 07D1     		bne	.L374
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5868              		.loc 1 874 0
 5869 0100 0122     		movs	r2, #1
 5870 0102 06E0     		b	.L367
 5871              	.L371:
 5872 0104 0122     		movs	r2, #1
 5873 0106 04E0     		b	.L367
 5874              	.L372:
 5875 0108 0122     		movs	r2, #1
ARM GAS  /tmp/cc8lNJIB.s 			page 211


 5876 010a 02E0     		b	.L367
 5877              	.L373:
 5878 010c 0122     		movs	r2, #1
 5879 010e 00E0     		b	.L367
 5880              	.L374:
 5881 0110 0022     		movs	r2, #0
 5882              	.L367:
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5883              		.loc 1 874 0 discriminator 4
 5884 0112 1AB1     		cbz	r2, .L368
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 5885              		.loc 1 877 0 is_stmt 1
 5886 0114 5A6C     		ldr	r2, [r3, #68]
 5887 0116 42F40042 		orr	r2, r2, #32768
 5888 011a 5A64     		str	r2, [r3, #68]
 5889              	.L368:
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
 5890              		.loc 1 881 0
 5891 011c 2368     		ldr	r3, [r4]
 5892 011e 1A68     		ldr	r2, [r3]
 5893 0120 42F00102 		orr	r2, r2, #1
 5894 0124 1A60     		str	r2, [r3]
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 5895              		.loc 1 884 0
 5896 0126 0020     		movs	r0, #0
 5897 0128 70BD     		pop	{r4, r5, r6, pc}
 5898              	.LVL646:
 5899              	.L369:
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 5900              		.loc 1 788 0
 5901 012a 0220     		movs	r0, #2
 5902 012c 70BD     		pop	{r4, r5, r6, pc}
 5903              	.LVL647:
 5904              	.L370:
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 5905              		.loc 1 794 0
 5906 012e 0120     		movs	r0, #1
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 5907              		.loc 1 885 0
 5908 0130 70BD     		pop	{r4, r5, r6, pc}
 5909              	.LVL648:
 5910              	.L376:
 5911 0132 00BF     		.align	2
 5912              	.L375:
 5913 0134 00000000 		.word	TIM_DMADelayPulseCplt
 5914 0138 00000000 		.word	TIM_DMAError
 5915 013c 002C0140 		.word	1073818624
 5916              		.cfi_endproc
 5917              	.LFE141:
 5919              		.section	.text.HAL_TIM_OC_Stop_DMA,"ax",%progbits
 5920              		.align	2
 5921              		.global	HAL_TIM_OC_Stop_DMA
 5922              		.thumb
 5923              		.thumb_func
 5925              	HAL_TIM_OC_Stop_DMA:
 5926              	.LFB142:
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
ARM GAS  /tmp/cc8lNJIB.s 			page 212


 5927              		.loc 1 899 0
 5928              		.cfi_startproc
 5929              		@ args = 0, pretend = 0, frame = 0
 5930              		@ frame_needed = 0, uses_anonymous_args = 0
 5931              	.LVL649:
 5932 0000 10B5     		push	{r4, lr}
 5933              	.LCFI50:
 5934              		.cfi_def_cfa_offset 8
 5935              		.cfi_offset 4, -8
 5936              		.cfi_offset 14, -4
 5937 0002 0446     		mov	r4, r0
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 5938              		.loc 1 903 0
 5939 0004 0C29     		cmp	r1, #12
 5940 0006 1FD8     		bhi	.L378
 5941 0008 DFE801F0 		tbb	[pc, r1]
 5942              	.L380:
 5943 000c 07       		.byte	(.L379-.L380)/2
 5944 000d 1E       		.byte	(.L378-.L380)/2
 5945 000e 1E       		.byte	(.L378-.L380)/2
 5946 000f 1E       		.byte	(.L378-.L380)/2
 5947 0010 0D       		.byte	(.L381-.L380)/2
 5948 0011 1E       		.byte	(.L378-.L380)/2
 5949 0012 1E       		.byte	(.L378-.L380)/2
 5950 0013 1E       		.byte	(.L378-.L380)/2
 5951 0014 13       		.byte	(.L382-.L380)/2
 5952 0015 1E       		.byte	(.L378-.L380)/2
 5953 0016 1E       		.byte	(.L378-.L380)/2
 5954 0017 1E       		.byte	(.L378-.L380)/2
 5955 0018 19       		.byte	(.L383-.L380)/2
 5956 0019 00       		.p2align 1
 5957              	.L379:
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 5958              		.loc 1 908 0
 5959 001a 0368     		ldr	r3, [r0]
 5960 001c DA68     		ldr	r2, [r3, #12]
 5961 001e 22F40072 		bic	r2, r2, #512
 5962 0022 DA60     		str	r2, [r3, #12]
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5963              		.loc 1 910 0
 5964 0024 10E0     		b	.L378
 5965              	.L381:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 5966              		.loc 1 915 0
 5967 0026 0368     		ldr	r3, [r0]
 5968 0028 DA68     		ldr	r2, [r3, #12]
 5969 002a 22F48062 		bic	r2, r2, #1024
 5970 002e DA60     		str	r2, [r3, #12]
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5971              		.loc 1 917 0
 5972 0030 0AE0     		b	.L378
 5973              	.L382:
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 5974              		.loc 1 922 0
 5975 0032 0368     		ldr	r3, [r0]
 5976 0034 DA68     		ldr	r2, [r3, #12]
 5977 0036 22F40062 		bic	r2, r2, #2048
ARM GAS  /tmp/cc8lNJIB.s 			page 213


 5978 003a DA60     		str	r2, [r3, #12]
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 5979              		.loc 1 924 0
 5980 003c 04E0     		b	.L378
 5981              	.L383:
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 5982              		.loc 1 929 0
 5983 003e 0368     		ldr	r3, [r0]
 5984 0040 DA68     		ldr	r2, [r3, #12]
 5985 0042 22F48052 		bic	r2, r2, #4096
 5986 0046 DA60     		str	r2, [r3, #12]
 5987              	.L378:
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 5988              		.loc 1 938 0
 5989 0048 2068     		ldr	r0, [r4]
 5990              	.LVL650:
 5991 004a 0022     		movs	r2, #0
 5992 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 5993              	.LVL651:
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5994              		.loc 1 940 0
 5995 0050 2368     		ldr	r3, [r4]
 5996 0052 1D4A     		ldr	r2, .L391
 5997 0054 9342     		cmp	r3, r2
 5998 0056 0DD0     		beq	.L387
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 5999              		.loc 1 940 0 is_stmt 0 discriminator 2
 6000 0058 02F5A052 		add	r2, r2, #5120
 6001 005c 9342     		cmp	r3, r2
 6002 005e 0BD0     		beq	.L388
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6003              		.loc 1 940 0 discriminator 1
 6004 0060 02F58062 		add	r2, r2, #1024
 6005 0064 9342     		cmp	r3, r2
 6006 0066 09D0     		beq	.L389
 6007 0068 02F58062 		add	r2, r2, #1024
 6008 006c 9342     		cmp	r3, r2
 6009 006e 07D1     		bne	.L390
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6010              		.loc 1 940 0
 6011 0070 0122     		movs	r2, #1
 6012 0072 06E0     		b	.L384
 6013              	.L387:
 6014 0074 0122     		movs	r2, #1
 6015 0076 04E0     		b	.L384
 6016              	.L388:
 6017 0078 0122     		movs	r2, #1
 6018 007a 02E0     		b	.L384
 6019              	.L389:
 6020 007c 0122     		movs	r2, #1
 6021 007e 00E0     		b	.L384
 6022              	.L390:
 6023 0080 0022     		movs	r2, #0
 6024              	.L384:
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6025              		.loc 1 940 0 discriminator 4
 6026 0082 6AB1     		cbz	r2, .L385
ARM GAS  /tmp/cc8lNJIB.s 			page 214


 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6027              		.loc 1 943 0 is_stmt 1
 6028 0084 196A     		ldr	r1, [r3, #32]
 6029 0086 41F21112 		movw	r2, #4369
 6030 008a 1142     		tst	r1, r2
 6031 008c 08D1     		bne	.L385
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6032              		.loc 1 943 0 is_stmt 0 discriminator 1
 6033 008e 196A     		ldr	r1, [r3, #32]
 6034 0090 40F24442 		movw	r2, #1092
 6035 0094 1142     		tst	r1, r2
 6036 0096 03D1     		bne	.L385
 6037 0098 5A6C     		ldr	r2, [r3, #68]
 6038 009a 22F40042 		bic	r2, r2, #32768
 6039 009e 5A64     		str	r2, [r3, #68]
 6040              	.L385:
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6041              		.loc 1 947 0 is_stmt 1
 6042 00a0 2368     		ldr	r3, [r4]
 6043 00a2 196A     		ldr	r1, [r3, #32]
 6044 00a4 41F21112 		movw	r2, #4369
 6045 00a8 1142     		tst	r1, r2
 6046 00aa 08D1     		bne	.L386
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6047              		.loc 1 947 0 is_stmt 0 discriminator 1
 6048 00ac 196A     		ldr	r1, [r3, #32]
 6049 00ae 40F24442 		movw	r2, #1092
 6050 00b2 1142     		tst	r1, r2
 6051 00b4 03D1     		bne	.L386
 6052 00b6 1A68     		ldr	r2, [r3]
 6053 00b8 22F00102 		bic	r2, r2, #1
 6054 00bc 1A60     		str	r2, [r3]
 6055              	.L386:
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 6056              		.loc 1 950 0 is_stmt 1
 6057 00be 0123     		movs	r3, #1
 6058 00c0 84F83D30 		strb	r3, [r4, #61]
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 6059              		.loc 1 954 0
 6060 00c4 0020     		movs	r0, #0
 6061 00c6 10BD     		pop	{r4, pc}
 6062              	.LVL652:
 6063              	.L392:
 6064              		.align	2
 6065              	.L391:
 6066 00c8 002C0140 		.word	1073818624
 6067              		.cfi_endproc
 6068              	.LFE142:
 6070              		.section	.text.HAL_TIM_PWM_Start,"ax",%progbits
 6071              		.align	2
 6072              		.global	HAL_TIM_PWM_Start
 6073              		.thumb
 6074              		.thumb_func
 6076              	HAL_TIM_PWM_Start:
 6077              	.LFB147:
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 6078              		.loc 1 1091 0
ARM GAS  /tmp/cc8lNJIB.s 			page 215


 6079              		.cfi_startproc
 6080              		@ args = 0, pretend = 0, frame = 0
 6081              		@ frame_needed = 0, uses_anonymous_args = 0
 6082              	.LVL653:
 6083 0000 10B5     		push	{r4, lr}
 6084              	.LCFI51:
 6085              		.cfi_def_cfa_offset 8
 6086              		.cfi_offset 4, -8
 6087              		.cfi_offset 14, -4
 6088 0002 0446     		mov	r4, r0
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6089              		.loc 1 1096 0
 6090 0004 0068     		ldr	r0, [r0]
 6091              	.LVL654:
 6092 0006 0122     		movs	r2, #1
 6093 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 6094              	.LVL655:
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6095              		.loc 1 1098 0
 6096 000c 2368     		ldr	r3, [r4]
 6097 000e 124A     		ldr	r2, .L400
 6098 0010 9342     		cmp	r3, r2
 6099 0012 0DD0     		beq	.L396
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6100              		.loc 1 1098 0 is_stmt 0 discriminator 2
 6101 0014 02F5A052 		add	r2, r2, #5120
 6102 0018 9342     		cmp	r3, r2
 6103 001a 0BD0     		beq	.L397
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6104              		.loc 1 1098 0 discriminator 1
 6105 001c 02F58062 		add	r2, r2, #1024
 6106 0020 9342     		cmp	r3, r2
 6107 0022 09D0     		beq	.L398
 6108 0024 02F58062 		add	r2, r2, #1024
 6109 0028 9342     		cmp	r3, r2
 6110 002a 07D1     		bne	.L399
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6111              		.loc 1 1098 0
 6112 002c 0122     		movs	r2, #1
 6113 002e 06E0     		b	.L394
 6114              	.L396:
 6115 0030 0122     		movs	r2, #1
 6116 0032 04E0     		b	.L394
 6117              	.L397:
 6118 0034 0122     		movs	r2, #1
 6119 0036 02E0     		b	.L394
 6120              	.L398:
 6121 0038 0122     		movs	r2, #1
 6122 003a 00E0     		b	.L394
 6123              	.L399:
 6124 003c 0022     		movs	r2, #0
 6125              	.L394:
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6126              		.loc 1 1098 0 discriminator 4
 6127 003e 1AB1     		cbz	r2, .L395
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 6128              		.loc 1 1101 0 is_stmt 1
ARM GAS  /tmp/cc8lNJIB.s 			page 216


 6129 0040 5A6C     		ldr	r2, [r3, #68]
 6130 0042 42F40042 		orr	r2, r2, #32768
 6131 0046 5A64     		str	r2, [r3, #68]
 6132              	.L395:
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 6133              		.loc 1 1105 0
 6134 0048 2368     		ldr	r3, [r4]
 6135 004a 1A68     		ldr	r2, [r3]
 6136 004c 42F00102 		orr	r2, r2, #1
 6137 0050 1A60     		str	r2, [r3]
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 6138              		.loc 1 1109 0
 6139 0052 0020     		movs	r0, #0
 6140 0054 10BD     		pop	{r4, pc}
 6141              	.LVL656:
 6142              	.L401:
 6143 0056 00BF     		.align	2
 6144              	.L400:
 6145 0058 002C0140 		.word	1073818624
 6146              		.cfi_endproc
 6147              	.LFE147:
 6149              		.section	.text.HAL_TIM_PWM_Stop,"ax",%progbits
 6150              		.align	2
 6151              		.global	HAL_TIM_PWM_Stop
 6152              		.thumb
 6153              		.thumb_func
 6155              	HAL_TIM_PWM_Stop:
 6156              	.LFB148:
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {   
 6157              		.loc 1 1123 0
 6158              		.cfi_startproc
 6159              		@ args = 0, pretend = 0, frame = 0
 6160              		@ frame_needed = 0, uses_anonymous_args = 0
 6161              	.LVL657:
 6162 0000 10B5     		push	{r4, lr}
 6163              	.LCFI52:
 6164              		.cfi_def_cfa_offset 8
 6165              		.cfi_offset 4, -8
 6166              		.cfi_offset 14, -4
 6167 0002 0446     		mov	r4, r0
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 6168              		.loc 1 1128 0
 6169 0004 0068     		ldr	r0, [r0]
 6170              	.LVL658:
 6171 0006 0022     		movs	r2, #0
 6172 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 6173              	.LVL659:
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6174              		.loc 1 1130 0
 6175 000c 2368     		ldr	r3, [r4]
 6176 000e 1D4A     		ldr	r2, .L410
 6177 0010 9342     		cmp	r3, r2
 6178 0012 0DD0     		beq	.L406
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6179              		.loc 1 1130 0 is_stmt 0 discriminator 2
 6180 0014 02F5A052 		add	r2, r2, #5120
 6181 0018 9342     		cmp	r3, r2
ARM GAS  /tmp/cc8lNJIB.s 			page 217


 6182 001a 0BD0     		beq	.L407
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6183              		.loc 1 1130 0 discriminator 1
 6184 001c 02F58062 		add	r2, r2, #1024
 6185 0020 9342     		cmp	r3, r2
 6186 0022 09D0     		beq	.L408
 6187 0024 02F58062 		add	r2, r2, #1024
 6188 0028 9342     		cmp	r3, r2
 6189 002a 07D1     		bne	.L409
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6190              		.loc 1 1130 0
 6191 002c 0122     		movs	r2, #1
 6192 002e 06E0     		b	.L403
 6193              	.L406:
 6194 0030 0122     		movs	r2, #1
 6195 0032 04E0     		b	.L403
 6196              	.L407:
 6197 0034 0122     		movs	r2, #1
 6198 0036 02E0     		b	.L403
 6199              	.L408:
 6200 0038 0122     		movs	r2, #1
 6201 003a 00E0     		b	.L403
 6202              	.L409:
 6203 003c 0022     		movs	r2, #0
 6204              	.L403:
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6205              		.loc 1 1130 0 discriminator 4
 6206 003e 6AB1     		cbz	r2, .L404
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6207              		.loc 1 1133 0 is_stmt 1
 6208 0040 196A     		ldr	r1, [r3, #32]
 6209 0042 41F21112 		movw	r2, #4369
 6210 0046 1142     		tst	r1, r2
 6211 0048 08D1     		bne	.L404
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6212              		.loc 1 1133 0 is_stmt 0 discriminator 1
 6213 004a 196A     		ldr	r1, [r3, #32]
 6214 004c 40F24442 		movw	r2, #1092
 6215 0050 1142     		tst	r1, r2
 6216 0052 03D1     		bne	.L404
 6217 0054 5A6C     		ldr	r2, [r3, #68]
 6218 0056 22F40042 		bic	r2, r2, #32768
 6219 005a 5A64     		str	r2, [r3, #68]
 6220              	.L404:
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6221              		.loc 1 1137 0 is_stmt 1
 6222 005c 2368     		ldr	r3, [r4]
 6223 005e 196A     		ldr	r1, [r3, #32]
 6224 0060 41F21112 		movw	r2, #4369
 6225 0064 1142     		tst	r1, r2
 6226 0066 08D1     		bne	.L405
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6227              		.loc 1 1137 0 is_stmt 0 discriminator 1
 6228 0068 196A     		ldr	r1, [r3, #32]
 6229 006a 40F24442 		movw	r2, #1092
 6230 006e 1142     		tst	r1, r2
 6231 0070 03D1     		bne	.L405
ARM GAS  /tmp/cc8lNJIB.s 			page 218


 6232 0072 1A68     		ldr	r2, [r3]
 6233 0074 22F00102 		bic	r2, r2, #1
 6234 0078 1A60     		str	r2, [r3]
 6235              	.L405:
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 6236              		.loc 1 1140 0 is_stmt 1
 6237 007a 0123     		movs	r3, #1
 6238 007c 84F83D30 		strb	r3, [r4, #61]
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 6239              		.loc 1 1144 0
 6240 0080 0020     		movs	r0, #0
 6241 0082 10BD     		pop	{r4, pc}
 6242              	.LVL660:
 6243              	.L411:
 6244              		.align	2
 6245              	.L410:
 6246 0084 002C0140 		.word	1073818624
 6247              		.cfi_endproc
 6248              	.LFE148:
 6250              		.section	.text.HAL_TIM_PWM_Start_IT,"ax",%progbits
 6251              		.align	2
 6252              		.global	HAL_TIM_PWM_Start_IT
 6253              		.thumb
 6254              		.thumb_func
 6256              	HAL_TIM_PWM_Start_IT:
 6257              	.LFB149:
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 6258              		.loc 1 1158 0
 6259              		.cfi_startproc
 6260              		@ args = 0, pretend = 0, frame = 0
 6261              		@ frame_needed = 0, uses_anonymous_args = 0
 6262              	.LVL661:
 6263 0000 10B5     		push	{r4, lr}
 6264              	.LCFI53:
 6265              		.cfi_def_cfa_offset 8
 6266              		.cfi_offset 4, -8
 6267              		.cfi_offset 14, -4
 6268 0002 0446     		mov	r4, r0
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 6269              		.loc 1 1162 0
 6270 0004 0C29     		cmp	r1, #12
 6271 0006 1FD8     		bhi	.L413
 6272 0008 DFE801F0 		tbb	[pc, r1]
 6273              	.L415:
 6274 000c 07       		.byte	(.L414-.L415)/2
 6275 000d 1E       		.byte	(.L413-.L415)/2
 6276 000e 1E       		.byte	(.L413-.L415)/2
 6277 000f 1E       		.byte	(.L413-.L415)/2
 6278 0010 0D       		.byte	(.L416-.L415)/2
 6279 0011 1E       		.byte	(.L413-.L415)/2
 6280 0012 1E       		.byte	(.L413-.L415)/2
 6281 0013 1E       		.byte	(.L413-.L415)/2
 6282 0014 13       		.byte	(.L417-.L415)/2
 6283 0015 1E       		.byte	(.L413-.L415)/2
 6284 0016 1E       		.byte	(.L413-.L415)/2
 6285 0017 1E       		.byte	(.L413-.L415)/2
 6286 0018 19       		.byte	(.L418-.L415)/2
ARM GAS  /tmp/cc8lNJIB.s 			page 219


 6287 0019 00       		.p2align 1
 6288              	.L414:
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 6289              		.loc 1 1167 0
 6290 001a 0368     		ldr	r3, [r0]
 6291 001c DA68     		ldr	r2, [r3, #12]
 6292 001e 42F00202 		orr	r2, r2, #2
 6293 0022 DA60     		str	r2, [r3, #12]
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6294              		.loc 1 1169 0
 6295 0024 10E0     		b	.L413
 6296              	.L416:
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 6297              		.loc 1 1174 0
 6298 0026 0368     		ldr	r3, [r0]
 6299 0028 DA68     		ldr	r2, [r3, #12]
 6300 002a 42F00402 		orr	r2, r2, #4
 6301 002e DA60     		str	r2, [r3, #12]
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6302              		.loc 1 1176 0
 6303 0030 0AE0     		b	.L413
 6304              	.L417:
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 6305              		.loc 1 1181 0
 6306 0032 0368     		ldr	r3, [r0]
 6307 0034 DA68     		ldr	r2, [r3, #12]
 6308 0036 42F00802 		orr	r2, r2, #8
 6309 003a DA60     		str	r2, [r3, #12]
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6310              		.loc 1 1183 0
 6311 003c 04E0     		b	.L413
 6312              	.L418:
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 6313              		.loc 1 1188 0
 6314 003e 0368     		ldr	r3, [r0]
 6315 0040 DA68     		ldr	r2, [r3, #12]
 6316 0042 42F01002 		orr	r2, r2, #16
 6317 0046 DA60     		str	r2, [r3, #12]
 6318              	.L413:
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6319              		.loc 1 1197 0
 6320 0048 2068     		ldr	r0, [r4]
 6321              	.LVL662:
 6322 004a 0122     		movs	r2, #1
 6323 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 6324              	.LVL663:
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6325              		.loc 1 1199 0
 6326 0050 2368     		ldr	r3, [r4]
 6327 0052 124A     		ldr	r2, .L425
 6328 0054 9342     		cmp	r3, r2
 6329 0056 0DD0     		beq	.L421
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6330              		.loc 1 1199 0 is_stmt 0 discriminator 2
 6331 0058 02F5A052 		add	r2, r2, #5120
 6332 005c 9342     		cmp	r3, r2
 6333 005e 0BD0     		beq	.L422
ARM GAS  /tmp/cc8lNJIB.s 			page 220


1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6334              		.loc 1 1199 0 discriminator 1
 6335 0060 02F58062 		add	r2, r2, #1024
 6336 0064 9342     		cmp	r3, r2
 6337 0066 09D0     		beq	.L423
 6338 0068 02F58062 		add	r2, r2, #1024
 6339 006c 9342     		cmp	r3, r2
 6340 006e 07D1     		bne	.L424
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6341              		.loc 1 1199 0
 6342 0070 0122     		movs	r2, #1
 6343 0072 06E0     		b	.L419
 6344              	.L421:
 6345 0074 0122     		movs	r2, #1
 6346 0076 04E0     		b	.L419
 6347              	.L422:
 6348 0078 0122     		movs	r2, #1
 6349 007a 02E0     		b	.L419
 6350              	.L423:
 6351 007c 0122     		movs	r2, #1
 6352 007e 00E0     		b	.L419
 6353              	.L424:
 6354 0080 0022     		movs	r2, #0
 6355              	.L419:
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6356              		.loc 1 1199 0 discriminator 4
 6357 0082 1AB1     		cbz	r2, .L420
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 6358              		.loc 1 1202 0 is_stmt 1
 6359 0084 5A6C     		ldr	r2, [r3, #68]
 6360 0086 42F40042 		orr	r2, r2, #32768
 6361 008a 5A64     		str	r2, [r3, #68]
 6362              	.L420:
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 6363              		.loc 1 1206 0
 6364 008c 2368     		ldr	r3, [r4]
 6365 008e 1A68     		ldr	r2, [r3]
 6366 0090 42F00102 		orr	r2, r2, #1
 6367 0094 1A60     		str	r2, [r3]
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 6368              		.loc 1 1210 0
 6369 0096 0020     		movs	r0, #0
 6370 0098 10BD     		pop	{r4, pc}
 6371              	.LVL664:
 6372              	.L426:
 6373 009a 00BF     		.align	2
 6374              	.L425:
 6375 009c 002C0140 		.word	1073818624
 6376              		.cfi_endproc
 6377              	.LFE149:
 6379              		.section	.text.HAL_TIM_PWM_Stop_IT,"ax",%progbits
 6380              		.align	2
 6381              		.global	HAL_TIM_PWM_Stop_IT
 6382              		.thumb
 6383              		.thumb_func
 6385              	HAL_TIM_PWM_Stop_IT:
 6386              	.LFB150:
ARM GAS  /tmp/cc8lNJIB.s 			page 221


1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 6387              		.loc 1 1224 0
 6388              		.cfi_startproc
 6389              		@ args = 0, pretend = 0, frame = 0
 6390              		@ frame_needed = 0, uses_anonymous_args = 0
 6391              	.LVL665:
 6392 0000 10B5     		push	{r4, lr}
 6393              	.LCFI54:
 6394              		.cfi_def_cfa_offset 8
 6395              		.cfi_offset 4, -8
 6396              		.cfi_offset 14, -4
 6397 0002 0446     		mov	r4, r0
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 6398              		.loc 1 1228 0
 6399 0004 0C29     		cmp	r1, #12
 6400 0006 1FD8     		bhi	.L428
 6401 0008 DFE801F0 		tbb	[pc, r1]
 6402              	.L430:
 6403 000c 07       		.byte	(.L429-.L430)/2
 6404 000d 1E       		.byte	(.L428-.L430)/2
 6405 000e 1E       		.byte	(.L428-.L430)/2
 6406 000f 1E       		.byte	(.L428-.L430)/2
 6407 0010 0D       		.byte	(.L431-.L430)/2
 6408 0011 1E       		.byte	(.L428-.L430)/2
 6409 0012 1E       		.byte	(.L428-.L430)/2
 6410 0013 1E       		.byte	(.L428-.L430)/2
 6411 0014 13       		.byte	(.L432-.L430)/2
 6412 0015 1E       		.byte	(.L428-.L430)/2
 6413 0016 1E       		.byte	(.L428-.L430)/2
 6414 0017 1E       		.byte	(.L428-.L430)/2
 6415 0018 19       		.byte	(.L433-.L430)/2
 6416 0019 00       		.p2align 1
 6417              	.L429:
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 6418              		.loc 1 1233 0
 6419 001a 0368     		ldr	r3, [r0]
 6420 001c DA68     		ldr	r2, [r3, #12]
 6421 001e 22F00202 		bic	r2, r2, #2
 6422 0022 DA60     		str	r2, [r3, #12]
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6423              		.loc 1 1235 0
 6424 0024 10E0     		b	.L428
 6425              	.L431:
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 6426              		.loc 1 1240 0
 6427 0026 0368     		ldr	r3, [r0]
 6428 0028 DA68     		ldr	r2, [r3, #12]
 6429 002a 22F00402 		bic	r2, r2, #4
 6430 002e DA60     		str	r2, [r3, #12]
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6431              		.loc 1 1242 0
 6432 0030 0AE0     		b	.L428
 6433              	.L432:
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 6434              		.loc 1 1247 0
 6435 0032 0368     		ldr	r3, [r0]
 6436 0034 DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc8lNJIB.s 			page 222


 6437 0036 22F00802 		bic	r2, r2, #8
 6438 003a DA60     		str	r2, [r3, #12]
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6439              		.loc 1 1249 0
 6440 003c 04E0     		b	.L428
 6441              	.L433:
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 6442              		.loc 1 1254 0
 6443 003e 0368     		ldr	r3, [r0]
 6444 0040 DA68     		ldr	r2, [r3, #12]
 6445 0042 22F01002 		bic	r2, r2, #16
 6446 0046 DA60     		str	r2, [r3, #12]
 6447              	.L428:
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 6448              		.loc 1 1263 0
 6449 0048 2068     		ldr	r0, [r4]
 6450              	.LVL666:
 6451 004a 0022     		movs	r2, #0
 6452 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 6453              	.LVL667:
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6454              		.loc 1 1265 0
 6455 0050 2368     		ldr	r3, [r4]
 6456 0052 1C4A     		ldr	r2, .L441
 6457 0054 9342     		cmp	r3, r2
 6458 0056 0DD0     		beq	.L437
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6459              		.loc 1 1265 0 is_stmt 0 discriminator 2
 6460 0058 02F5A052 		add	r2, r2, #5120
 6461 005c 9342     		cmp	r3, r2
 6462 005e 0BD0     		beq	.L438
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6463              		.loc 1 1265 0 discriminator 1
 6464 0060 02F58062 		add	r2, r2, #1024
 6465 0064 9342     		cmp	r3, r2
 6466 0066 09D0     		beq	.L439
 6467 0068 02F58062 		add	r2, r2, #1024
 6468 006c 9342     		cmp	r3, r2
 6469 006e 07D1     		bne	.L440
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6470              		.loc 1 1265 0
 6471 0070 0122     		movs	r2, #1
 6472 0072 06E0     		b	.L434
 6473              	.L437:
 6474 0074 0122     		movs	r2, #1
 6475 0076 04E0     		b	.L434
 6476              	.L438:
 6477 0078 0122     		movs	r2, #1
 6478 007a 02E0     		b	.L434
 6479              	.L439:
 6480 007c 0122     		movs	r2, #1
 6481 007e 00E0     		b	.L434
 6482              	.L440:
 6483 0080 0022     		movs	r2, #0
 6484              	.L434:
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6485              		.loc 1 1265 0 discriminator 4
ARM GAS  /tmp/cc8lNJIB.s 			page 223


 6486 0082 6AB1     		cbz	r2, .L435
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6487              		.loc 1 1268 0 is_stmt 1
 6488 0084 196A     		ldr	r1, [r3, #32]
 6489 0086 41F21112 		movw	r2, #4369
 6490 008a 1142     		tst	r1, r2
 6491 008c 08D1     		bne	.L435
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6492              		.loc 1 1268 0 is_stmt 0 discriminator 1
 6493 008e 196A     		ldr	r1, [r3, #32]
 6494 0090 40F24442 		movw	r2, #1092
 6495 0094 1142     		tst	r1, r2
 6496 0096 03D1     		bne	.L435
 6497 0098 5A6C     		ldr	r2, [r3, #68]
 6498 009a 22F40042 		bic	r2, r2, #32768
 6499 009e 5A64     		str	r2, [r3, #68]
 6500              	.L435:
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6501              		.loc 1 1272 0 is_stmt 1
 6502 00a0 2368     		ldr	r3, [r4]
 6503 00a2 196A     		ldr	r1, [r3, #32]
 6504 00a4 41F21112 		movw	r2, #4369
 6505 00a8 1142     		tst	r1, r2
 6506 00aa 08D1     		bne	.L436
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6507              		.loc 1 1272 0 is_stmt 0 discriminator 1
 6508 00ac 196A     		ldr	r1, [r3, #32]
 6509 00ae 40F24442 		movw	r2, #1092
 6510 00b2 1142     		tst	r1, r2
 6511 00b4 03D1     		bne	.L436
 6512 00b6 1A68     		ldr	r2, [r3]
 6513 00b8 22F00102 		bic	r2, r2, #1
 6514 00bc 1A60     		str	r2, [r3]
 6515              	.L436:
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 6516              		.loc 1 1276 0 is_stmt 1
 6517 00be 0020     		movs	r0, #0
 6518 00c0 10BD     		pop	{r4, pc}
 6519              	.LVL668:
 6520              	.L442:
 6521 00c2 00BF     		.align	2
 6522              	.L441:
 6523 00c4 002C0140 		.word	1073818624
 6524              		.cfi_endproc
 6525              	.LFE150:
 6527              		.section	.text.HAL_TIM_PWM_Start_DMA,"ax",%progbits
 6528              		.align	2
 6529              		.global	HAL_TIM_PWM_Start_DMA
 6530              		.thumb
 6531              		.thumb_func
 6533              	HAL_TIM_PWM_Start_DMA:
 6534              	.LFB151:
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 6535              		.loc 1 1292 0
 6536              		.cfi_startproc
 6537              		@ args = 0, pretend = 0, frame = 0
 6538              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc8lNJIB.s 			page 224


 6539              	.LVL669:
 6540 0000 70B5     		push	{r4, r5, r6, lr}
 6541              	.LCFI55:
 6542              		.cfi_def_cfa_offset 16
 6543              		.cfi_offset 4, -16
 6544              		.cfi_offset 5, -12
 6545              		.cfi_offset 6, -8
 6546              		.cfi_offset 14, -4
 6547 0002 0446     		mov	r4, r0
 6548 0004 0D46     		mov	r5, r1
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 6549              		.loc 1 1296 0
 6550 0006 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 6551              	.LVL670:
 6552 000a C0B2     		uxtb	r0, r0
 6553 000c 0228     		cmp	r0, #2
 6554 000e 00F08C80 		beq	.L455
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 6555              		.loc 1 1300 0
 6556 0012 94F83D10 		ldrb	r1, [r4, #61]	@ zero_extendqisi2
 6557              	.LVL671:
 6558 0016 C9B2     		uxtb	r1, r1
 6559 0018 0129     		cmp	r1, #1
 6560 001a 06D1     		bne	.L445
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U)) 
 6561              		.loc 1 1302 0
 6562 001c 12B9     		cbnz	r2, .L446
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if(((uint32_t)pData == 0U ) && (Length > 0U)) 
 6563              		.loc 1 1302 0 is_stmt 0 discriminator 1
 6564 001e 002B     		cmp	r3, #0
 6565 0020 40F08580 		bne	.L456
 6566              	.L446:
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 6567              		.loc 1 1308 0 is_stmt 1
 6568 0024 0221     		movs	r1, #2
 6569 0026 84F83D10 		strb	r1, [r4, #61]
 6570              	.L445:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 6571              		.loc 1 1311 0
 6572 002a 0C2D     		cmp	r5, #12
 6573 002c 53D8     		bhi	.L447
 6574 002e DFE805F0 		tbb	[pc, r5]
 6575              	.L449:
 6576 0032 07       		.byte	(.L448-.L449)/2
 6577 0033 52       		.byte	(.L447-.L449)/2
 6578 0034 52       		.byte	(.L447-.L449)/2
 6579 0035 52       		.byte	(.L447-.L449)/2
 6580 0036 1A       		.byte	(.L450-.L449)/2
 6581 0037 52       		.byte	(.L447-.L449)/2
 6582 0038 52       		.byte	(.L447-.L449)/2
 6583 0039 52       		.byte	(.L447-.L449)/2
 6584 003a 2D       		.byte	(.L451-.L449)/2
 6585 003b 52       		.byte	(.L447-.L449)/2
 6586 003c 52       		.byte	(.L447-.L449)/2
 6587 003d 52       		.byte	(.L447-.L449)/2
 6588 003e 40       		.byte	(.L452-.L449)/2
 6589 003f 00       		.p2align 1
ARM GAS  /tmp/cc8lNJIB.s 			page 225


 6590              	.L448:
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6591              		.loc 1 1316 0
 6592 0040 616A     		ldr	r1, [r4, #36]
 6593 0042 3C48     		ldr	r0, .L461
 6594 0044 8862     		str	r0, [r1, #40]
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 6595              		.loc 1 1319 0
 6596 0046 616A     		ldr	r1, [r4, #36]
 6597 0048 3B48     		ldr	r0, .L461+4
 6598 004a 0863     		str	r0, [r1, #48]
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)pData, (uint32_t)&htim->Instance->CCR1
 6599              		.loc 1 1322 0
 6600 004c 2668     		ldr	r6, [r4]
 6601 004e 606A     		ldr	r0, [r4, #36]
 6602 0050 1146     		mov	r1, r2
 6603 0052 06F13402 		add	r2, r6, #52
 6604              	.LVL672:
 6605 0056 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6606              	.LVL673:
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 6607              		.loc 1 1325 0
 6608 005a 2368     		ldr	r3, [r4]
 6609 005c DA68     		ldr	r2, [r3, #12]
 6610 005e 42F40072 		orr	r2, r2, #512
 6611 0062 DA60     		str	r2, [r3, #12]
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6612              		.loc 1 1327 0
 6613 0064 37E0     		b	.L447
 6614              	.LVL674:
 6615              	.L450:
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6616              		.loc 1 1332 0
 6617 0066 A16A     		ldr	r1, [r4, #40]
 6618 0068 3248     		ldr	r0, .L461
 6619 006a 8862     		str	r0, [r1, #40]
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 6620              		.loc 1 1335 0
 6621 006c A16A     		ldr	r1, [r4, #40]
 6622 006e 3248     		ldr	r0, .L461+4
 6623 0070 0863     		str	r0, [r1, #48]
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)pData, (uint32_t)&htim->Instance->CCR2
 6624              		.loc 1 1338 0
 6625 0072 2668     		ldr	r6, [r4]
 6626 0074 A06A     		ldr	r0, [r4, #40]
 6627 0076 1146     		mov	r1, r2
 6628 0078 06F13802 		add	r2, r6, #56
 6629              	.LVL675:
 6630 007c FFF7FEFF 		bl	HAL_DMA_Start_IT
 6631              	.LVL676:
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 6632              		.loc 1 1341 0
 6633 0080 2368     		ldr	r3, [r4]
 6634 0082 DA68     		ldr	r2, [r3, #12]
 6635 0084 42F48062 		orr	r2, r2, #1024
 6636 0088 DA60     		str	r2, [r3, #12]
1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
ARM GAS  /tmp/cc8lNJIB.s 			page 226


 6637              		.loc 1 1343 0
 6638 008a 24E0     		b	.L447
 6639              	.LVL677:
 6640              	.L451:
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6641              		.loc 1 1348 0
 6642 008c E16A     		ldr	r1, [r4, #44]
 6643 008e 2948     		ldr	r0, .L461
 6644 0090 8862     		str	r0, [r1, #40]
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 6645              		.loc 1 1351 0
 6646 0092 E16A     		ldr	r1, [r4, #44]
 6647 0094 2848     		ldr	r0, .L461+4
 6648 0096 0863     		str	r0, [r1, #48]
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)pData, (uint32_t)&htim->Instance->CCR3
 6649              		.loc 1 1354 0
 6650 0098 2668     		ldr	r6, [r4]
 6651 009a E06A     		ldr	r0, [r4, #44]
 6652 009c 1146     		mov	r1, r2
 6653 009e 06F13C02 		add	r2, r6, #60
 6654              	.LVL678:
 6655 00a2 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6656              	.LVL679:
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 6657              		.loc 1 1357 0
 6658 00a6 2368     		ldr	r3, [r4]
 6659 00a8 DA68     		ldr	r2, [r3, #12]
 6660 00aa 42F40062 		orr	r2, r2, #2048
 6661 00ae DA60     		str	r2, [r3, #12]
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6662              		.loc 1 1359 0
 6663 00b0 11E0     		b	.L447
 6664              	.LVL680:
 6665              	.L452:
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMADelayPulseCplt;
 6666              		.loc 1 1364 0
 6667 00b2 216B     		ldr	r1, [r4, #48]
 6668 00b4 1F48     		ldr	r0, .L461
 6669 00b6 8862     		str	r0, [r1, #40]
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 6670              		.loc 1 1367 0
 6671 00b8 216B     		ldr	r1, [r4, #48]
 6672 00ba 1F48     		ldr	r0, .L461+4
 6673 00bc 0863     		str	r0, [r1, #48]
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)pData, (uint32_t)&htim->Instance->CCR4
 6674              		.loc 1 1370 0
 6675 00be 2668     		ldr	r6, [r4]
 6676 00c0 206B     		ldr	r0, [r4, #48]
 6677 00c2 1146     		mov	r1, r2
 6678 00c4 06F14002 		add	r2, r6, #64
 6679              	.LVL681:
 6680 00c8 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6681              	.LVL682:
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 6682              		.loc 1 1373 0
 6683 00cc 2368     		ldr	r3, [r4]
 6684 00ce DA68     		ldr	r2, [r3, #12]
ARM GAS  /tmp/cc8lNJIB.s 			page 227


 6685 00d0 42F48052 		orr	r2, r2, #4096
 6686 00d4 DA60     		str	r2, [r3, #12]
 6687              	.L447:
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6688              		.loc 1 1382 0
 6689 00d6 2068     		ldr	r0, [r4]
 6690 00d8 2946     		mov	r1, r5
 6691 00da 0122     		movs	r2, #1
 6692 00dc FFF7FEFF 		bl	TIM_CCxChannelCmd
 6693              	.LVL683:
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6694              		.loc 1 1384 0
 6695 00e0 2368     		ldr	r3, [r4]
 6696 00e2 164A     		ldr	r2, .L461+8
 6697 00e4 9342     		cmp	r3, r2
 6698 00e6 0DD0     		beq	.L457
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6699              		.loc 1 1384 0 is_stmt 0 discriminator 2
 6700 00e8 02F5A052 		add	r2, r2, #5120
 6701 00ec 9342     		cmp	r3, r2
 6702 00ee 0BD0     		beq	.L458
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6703              		.loc 1 1384 0 discriminator 1
 6704 00f0 02F58062 		add	r2, r2, #1024
 6705 00f4 9342     		cmp	r3, r2
 6706 00f6 09D0     		beq	.L459
 6707 00f8 02F58062 		add	r2, r2, #1024
 6708 00fc 9342     		cmp	r3, r2
 6709 00fe 07D1     		bne	.L460
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6710              		.loc 1 1384 0
 6711 0100 0122     		movs	r2, #1
 6712 0102 06E0     		b	.L453
 6713              	.L457:
 6714 0104 0122     		movs	r2, #1
 6715 0106 04E0     		b	.L453
 6716              	.L458:
 6717 0108 0122     		movs	r2, #1
 6718 010a 02E0     		b	.L453
 6719              	.L459:
 6720 010c 0122     		movs	r2, #1
 6721 010e 00E0     		b	.L453
 6722              	.L460:
 6723 0110 0022     		movs	r2, #0
 6724              	.L453:
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6725              		.loc 1 1384 0 discriminator 4
 6726 0112 1AB1     		cbz	r2, .L454
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 6727              		.loc 1 1387 0 is_stmt 1
 6728 0114 5A6C     		ldr	r2, [r3, #68]
 6729 0116 42F40042 		orr	r2, r2, #32768
 6730 011a 5A64     		str	r2, [r3, #68]
 6731              	.L454:
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
 6732              		.loc 1 1391 0
 6733 011c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc8lNJIB.s 			page 228


 6734 011e 1A68     		ldr	r2, [r3]
 6735 0120 42F00102 		orr	r2, r2, #1
 6736 0124 1A60     		str	r2, [r3]
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 6737              		.loc 1 1394 0
 6738 0126 0020     		movs	r0, #0
 6739 0128 70BD     		pop	{r4, r5, r6, pc}
 6740              	.LVL684:
 6741              	.L455:
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 6742              		.loc 1 1298 0
 6743 012a 0220     		movs	r0, #2
 6744 012c 70BD     		pop	{r4, r5, r6, pc}
 6745              	.LVL685:
 6746              	.L456:
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 6747              		.loc 1 1304 0
 6748 012e 0120     		movs	r0, #1
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 6749              		.loc 1 1395 0
 6750 0130 70BD     		pop	{r4, r5, r6, pc}
 6751              	.LVL686:
 6752              	.L462:
 6753 0132 00BF     		.align	2
 6754              	.L461:
 6755 0134 00000000 		.word	TIM_DMADelayPulseCplt
 6756 0138 00000000 		.word	TIM_DMAError
 6757 013c 002C0140 		.word	1073818624
 6758              		.cfi_endproc
 6759              	.LFE151:
 6761              		.section	.text.HAL_TIM_PWM_Stop_DMA,"ax",%progbits
 6762              		.align	2
 6763              		.global	HAL_TIM_PWM_Stop_DMA
 6764              		.thumb
 6765              		.thumb_func
 6767              	HAL_TIM_PWM_Stop_DMA:
 6768              	.LFB152:
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 6769              		.loc 1 1409 0
 6770              		.cfi_startproc
 6771              		@ args = 0, pretend = 0, frame = 0
 6772              		@ frame_needed = 0, uses_anonymous_args = 0
 6773              	.LVL687:
 6774 0000 10B5     		push	{r4, lr}
 6775              	.LCFI56:
 6776              		.cfi_def_cfa_offset 8
 6777              		.cfi_offset 4, -8
 6778              		.cfi_offset 14, -4
 6779 0002 0446     		mov	r4, r0
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 6780              		.loc 1 1413 0
 6781 0004 0C29     		cmp	r1, #12
 6782 0006 1FD8     		bhi	.L464
 6783 0008 DFE801F0 		tbb	[pc, r1]
 6784              	.L466:
 6785 000c 07       		.byte	(.L465-.L466)/2
 6786 000d 1E       		.byte	(.L464-.L466)/2
ARM GAS  /tmp/cc8lNJIB.s 			page 229


 6787 000e 1E       		.byte	(.L464-.L466)/2
 6788 000f 1E       		.byte	(.L464-.L466)/2
 6789 0010 0D       		.byte	(.L467-.L466)/2
 6790 0011 1E       		.byte	(.L464-.L466)/2
 6791 0012 1E       		.byte	(.L464-.L466)/2
 6792 0013 1E       		.byte	(.L464-.L466)/2
 6793 0014 13       		.byte	(.L468-.L466)/2
 6794 0015 1E       		.byte	(.L464-.L466)/2
 6795 0016 1E       		.byte	(.L464-.L466)/2
 6796 0017 1E       		.byte	(.L464-.L466)/2
 6797 0018 19       		.byte	(.L469-.L466)/2
 6798 0019 00       		.p2align 1
 6799              	.L465:
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 6800              		.loc 1 1418 0
 6801 001a 0368     		ldr	r3, [r0]
 6802 001c DA68     		ldr	r2, [r3, #12]
 6803 001e 22F40072 		bic	r2, r2, #512
 6804 0022 DA60     		str	r2, [r3, #12]
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6805              		.loc 1 1420 0
 6806 0024 10E0     		b	.L464
 6807              	.L467:
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 6808              		.loc 1 1425 0
 6809 0026 0368     		ldr	r3, [r0]
 6810 0028 DA68     		ldr	r2, [r3, #12]
 6811 002a 22F48062 		bic	r2, r2, #1024
 6812 002e DA60     		str	r2, [r3, #12]
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6813              		.loc 1 1427 0
 6814 0030 0AE0     		b	.L464
 6815              	.L468:
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 6816              		.loc 1 1432 0
 6817 0032 0368     		ldr	r3, [r0]
 6818 0034 DA68     		ldr	r2, [r3, #12]
 6819 0036 22F40062 		bic	r2, r2, #2048
 6820 003a DA60     		str	r2, [r3, #12]
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 6821              		.loc 1 1434 0
 6822 003c 04E0     		b	.L464
 6823              	.L469:
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 6824              		.loc 1 1439 0
 6825 003e 0368     		ldr	r3, [r0]
 6826 0040 DA68     		ldr	r2, [r3, #12]
 6827 0042 22F48052 		bic	r2, r2, #4096
 6828 0046 DA60     		str	r2, [r3, #12]
 6829              	.L464:
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 6830              		.loc 1 1448 0
 6831 0048 2068     		ldr	r0, [r4]
 6832              	.LVL688:
 6833 004a 0022     		movs	r2, #0
 6834 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 6835              	.LVL689:
ARM GAS  /tmp/cc8lNJIB.s 			page 230


1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6836              		.loc 1 1450 0
 6837 0050 2368     		ldr	r3, [r4]
 6838 0052 1D4A     		ldr	r2, .L477
 6839 0054 9342     		cmp	r3, r2
 6840 0056 0DD0     		beq	.L473
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6841              		.loc 1 1450 0 is_stmt 0 discriminator 2
 6842 0058 02F5A052 		add	r2, r2, #5120
 6843 005c 9342     		cmp	r3, r2
 6844 005e 0BD0     		beq	.L474
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6845              		.loc 1 1450 0 discriminator 1
 6846 0060 02F58062 		add	r2, r2, #1024
 6847 0064 9342     		cmp	r3, r2
 6848 0066 09D0     		beq	.L475
 6849 0068 02F58062 		add	r2, r2, #1024
 6850 006c 9342     		cmp	r3, r2
 6851 006e 07D1     		bne	.L476
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6852              		.loc 1 1450 0
 6853 0070 0122     		movs	r2, #1
 6854 0072 06E0     		b	.L470
 6855              	.L473:
 6856 0074 0122     		movs	r2, #1
 6857 0076 04E0     		b	.L470
 6858              	.L474:
 6859 0078 0122     		movs	r2, #1
 6860 007a 02E0     		b	.L470
 6861              	.L475:
 6862 007c 0122     		movs	r2, #1
 6863 007e 00E0     		b	.L470
 6864              	.L476:
 6865 0080 0022     		movs	r2, #0
 6866              	.L470:
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 6867              		.loc 1 1450 0 discriminator 4
 6868 0082 6AB1     		cbz	r2, .L471
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6869              		.loc 1 1453 0 is_stmt 1
 6870 0084 196A     		ldr	r1, [r3, #32]
 6871 0086 41F21112 		movw	r2, #4369
 6872 008a 1142     		tst	r1, r2
 6873 008c 08D1     		bne	.L471
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 6874              		.loc 1 1453 0 is_stmt 0 discriminator 1
 6875 008e 196A     		ldr	r1, [r3, #32]
 6876 0090 40F24442 		movw	r2, #1092
 6877 0094 1142     		tst	r1, r2
 6878 0096 03D1     		bne	.L471
 6879 0098 5A6C     		ldr	r2, [r3, #68]
 6880 009a 22F40042 		bic	r2, r2, #32768
 6881 009e 5A64     		str	r2, [r3, #68]
 6882              	.L471:
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6883              		.loc 1 1457 0 is_stmt 1
 6884 00a0 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cc8lNJIB.s 			page 231


 6885 00a2 196A     		ldr	r1, [r3, #32]
 6886 00a4 41F21112 		movw	r2, #4369
 6887 00a8 1142     		tst	r1, r2
 6888 00aa 08D1     		bne	.L472
1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 6889              		.loc 1 1457 0 is_stmt 0 discriminator 1
 6890 00ac 196A     		ldr	r1, [r3, #32]
 6891 00ae 40F24442 		movw	r2, #1092
 6892 00b2 1142     		tst	r1, r2
 6893 00b4 03D1     		bne	.L472
 6894 00b6 1A68     		ldr	r2, [r3]
 6895 00b8 22F00102 		bic	r2, r2, #1
 6896 00bc 1A60     		str	r2, [r3]
 6897              	.L472:
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 6898              		.loc 1 1460 0 is_stmt 1
 6899 00be 0123     		movs	r3, #1
 6900 00c0 84F83D30 		strb	r3, [r4, #61]
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 6901              		.loc 1 1464 0
 6902 00c4 0020     		movs	r0, #0
 6903 00c6 10BD     		pop	{r4, pc}
 6904              	.LVL690:
 6905              	.L478:
 6906              		.align	2
 6907              	.L477:
 6908 00c8 002C0140 		.word	1073818624
 6909              		.cfi_endproc
 6910              	.LFE152:
 6912              		.section	.text.HAL_TIM_IC_Start,"ax",%progbits
 6913              		.align	2
 6914              		.global	HAL_TIM_IC_Start
 6915              		.thumb
 6916              		.thumb_func
 6918              	HAL_TIM_IC_Start:
 6919              	.LFB157:
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 6920              		.loc 1 1601 0
 6921              		.cfi_startproc
 6922              		@ args = 0, pretend = 0, frame = 0
 6923              		@ frame_needed = 0, uses_anonymous_args = 0
 6924              	.LVL691:
 6925 0000 10B5     		push	{r4, lr}
 6926              	.LCFI57:
 6927              		.cfi_def_cfa_offset 8
 6928              		.cfi_offset 4, -8
 6929              		.cfi_offset 14, -4
 6930 0002 0446     		mov	r4, r0
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 6931              		.loc 1 1606 0
 6932 0004 0068     		ldr	r0, [r0]
 6933              	.LVL692:
 6934 0006 0122     		movs	r2, #1
 6935 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 6936              	.LVL693:
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);  
 6937              		.loc 1 1609 0
ARM GAS  /tmp/cc8lNJIB.s 			page 232


 6938 000c 2368     		ldr	r3, [r4]
 6939 000e 1A68     		ldr	r2, [r3]
 6940 0010 42F00102 		orr	r2, r2, #1
 6941 0014 1A60     		str	r2, [r3]
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 6942              		.loc 1 1613 0
 6943 0016 0020     		movs	r0, #0
 6944 0018 10BD     		pop	{r4, pc}
 6945              		.cfi_endproc
 6946              	.LFE157:
 6948 001a 00BF     		.section	.text.HAL_TIM_IC_Stop,"ax",%progbits
 6949              		.align	2
 6950              		.global	HAL_TIM_IC_Stop
 6951              		.thumb
 6952              		.thumb_func
 6954              	HAL_TIM_IC_Stop:
 6955              	.LFB158:
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** { 
 6956              		.loc 1 1627 0
 6957              		.cfi_startproc
 6958              		@ args = 0, pretend = 0, frame = 0
 6959              		@ frame_needed = 0, uses_anonymous_args = 0
 6960              	.LVL694:
 6961 0000 10B5     		push	{r4, lr}
 6962              	.LCFI58:
 6963              		.cfi_def_cfa_offset 8
 6964              		.cfi_offset 4, -8
 6965              		.cfi_offset 14, -4
 6966 0002 0446     		mov	r4, r0
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 6967              		.loc 1 1632 0
 6968 0004 0068     		ldr	r0, [r0]
 6969              	.LVL695:
 6970 0006 0022     		movs	r2, #0
 6971 0008 FFF7FEFF 		bl	TIM_CCxChannelCmd
 6972              	.LVL696:
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 6973              		.loc 1 1635 0
 6974 000c 2368     		ldr	r3, [r4]
 6975 000e 196A     		ldr	r1, [r3, #32]
 6976 0010 41F21112 		movw	r2, #4369
 6977 0014 1142     		tst	r1, r2
 6978 0016 08D1     		bne	.L481
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 6979              		.loc 1 1635 0 is_stmt 0 discriminator 1
 6980 0018 196A     		ldr	r1, [r3, #32]
 6981 001a 40F24442 		movw	r2, #1092
 6982 001e 1142     		tst	r1, r2
 6983 0020 03D1     		bne	.L481
 6984 0022 1A68     		ldr	r2, [r3]
 6985 0024 22F00102 		bic	r2, r2, #1
 6986 0028 1A60     		str	r2, [r3]
 6987              	.L481:
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 6988              		.loc 1 1639 0 is_stmt 1
 6989 002a 0020     		movs	r0, #0
 6990 002c 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc8lNJIB.s 			page 233


 6991              		.cfi_endproc
 6992              	.LFE158:
 6994 002e 00BF     		.section	.text.HAL_TIM_IC_Start_IT,"ax",%progbits
 6995              		.align	2
 6996              		.global	HAL_TIM_IC_Start_IT
 6997              		.thumb
 6998              		.thumb_func
 7000              	HAL_TIM_IC_Start_IT:
 7001              	.LFB159:
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7002              		.loc 1 1653 0
 7003              		.cfi_startproc
 7004              		@ args = 0, pretend = 0, frame = 0
 7005              		@ frame_needed = 0, uses_anonymous_args = 0
 7006              	.LVL697:
 7007 0000 10B5     		push	{r4, lr}
 7008              	.LCFI59:
 7009              		.cfi_def_cfa_offset 8
 7010              		.cfi_offset 4, -8
 7011              		.cfi_offset 14, -4
 7012 0002 0446     		mov	r4, r0
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 7013              		.loc 1 1657 0
 7014 0004 0C29     		cmp	r1, #12
 7015 0006 1FD8     		bhi	.L483
 7016 0008 DFE801F0 		tbb	[pc, r1]
 7017              	.L485:
 7018 000c 07       		.byte	(.L484-.L485)/2
 7019 000d 1E       		.byte	(.L483-.L485)/2
 7020 000e 1E       		.byte	(.L483-.L485)/2
 7021 000f 1E       		.byte	(.L483-.L485)/2
 7022 0010 0D       		.byte	(.L486-.L485)/2
 7023 0011 1E       		.byte	(.L483-.L485)/2
 7024 0012 1E       		.byte	(.L483-.L485)/2
 7025 0013 1E       		.byte	(.L483-.L485)/2
 7026 0014 13       		.byte	(.L487-.L485)/2
 7027 0015 1E       		.byte	(.L483-.L485)/2
 7028 0016 1E       		.byte	(.L483-.L485)/2
 7029 0017 1E       		.byte	(.L483-.L485)/2
 7030 0018 19       		.byte	(.L488-.L485)/2
 7031 0019 00       		.p2align 1
 7032              	.L484:
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 7033              		.loc 1 1662 0
 7034 001a 0368     		ldr	r3, [r0]
 7035 001c DA68     		ldr	r2, [r3, #12]
 7036 001e 42F00202 		orr	r2, r2, #2
 7037 0022 DA60     		str	r2, [r3, #12]
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7038              		.loc 1 1664 0
 7039 0024 10E0     		b	.L483
 7040              	.L486:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 7041              		.loc 1 1669 0
 7042 0026 0368     		ldr	r3, [r0]
 7043 0028 DA68     		ldr	r2, [r3, #12]
 7044 002a 42F00402 		orr	r2, r2, #4
ARM GAS  /tmp/cc8lNJIB.s 			page 234


 7045 002e DA60     		str	r2, [r3, #12]
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7046              		.loc 1 1671 0
 7047 0030 0AE0     		b	.L483
 7048              	.L487:
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC3);
 7049              		.loc 1 1676 0
 7050 0032 0368     		ldr	r3, [r0]
 7051 0034 DA68     		ldr	r2, [r3, #12]
 7052 0036 42F00802 		orr	r2, r2, #8
 7053 003a DA60     		str	r2, [r3, #12]
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7054              		.loc 1 1678 0
 7055 003c 04E0     		b	.L483
 7056              	.L488:
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC4);
 7057              		.loc 1 1683 0
 7058 003e 0368     		ldr	r3, [r0]
 7059 0040 DA68     		ldr	r2, [r3, #12]
 7060 0042 42F01002 		orr	r2, r2, #16
 7061 0046 DA60     		str	r2, [r3, #12]
 7062              	.L483:
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 7063              		.loc 1 1691 0
 7064 0048 2068     		ldr	r0, [r4]
 7065              	.LVL698:
 7066 004a 0122     		movs	r2, #1
 7067 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 7068              	.LVL699:
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);  
 7069              		.loc 1 1694 0
 7070 0050 2368     		ldr	r3, [r4]
 7071 0052 1A68     		ldr	r2, [r3]
 7072 0054 42F00102 		orr	r2, r2, #1
 7073 0058 1A60     		str	r2, [r3]
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** } 
 7074              		.loc 1 1698 0
 7075 005a 0020     		movs	r0, #0
 7076 005c 10BD     		pop	{r4, pc}
 7077              		.cfi_endproc
 7078              	.LFE159:
 7080 005e 00BF     		.section	.text.HAL_TIM_IC_Stop_IT,"ax",%progbits
 7081              		.align	2
 7082              		.global	HAL_TIM_IC_Stop_IT
 7083              		.thumb
 7084              		.thumb_func
 7086              	HAL_TIM_IC_Stop_IT:
 7087              	.LFB160:
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7088              		.loc 1 1712 0
 7089              		.cfi_startproc
 7090              		@ args = 0, pretend = 0, frame = 0
 7091              		@ frame_needed = 0, uses_anonymous_args = 0
 7092              	.LVL700:
 7093 0000 10B5     		push	{r4, lr}
 7094              	.LCFI60:
 7095              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cc8lNJIB.s 			page 235


 7096              		.cfi_offset 4, -8
 7097              		.cfi_offset 14, -4
 7098 0002 0446     		mov	r4, r0
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 7099              		.loc 1 1716 0
 7100 0004 0C29     		cmp	r1, #12
 7101 0006 1FD8     		bhi	.L490
 7102 0008 DFE801F0 		tbb	[pc, r1]
 7103              	.L492:
 7104 000c 07       		.byte	(.L491-.L492)/2
 7105 000d 1E       		.byte	(.L490-.L492)/2
 7106 000e 1E       		.byte	(.L490-.L492)/2
 7107 000f 1E       		.byte	(.L490-.L492)/2
 7108 0010 0D       		.byte	(.L493-.L492)/2
 7109 0011 1E       		.byte	(.L490-.L492)/2
 7110 0012 1E       		.byte	(.L490-.L492)/2
 7111 0013 1E       		.byte	(.L490-.L492)/2
 7112 0014 13       		.byte	(.L494-.L492)/2
 7113 0015 1E       		.byte	(.L490-.L492)/2
 7114 0016 1E       		.byte	(.L490-.L492)/2
 7115 0017 1E       		.byte	(.L490-.L492)/2
 7116 0018 19       		.byte	(.L495-.L492)/2
 7117 0019 00       		.p2align 1
 7118              	.L491:
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 7119              		.loc 1 1721 0
 7120 001a 0368     		ldr	r3, [r0]
 7121 001c DA68     		ldr	r2, [r3, #12]
 7122 001e 22F00202 		bic	r2, r2, #2
 7123 0022 DA60     		str	r2, [r3, #12]
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7124              		.loc 1 1723 0
 7125 0024 10E0     		b	.L490
 7126              	.L493:
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 7127              		.loc 1 1728 0
 7128 0026 0368     		ldr	r3, [r0]
 7129 0028 DA68     		ldr	r2, [r3, #12]
 7130 002a 22F00402 		bic	r2, r2, #4
 7131 002e DA60     		str	r2, [r3, #12]
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7132              		.loc 1 1730 0
 7133 0030 0AE0     		b	.L490
 7134              	.L494:
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC3);
 7135              		.loc 1 1735 0
 7136 0032 0368     		ldr	r3, [r0]
 7137 0034 DA68     		ldr	r2, [r3, #12]
 7138 0036 22F00802 		bic	r2, r2, #8
 7139 003a DA60     		str	r2, [r3, #12]
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7140              		.loc 1 1737 0
 7141 003c 04E0     		b	.L490
 7142              	.L495:
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC4);
 7143              		.loc 1 1742 0
 7144 003e 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cc8lNJIB.s 			page 236


 7145 0040 DA68     		ldr	r2, [r3, #12]
 7146 0042 22F01002 		bic	r2, r2, #16
 7147 0046 DA60     		str	r2, [r3, #12]
 7148              	.L490:
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE); 
 7149              		.loc 1 1751 0
 7150 0048 2068     		ldr	r0, [r4]
 7151              	.LVL701:
 7152 004a 0022     		movs	r2, #0
 7153 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 7154              	.LVL702:
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 7155              		.loc 1 1754 0
 7156 0050 2368     		ldr	r3, [r4]
 7157 0052 196A     		ldr	r1, [r3, #32]
 7158 0054 41F21112 		movw	r2, #4369
 7159 0058 1142     		tst	r1, r2
 7160 005a 08D1     		bne	.L496
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 7161              		.loc 1 1754 0 is_stmt 0 discriminator 1
 7162 005c 196A     		ldr	r1, [r3, #32]
 7163 005e 40F24442 		movw	r2, #1092
 7164 0062 1142     		tst	r1, r2
 7165 0064 03D1     		bne	.L496
 7166 0066 1A68     		ldr	r2, [r3]
 7167 0068 22F00102 		bic	r2, r2, #1
 7168 006c 1A60     		str	r2, [r3]
 7169              	.L496:
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7170              		.loc 1 1758 0 is_stmt 1
 7171 006e 0020     		movs	r0, #0
 7172 0070 10BD     		pop	{r4, pc}
 7173              		.cfi_endproc
 7174              	.LFE160:
 7176 0072 00BF     		.section	.text.HAL_TIM_IC_Start_DMA,"ax",%progbits
 7177              		.align	2
 7178              		.global	HAL_TIM_IC_Start_DMA
 7179              		.thumb
 7180              		.thumb_func
 7182              	HAL_TIM_IC_Start_DMA:
 7183              	.LFB161:
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7184              		.loc 1 1774 0
 7185              		.cfi_startproc
 7186              		@ args = 0, pretend = 0, frame = 0
 7187              		@ frame_needed = 0, uses_anonymous_args = 0
 7188              	.LVL703:
 7189 0000 38B5     		push	{r3, r4, r5, lr}
 7190              	.LCFI61:
 7191              		.cfi_def_cfa_offset 16
 7192              		.cfi_offset 3, -16
 7193              		.cfi_offset 4, -12
 7194              		.cfi_offset 5, -8
 7195              		.cfi_offset 14, -4
 7196 0002 0446     		mov	r4, r0
 7197 0004 0D46     		mov	r5, r1
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
ARM GAS  /tmp/cc8lNJIB.s 			page 237


 7198              		.loc 1 1779 0
 7199 0006 90F83D10 		ldrb	r1, [r0, #61]	@ zero_extendqisi2
 7200              	.LVL704:
 7201 000a C9B2     		uxtb	r1, r1
 7202 000c 0229     		cmp	r1, #2
 7203 000e 64D0     		beq	.L507
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 7204              		.loc 1 1783 0
 7205 0010 90F83D10 		ldrb	r1, [r0, #61]	@ zero_extendqisi2
 7206 0014 C9B2     		uxtb	r1, r1
 7207 0016 0129     		cmp	r1, #1
 7208 0018 05D1     		bne	.L499
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U)) 
 7209              		.loc 1 1785 0
 7210 001a 0AB9     		cbnz	r2, .L500
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((pData == 0U ) && (Length > 0U)) 
 7211              		.loc 1 1785 0 is_stmt 0 discriminator 1
 7212 001c 002B     		cmp	r3, #0
 7213 001e 5ED1     		bne	.L508
 7214              	.L500:
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 7215              		.loc 1 1791 0 is_stmt 1
 7216 0020 0221     		movs	r1, #2
 7217 0022 84F83D10 		strb	r1, [r4, #61]
 7218              	.L499:
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 7219              		.loc 1 1795 0
 7220 0026 0C2D     		cmp	r5, #12
 7221 0028 4BD8     		bhi	.L501
 7222 002a DFE805F0 		tbb	[pc, r5]
 7223              	.L503:
 7224 002e 07       		.byte	(.L502-.L503)/2
 7225 002f 4A       		.byte	(.L501-.L503)/2
 7226 0030 4A       		.byte	(.L501-.L503)/2
 7227 0031 4A       		.byte	(.L501-.L503)/2
 7228 0032 18       		.byte	(.L504-.L503)/2
 7229 0033 4A       		.byte	(.L501-.L503)/2
 7230 0034 4A       		.byte	(.L501-.L503)/2
 7231 0035 4A       		.byte	(.L501-.L503)/2
 7232 0036 29       		.byte	(.L505-.L503)/2
 7233 0037 4A       		.byte	(.L501-.L503)/2
 7234 0038 4A       		.byte	(.L501-.L503)/2
 7235 0039 4A       		.byte	(.L501-.L503)/2
 7236 003a 3A       		.byte	(.L506-.L503)/2
 7237 003b 00       		.p2align 1
 7238              	.L502:
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 7239              		.loc 1 1800 0
 7240 003c 616A     		ldr	r1, [r4, #36]
 7241 003e 2948     		ldr	r0, .L509
 7242              	.LVL705:
 7243 0040 8862     		str	r0, [r1, #40]
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 7244              		.loc 1 1803 0
 7245 0042 616A     		ldr	r1, [r4, #36]
 7246 0044 2848     		ldr	r0, .L509+4
 7247 0046 0863     		str	r0, [r1, #48]
ARM GAS  /tmp/cc8lNJIB.s 			page 238


1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
 7248              		.loc 1 1806 0
 7249 0048 2168     		ldr	r1, [r4]
 7250 004a 606A     		ldr	r0, [r4, #36]
 7251 004c 3431     		adds	r1, r1, #52
 7252 004e FFF7FEFF 		bl	HAL_DMA_Start_IT
 7253              	.LVL706:
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 7254              		.loc 1 1809 0
 7255 0052 2368     		ldr	r3, [r4]
 7256 0054 DA68     		ldr	r2, [r3, #12]
 7257 0056 42F40072 		orr	r2, r2, #512
 7258 005a DA60     		str	r2, [r3, #12]
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7259              		.loc 1 1811 0
 7260 005c 31E0     		b	.L501
 7261              	.LVL707:
 7262              	.L504:
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 7263              		.loc 1 1816 0
 7264 005e A16A     		ldr	r1, [r4, #40]
 7265 0060 2048     		ldr	r0, .L509
 7266              	.LVL708:
 7267 0062 8862     		str	r0, [r1, #40]
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 7268              		.loc 1 1819 0
 7269 0064 A16A     		ldr	r1, [r4, #40]
 7270 0066 2048     		ldr	r0, .L509+4
 7271 0068 0863     		str	r0, [r1, #48]
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
 7272              		.loc 1 1822 0
 7273 006a 2168     		ldr	r1, [r4]
 7274 006c A06A     		ldr	r0, [r4, #40]
 7275 006e 3831     		adds	r1, r1, #56
 7276 0070 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7277              	.LVL709:
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 7278              		.loc 1 1825 0
 7279 0074 2368     		ldr	r3, [r4]
 7280 0076 DA68     		ldr	r2, [r3, #12]
 7281 0078 42F48062 		orr	r2, r2, #1024
 7282 007c DA60     		str	r2, [r3, #12]
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7283              		.loc 1 1827 0
 7284 007e 20E0     		b	.L501
 7285              	.LVL710:
 7286              	.L505:
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferCpltCallback = TIM_DMACaptureCplt;
 7287              		.loc 1 1832 0
 7288 0080 E16A     		ldr	r1, [r4, #44]
 7289 0082 1848     		ldr	r0, .L509
 7290              	.LVL711:
 7291 0084 8862     		str	r0, [r1, #40]
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC3]->XferErrorCallback = TIM_DMAError ;
 7292              		.loc 1 1835 0
 7293 0086 E16A     		ldr	r1, [r4, #44]
 7294 0088 1748     		ldr	r0, .L509+4
ARM GAS  /tmp/cc8lNJIB.s 			page 239


 7295 008a 0863     		str	r0, [r1, #48]
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC3], (uint32_t)&htim->Instance->CCR3, (uint32_t)pData
 7296              		.loc 1 1838 0
 7297 008c 2168     		ldr	r1, [r4]
 7298 008e E06A     		ldr	r0, [r4, #44]
 7299 0090 3C31     		adds	r1, r1, #60
 7300 0092 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7301              	.LVL712:
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC3);
 7302              		.loc 1 1841 0
 7303 0096 2368     		ldr	r3, [r4]
 7304 0098 DA68     		ldr	r2, [r3, #12]
 7305 009a 42F40062 		orr	r2, r2, #2048
 7306 009e DA60     		str	r2, [r3, #12]
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7307              		.loc 1 1843 0
 7308 00a0 0FE0     		b	.L501
 7309              	.LVL713:
 7310              	.L506:
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferCpltCallback = TIM_DMACaptureCplt;
 7311              		.loc 1 1848 0
 7312 00a2 216B     		ldr	r1, [r4, #48]
 7313 00a4 0F48     		ldr	r0, .L509
 7314              	.LVL714:
 7315 00a6 8862     		str	r0, [r1, #40]
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC4]->XferErrorCallback = TIM_DMAError ;
 7316              		.loc 1 1851 0
 7317 00a8 216B     		ldr	r1, [r4, #48]
 7318 00aa 0F48     		ldr	r0, .L509+4
 7319 00ac 0863     		str	r0, [r1, #48]
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC4], (uint32_t)&htim->Instance->CCR4, (uint32_t)pData
 7320              		.loc 1 1854 0
 7321 00ae 2168     		ldr	r1, [r4]
 7322 00b0 206B     		ldr	r0, [r4, #48]
 7323 00b2 4031     		adds	r1, r1, #64
 7324 00b4 FFF7FEFF 		bl	HAL_DMA_Start_IT
 7325              	.LVL715:
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC4);
 7326              		.loc 1 1857 0
 7327 00b8 2368     		ldr	r3, [r4]
 7328 00ba DA68     		ldr	r2, [r3, #12]
 7329 00bc 42F48052 		orr	r2, r2, #4096
 7330 00c0 DA60     		str	r2, [r3, #12]
 7331              	.L501:
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 7332              		.loc 1 1866 0
 7333 00c2 2068     		ldr	r0, [r4]
 7334 00c4 2946     		mov	r1, r5
 7335 00c6 0122     		movs	r2, #1
 7336 00c8 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7337              	.LVL716:
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim); 
 7338              		.loc 1 1869 0
 7339 00cc 2368     		ldr	r3, [r4]
 7340 00ce 1A68     		ldr	r2, [r3]
 7341 00d0 42F00102 		orr	r2, r2, #1
 7342 00d4 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc8lNJIB.s 			page 240


1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 7343              		.loc 1 1872 0
 7344 00d6 0020     		movs	r0, #0
 7345 00d8 38BD     		pop	{r3, r4, r5, pc}
 7346              	.LVL717:
 7347              	.L507:
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****      return HAL_BUSY;
 7348              		.loc 1 1781 0
 7349 00da 0220     		movs	r0, #2
 7350              	.LVL718:
 7351 00dc 38BD     		pop	{r3, r4, r5, pc}
 7352              	.LVL719:
 7353              	.L508:
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 7354              		.loc 1 1787 0
 7355 00de 0120     		movs	r0, #1
 7356              	.LVL720:
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7357              		.loc 1 1873 0
 7358 00e0 38BD     		pop	{r3, r4, r5, pc}
 7359              	.LVL721:
 7360              	.L510:
 7361 00e2 00BF     		.align	2
 7362              	.L509:
 7363 00e4 00000000 		.word	TIM_DMACaptureCplt
 7364 00e8 00000000 		.word	TIM_DMAError
 7365              		.cfi_endproc
 7366              	.LFE161:
 7368              		.section	.text.HAL_TIM_IC_Stop_DMA,"ax",%progbits
 7369              		.align	2
 7370              		.global	HAL_TIM_IC_Stop_DMA
 7371              		.thumb
 7372              		.thumb_func
 7374              	HAL_TIM_IC_Stop_DMA:
 7375              	.LFB162:
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7376              		.loc 1 1887 0
 7377              		.cfi_startproc
 7378              		@ args = 0, pretend = 0, frame = 0
 7379              		@ frame_needed = 0, uses_anonymous_args = 0
 7380              	.LVL722:
 7381 0000 10B5     		push	{r4, lr}
 7382              	.LCFI62:
 7383              		.cfi_def_cfa_offset 8
 7384              		.cfi_offset 4, -8
 7385              		.cfi_offset 14, -4
 7386 0002 0446     		mov	r4, r0
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 7387              		.loc 1 1892 0
 7388 0004 0C29     		cmp	r1, #12
 7389 0006 1FD8     		bhi	.L512
 7390 0008 DFE801F0 		tbb	[pc, r1]
 7391              	.L514:
 7392 000c 07       		.byte	(.L513-.L514)/2
 7393 000d 1E       		.byte	(.L512-.L514)/2
 7394 000e 1E       		.byte	(.L512-.L514)/2
 7395 000f 1E       		.byte	(.L512-.L514)/2
ARM GAS  /tmp/cc8lNJIB.s 			page 241


 7396 0010 0D       		.byte	(.L515-.L514)/2
 7397 0011 1E       		.byte	(.L512-.L514)/2
 7398 0012 1E       		.byte	(.L512-.L514)/2
 7399 0013 1E       		.byte	(.L512-.L514)/2
 7400 0014 13       		.byte	(.L516-.L514)/2
 7401 0015 1E       		.byte	(.L512-.L514)/2
 7402 0016 1E       		.byte	(.L512-.L514)/2
 7403 0017 1E       		.byte	(.L512-.L514)/2
 7404 0018 19       		.byte	(.L517-.L514)/2
 7405 0019 00       		.p2align 1
 7406              	.L513:
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 7407              		.loc 1 1897 0
 7408 001a 0368     		ldr	r3, [r0]
 7409 001c DA68     		ldr	r2, [r3, #12]
 7410 001e 22F40072 		bic	r2, r2, #512
 7411 0022 DA60     		str	r2, [r3, #12]
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7412              		.loc 1 1899 0
 7413 0024 10E0     		b	.L512
 7414              	.L515:
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 7415              		.loc 1 1904 0
 7416 0026 0368     		ldr	r3, [r0]
 7417 0028 DA68     		ldr	r2, [r3, #12]
 7418 002a 22F48062 		bic	r2, r2, #1024
 7419 002e DA60     		str	r2, [r3, #12]
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7420              		.loc 1 1906 0
 7421 0030 0AE0     		b	.L512
 7422              	.L516:
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC3);
 7423              		.loc 1 1911 0
 7424 0032 0368     		ldr	r3, [r0]
 7425 0034 DA68     		ldr	r2, [r3, #12]
 7426 0036 22F40062 		bic	r2, r2, #2048
 7427 003a DA60     		str	r2, [r3, #12]
1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 7428              		.loc 1 1913 0
 7429 003c 04E0     		b	.L512
 7430              	.L517:
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC4);
 7431              		.loc 1 1918 0
 7432 003e 0368     		ldr	r3, [r0]
 7433 0040 DA68     		ldr	r2, [r3, #12]
 7434 0042 22F48052 		bic	r2, r2, #4096
 7435 0046 DA60     		str	r2, [r3, #12]
 7436              	.L512:
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_DISABLE);
 7437              		.loc 1 1927 0
 7438 0048 2068     		ldr	r0, [r4]
 7439              	.LVL723:
 7440 004a 0022     		movs	r2, #0
 7441 004c FFF7FEFF 		bl	TIM_CCxChannelCmd
 7442              	.LVL724:
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 7443              		.loc 1 1930 0
ARM GAS  /tmp/cc8lNJIB.s 			page 242


 7444 0050 2368     		ldr	r3, [r4]
 7445 0052 196A     		ldr	r1, [r3, #32]
 7446 0054 41F21112 		movw	r2, #4369
 7447 0058 1142     		tst	r1, r2
 7448 005a 08D1     		bne	.L518
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 7449              		.loc 1 1930 0 is_stmt 0 discriminator 1
 7450 005c 196A     		ldr	r1, [r3, #32]
 7451 005e 40F24442 		movw	r2, #1092
 7452 0062 1142     		tst	r1, r2
 7453 0064 03D1     		bne	.L518
 7454 0066 1A68     		ldr	r2, [r3]
 7455 0068 22F00102 		bic	r2, r2, #1
 7456 006c 1A60     		str	r2, [r3]
 7457              	.L518:
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 7458              		.loc 1 1933 0 is_stmt 1
 7459 006e 0123     		movs	r3, #1
 7460 0070 84F83D30 		strb	r3, [r4, #61]
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7461              		.loc 1 1937 0
 7462 0074 0020     		movs	r0, #0
 7463 0076 10BD     		pop	{r4, pc}
 7464              		.cfi_endproc
 7465              	.LFE162:
 7467              		.section	.text.HAL_TIM_OnePulse_Start,"ax",%progbits
 7468              		.align	2
 7469              		.global	HAL_TIM_OnePulse_Start
 7470              		.thumb
 7471              		.thumb_func
 7473              	HAL_TIM_OnePulse_Start:
 7474              	.LFB167:
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7475              		.loc 1 2082 0
 7476              		.cfi_startproc
 7477              		@ args = 0, pretend = 0, frame = 0
 7478              		@ frame_needed = 0, uses_anonymous_args = 0
 7479              	.LVL725:
 7480 0000 10B5     		push	{r4, lr}
 7481              	.LCFI63:
 7482              		.cfi_def_cfa_offset 8
 7483              		.cfi_offset 4, -8
 7484              		.cfi_offset 14, -4
 7485 0002 0446     		mov	r4, r0
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
 7486              		.loc 1 2092 0
 7487 0004 0068     		ldr	r0, [r0]
 7488              	.LVL726:
 7489 0006 0021     		movs	r1, #0
 7490              	.LVL727:
 7491 0008 0122     		movs	r2, #1
 7492 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 7493              	.LVL728:
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
 7494              		.loc 1 2093 0
 7495 000e 2068     		ldr	r0, [r4]
 7496 0010 0421     		movs	r1, #4
ARM GAS  /tmp/cc8lNJIB.s 			page 243


 7497 0012 0122     		movs	r2, #1
 7498 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7499              	.LVL729:
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7500              		.loc 1 2095 0
 7501 0018 2368     		ldr	r3, [r4]
 7502 001a 0F4A     		ldr	r2, .L526
 7503 001c 9342     		cmp	r3, r2
 7504 001e 0DD0     		beq	.L522
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7505              		.loc 1 2095 0 is_stmt 0 discriminator 2
 7506 0020 02F5A052 		add	r2, r2, #5120
 7507 0024 9342     		cmp	r3, r2
 7508 0026 0BD0     		beq	.L523
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7509              		.loc 1 2095 0 discriminator 1
 7510 0028 02F58062 		add	r2, r2, #1024
 7511 002c 9342     		cmp	r3, r2
 7512 002e 09D0     		beq	.L524
 7513 0030 02F58062 		add	r2, r2, #1024
 7514 0034 9342     		cmp	r3, r2
 7515 0036 07D1     		bne	.L525
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7516              		.loc 1 2095 0
 7517 0038 0122     		movs	r2, #1
 7518 003a 06E0     		b	.L520
 7519              	.L522:
 7520 003c 0122     		movs	r2, #1
 7521 003e 04E0     		b	.L520
 7522              	.L523:
 7523 0040 0122     		movs	r2, #1
 7524 0042 02E0     		b	.L520
 7525              	.L524:
 7526 0044 0122     		movs	r2, #1
 7527 0046 00E0     		b	.L520
 7528              	.L525:
 7529 0048 0022     		movs	r2, #0
 7530              	.L520:
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7531              		.loc 1 2095 0 discriminator 4
 7532 004a 1AB1     		cbz	r2, .L521
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 7533              		.loc 1 2098 0 is_stmt 1
 7534 004c 5A6C     		ldr	r2, [r3, #68]
 7535 004e 42F40042 		orr	r2, r2, #32768
 7536 0052 5A64     		str	r2, [r3, #68]
 7537              	.L521:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7538              		.loc 1 2103 0
 7539 0054 0020     		movs	r0, #0
 7540 0056 10BD     		pop	{r4, pc}
 7541              	.LVL730:
 7542              	.L527:
 7543              		.align	2
 7544              	.L526:
 7545 0058 002C0140 		.word	1073818624
 7546              		.cfi_endproc
ARM GAS  /tmp/cc8lNJIB.s 			page 244


 7547              	.LFE167:
 7549              		.section	.text.HAL_TIM_OnePulse_Stop,"ax",%progbits
 7550              		.align	2
 7551              		.global	HAL_TIM_OnePulse_Stop
 7552              		.thumb
 7553              		.thumb_func
 7555              	HAL_TIM_OnePulse_Stop:
 7556              	.LFB168:
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7557              		.loc 1 2115 0
 7558              		.cfi_startproc
 7559              		@ args = 0, pretend = 0, frame = 0
 7560              		@ frame_needed = 0, uses_anonymous_args = 0
 7561              	.LVL731:
 7562 0000 10B5     		push	{r4, lr}
 7563              	.LCFI64:
 7564              		.cfi_def_cfa_offset 8
 7565              		.cfi_offset 4, -8
 7566              		.cfi_offset 14, -4
 7567 0002 0446     		mov	r4, r0
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 7568              		.loc 1 2122 0
 7569 0004 0068     		ldr	r0, [r0]
 7570              	.LVL732:
 7571 0006 0021     		movs	r1, #0
 7572              	.LVL733:
 7573 0008 0A46     		mov	r2, r1
 7574 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 7575              	.LVL734:
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 7576              		.loc 1 2123 0
 7577 000e 2068     		ldr	r0, [r4]
 7578 0010 0421     		movs	r1, #4
 7579 0012 0022     		movs	r2, #0
 7580 0014 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7581              	.LVL735:
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7582              		.loc 1 2125 0
 7583 0018 2368     		ldr	r3, [r4]
 7584 001a 1C4A     		ldr	r2, .L536
 7585 001c 9342     		cmp	r3, r2
 7586 001e 0DD0     		beq	.L532
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7587              		.loc 1 2125 0 is_stmt 0 discriminator 2
 7588 0020 02F5A052 		add	r2, r2, #5120
 7589 0024 9342     		cmp	r3, r2
 7590 0026 0BD0     		beq	.L533
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7591              		.loc 1 2125 0 discriminator 1
 7592 0028 02F58062 		add	r2, r2, #1024
 7593 002c 9342     		cmp	r3, r2
 7594 002e 09D0     		beq	.L534
 7595 0030 02F58062 		add	r2, r2, #1024
 7596 0034 9342     		cmp	r3, r2
 7597 0036 07D1     		bne	.L535
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7598              		.loc 1 2125 0
ARM GAS  /tmp/cc8lNJIB.s 			page 245


 7599 0038 0122     		movs	r2, #1
 7600 003a 06E0     		b	.L529
 7601              	.L532:
 7602 003c 0122     		movs	r2, #1
 7603 003e 04E0     		b	.L529
 7604              	.L533:
 7605 0040 0122     		movs	r2, #1
 7606 0042 02E0     		b	.L529
 7607              	.L534:
 7608 0044 0122     		movs	r2, #1
 7609 0046 00E0     		b	.L529
 7610              	.L535:
 7611 0048 0022     		movs	r2, #0
 7612              	.L529:
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7613              		.loc 1 2125 0 discriminator 4
 7614 004a 6AB1     		cbz	r2, .L530
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7615              		.loc 1 2128 0 is_stmt 1
 7616 004c 196A     		ldr	r1, [r3, #32]
 7617 004e 41F21112 		movw	r2, #4369
 7618 0052 1142     		tst	r1, r2
 7619 0054 08D1     		bne	.L530
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7620              		.loc 1 2128 0 is_stmt 0 discriminator 1
 7621 0056 196A     		ldr	r1, [r3, #32]
 7622 0058 40F24442 		movw	r2, #1092
 7623 005c 1142     		tst	r1, r2
 7624 005e 03D1     		bne	.L530
 7625 0060 5A6C     		ldr	r2, [r3, #68]
 7626 0062 22F40042 		bic	r2, r2, #32768
 7627 0066 5A64     		str	r2, [r3, #68]
 7628              	.L530:
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 7629              		.loc 1 2132 0 is_stmt 1
 7630 0068 2368     		ldr	r3, [r4]
 7631 006a 196A     		ldr	r1, [r3, #32]
 7632 006c 41F21112 		movw	r2, #4369
 7633 0070 1142     		tst	r1, r2
 7634 0072 08D1     		bne	.L531
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim); 
 7635              		.loc 1 2132 0 is_stmt 0 discriminator 1
 7636 0074 196A     		ldr	r1, [r3, #32]
 7637 0076 40F24442 		movw	r2, #1092
 7638 007a 1142     		tst	r1, r2
 7639 007c 03D1     		bne	.L531
 7640 007e 1A68     		ldr	r2, [r3]
 7641 0080 22F00102 		bic	r2, r2, #1
 7642 0084 1A60     		str	r2, [r3]
 7643              	.L531:
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7644              		.loc 1 2136 0 is_stmt 1
 7645 0086 0020     		movs	r0, #0
 7646 0088 10BD     		pop	{r4, pc}
 7647              	.LVL736:
 7648              	.L537:
 7649 008a 00BF     		.align	2
ARM GAS  /tmp/cc8lNJIB.s 			page 246


 7650              	.L536:
 7651 008c 002C0140 		.word	1073818624
 7652              		.cfi_endproc
 7653              	.LFE168:
 7655              		.section	.text.HAL_TIM_OnePulse_Start_IT,"ax",%progbits
 7656              		.align	2
 7657              		.global	HAL_TIM_OnePulse_Start_IT
 7658              		.thumb
 7659              		.thumb_func
 7661              	HAL_TIM_OnePulse_Start_IT:
 7662              	.LFB169:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7663              		.loc 1 2148 0
 7664              		.cfi_startproc
 7665              		@ args = 0, pretend = 0, frame = 0
 7666              		@ frame_needed = 0, uses_anonymous_args = 0
 7667              	.LVL737:
 7668 0000 10B5     		push	{r4, lr}
 7669              	.LCFI65:
 7670              		.cfi_def_cfa_offset 8
 7671              		.cfi_offset 4, -8
 7672              		.cfi_offset 14, -4
 7673 0002 0446     		mov	r4, r0
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 7674              		.loc 1 2159 0
 7675 0004 0368     		ldr	r3, [r0]
 7676 0006 DA68     		ldr	r2, [r3, #12]
 7677 0008 42F00202 		orr	r2, r2, #2
 7678 000c DA60     		str	r2, [r3, #12]
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 7679              		.loc 1 2162 0
 7680 000e 0368     		ldr	r3, [r0]
 7681 0010 DA68     		ldr	r2, [r3, #12]
 7682 0012 42F00402 		orr	r2, r2, #4
 7683 0016 DA60     		str	r2, [r3, #12]
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
 7684              		.loc 1 2164 0
 7685 0018 0068     		ldr	r0, [r0]
 7686              	.LVL738:
 7687 001a 0021     		movs	r1, #0
 7688              	.LVL739:
 7689 001c 0122     		movs	r2, #1
 7690 001e FFF7FEFF 		bl	TIM_CCxChannelCmd
 7691              	.LVL740:
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
 7692              		.loc 1 2165 0
 7693 0022 2068     		ldr	r0, [r4]
 7694 0024 0421     		movs	r1, #4
 7695 0026 0122     		movs	r2, #1
 7696 0028 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7697              	.LVL741:
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7698              		.loc 1 2167 0
 7699 002c 2368     		ldr	r3, [r4]
 7700 002e 0F4A     		ldr	r2, .L545
 7701 0030 9342     		cmp	r3, r2
 7702 0032 0DD0     		beq	.L541
ARM GAS  /tmp/cc8lNJIB.s 			page 247


2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7703              		.loc 1 2167 0 is_stmt 0 discriminator 2
 7704 0034 02F5A052 		add	r2, r2, #5120
 7705 0038 9342     		cmp	r3, r2
 7706 003a 0BD0     		beq	.L542
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7707              		.loc 1 2167 0 discriminator 1
 7708 003c 02F58062 		add	r2, r2, #1024
 7709 0040 9342     		cmp	r3, r2
 7710 0042 09D0     		beq	.L543
 7711 0044 02F58062 		add	r2, r2, #1024
 7712 0048 9342     		cmp	r3, r2
 7713 004a 07D1     		bne	.L544
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7714              		.loc 1 2167 0
 7715 004c 0122     		movs	r2, #1
 7716 004e 06E0     		b	.L539
 7717              	.L541:
 7718 0050 0122     		movs	r2, #1
 7719 0052 04E0     		b	.L539
 7720              	.L542:
 7721 0054 0122     		movs	r2, #1
 7722 0056 02E0     		b	.L539
 7723              	.L543:
 7724 0058 0122     		movs	r2, #1
 7725 005a 00E0     		b	.L539
 7726              	.L544:
 7727 005c 0022     		movs	r2, #0
 7728              	.L539:
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7729              		.loc 1 2167 0 discriminator 4
 7730 005e 1AB1     		cbz	r2, .L540
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_ENABLE(htim);
 7731              		.loc 1 2170 0 is_stmt 1
 7732 0060 5A6C     		ldr	r2, [r3, #68]
 7733 0062 42F40042 		orr	r2, r2, #32768
 7734 0066 5A64     		str	r2, [r3, #68]
 7735              	.L540:
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7736              		.loc 1 2175 0
 7737 0068 0020     		movs	r0, #0
 7738 006a 10BD     		pop	{r4, pc}
 7739              	.LVL742:
 7740              	.L546:
 7741              		.align	2
 7742              	.L545:
 7743 006c 002C0140 		.word	1073818624
 7744              		.cfi_endproc
 7745              	.LFE169:
 7747              		.section	.text.HAL_TIM_OnePulse_Stop_IT,"ax",%progbits
 7748              		.align	2
 7749              		.global	HAL_TIM_OnePulse_Stop_IT
 7750              		.thumb
 7751              		.thumb_func
 7753              	HAL_TIM_OnePulse_Stop_IT:
 7754              	.LFB170:
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
ARM GAS  /tmp/cc8lNJIB.s 			page 248


 7755              		.loc 1 2187 0
 7756              		.cfi_startproc
 7757              		@ args = 0, pretend = 0, frame = 0
 7758              		@ frame_needed = 0, uses_anonymous_args = 0
 7759              	.LVL743:
 7760 0000 10B5     		push	{r4, lr}
 7761              	.LCFI66:
 7762              		.cfi_def_cfa_offset 8
 7763              		.cfi_offset 4, -8
 7764              		.cfi_offset 14, -4
 7765 0002 0446     		mov	r4, r0
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);  
 7766              		.loc 1 2189 0
 7767 0004 0368     		ldr	r3, [r0]
 7768 0006 DA68     		ldr	r2, [r3, #12]
 7769 0008 22F00202 		bic	r2, r2, #2
 7770 000c DA60     		str	r2, [r3, #12]
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 7771              		.loc 1 2192 0
 7772 000e 0368     		ldr	r3, [r0]
 7773 0010 DA68     		ldr	r2, [r3, #12]
 7774 0012 22F00402 		bic	r2, r2, #4
 7775 0016 DA60     		str	r2, [r3, #12]
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 7776              		.loc 1 2199 0
 7777 0018 0068     		ldr	r0, [r0]
 7778              	.LVL744:
 7779 001a 0021     		movs	r1, #0
 7780              	.LVL745:
 7781 001c 0A46     		mov	r2, r1
 7782 001e FFF7FEFF 		bl	TIM_CCxChannelCmd
 7783              	.LVL746:
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 7784              		.loc 1 2200 0
 7785 0022 2068     		ldr	r0, [r4]
 7786 0024 0421     		movs	r1, #4
 7787 0026 0022     		movs	r2, #0
 7788 0028 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7789              	.LVL747:
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7790              		.loc 1 2202 0
 7791 002c 2368     		ldr	r3, [r4]
 7792 002e 1C4A     		ldr	r2, .L555
 7793 0030 9342     		cmp	r3, r2
 7794 0032 0DD0     		beq	.L551
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7795              		.loc 1 2202 0 is_stmt 0 discriminator 2
 7796 0034 02F5A052 		add	r2, r2, #5120
 7797 0038 9342     		cmp	r3, r2
 7798 003a 0BD0     		beq	.L552
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7799              		.loc 1 2202 0 discriminator 1
 7800 003c 02F58062 		add	r2, r2, #1024
 7801 0040 9342     		cmp	r3, r2
 7802 0042 09D0     		beq	.L553
 7803 0044 02F58062 		add	r2, r2, #1024
 7804 0048 9342     		cmp	r3, r2
ARM GAS  /tmp/cc8lNJIB.s 			page 249


 7805 004a 07D1     		bne	.L554
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7806              		.loc 1 2202 0
 7807 004c 0122     		movs	r2, #1
 7808 004e 06E0     		b	.L548
 7809              	.L551:
 7810 0050 0122     		movs	r2, #1
 7811 0052 04E0     		b	.L548
 7812              	.L552:
 7813 0054 0122     		movs	r2, #1
 7814 0056 02E0     		b	.L548
 7815              	.L553:
 7816 0058 0122     		movs	r2, #1
 7817 005a 00E0     		b	.L548
 7818              	.L554:
 7819 005c 0022     		movs	r2, #0
 7820              	.L548:
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)  
 7821              		.loc 1 2202 0 discriminator 4
 7822 005e 6AB1     		cbz	r2, .L549
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7823              		.loc 1 2205 0 is_stmt 1
 7824 0060 196A     		ldr	r1, [r3, #32]
 7825 0062 41F21112 		movw	r2, #4369
 7826 0066 1142     		tst	r1, r2
 7827 0068 08D1     		bne	.L549
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_MOE_DISABLE(htim);
 7828              		.loc 1 2205 0 is_stmt 0 discriminator 1
 7829 006a 196A     		ldr	r1, [r3, #32]
 7830 006c 40F24442 		movw	r2, #1092
 7831 0070 1142     		tst	r1, r2
 7832 0072 03D1     		bne	.L549
 7833 0074 5A6C     		ldr	r2, [r3, #68]
 7834 0076 22F40042 		bic	r2, r2, #32768
 7835 007a 5A64     		str	r2, [r3, #68]
 7836              	.L549:
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    __HAL_TIM_DISABLE(htim);  
 7837              		.loc 1 2209 0 is_stmt 1
 7838 007c 2368     		ldr	r3, [r4]
 7839 007e 196A     		ldr	r1, [r3, #32]
 7840 0080 41F21112 		movw	r2, #4369
 7841 0084 1142     		tst	r1, r2
 7842 0086 08D1     		bne	.L550
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****    __HAL_TIM_DISABLE(htim);  
 7843              		.loc 1 2209 0 is_stmt 0 discriminator 1
 7844 0088 196A     		ldr	r1, [r3, #32]
 7845 008a 40F24442 		movw	r2, #1092
 7846 008e 1142     		tst	r1, r2
 7847 0090 03D1     		bne	.L550
 7848 0092 1A68     		ldr	r2, [r3]
 7849 0094 22F00102 		bic	r2, r2, #1
 7850 0098 1A60     		str	r2, [r3]
 7851              	.L550:
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7852              		.loc 1 2213 0 is_stmt 1
 7853 009a 0020     		movs	r0, #0
 7854 009c 10BD     		pop	{r4, pc}
ARM GAS  /tmp/cc8lNJIB.s 			page 250


 7855              	.LVL748:
 7856              	.L556:
 7857 009e 00BF     		.align	2
 7858              	.L555:
 7859 00a0 002C0140 		.word	1073818624
 7860              		.cfi_endproc
 7861              	.LFE170:
 7863              		.section	.text.HAL_TIM_Encoder_Start,"ax",%progbits
 7864              		.align	2
 7865              		.global	HAL_TIM_Encoder_Start
 7866              		.thumb
 7867              		.thumb_func
 7869              	HAL_TIM_Encoder_Start:
 7870              	.LFB175:
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7871              		.loc 1 2402 0
 7872              		.cfi_startproc
 7873              		@ args = 0, pretend = 0, frame = 0
 7874              		@ frame_needed = 0, uses_anonymous_args = 0
 7875              	.LVL749:
 7876 0000 10B5     		push	{r4, lr}
 7877              	.LCFI67:
 7878              		.cfi_def_cfa_offset 8
 7879              		.cfi_offset 4, -8
 7880              		.cfi_offset 14, -4
 7881 0002 0446     		mov	r4, r0
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 7882              		.loc 1 2407 0
 7883 0004 11B1     		cbz	r1, .L559
 7884 0006 0429     		cmp	r1, #4
 7885 0008 06D0     		beq	.L560
 7886 000a 0BE0     		b	.L562
 7887              	.L559:
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
 7888              		.loc 1 2411 0
 7889 000c 0068     		ldr	r0, [r0]
 7890              	.LVL750:
 7891 000e 0021     		movs	r1, #0
 7892              	.LVL751:
 7893 0010 0122     		movs	r2, #1
 7894 0012 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7895              	.LVL752:
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
 7896              		.loc 1 2412 0
 7897 0016 0FE0     		b	.L561
 7898              	.LVL753:
 7899              	.L560:
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
 7900              		.loc 1 2416 0
 7901 0018 0068     		ldr	r0, [r0]
 7902              	.LVL754:
 7903 001a 0421     		movs	r1, #4
 7904              	.LVL755:
 7905 001c 0122     		movs	r2, #1
 7906 001e FFF7FEFF 		bl	TIM_CCxChannelCmd
 7907              	.LVL756:
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
ARM GAS  /tmp/cc8lNJIB.s 			page 251


 7908              		.loc 1 2417 0
 7909 0022 09E0     		b	.L561
 7910              	.LVL757:
 7911              	.L562:
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 7912              		.loc 1 2421 0
 7913 0024 0068     		ldr	r0, [r0]
 7914              	.LVL758:
 7915 0026 0021     		movs	r1, #0
 7916              	.LVL759:
 7917 0028 0122     		movs	r2, #1
 7918 002a FFF7FEFF 		bl	TIM_CCxChannelCmd
 7919              	.LVL760:
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
 7920              		.loc 1 2422 0
 7921 002e 2068     		ldr	r0, [r4]
 7922 0030 0421     		movs	r1, #4
 7923 0032 0122     		movs	r2, #1
 7924 0034 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7925              	.LVL761:
 7926              	.L561:
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 7927              		.loc 1 2427 0
 7928 0038 2368     		ldr	r3, [r4]
 7929 003a 1A68     		ldr	r2, [r3]
 7930 003c 42F00102 		orr	r2, r2, #1
 7931 0040 1A60     		str	r2, [r3]
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 7932              		.loc 1 2431 0
 7933 0042 0020     		movs	r0, #0
 7934 0044 10BD     		pop	{r4, pc}
 7935              		.cfi_endproc
 7936              	.LFE175:
 7938 0046 00BF     		.section	.text.HAL_TIM_Encoder_Stop,"ax",%progbits
 7939              		.align	2
 7940              		.global	HAL_TIM_Encoder_Stop
 7941              		.thumb
 7942              		.thumb_func
 7944              	HAL_TIM_Encoder_Stop:
 7945              	.LFB176:
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 7946              		.loc 1 2444 0
 7947              		.cfi_startproc
 7948              		@ args = 0, pretend = 0, frame = 0
 7949              		@ frame_needed = 0, uses_anonymous_args = 0
 7950              	.LVL762:
 7951 0000 10B5     		push	{r4, lr}
 7952              	.LCFI68:
 7953              		.cfi_def_cfa_offset 8
 7954              		.cfi_offset 4, -8
 7955              		.cfi_offset 14, -4
 7956 0002 0446     		mov	r4, r0
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 7957              		.loc 1 2450 0
 7958 0004 11B1     		cbz	r1, .L565
 7959 0006 0429     		cmp	r1, #4
 7960 0008 06D0     		beq	.L566
ARM GAS  /tmp/cc8lNJIB.s 			page 252


 7961 000a 0BE0     		b	.L569
 7962              	.L565:
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 7963              		.loc 1 2454 0
 7964 000c 0068     		ldr	r0, [r0]
 7965              	.LVL763:
 7966 000e 0021     		movs	r1, #0
 7967              	.LVL764:
 7968 0010 0A46     		mov	r2, r1
 7969 0012 FFF7FEFF 		bl	TIM_CCxChannelCmd
 7970              	.LVL765:
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
 7971              		.loc 1 2455 0
 7972 0016 0FE0     		b	.L567
 7973              	.LVL766:
 7974              	.L566:
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 7975              		.loc 1 2459 0
 7976 0018 0068     		ldr	r0, [r0]
 7977              	.LVL767:
 7978 001a 0421     		movs	r1, #4
 7979              	.LVL768:
 7980 001c 0022     		movs	r2, #0
 7981 001e FFF7FEFF 		bl	TIM_CCxChannelCmd
 7982              	.LVL769:
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
 7983              		.loc 1 2460 0
 7984 0022 09E0     		b	.L567
 7985              	.LVL770:
 7986              	.L569:
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 7987              		.loc 1 2464 0
 7988 0024 0068     		ldr	r0, [r0]
 7989              	.LVL771:
 7990 0026 0021     		movs	r1, #0
 7991              	.LVL772:
 7992 0028 0A46     		mov	r2, r1
 7993 002a FFF7FEFF 		bl	TIM_CCxChannelCmd
 7994              	.LVL773:
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 7995              		.loc 1 2465 0
 7996 002e 2068     		ldr	r0, [r4]
 7997 0030 0421     		movs	r1, #4
 7998 0032 0022     		movs	r2, #0
 7999 0034 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8000              	.LVL774:
 8001              	.L567:
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8002              		.loc 1 2471 0
 8003 0038 2368     		ldr	r3, [r4]
 8004 003a 196A     		ldr	r1, [r3, #32]
 8005 003c 41F21112 		movw	r2, #4369
 8006 0040 1142     		tst	r1, r2
 8007 0042 08D1     		bne	.L568
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8008              		.loc 1 2471 0 is_stmt 0 discriminator 1
 8009 0044 196A     		ldr	r1, [r3, #32]
ARM GAS  /tmp/cc8lNJIB.s 			page 253


 8010 0046 40F24442 		movw	r2, #1092
 8011 004a 1142     		tst	r1, r2
 8012 004c 03D1     		bne	.L568
 8013 004e 1A68     		ldr	r2, [r3]
 8014 0050 22F00102 		bic	r2, r2, #1
 8015 0054 1A60     		str	r2, [r3]
 8016              	.L568:
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 8017              		.loc 1 2475 0 is_stmt 1
 8018 0056 0020     		movs	r0, #0
 8019 0058 10BD     		pop	{r4, pc}
 8020              		.cfi_endproc
 8021              	.LFE176:
 8023 005a 00BF     		.section	.text.HAL_TIM_Encoder_Start_IT,"ax",%progbits
 8024              		.align	2
 8025              		.global	HAL_TIM_Encoder_Start_IT
 8026              		.thumb
 8027              		.thumb_func
 8029              	HAL_TIM_Encoder_Start_IT:
 8030              	.LFB177:
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 8031              		.loc 1 2488 0
 8032              		.cfi_startproc
 8033              		@ args = 0, pretend = 0, frame = 0
 8034              		@ frame_needed = 0, uses_anonymous_args = 0
 8035              	.LVL775:
 8036 0000 10B5     		push	{r4, lr}
 8037              	.LCFI69:
 8038              		.cfi_def_cfa_offset 8
 8039              		.cfi_offset 4, -8
 8040              		.cfi_offset 14, -4
 8041 0002 0446     		mov	r4, r0
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 8042              		.loc 1 2494 0
 8043 0004 11B1     		cbz	r1, .L572
 8044 0006 0429     		cmp	r1, #4
 8045 0008 0BD0     		beq	.L573
 8046 000a 15E0     		b	.L575
 8047              	.L572:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE); 
 8048              		.loc 1 2498 0
 8049 000c 0068     		ldr	r0, [r0]
 8050              	.LVL776:
 8051 000e 0021     		movs	r1, #0
 8052              	.LVL777:
 8053 0010 0122     		movs	r2, #1
 8054 0012 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8055              	.LVL778:
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8056              		.loc 1 2499 0
 8057 0016 2368     		ldr	r3, [r4]
 8058 0018 DA68     		ldr	r2, [r3, #12]
 8059 001a 42F00202 		orr	r2, r2, #2
 8060 001e DA60     		str	r2, [r3, #12]
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break; 
 8061              		.loc 1 2500 0
 8062 0020 1EE0     		b	.L574
ARM GAS  /tmp/cc8lNJIB.s 			page 254


 8063              	.LVL779:
 8064              	.L573:
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
 8065              		.loc 1 2504 0
 8066 0022 0068     		ldr	r0, [r0]
 8067              	.LVL780:
 8068 0024 0421     		movs	r1, #4
 8069              	.LVL781:
 8070 0026 0122     		movs	r2, #1
 8071 0028 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8072              	.LVL782:
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8073              		.loc 1 2505 0
 8074 002c 2368     		ldr	r3, [r4]
 8075 002e DA68     		ldr	r2, [r3, #12]
 8076 0030 42F00402 		orr	r2, r2, #4
 8077 0034 DA60     		str	r2, [r3, #12]
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       break;
 8078              		.loc 1 2506 0
 8079 0036 13E0     		b	.L574
 8080              	.LVL783:
 8081              	.L575:
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8082              		.loc 1 2510 0
 8083 0038 0068     		ldr	r0, [r0]
 8084              	.LVL784:
 8085 003a 0021     		movs	r1, #0
 8086              	.LVL785:
 8087 003c 0122     		movs	r2, #1
 8088 003e FFF7FEFF 		bl	TIM_CCxChannelCmd
 8089              	.LVL786:
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE); 
 8090              		.loc 1 2511 0
 8091 0042 2068     		ldr	r0, [r4]
 8092 0044 0421     		movs	r1, #4
 8093 0046 0122     		movs	r2, #1
 8094 0048 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8095              	.LVL787:
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC1);
 8096              		.loc 1 2512 0
 8097 004c 2368     		ldr	r3, [r4]
 8098 004e DA68     		ldr	r2, [r3, #12]
 8099 0050 42F00202 		orr	r2, r2, #2
 8100 0054 DA60     		str	r2, [r3, #12]
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_IT(htim, TIM_IT_CC2);
 8101              		.loc 1 2513 0
 8102 0056 2368     		ldr	r3, [r4]
 8103 0058 DA68     		ldr	r2, [r3, #12]
 8104 005a 42F00402 		orr	r2, r2, #4
 8105 005e DA60     		str	r2, [r3, #12]
 8106              	.L574:
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_ENABLE(htim);
 8107              		.loc 1 2519 0
 8108 0060 2368     		ldr	r3, [r4]
 8109 0062 1A68     		ldr	r2, [r3]
 8110 0064 42F00102 		orr	r2, r2, #1
 8111 0068 1A60     		str	r2, [r3]
ARM GAS  /tmp/cc8lNJIB.s 			page 255


2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 8112              		.loc 1 2523 0
 8113 006a 0020     		movs	r0, #0
 8114 006c 10BD     		pop	{r4, pc}
 8115              		.cfi_endproc
 8116              	.LFE177:
 8118 006e 00BF     		.section	.text.HAL_TIM_Encoder_Stop_IT,"ax",%progbits
 8119              		.align	2
 8120              		.global	HAL_TIM_Encoder_Stop_IT
 8121              		.thumb
 8122              		.thumb_func
 8124              	HAL_TIM_Encoder_Stop_IT:
 8125              	.LFB178:
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 8126              		.loc 1 2536 0
 8127              		.cfi_startproc
 8128              		@ args = 0, pretend = 0, frame = 0
 8129              		@ frame_needed = 0, uses_anonymous_args = 0
 8130              	.LVL788:
 8131 0000 10B5     		push	{r4, lr}
 8132              	.LCFI70:
 8133              		.cfi_def_cfa_offset 8
 8134              		.cfi_offset 4, -8
 8135              		.cfi_offset 14, -4
 8136 0002 0446     		mov	r4, r0
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
 8137              		.loc 1 2542 0
 8138 0004 49B9     		cbnz	r1, .L577
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 8139              		.loc 1 2544 0
 8140 0006 0068     		ldr	r0, [r0]
 8141              	.LVL789:
 8142 0008 0A46     		mov	r2, r1
 8143 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8144              	.LVL790:
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 8145              		.loc 1 2547 0
 8146 000e 2368     		ldr	r3, [r4]
 8147 0010 DA68     		ldr	r2, [r3, #12]
 8148 0012 22F00202 		bic	r2, r2, #2
 8149 0016 DA60     		str	r2, [r3, #12]
 8150 0018 20E0     		b	.L578
 8151              	.LVL791:
 8152              	.L577:
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
 8153              		.loc 1 2549 0
 8154 001a 0429     		cmp	r1, #4
 8155 001c 0AD1     		bne	.L579
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 8156              		.loc 1 2551 0
 8157 001e 0068     		ldr	r0, [r0]
 8158              	.LVL792:
 8159 0020 0421     		movs	r1, #4
 8160              	.LVL793:
 8161 0022 0022     		movs	r2, #0
 8162 0024 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8163              	.LVL794:
ARM GAS  /tmp/cc8lNJIB.s 			page 256


2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 8164              		.loc 1 2554 0
 8165 0028 2368     		ldr	r3, [r4]
 8166 002a DA68     		ldr	r2, [r3, #12]
 8167 002c 22F00402 		bic	r2, r2, #4
 8168 0030 DA60     		str	r2, [r3, #12]
 8169 0032 13E0     		b	.L578
 8170              	.LVL795:
 8171              	.L579:
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 8172              		.loc 1 2558 0
 8173 0034 0068     		ldr	r0, [r0]
 8174              	.LVL796:
 8175 0036 0021     		movs	r1, #0
 8176              	.LVL797:
 8177 0038 0A46     		mov	r2, r1
 8178 003a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8179              	.LVL798:
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 8180              		.loc 1 2559 0
 8181 003e 2068     		ldr	r0, [r4]
 8182 0040 0421     		movs	r1, #4
 8183 0042 0022     		movs	r2, #0
 8184 0044 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8185              	.LVL799:
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC1);
 8186              		.loc 1 2562 0
 8187 0048 2368     		ldr	r3, [r4]
 8188 004a DA68     		ldr	r2, [r3, #12]
 8189 004c 22F00202 		bic	r2, r2, #2
 8190 0050 DA60     		str	r2, [r3, #12]
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_IT(htim, TIM_IT_CC2);
 8191              		.loc 1 2563 0
 8192 0052 2368     		ldr	r3, [r4]
 8193 0054 DA68     		ldr	r2, [r3, #12]
 8194 0056 22F00402 		bic	r2, r2, #4
 8195 005a DA60     		str	r2, [r3, #12]
 8196              	.L578:
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8197              		.loc 1 2567 0
 8198 005c 2368     		ldr	r3, [r4]
 8199 005e 196A     		ldr	r1, [r3, #32]
 8200 0060 41F21112 		movw	r2, #4369
 8201 0064 1142     		tst	r1, r2
 8202 0066 08D1     		bne	.L580
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8203              		.loc 1 2567 0 is_stmt 0 discriminator 1
 8204 0068 196A     		ldr	r1, [r3, #32]
 8205 006a 40F24442 		movw	r2, #1092
 8206 006e 1142     		tst	r1, r2
 8207 0070 03D1     		bne	.L580
 8208 0072 1A68     		ldr	r2, [r3]
 8209 0074 22F00102 		bic	r2, r2, #1
 8210 0078 1A60     		str	r2, [r3]
 8211              	.L580:
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 8212              		.loc 1 2570 0 is_stmt 1
ARM GAS  /tmp/cc8lNJIB.s 			page 257


 8213 007a 0123     		movs	r3, #1
 8214 007c 84F83D30 		strb	r3, [r4, #61]
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 8215              		.loc 1 2574 0
 8216 0080 0020     		movs	r0, #0
 8217 0082 10BD     		pop	{r4, pc}
 8218              		.cfi_endproc
 8219              	.LFE178:
 8221              		.section	.text.HAL_TIM_Encoder_Start_DMA,"ax",%progbits
 8222              		.align	2
 8223              		.global	HAL_TIM_Encoder_Start_DMA
 8224              		.thumb
 8225              		.thumb_func
 8227              	HAL_TIM_Encoder_Start_DMA:
 8228              	.LFB179:
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 8229              		.loc 1 2590 0
 8230              		.cfi_startproc
 8231              		@ args = 4, pretend = 0, frame = 0
 8232              		@ frame_needed = 0, uses_anonymous_args = 0
 8233              	.LVL800:
 8234 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 8235              	.LCFI71:
 8236              		.cfi_def_cfa_offset 24
 8237              		.cfi_offset 4, -24
 8238              		.cfi_offset 5, -20
 8239              		.cfi_offset 6, -16
 8240              		.cfi_offset 7, -12
 8241              		.cfi_offset 8, -8
 8242              		.cfi_offset 14, -4
 8243 0004 0446     		mov	r4, r0
 8244 0006 1E46     		mov	r6, r3
 8245 0008 BDF81850 		ldrh	r5, [sp, #24]
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if((htim->State == HAL_TIM_STATE_BUSY))
 8246              		.loc 1 2594 0
 8247 000c 90F83D00 		ldrb	r0, [r0, #61]	@ zero_extendqisi2
 8248              	.LVL801:
 8249 0010 C0B2     		uxtb	r0, r0
 8250 0012 0228     		cmp	r0, #2
 8251 0014 00F08580 		beq	.L589
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if((htim->State == HAL_TIM_STATE_READY))
 8252              		.loc 1 2598 0
 8253 0018 94F83D30 		ldrb	r3, [r4, #61]	@ zero_extendqisi2
 8254              	.LVL802:
 8255 001c DBB2     		uxtb	r3, r3
 8256 001e 012B     		cmp	r3, #1
 8257 0020 06D1     		bne	.L583
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U)) 
 8258              		.loc 1 2600 0
 8259 0022 02B1     		cbz	r2, .L584
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U)) 
 8260              		.loc 1 2600 0 is_stmt 0 discriminator 2
 8261 0024 0EB9     		cbnz	r6, .L585
 8262              	.L584:
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     if((((pData1 == 0U) || (pData2 == 0U) )) && (Length > 0U)) 
 8263              		.loc 1 2600 0 discriminator 1
 8264 0026 002D     		cmp	r5, #0
ARM GAS  /tmp/cc8lNJIB.s 			page 258


 8265 0028 7ED1     		bne	.L590
 8266              	.L585:
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->State = HAL_TIM_STATE_BUSY;
 8267              		.loc 1 2606 0 is_stmt 1
 8268 002a 0223     		movs	r3, #2
 8269 002c 84F83D30 		strb	r3, [r4, #61]
 8270              	.L583:
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   switch (Channel)
 8271              		.loc 1 2610 0
 8272 0030 0429     		cmp	r1, #4
 8273 0032 21D0     		beq	.L586
 8274 0034 3C29     		cmp	r1, #60
 8275 0036 3ED0     		beq	.L587
 8276 0038 0029     		cmp	r1, #0
 8277 003a 78D1     		bne	.L592
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 8278              		.loc 1 2615 0
 8279 003c 636A     		ldr	r3, [r4, #36]
 8280 003e 3D49     		ldr	r1, .L593
 8281              	.LVL803:
 8282 0040 9962     		str	r1, [r3, #40]
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 8283              		.loc 1 2618 0
 8284 0042 636A     		ldr	r3, [r4, #36]
 8285 0044 3C49     		ldr	r1, .L593+4
 8286 0046 1963     		str	r1, [r3, #48]
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t )pDat
 8287              		.loc 1 2621 0
 8288 0048 2168     		ldr	r1, [r4]
 8289 004a 606A     		ldr	r0, [r4, #36]
 8290 004c 3431     		adds	r1, r1, #52
 8291 004e 2B46     		mov	r3, r5
 8292 0050 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8293              	.LVL804:
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 8294              		.loc 1 2624 0
 8295 0054 2368     		ldr	r3, [r4]
 8296 0056 DA68     		ldr	r2, [r3, #12]
 8297 0058 42F40072 		orr	r2, r2, #512
 8298 005c DA60     		str	r2, [r3, #12]
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 8299              		.loc 1 2627 0
 8300 005e 2368     		ldr	r3, [r4]
 8301 0060 1A68     		ldr	r2, [r3]
 8302 0062 42F00102 		orr	r2, r2, #1
 8303 0066 1A60     		str	r2, [r3]
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8304              		.loc 1 2630 0
 8305 0068 2068     		ldr	r0, [r4]
 8306 006a 0021     		movs	r1, #0
 8307 006c 0122     		movs	r2, #1
 8308 006e FFF7FEFF 		bl	TIM_CCxChannelCmd
 8309              	.LVL805:
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 8310              		.loc 1 2693 0
 8311 0072 0020     		movs	r0, #0
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
ARM GAS  /tmp/cc8lNJIB.s 			page 259


 8312              		.loc 1 2632 0
 8313 0074 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8314              	.LVL806:
 8315              	.L586:
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 8316              		.loc 1 2637 0
 8317 0078 A36A     		ldr	r3, [r4, #40]
 8318 007a 2E4A     		ldr	r2, .L593
 8319              	.LVL807:
 8320 007c 9A62     		str	r2, [r3, #40]
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError;
 8321              		.loc 1 2640 0
 8322 007e A36A     		ldr	r3, [r4, #40]
 8323 0080 2D4A     		ldr	r2, .L593+4
 8324 0082 1A63     		str	r2, [r3, #48]
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
 8325              		.loc 1 2642 0
 8326 0084 2168     		ldr	r1, [r4]
 8327              	.LVL808:
 8328 0086 A06A     		ldr	r0, [r4, #40]
 8329 0088 3831     		adds	r1, r1, #56
 8330 008a 3246     		mov	r2, r6
 8331 008c 2B46     		mov	r3, r5
 8332 008e FFF7FEFF 		bl	HAL_DMA_Start_IT
 8333              	.LVL809:
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 8334              		.loc 1 2645 0
 8335 0092 2368     		ldr	r3, [r4]
 8336 0094 DA68     		ldr	r2, [r3, #12]
 8337 0096 42F48062 		orr	r2, r2, #1024
 8338 009a DA60     		str	r2, [r3, #12]
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 8339              		.loc 1 2648 0
 8340 009c 2368     		ldr	r3, [r4]
 8341 009e 1A68     		ldr	r2, [r3]
 8342 00a0 42F00102 		orr	r2, r2, #1
 8343 00a4 1A60     		str	r2, [r3]
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8344              		.loc 1 2651 0
 8345 00a6 2068     		ldr	r0, [r4]
 8346 00a8 0421     		movs	r1, #4
 8347 00aa 0122     		movs	r2, #1
 8348 00ac FFF7FEFF 		bl	TIM_CCxChannelCmd
 8349              	.LVL810:
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 8350              		.loc 1 2693 0
 8351 00b0 0020     		movs	r0, #0
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 8352              		.loc 1 2653 0
 8353 00b2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8354              	.LVL811:
 8355              	.L587:
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferCpltCallback = TIM_DMACaptureCplt;
 8356              		.loc 1 2658 0
 8357 00b6 636A     		ldr	r3, [r4, #36]
 8358 00b8 DFF87880 		ldr	r8, .L593
 8359 00bc C3F82880 		str	r8, [r3, #40]
ARM GAS  /tmp/cc8lNJIB.s 			page 260


2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC1]->XferErrorCallback = TIM_DMAError ;
 8360              		.loc 1 2661 0
 8361 00c0 636A     		ldr	r3, [r4, #36]
 8362 00c2 1D4F     		ldr	r7, .L593+4
 8363 00c4 1F63     		str	r7, [r3, #48]
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC1], (uint32_t)&htim->Instance->CCR1, (uint32_t)pData
 8364              		.loc 1 2664 0
 8365 00c6 2168     		ldr	r1, [r4]
 8366              	.LVL812:
 8367 00c8 606A     		ldr	r0, [r4, #36]
 8368 00ca 3431     		adds	r1, r1, #52
 8369 00cc 2B46     		mov	r3, r5
 8370 00ce FFF7FEFF 		bl	HAL_DMA_Start_IT
 8371              	.LVL813:
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferCpltCallback = TIM_DMACaptureCplt;
 8372              		.loc 1 2667 0
 8373 00d2 A36A     		ldr	r3, [r4, #40]
 8374 00d4 C3F82880 		str	r8, [r3, #40]
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       htim->hdma[TIM_DMA_ID_CC2]->XferErrorCallback = TIM_DMAError ;
 8375              		.loc 1 2670 0
 8376 00d8 A36A     		ldr	r3, [r4, #40]
 8377 00da 1F63     		str	r7, [r3, #48]
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       HAL_DMA_Start_IT(htim->hdma[TIM_DMA_ID_CC2], (uint32_t)&htim->Instance->CCR2, (uint32_t)pData
 8378              		.loc 1 2673 0
 8379 00dc 2168     		ldr	r1, [r4]
 8380 00de A06A     		ldr	r0, [r4, #40]
 8381 00e0 3831     		adds	r1, r1, #56
 8382 00e2 3246     		mov	r2, r6
 8383 00e4 2B46     		mov	r3, r5
 8384 00e6 FFF7FEFF 		bl	HAL_DMA_Start_IT
 8385              	.LVL814:
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE(htim);
 8386              		.loc 1 2676 0
 8387 00ea 2368     		ldr	r3, [r4]
 8388 00ec 1A68     		ldr	r2, [r3]
 8389 00ee 42F00102 		orr	r2, r2, #1
 8390 00f2 1A60     		str	r2, [r3]
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_ENABLE);
 8391              		.loc 1 2679 0
 8392 00f4 2068     		ldr	r0, [r4]
 8393 00f6 0021     		movs	r1, #0
 8394 00f8 0122     		movs	r2, #1
 8395 00fa FFF7FEFF 		bl	TIM_CCxChannelCmd
 8396              	.LVL815:
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_ENABLE);
 8397              		.loc 1 2680 0
 8398 00fe 2068     		ldr	r0, [r4]
 8399 0100 0421     		movs	r1, #4
 8400 0102 0122     		movs	r2, #1
 8401 0104 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8402              	.LVL816:
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC1);
 8403              		.loc 1 2683 0
 8404 0108 2368     		ldr	r3, [r4]
 8405 010a DA68     		ldr	r2, [r3, #12]
 8406 010c 42F40072 		orr	r2, r2, #512
 8407 0110 DA60     		str	r2, [r3, #12]
ARM GAS  /tmp/cc8lNJIB.s 			page 261


2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       __HAL_TIM_ENABLE_DMA(htim, TIM_DMA_CC2);
 8408              		.loc 1 2685 0
 8409 0112 2368     		ldr	r3, [r4]
 8410 0114 DA68     		ldr	r2, [r3, #12]
 8411 0116 42F48062 		orr	r2, r2, #1024
 8412 011a DA60     		str	r2, [r3, #12]
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 8413              		.loc 1 2693 0
 8414 011c 0020     		movs	r0, #0
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     break;
 8415              		.loc 1 2687 0
 8416 011e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8417              	.LVL817:
 8418              	.L589:
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     return HAL_BUSY;
 8419              		.loc 1 2596 0
 8420 0122 0220     		movs	r0, #2
 8421 0124 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8422              	.LVL818:
 8423              	.L590:
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****       return HAL_ERROR;                                    
 8424              		.loc 1 2602 0
 8425 0128 0120     		movs	r0, #1
 8426 012a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8427              	.LVL819:
 8428              	.L592:
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   return HAL_OK;
 8429              		.loc 1 2693 0
 8430 012e 0020     		movs	r0, #0
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 8431              		.loc 1 2694 0
 8432 0130 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 8433              	.LVL820:
 8434              	.L594:
 8435              		.align	2
 8436              	.L593:
 8437 0134 00000000 		.word	TIM_DMACaptureCplt
 8438 0138 00000000 		.word	TIM_DMAError
 8439              		.cfi_endproc
 8440              	.LFE179:
 8442              		.section	.text.HAL_TIM_Encoder_Stop_DMA,"ax",%progbits
 8443              		.align	2
 8444              		.global	HAL_TIM_Encoder_Stop_DMA
 8445              		.thumb
 8446              		.thumb_func
 8448              	HAL_TIM_Encoder_Stop_DMA:
 8449              	.LFB180:
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** {
 8450              		.loc 1 2707 0
 8451              		.cfi_startproc
 8452              		@ args = 0, pretend = 0, frame = 0
 8453              		@ frame_needed = 0, uses_anonymous_args = 0
 8454              	.LVL821:
 8455 0000 10B5     		push	{r4, lr}
 8456              	.LCFI72:
 8457              		.cfi_def_cfa_offset 8
 8458              		.cfi_offset 4, -8
ARM GAS  /tmp/cc8lNJIB.s 			page 262


 8459              		.cfi_offset 14, -4
 8460 0002 0446     		mov	r4, r0
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   if(Channel == TIM_CHANNEL_1)
 8461              		.loc 1 2713 0
 8462 0004 49B9     		cbnz	r1, .L596
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 8463              		.loc 1 2715 0
 8464 0006 0068     		ldr	r0, [r0]
 8465              	.LVL822:
 8466 0008 0A46     		mov	r2, r1
 8467 000a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8468              	.LVL823:
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 8469              		.loc 1 2718 0
 8470 000e 2368     		ldr	r3, [r4]
 8471 0010 DA68     		ldr	r2, [r3, #12]
 8472 0012 22F40072 		bic	r2, r2, #512
 8473 0016 DA60     		str	r2, [r3, #12]
 8474 0018 20E0     		b	.L597
 8475              	.LVL824:
 8476              	.L596:
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   else if(Channel == TIM_CHANNEL_2)
 8477              		.loc 1 2720 0
 8478 001a 0429     		cmp	r1, #4
 8479 001c 0AD1     		bne	.L598
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 8480              		.loc 1 2722 0
 8481 001e 0068     		ldr	r0, [r0]
 8482              	.LVL825:
 8483 0020 0421     		movs	r1, #4
 8484              	.LVL826:
 8485 0022 0022     		movs	r2, #0
 8486 0024 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8487              	.LVL827:
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 8488              		.loc 1 2725 0
 8489 0028 2368     		ldr	r3, [r4]
 8490 002a DA68     		ldr	r2, [r3, #12]
 8491 002c 22F48062 		bic	r2, r2, #1024
 8492 0030 DA60     		str	r2, [r3, #12]
 8493 0032 13E0     		b	.L597
 8494              	.LVL828:
 8495              	.L598:
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_1, TIM_CCx_DISABLE); 
 8496              		.loc 1 2729 0
 8497 0034 0068     		ldr	r0, [r0]
 8498              	.LVL829:
 8499 0036 0021     		movs	r1, #0
 8500              	.LVL830:
 8501 0038 0A46     		mov	r2, r1
 8502 003a FFF7FEFF 		bl	TIM_CCxChannelCmd
 8503              	.LVL831:
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     TIM_CCxChannelCmd(htim->Instance, TIM_CHANNEL_2, TIM_CCx_DISABLE); 
 8504              		.loc 1 2730 0
 8505 003e 2068     		ldr	r0, [r4]
 8506 0040 0421     		movs	r1, #4
 8507 0042 0022     		movs	r2, #0
ARM GAS  /tmp/cc8lNJIB.s 			page 263


 8508 0044 FFF7FEFF 		bl	TIM_CCxChannelCmd
 8509              	.LVL832:
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC1);
 8510              		.loc 1 2733 0
 8511 0048 2368     		ldr	r3, [r4]
 8512 004a DA68     		ldr	r2, [r3, #12]
 8513 004c 22F40072 		bic	r2, r2, #512
 8514 0050 DA60     		str	r2, [r3, #12]
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****     __HAL_TIM_DISABLE_DMA(htim, TIM_DMA_CC2);
 8515              		.loc 1 2734 0
 8516 0052 2368     		ldr	r3, [r4]
 8517 0054 DA68     		ldr	r2, [r3, #12]
 8518 0056 22F48062 		bic	r2, r2, #1024
 8519 005a DA60     		str	r2, [r3, #12]
 8520              	.L597:
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8521              		.loc 1 2738 0
 8522 005c 2368     		ldr	r3, [r4]
 8523 005e 196A     		ldr	r1, [r3, #32]
 8524 0060 41F21112 		movw	r2, #4369
 8525 0064 1142     		tst	r1, r2
 8526 0066 08D1     		bne	.L599
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   __HAL_TIM_DISABLE(htim);
 8527              		.loc 1 2738 0 is_stmt 0 discriminator 1
 8528 0068 196A     		ldr	r1, [r3, #32]
 8529 006a 40F24442 		movw	r2, #1092
 8530 006e 1142     		tst	r1, r2
 8531 0070 03D1     		bne	.L599
 8532 0072 1A68     		ldr	r2, [r3]
 8533 0074 22F00102 		bic	r2, r2, #1
 8534 0078 1A60     		str	r2, [r3]
 8535              	.L599:
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c ****   htim->State = HAL_TIM_STATE_READY;
 8536              		.loc 1 2741 0 is_stmt 1
 8537 007a 0123     		movs	r3, #1
 8538 007c 84F83D30 		strb	r3, [r4, #61]
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c **** }
 8539              		.loc 1 2745 0
 8540 0080 0020     		movs	r0, #0
 8541 0082 10BD     		pop	{r4, pc}
 8542              		.cfi_endproc
 8543              	.LFE180:
 8545              		.text
 8546              	.Letext0:
 8547              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 8548              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 8549              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 8550              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 8551              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 8552              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 8553              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim.h"
 8554              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 8555              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_tim_ex.h"
ARM GAS  /tmp/cc8lNJIB.s 			page 264


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_tim.c
     /tmp/cc8lNJIB.s:21     .text.TIM_TI1_ConfigInputStage:00000000 $t
     /tmp/cc8lNJIB.s:25     .text.TIM_TI1_ConfigInputStage:00000000 TIM_TI1_ConfigInputStage
     /tmp/cc8lNJIB.s:72     .text.TIM_TI2_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:76     .text.TIM_TI2_SetConfig:00000000 TIM_TI2_SetConfig
     /tmp/cc8lNJIB.s:136    .text.TIM_TI2_ConfigInputStage:00000000 $t
     /tmp/cc8lNJIB.s:140    .text.TIM_TI2_ConfigInputStage:00000000 TIM_TI2_ConfigInputStage
     /tmp/cc8lNJIB.s:186    .text.TIM_TI3_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:190    .text.TIM_TI3_SetConfig:00000000 TIM_TI3_SetConfig
     /tmp/cc8lNJIB.s:250    .text.TIM_TI4_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:254    .text.TIM_TI4_SetConfig:00000000 TIM_TI4_SetConfig
     /tmp/cc8lNJIB.s:314    .text.TIM_ITRx_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:318    .text.TIM_ITRx_SetConfig:00000000 TIM_ITRx_SetConfig
     /tmp/cc8lNJIB.s:344    .text.HAL_TIM_Base_MspInit:00000000 $t
     /tmp/cc8lNJIB.s:349    .text.HAL_TIM_Base_MspInit:00000000 HAL_TIM_Base_MspInit
     /tmp/cc8lNJIB.s:362    .text.HAL_TIM_Base_MspDeInit:00000000 $t
     /tmp/cc8lNJIB.s:367    .text.HAL_TIM_Base_MspDeInit:00000000 HAL_TIM_Base_MspDeInit
     /tmp/cc8lNJIB.s:380    .text.HAL_TIM_Base_DeInit:00000000 $t
     /tmp/cc8lNJIB.s:385    .text.HAL_TIM_Base_DeInit:00000000 HAL_TIM_Base_DeInit
     /tmp/cc8lNJIB.s:433    .text.HAL_TIM_Base_Start:00000000 $t
     /tmp/cc8lNJIB.s:438    .text.HAL_TIM_Base_Start:00000000 HAL_TIM_Base_Start
     /tmp/cc8lNJIB.s:465    .text.HAL_TIM_Base_Stop:00000000 $t
     /tmp/cc8lNJIB.s:470    .text.HAL_TIM_Base_Stop:00000000 HAL_TIM_Base_Stop
     /tmp/cc8lNJIB.s:507    .text.HAL_TIM_Base_Start_IT:00000000 $t
     /tmp/cc8lNJIB.s:512    .text.HAL_TIM_Base_Start_IT:00000000 HAL_TIM_Base_Start_IT
     /tmp/cc8lNJIB.s:538    .text.HAL_TIM_Base_Stop_IT:00000000 $t
     /tmp/cc8lNJIB.s:543    .text.HAL_TIM_Base_Stop_IT:00000000 HAL_TIM_Base_Stop_IT
     /tmp/cc8lNJIB.s:579    .text.HAL_TIM_Base_Start_DMA:00000000 $t
     /tmp/cc8lNJIB.s:584    .text.HAL_TIM_Base_Start_DMA:00000000 HAL_TIM_Base_Start_DMA
     /tmp/cc8lNJIB.s:661    .text.HAL_TIM_Base_Start_DMA:0000005c $d
     /tmp/cc8lNJIB.s:2115   .text.TIM_DMAPeriodElapsedCplt:00000000 TIM_DMAPeriodElapsedCplt
     /tmp/cc8lNJIB.s:2658   .text.TIM_DMAError:00000000 TIM_DMAError
     /tmp/cc8lNJIB.s:667    .text.HAL_TIM_Base_Stop_DMA:00000000 $t
     /tmp/cc8lNJIB.s:672    .text.HAL_TIM_Base_Stop_DMA:00000000 HAL_TIM_Base_Stop_DMA
     /tmp/cc8lNJIB.s:711    .text.HAL_TIM_OC_MspInit:00000000 $t
     /tmp/cc8lNJIB.s:716    .text.HAL_TIM_OC_MspInit:00000000 HAL_TIM_OC_MspInit
     /tmp/cc8lNJIB.s:729    .text.HAL_TIM_OC_MspDeInit:00000000 $t
     /tmp/cc8lNJIB.s:734    .text.HAL_TIM_OC_MspDeInit:00000000 HAL_TIM_OC_MspDeInit
     /tmp/cc8lNJIB.s:747    .text.HAL_TIM_OC_DeInit:00000000 $t
     /tmp/cc8lNJIB.s:752    .text.HAL_TIM_OC_DeInit:00000000 HAL_TIM_OC_DeInit
     /tmp/cc8lNJIB.s:800    .text.HAL_TIM_PWM_MspInit:00000000 $t
     /tmp/cc8lNJIB.s:805    .text.HAL_TIM_PWM_MspInit:00000000 HAL_TIM_PWM_MspInit
     /tmp/cc8lNJIB.s:818    .text.HAL_TIM_PWM_MspDeInit:00000000 $t
     /tmp/cc8lNJIB.s:823    .text.HAL_TIM_PWM_MspDeInit:00000000 HAL_TIM_PWM_MspDeInit
     /tmp/cc8lNJIB.s:836    .text.HAL_TIM_PWM_DeInit:00000000 $t
     /tmp/cc8lNJIB.s:841    .text.HAL_TIM_PWM_DeInit:00000000 HAL_TIM_PWM_DeInit
     /tmp/cc8lNJIB.s:889    .text.HAL_TIM_IC_MspInit:00000000 $t
     /tmp/cc8lNJIB.s:894    .text.HAL_TIM_IC_MspInit:00000000 HAL_TIM_IC_MspInit
     /tmp/cc8lNJIB.s:907    .text.HAL_TIM_IC_MspDeInit:00000000 $t
     /tmp/cc8lNJIB.s:912    .text.HAL_TIM_IC_MspDeInit:00000000 HAL_TIM_IC_MspDeInit
     /tmp/cc8lNJIB.s:925    .text.HAL_TIM_IC_DeInit:00000000 $t
     /tmp/cc8lNJIB.s:930    .text.HAL_TIM_IC_DeInit:00000000 HAL_TIM_IC_DeInit
     /tmp/cc8lNJIB.s:978    .text.HAL_TIM_OnePulse_MspInit:00000000 $t
     /tmp/cc8lNJIB.s:983    .text.HAL_TIM_OnePulse_MspInit:00000000 HAL_TIM_OnePulse_MspInit
     /tmp/cc8lNJIB.s:996    .text.HAL_TIM_OnePulse_MspDeInit:00000000 $t
     /tmp/cc8lNJIB.s:1001   .text.HAL_TIM_OnePulse_MspDeInit:00000000 HAL_TIM_OnePulse_MspDeInit
ARM GAS  /tmp/cc8lNJIB.s 			page 265


     /tmp/cc8lNJIB.s:1014   .text.HAL_TIM_OnePulse_DeInit:00000000 $t
     /tmp/cc8lNJIB.s:1019   .text.HAL_TIM_OnePulse_DeInit:00000000 HAL_TIM_OnePulse_DeInit
     /tmp/cc8lNJIB.s:1067   .text.HAL_TIM_Encoder_MspInit:00000000 $t
     /tmp/cc8lNJIB.s:1072   .text.HAL_TIM_Encoder_MspInit:00000000 HAL_TIM_Encoder_MspInit
     /tmp/cc8lNJIB.s:1085   .text.HAL_TIM_Encoder_MspDeInit:00000000 $t
     /tmp/cc8lNJIB.s:1090   .text.HAL_TIM_Encoder_MspDeInit:00000000 HAL_TIM_Encoder_MspDeInit
     /tmp/cc8lNJIB.s:1103   .text.HAL_TIM_Encoder_DeInit:00000000 $t
     /tmp/cc8lNJIB.s:1108   .text.HAL_TIM_Encoder_DeInit:00000000 HAL_TIM_Encoder_DeInit
     /tmp/cc8lNJIB.s:1156   .text.HAL_TIM_DMABurst_WriteStart:00000000 $t
     /tmp/cc8lNJIB.s:1161   .text.HAL_TIM_DMABurst_WriteStart:00000000 HAL_TIM_DMABurst_WriteStart
     /tmp/cc8lNJIB.s:1420   .text.HAL_TIM_DMABurst_WriteStart:0000016c $d
     /tmp/cc8lNJIB.s:2273   .text.TIM_DMADelayPulseCplt:00000000 TIM_DMADelayPulseCplt
     /tmp/cc8lNJIB.s:2609   .text.TIM_DMATriggerCplt:00000000 TIM_DMATriggerCplt
     /tmp/cc8lNJIB.s:1429   .text.HAL_TIM_DMABurst_WriteStop:00000000 $t
     /tmp/cc8lNJIB.s:1434   .text.HAL_TIM_DMABurst_WriteStop:00000000 HAL_TIM_DMABurst_WriteStop
     /tmp/cc8lNJIB.s:1543   .text.HAL_TIM_DMABurst_ReadStart:00000000 $t
     /tmp/cc8lNJIB.s:1548   .text.HAL_TIM_DMABurst_ReadStart:00000000 HAL_TIM_DMABurst_ReadStart
     /tmp/cc8lNJIB.s:1799   .text.HAL_TIM_DMABurst_ReadStart:0000016c $d
     /tmp/cc8lNJIB.s:2183   .text.TIM_DMACaptureCplt:00000000 TIM_DMACaptureCplt
     /tmp/cc8lNJIB.s:1808   .text.HAL_TIM_DMABurst_ReadStop:00000000 $t
     /tmp/cc8lNJIB.s:1813   .text.HAL_TIM_DMABurst_ReadStop:00000000 HAL_TIM_DMABurst_ReadStop
     /tmp/cc8lNJIB.s:1922   .text.HAL_TIM_GenerateEvent:00000000 $t
     /tmp/cc8lNJIB.s:1927   .text.HAL_TIM_GenerateEvent:00000000 HAL_TIM_GenerateEvent
     /tmp/cc8lNJIB.s:1966   .text.HAL_TIM_ConfigTI1Input:00000000 $t
     /tmp/cc8lNJIB.s:1971   .text.HAL_TIM_ConfigTI1Input:00000000 HAL_TIM_ConfigTI1Input
     /tmp/cc8lNJIB.s:1999   .text.HAL_TIM_ReadCapturedValue:00000000 $t
     /tmp/cc8lNJIB.s:2004   .text.HAL_TIM_ReadCapturedValue:00000000 HAL_TIM_ReadCapturedValue
     /tmp/cc8lNJIB.s:2024   .text.HAL_TIM_ReadCapturedValue:00000016 $d
     /tmp/cc8lNJIB.s:2093   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
     /tmp/cc8lNJIB.s:2098   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
     /tmp/cc8lNJIB.s:2111   .text.TIM_DMAPeriodElapsedCplt:00000000 $t
     /tmp/cc8lNJIB.s:2142   .text.HAL_TIM_OC_DelayElapsedCallback:00000000 $t
     /tmp/cc8lNJIB.s:2147   .text.HAL_TIM_OC_DelayElapsedCallback:00000000 HAL_TIM_OC_DelayElapsedCallback
     /tmp/cc8lNJIB.s:2160   .text.HAL_TIM_IC_CaptureCallback:00000000 $t
     /tmp/cc8lNJIB.s:2165   .text.HAL_TIM_IC_CaptureCallback:00000000 HAL_TIM_IC_CaptureCallback
     /tmp/cc8lNJIB.s:2178   .text.TIM_DMACaptureCplt:00000000 $t
     /tmp/cc8lNJIB.s:2250   .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 $t
     /tmp/cc8lNJIB.s:2255   .text.HAL_TIM_PWM_PulseFinishedCallback:00000000 HAL_TIM_PWM_PulseFinishedCallback
     /tmp/cc8lNJIB.s:2268   .text.TIM_DMADelayPulseCplt:00000000 $t
     /tmp/cc8lNJIB.s:2340   .text.HAL_TIM_TriggerCallback:00000000 $t
     /tmp/cc8lNJIB.s:2345   .text.HAL_TIM_TriggerCallback:00000000 HAL_TIM_TriggerCallback
     /tmp/cc8lNJIB.s:2358   .text.HAL_TIM_IRQHandler:00000000 $t
     /tmp/cc8lNJIB.s:2363   .text.HAL_TIM_IRQHandler:00000000 HAL_TIM_IRQHandler
     /tmp/cc8lNJIB.s:2605   .text.TIM_DMATriggerCplt:00000000 $t
     /tmp/cc8lNJIB.s:2635   .text.HAL_TIM_ErrorCallback:00000000 $t
     /tmp/cc8lNJIB.s:2640   .text.HAL_TIM_ErrorCallback:00000000 HAL_TIM_ErrorCallback
     /tmp/cc8lNJIB.s:2653   .text.TIM_DMAError:00000000 $t
     /tmp/cc8lNJIB.s:2685   .text.HAL_TIM_Base_GetState:00000000 $t
     /tmp/cc8lNJIB.s:2690   .text.HAL_TIM_Base_GetState:00000000 HAL_TIM_Base_GetState
     /tmp/cc8lNJIB.s:2707   .text.HAL_TIM_OC_GetState:00000000 $t
     /tmp/cc8lNJIB.s:2712   .text.HAL_TIM_OC_GetState:00000000 HAL_TIM_OC_GetState
     /tmp/cc8lNJIB.s:2729   .text.HAL_TIM_PWM_GetState:00000000 $t
     /tmp/cc8lNJIB.s:2734   .text.HAL_TIM_PWM_GetState:00000000 HAL_TIM_PWM_GetState
     /tmp/cc8lNJIB.s:2751   .text.HAL_TIM_IC_GetState:00000000 $t
     /tmp/cc8lNJIB.s:2756   .text.HAL_TIM_IC_GetState:00000000 HAL_TIM_IC_GetState
     /tmp/cc8lNJIB.s:2773   .text.HAL_TIM_OnePulse_GetState:00000000 $t
     /tmp/cc8lNJIB.s:2778   .text.HAL_TIM_OnePulse_GetState:00000000 HAL_TIM_OnePulse_GetState
ARM GAS  /tmp/cc8lNJIB.s 			page 266


     /tmp/cc8lNJIB.s:2795   .text.HAL_TIM_Encoder_GetState:00000000 $t
     /tmp/cc8lNJIB.s:2800   .text.HAL_TIM_Encoder_GetState:00000000 HAL_TIM_Encoder_GetState
     /tmp/cc8lNJIB.s:2817   .text.TIM_Base_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:2822   .text.TIM_Base_SetConfig:00000000 TIM_Base_SetConfig
     /tmp/cc8lNJIB.s:2920   .text.TIM_Base_SetConfig:0000008c $d
     /tmp/cc8lNJIB.s:2925   .text.HAL_TIM_Base_Init:00000000 $t
     /tmp/cc8lNJIB.s:2930   .text.HAL_TIM_Base_Init:00000000 HAL_TIM_Base_Init
     /tmp/cc8lNJIB.s:2981   .text.HAL_TIM_OC_Init:00000000 $t
     /tmp/cc8lNJIB.s:2986   .text.HAL_TIM_OC_Init:00000000 HAL_TIM_OC_Init
     /tmp/cc8lNJIB.s:3037   .text.HAL_TIM_PWM_Init:00000000 $t
     /tmp/cc8lNJIB.s:3042   .text.HAL_TIM_PWM_Init:00000000 HAL_TIM_PWM_Init
     /tmp/cc8lNJIB.s:3093   .text.HAL_TIM_IC_Init:00000000 $t
     /tmp/cc8lNJIB.s:3098   .text.HAL_TIM_IC_Init:00000000 HAL_TIM_IC_Init
     /tmp/cc8lNJIB.s:3149   .text.HAL_TIM_OnePulse_Init:00000000 $t
     /tmp/cc8lNJIB.s:3154   .text.HAL_TIM_OnePulse_Init:00000000 HAL_TIM_OnePulse_Init
     /tmp/cc8lNJIB.s:3219   .text.HAL_TIM_Encoder_Init:00000000 $t
     /tmp/cc8lNJIB.s:3224   .text.HAL_TIM_Encoder_Init:00000000 HAL_TIM_Encoder_Init
     /tmp/cc8lNJIB.s:3348   .text.TIM_OC1_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:3353   .text.TIM_OC1_SetConfig:00000000 TIM_OC1_SetConfig
     /tmp/cc8lNJIB.s:3468   .text.TIM_OC1_SetConfig:00000088 $d
     /tmp/cc8lNJIB.s:3473   .text.TIM_OC2_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:3478   .text.TIM_OC2_SetConfig:00000000 TIM_OC2_SetConfig
     /tmp/cc8lNJIB.s:3582   .text.TIM_OC2_SetConfig:00000078 $d
     /tmp/cc8lNJIB.s:3587   .text.TIM_OC3_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:3592   .text.TIM_OC3_SetConfig:00000000 TIM_OC3_SetConfig
     /tmp/cc8lNJIB.s:3696   .text.TIM_OC3_SetConfig:00000078 $d
     /tmp/cc8lNJIB.s:3701   .text.TIM_OC4_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:3706   .text.TIM_OC4_SetConfig:00000000 TIM_OC4_SetConfig
     /tmp/cc8lNJIB.s:3790   .text.TIM_OC4_SetConfig:00000060 $d
     /tmp/cc8lNJIB.s:3795   .text.HAL_TIM_OC_ConfigChannel:00000000 $t
     /tmp/cc8lNJIB.s:3800   .text.HAL_TIM_OC_ConfigChannel:00000000 HAL_TIM_OC_ConfigChannel
     /tmp/cc8lNJIB.s:3828   .text.HAL_TIM_OC_ConfigChannel:00000020 $d
     /tmp/cc8lNJIB.s:3895   .text.HAL_TIM_PWM_ConfigChannel:00000000 $t
     /tmp/cc8lNJIB.s:3900   .text.HAL_TIM_PWM_ConfigChannel:00000000 HAL_TIM_PWM_ConfigChannel
     /tmp/cc8lNJIB.s:3931   .text.HAL_TIM_PWM_ConfigChannel:00000022 $d
     /tmp/cc8lNJIB.s:4062   .text.TIM_TI1_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:4067   .text.TIM_TI1_SetConfig:00000000 TIM_TI1_SetConfig
     /tmp/cc8lNJIB.s:4163   .text.TIM_TI1_SetConfig:00000068 $d
     /tmp/cc8lNJIB.s:4168   .text.HAL_TIM_IC_ConfigChannel:00000000 $t
     /tmp/cc8lNJIB.s:4173   .text.HAL_TIM_IC_ConfigChannel:00000000 HAL_TIM_IC_ConfigChannel
     /tmp/cc8lNJIB.s:4320   .text.HAL_TIM_OnePulse_ConfigChannel:00000000 $t
     /tmp/cc8lNJIB.s:4325   .text.HAL_TIM_OnePulse_ConfigChannel:00000000 HAL_TIM_OnePulse_ConfigChannel
     /tmp/cc8lNJIB.s:4506   .text.TIM_ETR_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:4511   .text.TIM_ETR_SetConfig:00000000 TIM_ETR_SetConfig
     /tmp/cc8lNJIB.s:4547   .text.HAL_TIM_ConfigOCrefClear:00000000 $t
     /tmp/cc8lNJIB.s:4552   .text.HAL_TIM_ConfigOCrefClear:00000000 HAL_TIM_ConfigOCrefClear
     /tmp/cc8lNJIB.s:4599   .text.HAL_TIM_ConfigOCrefClear:00000036 $d
     /tmp/cc8lNJIB.s:4700   .text.HAL_TIM_ConfigClockSource:00000000 $t
     /tmp/cc8lNJIB.s:4705   .text.HAL_TIM_ConfigClockSource:00000000 HAL_TIM_ConfigClockSource
     /tmp/cc8lNJIB.s:4939   .text.HAL_TIM_ConfigClockSource:00000120 $d
     /tmp/cc8lNJIB.s:4944   .text.TIM_SlaveTimer_SetConfig:00000000 $t
     /tmp/cc8lNJIB.s:4948   .text.TIM_SlaveTimer_SetConfig:00000000 TIM_SlaveTimer_SetConfig
     /tmp/cc8lNJIB.s:5070   .text.HAL_TIM_SlaveConfigSynchronization:00000000 $t
     /tmp/cc8lNJIB.s:5075   .text.HAL_TIM_SlaveConfigSynchronization:00000000 HAL_TIM_SlaveConfigSynchronization
     /tmp/cc8lNJIB.s:5131   .text.HAL_TIM_SlaveConfigSynchronization_IT:00000000 $t
     /tmp/cc8lNJIB.s:5136   .text.HAL_TIM_SlaveConfigSynchronization_IT:00000000 HAL_TIM_SlaveConfigSynchronization_IT
     /tmp/cc8lNJIB.s:5192   .text.TIM_CCxChannelCmd:00000000 $t
ARM GAS  /tmp/cc8lNJIB.s 			page 267


     /tmp/cc8lNJIB.s:5197   .text.TIM_CCxChannelCmd:00000000 TIM_CCxChannelCmd
     /tmp/cc8lNJIB.s:5232   .text.HAL_TIM_OC_Start:00000000 $t
     /tmp/cc8lNJIB.s:5237   .text.HAL_TIM_OC_Start:00000000 HAL_TIM_OC_Start
     /tmp/cc8lNJIB.s:5306   .text.HAL_TIM_OC_Start:00000058 $d
     /tmp/cc8lNJIB.s:5311   .text.HAL_TIM_OC_Stop:00000000 $t
     /tmp/cc8lNJIB.s:5316   .text.HAL_TIM_OC_Stop:00000000 HAL_TIM_OC_Stop
     /tmp/cc8lNJIB.s:5404   .text.HAL_TIM_OC_Stop:00000080 $d
     /tmp/cc8lNJIB.s:5409   .text.HAL_TIM_OC_Start_IT:00000000 $t
     /tmp/cc8lNJIB.s:5414   .text.HAL_TIM_OC_Start_IT:00000000 HAL_TIM_OC_Start_IT
     /tmp/cc8lNJIB.s:5432   .text.HAL_TIM_OC_Start_IT:0000000c $d
     /tmp/cc8lNJIB.s:5533   .text.HAL_TIM_OC_Start_IT:0000009c $d
     /tmp/cc8lNJIB.s:5538   .text.HAL_TIM_OC_Stop_IT:00000000 $t
     /tmp/cc8lNJIB.s:5543   .text.HAL_TIM_OC_Stop_IT:00000000 HAL_TIM_OC_Stop_IT
     /tmp/cc8lNJIB.s:5561   .text.HAL_TIM_OC_Stop_IT:0000000c $d
     /tmp/cc8lNJIB.s:5681   .text.HAL_TIM_OC_Stop_IT:000000c4 $d
     /tmp/cc8lNJIB.s:5686   .text.HAL_TIM_OC_Start_DMA:00000000 $t
     /tmp/cc8lNJIB.s:5691   .text.HAL_TIM_OC_Start_DMA:00000000 HAL_TIM_OC_Start_DMA
     /tmp/cc8lNJIB.s:5734   .text.HAL_TIM_OC_Start_DMA:00000032 $d
     /tmp/cc8lNJIB.s:5913   .text.HAL_TIM_OC_Start_DMA:00000134 $d
     /tmp/cc8lNJIB.s:5920   .text.HAL_TIM_OC_Stop_DMA:00000000 $t
     /tmp/cc8lNJIB.s:5925   .text.HAL_TIM_OC_Stop_DMA:00000000 HAL_TIM_OC_Stop_DMA
     /tmp/cc8lNJIB.s:5943   .text.HAL_TIM_OC_Stop_DMA:0000000c $d
     /tmp/cc8lNJIB.s:6066   .text.HAL_TIM_OC_Stop_DMA:000000c8 $d
     /tmp/cc8lNJIB.s:6071   .text.HAL_TIM_PWM_Start:00000000 $t
     /tmp/cc8lNJIB.s:6076   .text.HAL_TIM_PWM_Start:00000000 HAL_TIM_PWM_Start
     /tmp/cc8lNJIB.s:6145   .text.HAL_TIM_PWM_Start:00000058 $d
     /tmp/cc8lNJIB.s:6150   .text.HAL_TIM_PWM_Stop:00000000 $t
     /tmp/cc8lNJIB.s:6155   .text.HAL_TIM_PWM_Stop:00000000 HAL_TIM_PWM_Stop
     /tmp/cc8lNJIB.s:6246   .text.HAL_TIM_PWM_Stop:00000084 $d
     /tmp/cc8lNJIB.s:6251   .text.HAL_TIM_PWM_Start_IT:00000000 $t
     /tmp/cc8lNJIB.s:6256   .text.HAL_TIM_PWM_Start_IT:00000000 HAL_TIM_PWM_Start_IT
     /tmp/cc8lNJIB.s:6274   .text.HAL_TIM_PWM_Start_IT:0000000c $d
     /tmp/cc8lNJIB.s:6375   .text.HAL_TIM_PWM_Start_IT:0000009c $d
     /tmp/cc8lNJIB.s:6380   .text.HAL_TIM_PWM_Stop_IT:00000000 $t
     /tmp/cc8lNJIB.s:6385   .text.HAL_TIM_PWM_Stop_IT:00000000 HAL_TIM_PWM_Stop_IT
     /tmp/cc8lNJIB.s:6403   .text.HAL_TIM_PWM_Stop_IT:0000000c $d
     /tmp/cc8lNJIB.s:6523   .text.HAL_TIM_PWM_Stop_IT:000000c4 $d
     /tmp/cc8lNJIB.s:6528   .text.HAL_TIM_PWM_Start_DMA:00000000 $t
     /tmp/cc8lNJIB.s:6533   .text.HAL_TIM_PWM_Start_DMA:00000000 HAL_TIM_PWM_Start_DMA
     /tmp/cc8lNJIB.s:6576   .text.HAL_TIM_PWM_Start_DMA:00000032 $d
     /tmp/cc8lNJIB.s:6755   .text.HAL_TIM_PWM_Start_DMA:00000134 $d
     /tmp/cc8lNJIB.s:6762   .text.HAL_TIM_PWM_Stop_DMA:00000000 $t
     /tmp/cc8lNJIB.s:6767   .text.HAL_TIM_PWM_Stop_DMA:00000000 HAL_TIM_PWM_Stop_DMA
     /tmp/cc8lNJIB.s:6785   .text.HAL_TIM_PWM_Stop_DMA:0000000c $d
     /tmp/cc8lNJIB.s:6908   .text.HAL_TIM_PWM_Stop_DMA:000000c8 $d
     /tmp/cc8lNJIB.s:6913   .text.HAL_TIM_IC_Start:00000000 $t
     /tmp/cc8lNJIB.s:6918   .text.HAL_TIM_IC_Start:00000000 HAL_TIM_IC_Start
     /tmp/cc8lNJIB.s:6949   .text.HAL_TIM_IC_Stop:00000000 $t
     /tmp/cc8lNJIB.s:6954   .text.HAL_TIM_IC_Stop:00000000 HAL_TIM_IC_Stop
     /tmp/cc8lNJIB.s:6995   .text.HAL_TIM_IC_Start_IT:00000000 $t
     /tmp/cc8lNJIB.s:7000   .text.HAL_TIM_IC_Start_IT:00000000 HAL_TIM_IC_Start_IT
     /tmp/cc8lNJIB.s:7018   .text.HAL_TIM_IC_Start_IT:0000000c $d
     /tmp/cc8lNJIB.s:7081   .text.HAL_TIM_IC_Stop_IT:00000000 $t
     /tmp/cc8lNJIB.s:7086   .text.HAL_TIM_IC_Stop_IT:00000000 HAL_TIM_IC_Stop_IT
     /tmp/cc8lNJIB.s:7104   .text.HAL_TIM_IC_Stop_IT:0000000c $d
     /tmp/cc8lNJIB.s:7177   .text.HAL_TIM_IC_Start_DMA:00000000 $t
     /tmp/cc8lNJIB.s:7182   .text.HAL_TIM_IC_Start_DMA:00000000 HAL_TIM_IC_Start_DMA
ARM GAS  /tmp/cc8lNJIB.s 			page 268


     /tmp/cc8lNJIB.s:7224   .text.HAL_TIM_IC_Start_DMA:0000002e $d
     /tmp/cc8lNJIB.s:7363   .text.HAL_TIM_IC_Start_DMA:000000e4 $d
     /tmp/cc8lNJIB.s:7369   .text.HAL_TIM_IC_Stop_DMA:00000000 $t
     /tmp/cc8lNJIB.s:7374   .text.HAL_TIM_IC_Stop_DMA:00000000 HAL_TIM_IC_Stop_DMA
     /tmp/cc8lNJIB.s:7392   .text.HAL_TIM_IC_Stop_DMA:0000000c $d
     /tmp/cc8lNJIB.s:7468   .text.HAL_TIM_OnePulse_Start:00000000 $t
     /tmp/cc8lNJIB.s:7473   .text.HAL_TIM_OnePulse_Start:00000000 HAL_TIM_OnePulse_Start
     /tmp/cc8lNJIB.s:7545   .text.HAL_TIM_OnePulse_Start:00000058 $d
     /tmp/cc8lNJIB.s:7550   .text.HAL_TIM_OnePulse_Stop:00000000 $t
     /tmp/cc8lNJIB.s:7555   .text.HAL_TIM_OnePulse_Stop:00000000 HAL_TIM_OnePulse_Stop
     /tmp/cc8lNJIB.s:7651   .text.HAL_TIM_OnePulse_Stop:0000008c $d
     /tmp/cc8lNJIB.s:7656   .text.HAL_TIM_OnePulse_Start_IT:00000000 $t
     /tmp/cc8lNJIB.s:7661   .text.HAL_TIM_OnePulse_Start_IT:00000000 HAL_TIM_OnePulse_Start_IT
     /tmp/cc8lNJIB.s:7743   .text.HAL_TIM_OnePulse_Start_IT:0000006c $d
     /tmp/cc8lNJIB.s:7748   .text.HAL_TIM_OnePulse_Stop_IT:00000000 $t
     /tmp/cc8lNJIB.s:7753   .text.HAL_TIM_OnePulse_Stop_IT:00000000 HAL_TIM_OnePulse_Stop_IT
     /tmp/cc8lNJIB.s:7859   .text.HAL_TIM_OnePulse_Stop_IT:000000a0 $d
     /tmp/cc8lNJIB.s:7864   .text.HAL_TIM_Encoder_Start:00000000 $t
     /tmp/cc8lNJIB.s:7869   .text.HAL_TIM_Encoder_Start:00000000 HAL_TIM_Encoder_Start
     /tmp/cc8lNJIB.s:7939   .text.HAL_TIM_Encoder_Stop:00000000 $t
     /tmp/cc8lNJIB.s:7944   .text.HAL_TIM_Encoder_Stop:00000000 HAL_TIM_Encoder_Stop
     /tmp/cc8lNJIB.s:8024   .text.HAL_TIM_Encoder_Start_IT:00000000 $t
     /tmp/cc8lNJIB.s:8029   .text.HAL_TIM_Encoder_Start_IT:00000000 HAL_TIM_Encoder_Start_IT
     /tmp/cc8lNJIB.s:8119   .text.HAL_TIM_Encoder_Stop_IT:00000000 $t
     /tmp/cc8lNJIB.s:8124   .text.HAL_TIM_Encoder_Stop_IT:00000000 HAL_TIM_Encoder_Stop_IT
     /tmp/cc8lNJIB.s:8222   .text.HAL_TIM_Encoder_Start_DMA:00000000 $t
     /tmp/cc8lNJIB.s:8227   .text.HAL_TIM_Encoder_Start_DMA:00000000 HAL_TIM_Encoder_Start_DMA
     /tmp/cc8lNJIB.s:8437   .text.HAL_TIM_Encoder_Start_DMA:00000134 $d
     /tmp/cc8lNJIB.s:8443   .text.HAL_TIM_Encoder_Stop_DMA:00000000 $t
     /tmp/cc8lNJIB.s:8448   .text.HAL_TIM_Encoder_Stop_DMA:00000000 HAL_TIM_Encoder_Stop_DMA
                     .debug_frame:00000010 $d
     /tmp/cc8lNJIB.s:2037   .text.HAL_TIM_ReadCapturedValue:00000023 $d
     /tmp/cc8lNJIB.s:2037   .text.HAL_TIM_ReadCapturedValue:00000024 $t
     /tmp/cc8lNJIB.s:3841   .text.HAL_TIM_OC_ConfigChannel:0000002d $d
     /tmp/cc8lNJIB.s:3841   .text.HAL_TIM_OC_ConfigChannel:0000002e $t
     /tmp/cc8lNJIB.s:3944   .text.HAL_TIM_PWM_ConfigChannel:0000002f $d
     /tmp/cc8lNJIB.s:3944   .text.HAL_TIM_PWM_ConfigChannel:00000030 $t
     /tmp/cc8lNJIB.s:4612   .text.HAL_TIM_ConfigOCrefClear:00000043 $d
     /tmp/cc8lNJIB.s:4612   .text.HAL_TIM_ConfigOCrefClear:00000044 $t
     /tmp/cc8lNJIB.s:5445   .text.HAL_TIM_OC_Start_IT:00000019 $d
     /tmp/cc8lNJIB.s:5445   .text.HAL_TIM_OC_Start_IT:0000001a $t
     /tmp/cc8lNJIB.s:5574   .text.HAL_TIM_OC_Stop_IT:00000019 $d
     /tmp/cc8lNJIB.s:5574   .text.HAL_TIM_OC_Stop_IT:0000001a $t
     /tmp/cc8lNJIB.s:5747   .text.HAL_TIM_OC_Start_DMA:0000003f $d
     /tmp/cc8lNJIB.s:5747   .text.HAL_TIM_OC_Start_DMA:00000040 $t
     /tmp/cc8lNJIB.s:5956   .text.HAL_TIM_OC_Stop_DMA:00000019 $d
     /tmp/cc8lNJIB.s:5956   .text.HAL_TIM_OC_Stop_DMA:0000001a $t
     /tmp/cc8lNJIB.s:6287   .text.HAL_TIM_PWM_Start_IT:00000019 $d
     /tmp/cc8lNJIB.s:6287   .text.HAL_TIM_PWM_Start_IT:0000001a $t
     /tmp/cc8lNJIB.s:6416   .text.HAL_TIM_PWM_Stop_IT:00000019 $d
     /tmp/cc8lNJIB.s:6416   .text.HAL_TIM_PWM_Stop_IT:0000001a $t
     /tmp/cc8lNJIB.s:6589   .text.HAL_TIM_PWM_Start_DMA:0000003f $d
     /tmp/cc8lNJIB.s:6589   .text.HAL_TIM_PWM_Start_DMA:00000040 $t
     /tmp/cc8lNJIB.s:6798   .text.HAL_TIM_PWM_Stop_DMA:00000019 $d
     /tmp/cc8lNJIB.s:6798   .text.HAL_TIM_PWM_Stop_DMA:0000001a $t
     /tmp/cc8lNJIB.s:7031   .text.HAL_TIM_IC_Start_IT:00000019 $d
     /tmp/cc8lNJIB.s:7031   .text.HAL_TIM_IC_Start_IT:0000001a $t
ARM GAS  /tmp/cc8lNJIB.s 			page 269


     /tmp/cc8lNJIB.s:7117   .text.HAL_TIM_IC_Stop_IT:00000019 $d
     /tmp/cc8lNJIB.s:7117   .text.HAL_TIM_IC_Stop_IT:0000001a $t
     /tmp/cc8lNJIB.s:7237   .text.HAL_TIM_IC_Start_DMA:0000003b $d
     /tmp/cc8lNJIB.s:7237   .text.HAL_TIM_IC_Start_DMA:0000003c $t
     /tmp/cc8lNJIB.s:7405   .text.HAL_TIM_IC_Stop_DMA:00000019 $d
     /tmp/cc8lNJIB.s:7405   .text.HAL_TIM_IC_Stop_DMA:0000001a $t

UNDEFINED SYMBOLS
HAL_DMA_Start_IT
TIMEx_DMACommutationCplt
HAL_DMA_Abort
HAL_TIMEx_BreakCallback
HAL_TIMEx_CommutationCallback
