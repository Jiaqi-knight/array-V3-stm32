ARM GAS  /tmp/cct7Qvry.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 1
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_rcc.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  21              		.align	2
  22              		.global	HAL_RCC_DeInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_RCC_DeInit:
  27              	.LFB123:
  28              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @file    stm32f3xx_hal_rcc.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @version V1.4.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @date    16-December-2016
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *       
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim                
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
ARM GAS  /tmp/cct7Qvry.s 			page 2


  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           derived from the System clock (RTC, ADC, I2C, I2S, TIM, USB FS)
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                       ##### RCC Limitations #####
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ==============================================================================
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       from/to registers.
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]  
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       Workarounds:
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @attention
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *      without specific prior written permission.
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ******************************************************************************  
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** */
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #include "stm32f3xx_hal.h"
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @addtogroup STM32F3xx_HAL_Driver
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC RCC
ARM GAS  /tmp/cct7Qvry.s 			page 3


  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** * @brief RCC HAL module driver
  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  * @{
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  */
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPLLMULFactorTable[16] = { 2U,  3U,  4U,  5U,  6U,  7U,  8U,  9U,
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                        10U, 11U, 12U, 13U, 14U, 15U, 16U, 16U};
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** const uint8_t aPredivFactorTable[16] = { 1U, 2U,  3U,  4U,  5U,  6U,  7U,  8U,
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                                          9U,10U, 11U, 12U, 13U, 14U, 15U, 16U};
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim    
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
ARM GAS  /tmp/cct7Qvry.s 			page 4


 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       and APB2).
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the PLL as System clock source.
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The HSI clock can be used also to clock the USART and I2C peripherals.
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source.
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 32 MHz crystal oscillator used directly or
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz)
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB FS (48 MHz)
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The third output may be used to generate the clock for the ADC peripherals (up to 72 M
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The fourth output may be used to generate the clock for the TIM peripherals (144 MHz)
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M4 NMI 
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) MCO (microcontroller clock output), used to output SYSCLK, HSI, HSE, LSI, LSE or PLL
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           clock (divided by 2) output on pin (such as PA8 pin).
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           HSE and PLL.
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       (#) All the peripheral clocks are derived from the System clock (SYSCLK) except:
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The FLASH program/erase clock  which is always HSI 8MHz clock.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USB 48 MHz clock which is derived from the PLL VCO clock.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The USART clock which can be derived as well from HSI 8MHz, LSI or LSE.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The I2C clock which can be derived as well from HSI 8MHz clock.
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The ADC clock which is derived from PLL output.
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) The RTC clock which is derived from the LSE, LSI or 1 MHz HSE_RTC
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              (HSE divided by a programmable prescaler). The System clock (SYSCLK)
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              frequency must be higher or equal to the RTC clock frequency.
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         (++) IWDG clock which is always the LSI clock.
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) For the STM32F3xx devices, the maximum frequency of the SYSCLK, HCLK, PCLK1 and PCLK2 
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/cct7Qvry.s 			page 5


 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****          (#) After reset, the System clock source is the HSI (8 MHz) with 0 WS and
 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****              prefetch is disabled.
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /*
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |---------------|-------------------------------|
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         +-----------------------------------------------+
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - HSE and PLL OFF
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - All interrupts disabled
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - Peripheral clocks
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  29              		.loc 1 235 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set HSION bit, HSITRIM[4:0] bits to the reset value*/
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SET_BIT(RCC->CR, RCC_CR_HSION | RCC_CR_HSITRIM_4); 
  34              		.loc 1 237 0
  35 0000 0D4B     		ldr	r3, .L2
  36 0002 1A68     		ldr	r2, [r3]
  37 0004 42F08102 		orr	r2, r2, #129
  38 0008 1A60     		str	r2, [r3]
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0] and MCOSEL[2:0] bits */
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW | RCC_CFGR_HPRE | RCC_CFGR_PPRE1 | RCC_CFGR_PPRE2 | RCC_CFGR_MCO
  39              		.loc 1 240 0
  40 000a 5968     		ldr	r1, [r3, #4]
  41 000c 0B4A     		ldr	r2, .L2+4
  42 000e 0A40     		ands	r2, r2, r1
  43 0010 5A60     		str	r2, [r3, #4]
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEON, CSSON, PLLON bits */
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_PLLON | RCC_CR_CSSON | RCC_CR_HSEON);
ARM GAS  /tmp/cct7Qvry.s 			page 6


  44              		.loc 1 243 0
  45 0012 1A68     		ldr	r2, [r3]
  46 0014 22F08472 		bic	r2, r2, #17301504
  47 0018 22F48032 		bic	r2, r2, #65536
  48 001c 1A60     		str	r2, [r3]
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  49              		.loc 1 246 0
  50 001e 1A68     		ldr	r2, [r3]
  51 0020 22F48022 		bic	r2, r2, #262144
  52 0024 1A60     		str	r2, [r3]
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR register */
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  53              		.loc 1 249 0
  54 0026 0022     		movs	r2, #0
  55 0028 5A60     		str	r2, [r3, #4]
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR2 register */
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
  56              		.loc 1 252 0
  57 002a DA62     		str	r2, [r3, #44]
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Reset CFGR3 register */
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR3);
  58              		.loc 1 255 0
  59 002c 1A63     		str	r2, [r3, #48]
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Disable all interrupts */
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  60              		.loc 1 258 0
  61 002e 9A60     		str	r2, [r3, #8]
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  62              		.loc 1 261 0
  63 0030 034A     		ldr	r2, .L2+8
  64 0032 044B     		ldr	r3, .L2+12
  65 0034 1A60     		str	r2, [r3]
  66 0036 7047     		bx	lr
  67              	.L3:
  68              		.align	2
  69              	.L2:
  70 0038 00100240 		.word	1073876992
  71 003c 0CC0FFF8 		.word	-117456884
  72 0040 00127A00 		.word	8000000
  73 0044 00000000 		.word	SystemCoreClock
  74              		.cfi_endproc
  75              	.LFE123:
  77              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  78              		.align	2
  79              		.global	HAL_RCC_OscConfig
  80              		.thumb
  81              		.thumb_func
  83              	HAL_RCC_OscConfig:
  84              	.LFB124:
ARM GAS  /tmp/cct7Qvry.s 			page 7


 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
  85              		.loc 1 279 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 8
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89              	.LVL0:
  90 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  91              	.LCFI0:
  92              		.cfi_def_cfa_offset 28
  93              		.cfi_offset 4, -28
  94              		.cfi_offset 5, -24
  95              		.cfi_offset 6, -20
  96              		.cfi_offset 7, -16
  97              		.cfi_offset 8, -12
  98              		.cfi_offset 9, -8
  99              		.cfi_offset 14, -4
 100 0004 83B0     		sub	sp, sp, #12
 101              	.LCFI1:
 102              		.cfi_def_cfa_offset 40
 103 0006 0546     		mov	r5, r0
 104              	.LVL1:
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 105              		.loc 1 287 0
 106 0008 0368     		ldr	r3, [r0]
 107 000a 13F0010F 		tst	r3, #1
 108 000e 00F09E80 		beq	.L5
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 109              		.loc 1 293 0
ARM GAS  /tmp/cct7Qvry.s 			page 8


 110 0012 B94B     		ldr	r3, .L94
 111 0014 5B68     		ldr	r3, [r3, #4]
 112 0016 03F00C03 		and	r3, r3, #12
 113 001a 042B     		cmp	r3, #4
 114 001c 0AD0     		beq	.L6
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 115              		.loc 1 294 0
 116 001e B64B     		ldr	r3, .L94
 117 0020 5B68     		ldr	r3, [r3, #4]
 118 0022 03F00C03 		and	r3, r3, #12
 119 0026 082B     		cmp	r3, #8
 120 0028 1BD1     		bne	.L7
 121              		.loc 1 294 0 is_stmt 0 discriminator 1
 122 002a B34B     		ldr	r3, .L94
 123 002c 5B68     		ldr	r3, [r3, #4]
 124 002e 13F4803F 		tst	r3, #65536
 125 0032 16D0     		beq	.L7
 126              	.L6:
 127              	.LVL2:
 128              	.LBB166:
 129              	.LBB167:
 130              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
ARM GAS  /tmp/cct7Qvry.s 			page 9


  36:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
ARM GAS  /tmp/cct7Qvry.s 			page 10


  93:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cct7Qvry.s 			page 11


 150:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cct7Qvry.s 			page 12


 207:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/cct7Qvry.s 			page 13


 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
ARM GAS  /tmp/cct7Qvry.s 			page 14


 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/cct7Qvry.s 			page 15


 378:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 379:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 387:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:Drivers/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 394:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 399:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 408:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 409:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 410:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
ARM GAS  /tmp/cct7Qvry.s 			page 16


 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 445:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 455:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 463:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 478:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 479:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
ARM GAS  /tmp/cct7Qvry.s 			page 17


 492:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 526:Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 528:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 131              		.loc 2 531 0 is_stmt 1
 132 0034 4FF40033 		mov	r3, #131072
 133              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 134 0038 93FAA3F3 		rbit r3, r3
 135              	@ 0 "" 2
 136              		.thumb
 137              	.LBE167:
 138              	.LBE166:
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 139              		.loc 1 296 0
 140 003c AE4B     		ldr	r3, .L94
 141 003e 1A68     		ldr	r2, [r3]
 142              	.LVL3:
 143              	.LBB168:
 144              	.LBB169:
 145              		.loc 2 531 0
ARM GAS  /tmp/cct7Qvry.s 			page 18


 146 0040 4FF40033 		mov	r3, #131072
 147              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 148 0044 93FAA3F3 		rbit r3, r3
 149              	@ 0 "" 2
 150              	.LVL4:
 151              		.thumb
 152              	.LBE169:
 153              	.LBE168:
 154              		.loc 1 296 0
 155 0048 B3FA83F3 		clz	r3, r3
 156              	.LVL5:
 157 004c 03F01F03 		and	r3, r3, #31
 158 0050 0121     		movs	r1, #1
 159 0052 01FA03F3 		lsl	r3, r1, r3
 160 0056 1A42     		tst	r2, r3
 161 0058 79D0     		beq	.L5
 162              		.loc 1 296 0 is_stmt 0 discriminator 1
 163 005a 6B68     		ldr	r3, [r5, #4]
 164 005c 002B     		cmp	r3, #0
 165 005e 76D1     		bne	.L5
 166 0060 B4E2     		b	.L77
 167              	.LVL6:
 168              	.L7:
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 169              		.loc 1 304 0 is_stmt 1
 170 0062 6B68     		ldr	r3, [r5, #4]
 171 0064 B3F5803F 		cmp	r3, #65536
 172 0068 08D1     		bne	.L11
 173              		.loc 1 304 0 is_stmt 0 discriminator 1
 174 006a 03F18043 		add	r3, r3, #1073741824
 175 006e 03F58833 		add	r3, r3, #69632
 176 0072 1A68     		ldr	r2, [r3]
 177 0074 42F48032 		orr	r2, r2, #65536
 178 0078 1A60     		str	r2, [r3]
 179 007a 26E0     		b	.L12
 180              	.L11:
 181              		.loc 1 304 0 discriminator 2
 182 007c 63B9     		cbnz	r3, .L13
 183              		.loc 1 304 0 discriminator 1
 184 007e 03F18043 		add	r3, r3, #1073741824
 185 0082 03F50433 		add	r3, r3, #135168
 186 0086 1A68     		ldr	r2, [r3]
 187 0088 22F48032 		bic	r2, r2, #65536
 188 008c 1A60     		str	r2, [r3]
 189 008e 1A68     		ldr	r2, [r3]
 190 0090 22F48022 		bic	r2, r2, #262144
 191 0094 1A60     		str	r2, [r3]
 192 0096 18E0     		b	.L12
 193              	.L13:
 194              		.loc 1 304 0 discriminator 2
ARM GAS  /tmp/cct7Qvry.s 			page 19


 195 0098 B3F5A02F 		cmp	r3, #327680
 196 009c 0CD1     		bne	.L14
 197              		.loc 1 304 0 discriminator 1
 198 009e 03F18043 		add	r3, r3, #1073741824
 199 00a2 A3F53C33 		sub	r3, r3, #192512
 200 00a6 1A68     		ldr	r2, [r3]
 201 00a8 42F48022 		orr	r2, r2, #262144
 202 00ac 1A60     		str	r2, [r3]
 203 00ae 1A68     		ldr	r2, [r3]
 204 00b0 42F48032 		orr	r2, r2, #65536
 205 00b4 1A60     		str	r2, [r3]
 206 00b6 08E0     		b	.L12
 207              	.L14:
 208              		.loc 1 304 0 discriminator 2
 209 00b8 8F4B     		ldr	r3, .L94
 210 00ba 1A68     		ldr	r2, [r3]
 211 00bc 22F48032 		bic	r2, r2, #65536
 212 00c0 1A60     		str	r2, [r3]
 213 00c2 1A68     		ldr	r2, [r3]
 214 00c4 22F48022 		bic	r2, r2, #262144
 215 00c8 1A60     		str	r2, [r3]
 216              	.L12:
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the HSE predivision factor --------------------------------*/
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 217              		.loc 1 308 0 is_stmt 1
 218 00ca 8B4B     		ldr	r3, .L94
 219 00cc D96A     		ldr	r1, [r3, #44]
 220 00ce 21F00F01 		bic	r1, r1, #15
 221 00d2 AA68     		ldr	r2, [r5, #8]
 222 00d4 0A43     		orrs	r2, r2, r1
 223 00d6 DA62     		str	r2, [r3, #44]
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Check the HSE State */
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 224              		.loc 1 312 0
 225 00d8 6B68     		ldr	r3, [r5, #4]
 226 00da E3B1     		cbz	r3, .L15
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 227              		.loc 1 315 0
 228 00dc FFF7FEFF 		bl	HAL_GetTick
 229              	.LVL7:
 230 00e0 8046     		mov	r8, r0
 231              	.LVL8:
 232              	.LBB170:
 233              	.LBB171:
 234              		.loc 2 531 0
 235 00e2 4FF40034 		mov	r4, #131072
 236              	.LBE171:
 237              	.LBE170:
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is ready */
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
ARM GAS  /tmp/cct7Qvry.s 			page 20


 238              		.loc 1 318 0
 239 00e6 844F     		ldr	r7, .L94
 240 00e8 0126     		movs	r6, #1
 241 00ea 06E0     		b	.L16
 242              	.LVL9:
 243              	.L19:
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 244              		.loc 1 320 0
 245 00ec FFF7FEFF 		bl	HAL_GetTick
 246              	.LVL10:
 247 00f0 C8EB0000 		rsb	r0, r8, r0
 248 00f4 6428     		cmp	r0, #100
 249 00f6 00F26B82 		bhi	.L78
 250              	.LVL11:
 251              	.L16:
 252              	.LBB173:
 253              	.LBB172:
 254              		.loc 2 531 0 discriminator 1
 255              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 256 00fa 94FAA4F3 		rbit r3, r4
 257              	@ 0 "" 2
 258              		.thumb
 259              	.LBE172:
 260              	.LBE173:
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 261              		.loc 1 318 0 discriminator 1
 262 00fe 3A68     		ldr	r2, [r7]
 263              	.LVL12:
 264              	.LBB174:
 265              	.LBB175:
 266              		.loc 2 531 0 discriminator 1
 267              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 268 0100 94FAA4F3 		rbit r3, r4
 269              	@ 0 "" 2
 270              	.LVL13:
 271              		.thumb
 272              	.LBE175:
 273              	.LBE174:
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 274              		.loc 1 318 0 discriminator 1
 275 0104 B3FA83F3 		clz	r3, r3
 276              	.LVL14:
 277 0108 03F01F03 		and	r3, r3, #31
 278 010c 06FA03F3 		lsl	r3, r6, r3
 279 0110 1A42     		tst	r2, r3
 280 0112 EBD0     		beq	.L19
 281 0114 1BE0     		b	.L5
 282              	.LVL15:
 283              	.L15:
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
ARM GAS  /tmp/cct7Qvry.s 			page 21


 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 284              		.loc 1 329 0
 285 0116 FFF7FEFF 		bl	HAL_GetTick
 286              	.LVL16:
 287 011a 8046     		mov	r8, r0
 288              	.LVL17:
 289              	.LBB176:
 290              	.LBB177:
 291              		.loc 2 531 0
 292 011c 4FF40034 		mov	r4, #131072
 293              	.LBE177:
 294              	.LBE176:
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 295              		.loc 1 332 0
 296 0120 754F     		ldr	r7, .L94
 297 0122 0126     		movs	r6, #1
 298 0124 06E0     		b	.L20
 299              	.LVL18:
 300              	.L23:
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 301              		.loc 1 334 0
 302 0126 FFF7FEFF 		bl	HAL_GetTick
 303              	.LVL19:
 304 012a C8EB0000 		rsb	r0, r8, r0
 305 012e 6428     		cmp	r0, #100
 306 0130 00F25082 		bhi	.L79
 307              	.LVL20:
 308              	.L20:
 309              	.LBB179:
 310              	.LBB178:
 311              		.loc 2 531 0 discriminator 1
 312              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 313 0134 94FAA4F3 		rbit r3, r4
 314              	@ 0 "" 2
 315              		.thumb
 316              	.LBE178:
 317              	.LBE179:
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 318              		.loc 1 332 0 discriminator 1
 319 0138 3A68     		ldr	r2, [r7]
 320              	.LVL21:
 321              	.LBB180:
 322              	.LBB181:
 323              		.loc 2 531 0 discriminator 1
 324              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 325 013a 94FAA4F3 		rbit r3, r4
 326              	@ 0 "" 2
 327              	.LVL22:
 328              		.thumb
 329              	.LBE181:
 330              	.LBE180:
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 331              		.loc 1 332 0 discriminator 1
ARM GAS  /tmp/cct7Qvry.s 			page 22


 332 013e B3FA83F3 		clz	r3, r3
 333              	.LVL23:
 334 0142 03F01F03 		and	r3, r3, #31
 335 0146 06FA03F3 		lsl	r3, r6, r3
 336 014a 1A42     		tst	r2, r3
 337 014c EBD1     		bne	.L23
 338              	.LVL24:
 339              	.L5:
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 340              		.loc 1 343 0
 341 014e 2B68     		ldr	r3, [r5]
 342 0150 13F0020F 		tst	r3, #2
 343 0154 00F09080 		beq	.L24
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 344              		.loc 1 350 0
 345 0158 674B     		ldr	r3, .L94
 346 015a 5B68     		ldr	r3, [r3, #4]
 347 015c 13F00C0F 		tst	r3, #12
 348 0160 0AD0     		beq	.L25
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 349              		.loc 1 351 0
 350 0162 654B     		ldr	r3, .L94
 351 0164 5B68     		ldr	r3, [r3, #4]
 352 0166 03F00C03 		and	r3, r3, #12
 353 016a 082B     		cmp	r3, #8
 354 016c 27D1     		bne	.L26
 355              		.loc 1 351 0 is_stmt 0 discriminator 1
 356 016e 624B     		ldr	r3, .L94
 357 0170 5B68     		ldr	r3, [r3, #4]
 358 0172 13F4803F 		tst	r3, #65536
 359 0176 22D1     		bne	.L26
 360              	.L25:
 361              	.LVL25:
 362              	.LBB182:
 363              	.LBB183:
 364              		.loc 2 531 0 is_stmt 1
 365 0178 0223     		movs	r3, #2
 366              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 367 017a 93FAA3F3 		rbit r3, r3
 368              	@ 0 "" 2
 369              		.thumb
 370              	.LBE183:
 371              	.LBE182:
ARM GAS  /tmp/cct7Qvry.s 			page 23


 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 372              		.loc 1 354 0
 373 017e 5E4B     		ldr	r3, .L94
 374 0180 1A68     		ldr	r2, [r3]
 375              	.LVL26:
 376              	.LBB184:
 377              	.LBB185:
 378              		.loc 2 531 0
 379 0182 0223     		movs	r3, #2
 380              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 381 0184 93FAA3F3 		rbit r3, r3
 382              	@ 0 "" 2
 383              	.LVL27:
 384              		.thumb
 385              	.LBE185:
 386              	.LBE184:
 387              		.loc 1 354 0
 388 0188 B3FA83F3 		clz	r3, r3
 389              	.LVL28:
 390 018c 03F01F03 		and	r3, r3, #31
 391 0190 0121     		movs	r1, #1
 392 0192 01FA03F3 		lsl	r3, r1, r3
 393 0196 1A42     		tst	r2, r3
 394 0198 03D0     		beq	.L29
 395              		.loc 1 354 0 is_stmt 0 discriminator 1
 396 019a 2B69     		ldr	r3, [r5, #16]
 397 019c 8B42     		cmp	r3, r1
 398 019e 40F01B82 		bne	.L80
 399              	.L29:
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 400              		.loc 1 362 0 is_stmt 1 discriminator 2
 401 01a2 554B     		ldr	r3, .L94
 402 01a4 1968     		ldr	r1, [r3]
 403 01a6 21F0F801 		bic	r1, r1, #248
 404 01aa 6A69     		ldr	r2, [r5, #20]
 405              	.LVL29:
 406              	.LBB186:
 407              	.LBB187:
 408              		.loc 2 531 0 discriminator 2
 409 01ac F820     		movs	r0, #248
 410              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 411 01ae 90FAA0F0 		rbit r0, r0
 412              	@ 0 "" 2
 413              	.LVL30:
 414              		.thumb
 415              	.LBE187:
 416              	.LBE186:
 417              		.loc 1 362 0 discriminator 2
ARM GAS  /tmp/cct7Qvry.s 			page 24


 418 01b2 B0FA80F0 		clz	r0, r0
 419              	.LVL31:
 420 01b6 8240     		lsls	r2, r2, r0
 421 01b8 0A43     		orrs	r2, r2, r1
 422 01ba 1A60     		str	r2, [r3]
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 423              		.loc 1 354 0 discriminator 2
 424 01bc 5CE0     		b	.L24
 425              	.LVL32:
 426              	.L26:
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI State */
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 427              		.loc 1 368 0
 428 01be 2B69     		ldr	r3, [r5, #16]
 429 01c0 9BB3     		cbz	r3, .L30
 430              	.LVL33:
 431              	.LBB188:
 432              	.LBB189:
 433              		.loc 2 531 0
 434 01c2 0122     		movs	r2, #1
 435              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 436 01c4 92FAA2F3 		rbit r3, r2
 437              	@ 0 "" 2
 438              	.LVL34:
 439              		.thumb
 440              	.LBE189:
 441              	.LBE188:
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 442              		.loc 1 371 0
 443 01c8 B3FA83F3 		clz	r3, r3
 444              	.LVL35:
 445 01cc 03F18453 		add	r3, r3, #276824064
 446 01d0 03F58413 		add	r3, r3, #1081344
 447 01d4 9B00     		lsls	r3, r3, #2
 448 01d6 1A60     		str	r2, [r3]
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 449              		.loc 1 374 0
 450 01d8 FFF7FEFF 		bl	HAL_GetTick
 451              	.LVL36:
 452 01dc 8046     		mov	r8, r0
 453              	.LVL37:
 454              	.LBB190:
 455              	.LBB191:
 456              		.loc 2 531 0
 457 01de 0224     		movs	r4, #2
 458              	.LBE191:
 459              	.LBE190:
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is ready */
ARM GAS  /tmp/cct7Qvry.s 			page 25


 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 460              		.loc 1 377 0
 461 01e0 454F     		ldr	r7, .L94
 462 01e2 0126     		movs	r6, #1
 463 01e4 06E0     		b	.L31
 464              	.LVL38:
 465              	.L34:
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 466              		.loc 1 379 0
 467 01e6 FFF7FEFF 		bl	HAL_GetTick
 468              	.LVL39:
 469 01ea C8EB0000 		rsb	r0, r8, r0
 470 01ee 0228     		cmp	r0, #2
 471 01f0 00F2F481 		bhi	.L81
 472              	.LVL40:
 473              	.L31:
 474              	.LBB193:
 475              	.LBB192:
 476              		.loc 2 531 0 discriminator 1
 477              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 478 01f4 94FAA4F3 		rbit r3, r4
 479              	@ 0 "" 2
 480              		.thumb
 481              	.LBE192:
 482              	.LBE193:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 483              		.loc 1 377 0 discriminator 1
 484 01f8 3A68     		ldr	r2, [r7]
 485              	.LVL41:
 486              	.LBB194:
 487              	.LBB195:
 488              		.loc 2 531 0 discriminator 1
 489              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 490 01fa 94FAA4F3 		rbit r3, r4
 491              	@ 0 "" 2
 492              	.LVL42:
 493              		.thumb
 494              	.LBE195:
 495              	.LBE194:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 496              		.loc 1 377 0 discriminator 1
 497 01fe B3FA83F3 		clz	r3, r3
 498              	.LVL43:
 499 0202 03F01F03 		and	r3, r3, #31
 500 0206 06FA03F3 		lsl	r3, r6, r3
 501 020a 1A42     		tst	r2, r3
 502 020c EBD0     		beq	.L34
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                 
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 503              		.loc 1 386 0
 504 020e 3A4B     		ldr	r3, .L94
ARM GAS  /tmp/cct7Qvry.s 			page 26


 505 0210 1968     		ldr	r1, [r3]
 506 0212 21F0F801 		bic	r1, r1, #248
 507 0216 6A69     		ldr	r2, [r5, #20]
 508              	.LVL44:
 509              	.LBB196:
 510              	.LBB197:
 511              		.loc 2 531 0
 512 0218 F820     		movs	r0, #248
 513              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 514 021a 90FAA0F0 		rbit r0, r0
 515              	@ 0 "" 2
 516              	.LVL45:
 517              		.thumb
 518              	.LBE197:
 519              	.LBE196:
 520              		.loc 1 386 0
 521 021e B0FA80F0 		clz	r0, r0
 522              	.LVL46:
 523 0222 8240     		lsls	r2, r2, r0
 524 0224 0A43     		orrs	r2, r2, r1
 525 0226 1A60     		str	r2, [r3]
 526 0228 26E0     		b	.L24
 527              	.LVL47:
 528              	.L30:
 529              	.LBB198:
 530              	.LBB199:
 531              		.loc 2 531 0
 532 022a 0123     		movs	r3, #1
 533              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 534 022c 93FAA3F3 		rbit r3, r3
 535              	@ 0 "" 2
 536              	.LVL48:
 537              		.thumb
 538              	.LBE199:
 539              	.LBE198:
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 540              		.loc 1 391 0
 541 0230 B3FA83F3 		clz	r3, r3
 542              	.LVL49:
 543 0234 03F18453 		add	r3, r3, #276824064
 544 0238 03F58413 		add	r3, r3, #1081344
 545 023c 9B00     		lsls	r3, r3, #2
 546 023e 0022     		movs	r2, #0
 547 0240 1A60     		str	r2, [r3]
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 548              		.loc 1 394 0
 549 0242 FFF7FEFF 		bl	HAL_GetTick
 550              	.LVL50:
 551 0246 8046     		mov	r8, r0
 552              	.LVL51:
 553              	.LBB200:
ARM GAS  /tmp/cct7Qvry.s 			page 27


 554              	.LBB201:
 555              		.loc 2 531 0
 556 0248 0224     		movs	r4, #2
 557              	.LBE201:
 558              	.LBE200:
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 559              		.loc 1 397 0
 560 024a 2B4F     		ldr	r7, .L94
 561 024c 0126     		movs	r6, #1
 562 024e 06E0     		b	.L35
 563              	.LVL52:
 564              	.L38:
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 565              		.loc 1 399 0
 566 0250 FFF7FEFF 		bl	HAL_GetTick
 567              	.LVL53:
 568 0254 C8EB0000 		rsb	r0, r8, r0
 569 0258 0228     		cmp	r0, #2
 570 025a 00F2C181 		bhi	.L82
 571              	.LVL54:
 572              	.L35:
 573              	.LBB203:
 574              	.LBB202:
 575              		.loc 2 531 0 discriminator 1
 576              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 577 025e 94FAA4F3 		rbit r3, r4
 578              	@ 0 "" 2
 579              		.thumb
 580              	.LBE202:
 581              	.LBE203:
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 582              		.loc 1 397 0 discriminator 1
 583 0262 3A68     		ldr	r2, [r7]
 584              	.LVL55:
 585              	.LBB204:
 586              	.LBB205:
 587              		.loc 2 531 0 discriminator 1
 588              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 589 0264 94FAA4F3 		rbit r3, r4
 590              	@ 0 "" 2
 591              	.LVL56:
 592              		.thumb
 593              	.LBE205:
 594              	.LBE204:
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 595              		.loc 1 397 0 discriminator 1
 596 0268 B3FA83F3 		clz	r3, r3
 597              	.LVL57:
 598 026c 03F01F03 		and	r3, r3, #31
 599 0270 06FA03F3 		lsl	r3, r6, r3
 600 0274 1A42     		tst	r2, r3
 601 0276 EBD1     		bne	.L38
 602              	.LVL58:
 603              	.L24:
ARM GAS  /tmp/cct7Qvry.s 			page 28


 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 604              		.loc 1 408 0
 605 0278 2B68     		ldr	r3, [r5]
 606 027a 13F0080F 		tst	r3, #8
 607 027e 57D0     		beq	.L39
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSI State */
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 608              		.loc 1 414 0
 609 0280 AB69     		ldr	r3, [r5, #24]
 610 0282 43B3     		cbz	r3, .L40
 611              	.LVL59:
 612              	.LBB206:
 613              	.LBB207:
 614              		.loc 2 531 0
 615 0284 0122     		movs	r2, #1
 616              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 617 0286 92FAA2F1 		rbit r1, r2
 618              	@ 0 "" 2
 619              	.LVL60:
 620              		.thumb
 621              	.LBE207:
 622              	.LBE206:
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 623              		.loc 1 417 0
 624 028a B1FA81F1 		clz	r1, r1
 625              	.LVL61:
 626 028e 1B4B     		ldr	r3, .L94+4
 627 0290 0B44     		add	r3, r3, r1
 628 0292 9B00     		lsls	r3, r3, #2
 629 0294 1A60     		str	r2, [r3]
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 630              		.loc 1 420 0
 631 0296 FFF7FEFF 		bl	HAL_GetTick
 632              	.LVL62:
 633 029a 8046     		mov	r8, r0
 634              	.LVL63:
 635              	.LBB208:
 636              	.LBB209:
 637              		.loc 2 531 0
 638 029c 0224     		movs	r4, #2
 639              	.LBE209:
ARM GAS  /tmp/cct7Qvry.s 			page 29


 640              	.LBE208:
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 641              		.loc 1 423 0
 642 029e 164F     		ldr	r7, .L94
 643 02a0 0126     		movs	r6, #1
 644 02a2 06E0     		b	.L41
 645              	.LVL64:
 646              	.L42:
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 647              		.loc 1 425 0
 648 02a4 FFF7FEFF 		bl	HAL_GetTick
 649              	.LVL65:
 650 02a8 C8EB0000 		rsb	r0, r8, r0
 651 02ac 0228     		cmp	r0, #2
 652 02ae 00F29981 		bhi	.L83
 653              	.LVL66:
 654              	.L41:
 655              	.LBB211:
 656              	.LBB210:
 657              		.loc 2 531 0 discriminator 1
 658              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 659 02b2 94FAA4F3 		rbit r3, r4
 660              	@ 0 "" 2
 661              	.LVL67:
 662              		.thumb
 663              	.LBE210:
 664              	.LBE211:
 665              	.LBB212:
 666              	.LBB213:
 667              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 668 02b6 94FAA4F3 		rbit r3, r4
 669              	@ 0 "" 2
 670              	.LVL68:
 671              		.thumb
 672              	.LBE213:
 673              	.LBE212:
 674              	.LBB214:
 675              	.LBB215:
 676              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 677 02ba 94FAA4F3 		rbit r3, r4
 678              	@ 0 "" 2
 679              		.thumb
 680              	.LBE215:
 681              	.LBE214:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 682              		.loc 1 423 0 discriminator 1
 683 02be 7A6A     		ldr	r2, [r7, #36]
 684              	.LVL69:
 685              	.LBB216:
 686              	.LBB217:
 687              		.loc 2 531 0 discriminator 1
 688              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 689 02c0 94FAA4F3 		rbit r3, r4
 690              	@ 0 "" 2
ARM GAS  /tmp/cct7Qvry.s 			page 30


 691              	.LVL70:
 692              		.thumb
 693              	.LBE217:
 694              	.LBE216:
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 695              		.loc 1 423 0 discriminator 1
 696 02c4 B3FA83F3 		clz	r3, r3
 697              	.LVL71:
 698 02c8 03F01F03 		and	r3, r3, #31
 699 02cc 06FA03F3 		lsl	r3, r6, r3
 700 02d0 1A42     		tst	r2, r3
 701 02d2 E7D0     		beq	.L42
 702 02d4 2CE0     		b	.L39
 703              	.LVL72:
 704              	.L40:
 705              	.LBB218:
 706              	.LBB219:
 707              		.loc 2 531 0
 708 02d6 0122     		movs	r2, #1
 709              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 710 02d8 92FAA2F2 		rbit r2, r2
 711              	@ 0 "" 2
 712              	.LVL73:
 713              		.thumb
 714              	.LBE219:
 715              	.LBE218:
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 716              		.loc 1 434 0
 717 02dc B2FA82F2 		clz	r2, r2
 718              	.LVL74:
 719 02e0 064B     		ldr	r3, .L94+4
 720 02e2 1344     		add	r3, r3, r2
 721 02e4 9B00     		lsls	r3, r3, #2
 722 02e6 0022     		movs	r2, #0
 723 02e8 1A60     		str	r2, [r3]
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 724              		.loc 1 437 0
 725 02ea FFF7FEFF 		bl	HAL_GetTick
 726              	.LVL75:
 727 02ee 8046     		mov	r8, r0
 728              	.LVL76:
 729              	.LBB220:
 730              	.LBB221:
 731              		.loc 2 531 0
 732 02f0 0224     		movs	r4, #2
 733              	.LBE221:
 734              	.LBE220:
ARM GAS  /tmp/cct7Qvry.s 			page 31


 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 735              		.loc 1 440 0
 736 02f2 014F     		ldr	r7, .L94
 737 02f4 0126     		movs	r6, #1
 738 02f6 0AE0     		b	.L43
 739              	.L95:
 740              		.align	2
 741              	.L94:
 742 02f8 00100240 		.word	1073876992
 743 02fc 20819010 		.word	277905696
 744              	.LVL77:
 745              	.L44:
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 746              		.loc 1 442 0
 747 0300 FFF7FEFF 		bl	HAL_GetTick
 748              	.LVL78:
 749 0304 C8EB0000 		rsb	r0, r8, r0
 750 0308 0228     		cmp	r0, #2
 751 030a 00F26D81 		bhi	.L84
 752              	.LVL79:
 753              	.L43:
 754              	.LBB223:
 755              	.LBB222:
 756              		.loc 2 531 0 discriminator 1
 757              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 758 030e 94FAA4F3 		rbit r3, r4
 759              	@ 0 "" 2
 760              	.LVL80:
 761              		.thumb
 762              	.LBE222:
 763              	.LBE223:
 764              	.LBB224:
 765              	.LBB225:
 766              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 767 0312 94FAA4F3 		rbit r3, r4
 768              	@ 0 "" 2
 769              	.LVL81:
 770              		.thumb
 771              	.LBE225:
 772              	.LBE224:
 773              	.LBB226:
 774              	.LBB227:
 775              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 776 0316 94FAA4F3 		rbit r3, r4
 777              	@ 0 "" 2
 778              		.thumb
 779              	.LBE227:
 780              	.LBE226:
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 781              		.loc 1 440 0 discriminator 1
 782 031a 7A6A     		ldr	r2, [r7, #36]
 783              	.LVL82:
 784              	.LBB228:
 785              	.LBB229:
ARM GAS  /tmp/cct7Qvry.s 			page 32


 786              		.loc 2 531 0 discriminator 1
 787              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 788 031c 94FAA4F3 		rbit r3, r4
 789              	@ 0 "" 2
 790              	.LVL83:
 791              		.thumb
 792              	.LBE229:
 793              	.LBE228:
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 794              		.loc 1 440 0 discriminator 1
 795 0320 B3FA83F3 		clz	r3, r3
 796              	.LVL84:
 797 0324 03F01F03 		and	r3, r3, #31
 798 0328 06FA03F3 		lsl	r3, r6, r3
 799 032c 1A42     		tst	r2, r3
 800 032e E7D1     		bne	.L44
 801              	.LVL85:
 802              	.L39:
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 803              		.loc 1 450 0
 804 0330 2B68     		ldr	r3, [r5]
 805 0332 13F0040F 		tst	r3, #4
 806 0336 00F0B880 		beq	.L45
 807              	.LVL86:
 808              	.LBB230:
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the parameters */
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 809              		.loc 1 459 0
 810 033a B54B     		ldr	r3, .L96
 811 033c DB69     		ldr	r3, [r3, #28]
 812 033e 13F0805F 		tst	r3, #268435456
 813 0342 0CD1     		bne	.L85
 814              	.LBB231:
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 815              		.loc 1 461 0
 816 0344 B24B     		ldr	r3, .L96
 817 0346 DA69     		ldr	r2, [r3, #28]
 818 0348 42F08052 		orr	r2, r2, #268435456
 819 034c DA61     		str	r2, [r3, #28]
 820 034e DB69     		ldr	r3, [r3, #28]
 821 0350 03F08053 		and	r3, r3, #268435456
 822 0354 0193     		str	r3, [sp, #4]
ARM GAS  /tmp/cct7Qvry.s 			page 33


 823 0356 019B     		ldr	r3, [sp, #4]
 824              	.LVL87:
 825              	.LBE231:
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pwrclkchanged = SET;
 826              		.loc 1 462 0
 827 0358 4FF00108 		mov	r8, #1
 828 035c 01E0     		b	.L46
 829              	.LVL88:
 830              	.L85:
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 831              		.loc 1 452 0
 832 035e 4FF00008 		mov	r8, #0
 833              	.LVL89:
 834              	.L46:
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 835              		.loc 1 465 0
 836 0362 AC4B     		ldr	r3, .L96+4
 837 0364 1B68     		ldr	r3, [r3]
 838 0366 13F4807F 		tst	r3, #256
 839 036a 13D1     		bne	.L47
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 840              		.loc 1 468 0
 841 036c A94B     		ldr	r3, .L96+4
 842 036e 1A68     		ldr	r2, [r3]
 843 0370 42F48072 		orr	r2, r2, #256
 844 0374 1A60     		str	r2, [r3]
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 845              		.loc 1 471 0
 846 0376 FFF7FEFF 		bl	HAL_GetTick
 847              	.LVL90:
 848 037a 0646     		mov	r6, r0
 849              	.LVL91:
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 850              		.loc 1 473 0
 851 037c A54C     		ldr	r4, .L96+4
 852 037e 05E0     		b	.L48
 853              	.LVL92:
 854              	.L49:
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 855              		.loc 1 475 0
 856 0380 FFF7FEFF 		bl	HAL_GetTick
 857              	.LVL93:
 858 0384 801B     		subs	r0, r0, r6
 859 0386 6428     		cmp	r0, #100
 860 0388 00F23081 		bhi	.L86
 861              	.L48:
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 862              		.loc 1 473 0 discriminator 1
 863 038c 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cct7Qvry.s 			page 34


 864 038e 13F4807F 		tst	r3, #256
 865 0392 F5D0     		beq	.L49
 866              	.LVL94:
 867              	.L47:
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 868              		.loc 1 483 0
 869 0394 EB68     		ldr	r3, [r5, #12]
 870 0396 012B     		cmp	r3, #1
 871 0398 05D1     		bne	.L50
 872              		.loc 1 483 0 is_stmt 0 discriminator 1
 873 039a 9D4B     		ldr	r3, .L96
 874 039c 1A6A     		ldr	r2, [r3, #32]
 875 039e 42F00102 		orr	r2, r2, #1
 876 03a2 1A62     		str	r2, [r3, #32]
 877 03a4 22E0     		b	.L51
 878              	.L50:
 879              		.loc 1 483 0 discriminator 2
 880 03a6 63B9     		cbnz	r3, .L52
 881              		.loc 1 483 0 discriminator 1
 882 03a8 03F18043 		add	r3, r3, #1073741824
 883 03ac 03F50433 		add	r3, r3, #135168
 884 03b0 1A6A     		ldr	r2, [r3, #32]
 885 03b2 22F00102 		bic	r2, r2, #1
 886 03b6 1A62     		str	r2, [r3, #32]
 887 03b8 1A6A     		ldr	r2, [r3, #32]
 888 03ba 22F00402 		bic	r2, r2, #4
 889 03be 1A62     		str	r2, [r3, #32]
 890 03c0 14E0     		b	.L51
 891              	.L52:
 892              		.loc 1 483 0 discriminator 2
 893 03c2 052B     		cmp	r3, #5
 894 03c4 09D1     		bne	.L53
 895              		.loc 1 483 0 discriminator 1
 896 03c6 924B     		ldr	r3, .L96
 897 03c8 1A6A     		ldr	r2, [r3, #32]
 898 03ca 42F00402 		orr	r2, r2, #4
 899 03ce 1A62     		str	r2, [r3, #32]
 900 03d0 1A6A     		ldr	r2, [r3, #32]
 901 03d2 42F00102 		orr	r2, r2, #1
 902 03d6 1A62     		str	r2, [r3, #32]
 903 03d8 08E0     		b	.L51
 904              	.L53:
 905              		.loc 1 483 0 discriminator 2
 906 03da 8D4B     		ldr	r3, .L96
 907 03dc 1A6A     		ldr	r2, [r3, #32]
 908 03de 22F00102 		bic	r2, r2, #1
 909 03e2 1A62     		str	r2, [r3, #32]
 910 03e4 1A6A     		ldr	r2, [r3, #32]
 911 03e6 22F00402 		bic	r2, r2, #4
 912 03ea 1A62     		str	r2, [r3, #32]
ARM GAS  /tmp/cct7Qvry.s 			page 35


 913              	.L51:
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check the LSE State */
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 914              		.loc 1 485 0 is_stmt 1
 915 03ec EB68     		ldr	r3, [r5, #12]
 916 03ee 53B3     		cbz	r3, .L54
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 917              		.loc 1 488 0
 918 03f0 FFF7FEFF 		bl	HAL_GetTick
 919              	.LVL95:
 920 03f4 8146     		mov	r9, r0
 921              	.LVL96:
 922              	.LBB232:
 923              	.LBB233:
 924              		.loc 2 531 0
 925 03f6 0224     		movs	r4, #2
 926              	.LBE233:
 927              	.LBE232:
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 928              		.loc 1 491 0
 929 03f8 854F     		ldr	r7, .L96
 930 03fa 0126     		movs	r6, #1
 931 03fc 08E0     		b	.L55
 932              	.LVL97:
 933              	.L58:
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 934              		.loc 1 493 0
 935 03fe FFF7FEFF 		bl	HAL_GetTick
 936              	.LVL98:
 937 0402 C9EB0000 		rsb	r0, r9, r0
 938 0406 41F28833 		movw	r3, #5000
 939 040a 9842     		cmp	r0, r3
 940 040c 00F2F080 		bhi	.L87
 941              	.LVL99:
 942              	.L55:
 943              	.LBB235:
 944              	.LBB234:
 945              		.loc 2 531 0 discriminator 1
 946              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 947 0410 94FAA4F3 		rbit r3, r4
 948              	@ 0 "" 2
 949              	.LVL100:
 950              		.thumb
 951              	.LBE234:
 952              	.LBE235:
 953              	.LBB236:
 954              	.LBB237:
 955              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 956 0414 94FAA4F3 		rbit r3, r4
 957              	@ 0 "" 2
 958              	.LVL101:
 959              		.thumb
ARM GAS  /tmp/cct7Qvry.s 			page 36


 960              	.LBE237:
 961              	.LBE236:
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 962              		.loc 1 491 0 discriminator 1
 963 0418 B3FA83F3 		clz	r3, r3
 964              	.LVL102:
 965 041c 43F04003 		orr	r3, r3, #64
 966 0420 5B09     		lsrs	r3, r3, #5
 967 0422 022B     		cmp	r3, #2
 968 0424 01D1     		bne	.L56
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 969              		.loc 1 491 0 is_stmt 0 discriminator 3
 970 0426 3A6A     		ldr	r2, [r7, #32]
 971 0428 02E0     		b	.L57
 972              	.L56:
 973              	.LVL103:
 974              	.LBB238:
 975              	.LBB239:
 976              		.loc 2 531 0 is_stmt 1
 977              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 978 042a 94FAA4F3 		rbit r3, r4
 979              	@ 0 "" 2
 980              	.LVL104:
 981              		.thumb
 982              	.LBE239:
 983              	.LBE238:
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 984              		.loc 1 491 0
 985 042e 7A6A     		ldr	r2, [r7, #36]
 986              	.LVL105:
 987              	.L57:
 988              	.LBB240:
 989              	.LBB241:
 990              		.loc 2 531 0 discriminator 8
 991              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 992 0430 94FAA4F3 		rbit r3, r4
 993              	@ 0 "" 2
 994              	.LVL106:
 995              		.thumb
 996              	.LBE241:
 997              	.LBE240:
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 998              		.loc 1 491 0 discriminator 8
 999 0434 B3FA83F3 		clz	r3, r3
 1000              	.LVL107:
 1001 0438 03F01F03 		and	r3, r3, #31
 1002 043c 06FA03F3 		lsl	r3, r6, r3
 1003 0440 1A42     		tst	r2, r3
 1004 0442 DCD0     		beq	.L58
 1005 0444 29E0     		b	.L59
 1006              	.LVL108:
 1007              	.L54:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
ARM GAS  /tmp/cct7Qvry.s 			page 37


 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Get Start Tick */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 1008              		.loc 1 502 0
 1009 0446 FFF7FEFF 		bl	HAL_GetTick
 1010              	.LVL109:
 1011 044a 8146     		mov	r9, r0
 1012              	.LVL110:
 1013              	.LBB242:
 1014              	.LBB243:
 1015              		.loc 2 531 0
 1016 044c 0224     		movs	r4, #2
 1017              	.LBE243:
 1018              	.LBE242:
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1019              		.loc 1 505 0
 1020 044e 704F     		ldr	r7, .L96
 1021 0450 0126     		movs	r6, #1
 1022 0452 08E0     		b	.L60
 1023              	.LVL111:
 1024              	.L63:
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 1025              		.loc 1 507 0
 1026 0454 FFF7FEFF 		bl	HAL_GetTick
 1027              	.LVL112:
 1028 0458 C9EB0000 		rsb	r0, r9, r0
 1029 045c 41F28833 		movw	r3, #5000
 1030 0460 9842     		cmp	r0, r3
 1031 0462 00F2C780 		bhi	.L88
 1032              	.LVL113:
 1033              	.L60:
 1034              	.LBB245:
 1035              	.LBB244:
 1036              		.loc 2 531 0 discriminator 1
 1037              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1038 0466 94FAA4F3 		rbit r3, r4
 1039              	@ 0 "" 2
 1040              	.LVL114:
 1041              		.thumb
 1042              	.LBE244:
 1043              	.LBE245:
 1044              	.LBB246:
 1045              	.LBB247:
 1046              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1047 046a 94FAA4F3 		rbit r3, r4
 1048              	@ 0 "" 2
 1049              	.LVL115:
 1050              		.thumb
 1051              	.LBE247:
 1052              	.LBE246:
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1053              		.loc 1 505 0 discriminator 1
 1054 046e B3FA83F3 		clz	r3, r3
ARM GAS  /tmp/cct7Qvry.s 			page 38


 1055              	.LVL116:
 1056 0472 43F04003 		orr	r3, r3, #64
 1057 0476 5B09     		lsrs	r3, r3, #5
 1058 0478 022B     		cmp	r3, #2
 1059 047a 01D1     		bne	.L61
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1060              		.loc 1 505 0 is_stmt 0 discriminator 3
 1061 047c 3A6A     		ldr	r2, [r7, #32]
 1062 047e 02E0     		b	.L62
 1063              	.L61:
 1064              	.LVL117:
 1065              	.LBB248:
 1066              	.LBB249:
 1067              		.loc 2 531 0 is_stmt 1
 1068              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1069 0480 94FAA4F3 		rbit r3, r4
 1070              	@ 0 "" 2
 1071              	.LVL118:
 1072              		.thumb
 1073              	.LBE249:
 1074              	.LBE248:
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1075              		.loc 1 505 0
 1076 0484 7A6A     		ldr	r2, [r7, #36]
 1077              	.LVL119:
 1078              	.L62:
 1079              	.LBB250:
 1080              	.LBB251:
 1081              		.loc 2 531 0 discriminator 8
 1082              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1083 0486 94FAA4F3 		rbit r3, r4
 1084              	@ 0 "" 2
 1085              	.LVL120:
 1086              		.thumb
 1087              	.LBE251:
 1088              	.LBE250:
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 1089              		.loc 1 505 0 discriminator 8
 1090 048a B3FA83F3 		clz	r3, r3
 1091              	.LVL121:
 1092 048e 03F01F03 		and	r3, r3, #31
 1093 0492 06FA03F3 		lsl	r3, r6, r3
 1094 0496 1A42     		tst	r2, r3
 1095 0498 DCD1     		bne	.L63
 1096              	.LVL122:
 1097              	.L59:
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 1098              		.loc 1 515 0
 1099 049a B8F1000F 		cmp	r8, #0
 1100 049e 04D0     		beq	.L45
ARM GAS  /tmp/cct7Qvry.s 			page 39


 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 1101              		.loc 1 517 0
 1102 04a0 5B4B     		ldr	r3, .L96
 1103 04a2 DA69     		ldr	r2, [r3, #28]
 1104 04a4 22F08052 		bic	r2, r2, #268435456
 1105 04a8 DA61     		str	r2, [r3, #28]
 1106              	.LVL123:
 1107              	.L45:
 1108              	.LBE230:
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1109              		.loc 1 524 0
 1110 04aa EB69     		ldr	r3, [r5, #28]
 1111 04ac 002B     		cmp	r3, #0
 1112 04ae 00F0A380 		beq	.L89
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1113              		.loc 1 527 0
 1114 04b2 574A     		ldr	r2, .L96
 1115 04b4 5268     		ldr	r2, [r2, #4]
 1116 04b6 02F00C02 		and	r2, r2, #12
 1117 04ba 082A     		cmp	r2, #8
 1118 04bc 00F09E80 		beq	.L90
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     { 
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1119              		.loc 1 529 0
 1120 04c0 022B     		cmp	r3, #2
 1121 04c2 5AD1     		bne	.L64
 1122              	.LVL124:
 1123              	.LBB252:
 1124              	.LBB253:
 1125              		.loc 2 531 0
 1126 04c4 4FF08073 		mov	r3, #16777216
 1127              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1128 04c8 93FAA3F3 		rbit r3, r3
 1129              	@ 0 "" 2
 1130              	.LVL125:
 1131              		.thumb
 1132              	.LBE253:
 1133              	.LBE252:
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Check the parameters */
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if   defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         assert_param(IS_RCC_PREDIV(RCC_OscInitStruct->PLL.PREDIV));
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
ARM GAS  /tmp/cct7Qvry.s 			page 40


 1134              		.loc 1 539 0
 1135 04cc B3FA83F3 		clz	r3, r3
 1136              	.LVL126:
 1137 04d0 03F18453 		add	r3, r3, #276824064
 1138 04d4 03F58413 		add	r3, r3, #1081344
 1139 04d8 9B00     		lsls	r3, r3, #2
 1140 04da 0022     		movs	r2, #0
 1141 04dc 1A60     		str	r2, [r3]
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1142              		.loc 1 542 0
 1143 04de FFF7FEFF 		bl	HAL_GetTick
 1144              	.LVL127:
 1145 04e2 8046     		mov	r8, r0
 1146              	.LVL128:
 1147              	.LBB254:
 1148              	.LBB255:
 1149              		.loc 2 531 0
 1150 04e4 4FF00074 		mov	r4, #33554432
 1151              	.LBE255:
 1152              	.LBE254:
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1153              		.loc 1 545 0
 1154 04e8 494F     		ldr	r7, .L96
 1155 04ea 0126     		movs	r6, #1
 1156 04ec 06E0     		b	.L65
 1157              	.LVL129:
 1158              	.L68:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1159              		.loc 1 547 0
 1160 04ee FFF7FEFF 		bl	HAL_GetTick
 1161              	.LVL130:
 1162 04f2 C8EB0000 		rsb	r0, r8, r0
 1163 04f6 0228     		cmp	r0, #2
 1164 04f8 00F28280 		bhi	.L91
 1165              	.LVL131:
 1166              	.L65:
 1167              	.LBB257:
 1168              	.LBB256:
 1169              		.loc 2 531 0 discriminator 1
 1170              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1171 04fc 94FAA4F3 		rbit r3, r4
 1172              	@ 0 "" 2
 1173              		.thumb
 1174              	.LBE256:
 1175              	.LBE257:
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1176              		.loc 1 545 0 discriminator 1
 1177 0500 3A68     		ldr	r2, [r7]
 1178              	.LVL132:
 1179              	.LBB258:
 1180              	.LBB259:
 1181              		.loc 2 531 0 discriminator 1
ARM GAS  /tmp/cct7Qvry.s 			page 41


 1182              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1183 0502 94FAA4F3 		rbit r3, r4
 1184              	@ 0 "" 2
 1185              	.LVL133:
 1186              		.thumb
 1187              	.LBE259:
 1188              	.LBE258:
 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1189              		.loc 1 545 0 discriminator 1
 1190 0506 B3FA83F3 		clz	r3, r3
 1191              	.LVL134:
 1192 050a 03F01F03 		and	r3, r3, #31
 1193 050e 06FA03F3 		lsl	r3, r6, r3
 1194 0512 1A42     		tst	r2, r3
 1195 0514 EBD1     		bne	.L68
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Configure the main PLL clock source, predivider and multiplication factor. */
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PREDIV,
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Configure the main PLL clock source and multiplication factor. */
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1196              		.loc 1 560 0
 1197 0516 3E4B     		ldr	r3, .L96
 1198 0518 5968     		ldr	r1, [r3, #4]
 1199 051a 21F47411 		bic	r1, r1, #3997696
 1200 051e 686A     		ldr	r0, [r5, #36]
 1201 0520 2A6A     		ldr	r2, [r5, #32]
 1202 0522 0243     		orrs	r2, r2, r0
 1203 0524 0A43     		orrs	r2, r2, r1
 1204 0526 5A60     		str	r2, [r3, #4]
 1205              	.LVL135:
 1206              	.LBB260:
 1207              	.LBB261:
 1208              		.loc 2 531 0
 1209 0528 4FF08073 		mov	r3, #16777216
 1210              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1211 052c 93FAA3F3 		rbit r3, r3
 1212              	@ 0 "" 2
 1213              	.LVL136:
 1214              		.thumb
 1215              	.LBE261:
 1216              	.LBE260:
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                            RCC_OscInitStruct->PLL.PLLMUL);
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Enable the main PLL. */
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1217              		.loc 1 564 0
 1218 0530 B3FA83F3 		clz	r3, r3
 1219              	.LVL137:
 1220 0534 03F18453 		add	r3, r3, #276824064
ARM GAS  /tmp/cct7Qvry.s 			page 42


 1221 0538 03F58413 		add	r3, r3, #1081344
 1222 053c 9B00     		lsls	r3, r3, #2
 1223 053e 0122     		movs	r2, #1
 1224 0540 1A60     		str	r2, [r3]
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1225              		.loc 1 567 0
 1226 0542 FFF7FEFF 		bl	HAL_GetTick
 1227              	.LVL138:
 1228 0546 0746     		mov	r7, r0
 1229              	.LVL139:
 1230              	.LBB262:
 1231              	.LBB263:
 1232              		.loc 2 531 0
 1233 0548 4FF00074 		mov	r4, #33554432
 1234              	.LBE263:
 1235              	.LBE262:
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is ready */
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1236              		.loc 1 570 0
 1237 054c 304E     		ldr	r6, .L96
 1238 054e 0125     		movs	r5, #1
 1239              	.LVL140:
 1240 0550 04E0     		b	.L69
 1241              	.LVL141:
 1242              	.L72:
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1243              		.loc 1 572 0
 1244 0552 FFF7FEFF 		bl	HAL_GetTick
 1245              	.LVL142:
 1246 0556 C01B     		subs	r0, r0, r7
 1247 0558 0228     		cmp	r0, #2
 1248 055a 53D8     		bhi	.L92
 1249              	.LVL143:
 1250              	.L69:
 1251              	.LBB265:
 1252              	.LBB264:
 1253              		.loc 2 531 0 discriminator 1
 1254              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1255 055c 94FAA4F3 		rbit r3, r4
 1256              	@ 0 "" 2
 1257              		.thumb
 1258              	.LBE264:
 1259              	.LBE265:
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1260              		.loc 1 570 0 discriminator 1
 1261 0560 3268     		ldr	r2, [r6]
 1262              	.LVL144:
 1263              	.LBB266:
 1264              	.LBB267:
 1265              		.loc 2 531 0 discriminator 1
 1266              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1267 0562 94FAA4F3 		rbit r3, r4
 1268              	@ 0 "" 2
ARM GAS  /tmp/cct7Qvry.s 			page 43


 1269              	.LVL145:
 1270              		.thumb
 1271              	.LBE267:
 1272              	.LBE266:
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1273              		.loc 1 570 0 discriminator 1
 1274 0566 B3FA83F3 		clz	r3, r3
 1275              	.LVL146:
 1276 056a 03F01F03 		and	r3, r3, #31
 1277 056e 05FA03F3 		lsl	r3, r5, r3
 1278 0572 1A42     		tst	r2, r3
 1279 0574 EDD0     		beq	.L72
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Disable the main PLL. */
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Get Start Tick */
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           {
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           }
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 1280              		.loc 1 602 0
 1281 0576 0020     		movs	r0, #0
 1282 0578 47E0     		b	.L10
 1283              	.LVL147:
 1284              	.L64:
 1285              	.LBB268:
 1286              	.LBB269:
 1287              		.loc 2 531 0
 1288 057a 4FF08073 		mov	r3, #16777216
 1289              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1290 057e 93FAA3F3 		rbit r3, r3
 1291              	@ 0 "" 2
 1292              	.LVL148:
 1293              		.thumb
 1294              	.LBE269:
ARM GAS  /tmp/cct7Qvry.s 			page 44


 1295              	.LBE268:
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1296              		.loc 1 581 0
 1297 0582 B3FA83F3 		clz	r3, r3
 1298              	.LVL149:
 1299 0586 03F18453 		add	r3, r3, #276824064
 1300 058a 03F58413 		add	r3, r3, #1081344
 1301 058e 9B00     		lsls	r3, r3, #2
 1302 0590 0022     		movs	r2, #0
 1303 0592 1A60     		str	r2, [r3]
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1304              		.loc 1 584 0
 1305 0594 FFF7FEFF 		bl	HAL_GetTick
 1306              	.LVL150:
 1307 0598 0746     		mov	r7, r0
 1308              	.LVL151:
 1309              	.LBB270:
 1310              	.LBB271:
 1311              		.loc 2 531 0
 1312 059a 4FF00074 		mov	r4, #33554432
 1313              	.LBE271:
 1314              	.LBE270:
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1315              		.loc 1 587 0
 1316 059e 1C4E     		ldr	r6, .L96
 1317 05a0 0125     		movs	r5, #1
 1318              	.LVL152:
 1319 05a2 04E0     		b	.L73
 1320              	.LVL153:
 1321              	.L76:
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1322              		.loc 1 589 0
 1323 05a4 FFF7FEFF 		bl	HAL_GetTick
 1324              	.LVL154:
 1325 05a8 C01B     		subs	r0, r0, r7
 1326 05aa 0228     		cmp	r0, #2
 1327 05ac 2CD8     		bhi	.L93
 1328              	.LVL155:
 1329              	.L73:
 1330              	.LBB273:
 1331              	.LBB272:
 1332              		.loc 2 531 0 discriminator 1
 1333              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1334 05ae 94FAA4F3 		rbit r3, r4
 1335              	@ 0 "" 2
 1336              		.thumb
 1337              	.LBE272:
 1338              	.LBE273:
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1339              		.loc 1 587 0 discriminator 1
 1340 05b2 3268     		ldr	r2, [r6]
 1341              	.LVL156:
 1342              	.LBB274:
 1343              	.LBB275:
 1344              		.loc 2 531 0 discriminator 1
 1345              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1346 05b4 94FAA4F3 		rbit r3, r4
ARM GAS  /tmp/cct7Qvry.s 			page 45


 1347              	@ 0 "" 2
 1348              	.LVL157:
 1349              		.thumb
 1350              	.LBE275:
 1351              	.LBE274:
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1352              		.loc 1 587 0 discriminator 1
 1353 05b8 B3FA83F3 		clz	r3, r3
 1354              	.LVL158:
 1355 05bc 03F01F03 		and	r3, r3, #31
 1356 05c0 05FA03F3 		lsl	r3, r5, r3
 1357 05c4 1A42     		tst	r2, r3
 1358 05c6 EDD1     		bne	.L76
 1359              		.loc 1 602 0
 1360 05c8 0020     		movs	r0, #0
 1361 05ca 1EE0     		b	.L10
 1362              	.LVL159:
 1363              	.L77:
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 1364              		.loc 1 298 0
 1365 05cc 0120     		movs	r0, #1
 1366              	.LVL160:
 1367 05ce 1CE0     		b	.L10
 1368              	.LVL161:
 1369              	.L78:
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1370              		.loc 1 322 0
 1371 05d0 0320     		movs	r0, #3
 1372 05d2 1AE0     		b	.L10
 1373              	.LVL162:
 1374              	.L79:
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1375              		.loc 1 336 0
 1376 05d4 0320     		movs	r0, #3
 1377 05d6 18E0     		b	.L10
 1378              	.LVL163:
 1379              	.L80:
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 1380              		.loc 1 356 0
 1381 05d8 0120     		movs	r0, #1
 1382 05da 16E0     		b	.L10
 1383              	.LVL164:
 1384              	.L81:
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1385              		.loc 1 381 0
 1386 05dc 0320     		movs	r0, #3
 1387 05de 14E0     		b	.L10
 1388              	.LVL165:
 1389              	.L82:
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1390              		.loc 1 401 0
 1391 05e0 0320     		movs	r0, #3
 1392 05e2 12E0     		b	.L10
 1393              	.LVL166:
 1394              	.L83:
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1395              		.loc 1 427 0
ARM GAS  /tmp/cct7Qvry.s 			page 46


 1396 05e4 0320     		movs	r0, #3
 1397 05e6 10E0     		b	.L10
 1398              	.LVL167:
 1399              	.L84:
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1400              		.loc 1 444 0
 1401 05e8 0320     		movs	r0, #3
 1402 05ea 0EE0     		b	.L10
 1403              	.LVL168:
 1404              	.L86:
 1405              	.LBB276:
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1406              		.loc 1 477 0
 1407 05ec 0320     		movs	r0, #3
 1408 05ee 0CE0     		b	.L10
 1409              	.LVL169:
 1410              	.L87:
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1411              		.loc 1 495 0
 1412 05f0 0320     		movs	r0, #3
 1413 05f2 0AE0     		b	.L10
 1414              	.LVL170:
 1415              	.L88:
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 1416              		.loc 1 509 0
 1417 05f4 0320     		movs	r0, #3
 1418 05f6 08E0     		b	.L10
 1419              	.LVL171:
 1420              	.L89:
 1421              	.LBE276:
 1422              		.loc 1 602 0
 1423 05f8 0020     		movs	r0, #0
 1424 05fa 06E0     		b	.L10
 1425              	.L90:
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 1426              		.loc 1 598 0
 1427 05fc 0120     		movs	r0, #1
 1428 05fe 04E0     		b	.L10
 1429              	.LVL172:
 1430              	.L91:
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1431              		.loc 1 549 0
 1432 0600 0320     		movs	r0, #3
 1433 0602 02E0     		b	.L10
 1434              	.LVL173:
 1435              	.L92:
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1436              		.loc 1 574 0
 1437 0604 0320     		movs	r0, #3
 1438 0606 00E0     		b	.L10
 1439              	.LVL174:
 1440              	.L93:
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****             return HAL_TIMEOUT;
 1441              		.loc 1 591 0
 1442 0608 0320     		movs	r0, #3
 1443              	.LVL175:
 1444              	.L10:
ARM GAS  /tmp/cct7Qvry.s 			page 47


 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1445              		.loc 1 603 0
 1446 060a 03B0     		add	sp, sp, #12
 1447              		@ sp needed
 1448 060c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1449              	.L97:
 1450              		.align	2
 1451              	.L96:
 1452 0610 00100240 		.word	1073876992
 1453 0614 00700040 		.word	1073770496
 1454              		.cfi_endproc
 1455              	.LFE124:
 1457              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1458              		.align	2
 1459              		.global	HAL_RCC_MCOConfig
 1460              		.thumb
 1461              		.thumb_func
 1463              	HAL_RCC_MCOConfig:
 1464              	.LFB126:
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         currently used as system clock source.
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HAL status
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     (HCLK) of the device. */
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
ARM GAS  /tmp/cct7Qvry.s 			page 48


 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Get Start Tick */
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
ARM GAS  /tmp/cct7Qvry.s 			page 49


 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         {
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         }
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }      
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {    
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }    
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
ARM GAS  /tmp/cct7Qvry.s 			page 50


 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****  
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @}
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @verbatim   
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   ===============================================================================  
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     [..]
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     frequencies.
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   @endverbatim
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @{
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_MCOPRE)
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System Clock selected as MCO clock
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK      PLLCLK selected as MCO clock
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1   no division applied to MCO clock
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_2   division by 2 applied to MCO clock
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_4   division by 4 applied to MCO clock
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_8   division by 8 applied to MCO clock
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_16  division by 16 applied to MCO clock
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_32  division by 32 applied to MCO clock
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_64  division by 64 applied to MCO clock
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_128 division by 128 applied to MCO clock
ARM GAS  /tmp/cct7Qvry.s 			page 51


 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSI         LSI selected as MCO clock
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_LSE         LSE selected as MCO clock
 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK_DIV2 PLLCLK Divided by 2 selected as MCO clock
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1465              		.loc 1 838 0
 1466              		.cfi_startproc
 1467              		@ args = 0, pretend = 0, frame = 24
 1468              		@ frame_needed = 0, uses_anonymous_args = 0
 1469              	.LVL176:
 1470 0000 70B5     		push	{r4, r5, r6, lr}
 1471              	.LCFI2:
 1472              		.cfi_def_cfa_offset 16
 1473              		.cfi_offset 4, -16
 1474              		.cfi_offset 5, -12
 1475              		.cfi_offset 6, -8
 1476              		.cfi_offset 14, -4
 1477 0002 86B0     		sub	sp, sp, #24
 1478              	.LCFI3:
 1479              		.cfi_def_cfa_offset 40
 1480 0004 0E46     		mov	r6, r1
 1481 0006 1546     		mov	r5, r2
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0};
 1482              		.loc 1 839 0
 1483 0008 0023     		movs	r3, #0
 1484 000a 0393     		str	r3, [sp, #12]
 1485 000c 0593     		str	r3, [sp, #20]
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1486              		.loc 1 847 0
ARM GAS  /tmp/cct7Qvry.s 			page 52


 1487 000e 0223     		movs	r3, #2
 1488 0010 0293     		str	r3, [sp, #8]
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1489              		.loc 1 848 0
 1490 0012 0323     		movs	r3, #3
 1491 0014 0493     		str	r3, [sp, #16]
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1492              		.loc 1 850 0
 1493 0016 4FF48073 		mov	r3, #256
 1494 001a 0193     		str	r3, [sp, #4]
 1495              	.LBB277:
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   gpio.Alternate = GPIO_AF0_MCO;
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1496              		.loc 1 854 0
 1497 001c 0B4C     		ldr	r4, .L99
 1498 001e 6369     		ldr	r3, [r4, #20]
 1499 0020 43F40033 		orr	r3, r3, #131072
 1500 0024 6361     		str	r3, [r4, #20]
 1501 0026 6369     		ldr	r3, [r4, #20]
 1502 0028 03F40033 		and	r3, r3, #131072
 1503 002c 0093     		str	r3, [sp]
 1504 002e 009B     		ldr	r3, [sp]
 1505              	.LBE277:
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1506              		.loc 1 856 0
 1507 0030 4FF09040 		mov	r0, #1207959552
 1508              	.LVL177:
 1509 0034 01A9     		add	r1, sp, #4
 1510              	.LVL178:
 1511 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 1512              	.LVL179:
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Configure the MCO clock source */
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1513              		.loc 1 859 0
 1514 003a 6368     		ldr	r3, [r4, #4]
 1515 003c 23F0EE43 		bic	r3, r3, #1996488704
 1516 0040 2E43     		orrs	r6, r6, r5
 1517              	.LVL180:
 1518 0042 43EA0605 		orr	r5, r3, r6
 1519              	.LVL181:
 1520 0046 6560     		str	r5, [r4, #4]
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1521              		.loc 1 860 0
 1522 0048 06B0     		add	sp, sp, #24
 1523              		@ sp needed
 1524 004a 70BD     		pop	{r4, r5, r6, pc}
 1525              	.L100:
 1526              		.align	2
 1527              	.L99:
 1528 004c 00100240 		.word	1073876992
 1529              		.cfi_endproc
 1530              	.LFE126:
ARM GAS  /tmp/cct7Qvry.s 			page 53


 1532              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1533              		.align	2
 1534              		.global	HAL_RCC_EnableCSS
 1535              		.thumb
 1536              		.thumb_func
 1538              	HAL_RCC_EnableCSS:
 1539              	.LFB127:
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         the Cortex-M4 NMI (Non-Maskable Interrupt) exception vector.  
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1540              		.loc 1 872 0
 1541              		.cfi_startproc
 1542              		@ args = 0, pretend = 0, frame = 0
 1543              		@ frame_needed = 0, uses_anonymous_args = 0
 1544              		@ link register save eliminated.
 1545              	.LVL182:
 1546              	.LBB278:
 1547              	.LBB279:
 1548              		.loc 2 531 0
 1549 0000 4FF40023 		mov	r3, #524288
 1550              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1551 0004 93FAA3F3 		rbit r3, r3
 1552              	@ 0 "" 2
 1553              	.LVL183:
 1554              		.thumb
 1555              	.LBE279:
 1556              	.LBE278:
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1557              		.loc 1 873 0
 1558 0008 B3FA83F3 		clz	r3, r3
 1559              	.LVL184:
 1560 000c 03F18453 		add	r3, r3, #276824064
 1561 0010 03F58413 		add	r3, r3, #1081344
 1562 0014 9B00     		lsls	r3, r3, #2
 1563 0016 0122     		movs	r2, #1
 1564 0018 1A60     		str	r2, [r3]
 1565 001a 7047     		bx	lr
 1566              		.cfi_endproc
 1567              	.LFE127:
 1569              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1570              		.align	2
 1571              		.global	HAL_RCC_DisableCSS
 1572              		.thumb
 1573              		.thumb_func
 1575              	HAL_RCC_DisableCSS:
 1576              	.LFB128:
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
ARM GAS  /tmp/cct7Qvry.s 			page 54


 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1577              		.loc 1 881 0
 1578              		.cfi_startproc
 1579              		@ args = 0, pretend = 0, frame = 0
 1580              		@ frame_needed = 0, uses_anonymous_args = 0
 1581              		@ link register save eliminated.
 1582              	.LVL185:
 1583              	.LBB280:
 1584              	.LBB281:
 1585              		.loc 2 531 0
 1586 0000 4FF40023 		mov	r3, #524288
 1587              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1588 0004 93FAA3F3 		rbit r3, r3
 1589              	@ 0 "" 2
 1590              	.LVL186:
 1591              		.thumb
 1592              	.LBE281:
 1593              	.LBE280:
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1594              		.loc 1 882 0
 1595 0008 B3FA83F3 		clz	r3, r3
 1596              	.LVL187:
 1597 000c 03F18453 		add	r3, r3, #276824064
 1598 0010 03F58413 		add	r3, r3, #1081344
 1599 0014 9B00     		lsls	r3, r3, #2
 1600 0016 0022     		movs	r2, #0
 1601 0018 1A60     		str	r2, [r3]
 1602 001a 7047     		bx	lr
 1603              		.cfi_endproc
 1604              	.LFE128:
 1606              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1607              		.align	2
 1608              		.global	HAL_RCC_GetSysClockFreq
 1609              		.thumb
 1610              		.thumb_func
 1612              	HAL_RCC_GetSysClockFreq:
 1613              	.LFB129:
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         constant and the selected clock source:
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *               in voltage and temperature.
ARM GAS  /tmp/cct7Qvry.s 			page 55


 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f3xx_hal_conf.h file (default value
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                have wrong result.
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *                  
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         value for HSE crystal.
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *           
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval SYSCLK frequency
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 1614              		.loc 1 915 0
 1615              		.cfi_startproc
 1616              		@ args = 0, pretend = 0, frame = 0
 1617              		@ frame_needed = 0, uses_anonymous_args = 0
 1618              		@ link register save eliminated.
 1619              	.LVL188:
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1620              		.loc 1 919 0
 1621 0000 164B     		ldr	r3, .L110
 1622 0002 5B68     		ldr	r3, [r3, #4]
 1623              	.LVL189:
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1624              		.loc 1 922 0
 1625 0004 03F00C02 		and	r2, r3, #12
 1626 0008 082A     		cmp	r2, #8
 1627 000a 25D1     		bne	.L109
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> POSITION_VAL(RCC_CFGR_PLL
 1628              		.loc 1 931 0
 1629 000c 03F47011 		and	r1, r3, #3932160
 1630              	.LVL190:
 1631              	.LBB282:
 1632              	.LBB283:
 1633              		.loc 2 531 0
 1634 0010 4FF47012 		mov	r2, #3932160
 1635              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1636 0014 92FAA2F2 		rbit r2, r2
ARM GAS  /tmp/cct7Qvry.s 			page 56


 1637              	@ 0 "" 2
 1638              	.LVL191:
 1639              		.thumb
 1640              	.LBE283:
 1641              	.LBE282:
 1642              		.loc 1 931 0
 1643 0018 B2FA82F2 		clz	r2, r2
 1644              	.LVL192:
 1645 001c 21FA02F2 		lsr	r2, r1, r2
 1646 0020 0F49     		ldr	r1, .L110+4
 1647 0022 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1648              	.LVL193:
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV) >> POSITION_VAL(RCC_CFG
 1649              		.loc 1 932 0
 1650 0024 0D49     		ldr	r1, .L110
 1651 0026 C86A     		ldr	r0, [r1, #44]
 1652 0028 00F00F00 		and	r0, r0, #15
 1653              	.LVL194:
 1654              	.LBB284:
 1655              	.LBB285:
 1656              		.loc 2 531 0
 1657 002c 0F21     		movs	r1, #15
 1658              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1659 002e 91FAA1F1 		rbit r1, r1
 1660              	@ 0 "" 2
 1661              	.LVL195:
 1662              		.thumb
 1663              	.LBE285:
 1664              	.LBE284:
 1665              		.loc 1 932 0
 1666 0032 B1FA81F1 		clz	r1, r1
 1667              	.LVL196:
 1668 0036 20FA01F1 		lsr	r1, r0, r1
 1669 003a 0A48     		ldr	r0, .L110+8
 1670 003c 415C     		ldrb	r1, [r0, r1]	@ zero_extendqisi2
 1671              	.LVL197:
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI)
 1672              		.loc 1 934 0
 1673 003e 13F4803F 		tst	r3, #65536
 1674 0042 05D0     		beq	.L106
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 1675              		.loc 1 937 0
 1676 0044 0848     		ldr	r0, .L110+12
 1677 0046 B0FBF1F0 		udiv	r0, r0, r1
 1678 004a 02FB00F0 		mul	r0, r2, r0
 1679              	.LVL198:
 1680 004e 7047     		bx	lr
 1681              	.LVL199:
 1682              	.L106:
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE >> 1U) * pllmul;
ARM GAS  /tmp/cct7Qvry.s 			page 57


 1683              		.loc 1 942 0
 1684 0050 0648     		ldr	r0, .L110+16
 1685 0052 00FB02F0 		mul	r0, r0, r2
 1686              	.LVL200:
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #else
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC_HSE_PREDIV) == RCC_CFGR_PLLSRC_HSE_PREDIV)
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV * PLLMUL */
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSE_VALUE / prediv) * pllmul;
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       else
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       {
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/PREDIV * PLLMUL */
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         pllclk = (HSI_VALUE / prediv) * pllmul;
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       }
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_DIV2 */
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = pllclk;
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 1687              		.loc 1 957 0
 1688 0056 7047     		bx	lr
 1689              	.LVL201:
 1690              	.L109:
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 1691              		.loc 1 926 0
 1692 0058 0348     		ldr	r0, .L110+12
 1693              	.LVL202:
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     default: /* HSI used as system clock */
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     {
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       break;
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     }
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return sysclockfreq;
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 1694              		.loc 1 967 0
 1695 005a 7047     		bx	lr
 1696              	.L111:
 1697              		.align	2
 1698              	.L110:
 1699 005c 00100240 		.word	1073876992
 1700 0060 00000000 		.word	.LANCHOR0
 1701 0064 00000000 		.word	.LANCHOR1
 1702 0068 00127A00 		.word	8000000
 1703 006c 00093D00 		.word	4000000
 1704              		.cfi_endproc
 1705              	.LFE129:
 1707              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1708              		.align	2
 1709              		.global	HAL_RCC_ClockConfig
 1710              		.thumb
 1711              		.thumb_func
 1713              	HAL_RCC_ClockConfig:
 1714              	.LFB125:
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
ARM GAS  /tmp/cct7Qvry.s 			page 58


 1715              		.loc 1 629 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 0, uses_anonymous_args = 0
 1719              	.LVL203:
 1720 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1721              	.LCFI4:
 1722              		.cfi_def_cfa_offset 24
 1723              		.cfi_offset 4, -24
 1724              		.cfi_offset 5, -20
 1725              		.cfi_offset 6, -16
 1726              		.cfi_offset 7, -12
 1727              		.cfi_offset 8, -8
 1728              		.cfi_offset 14, -4
 1729 0004 0446     		mov	r4, r0
 1730 0006 0D46     		mov	r5, r1
 1731              	.LVL204:
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 1732              		.loc 1 642 0
 1733 0008 794B     		ldr	r3, .L149
 1734 000a 1B68     		ldr	r3, [r3]
 1735 000c 03F00703 		and	r3, r3, #7
 1736 0010 8B42     		cmp	r3, r1
 1737 0012 0BD2     		bcs	.L113
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1738              		.loc 1 645 0
 1739 0014 764B     		ldr	r3, .L149
 1740 0016 1A68     		ldr	r2, [r3]
 1741 0018 22F00702 		bic	r2, r2, #7
 1742 001c 0A43     		orrs	r2, r2, r1
 1743 001e 1A60     		str	r2, [r3]
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1744              		.loc 1 649 0
 1745 0020 1B68     		ldr	r3, [r3]
 1746 0022 03F00703 		and	r3, r3, #7
 1747 0026 8B42     		cmp	r3, r1
 1748 0028 40F0C980 		bne	.L136
 1749              	.L113:
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 1750              		.loc 1 656 0
 1751 002c 2368     		ldr	r3, [r4]
 1752 002e 13F0020F 		tst	r3, #2
 1753 0032 06D0     		beq	.L115
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 1754              		.loc 1 659 0
 1755 0034 6F4B     		ldr	r3, .L149+4
 1756 0036 5968     		ldr	r1, [r3, #4]
 1757              	.LVL205:
 1758 0038 21F0F001 		bic	r1, r1, #240
 1759 003c A268     		ldr	r2, [r4, #8]
 1760 003e 0A43     		orrs	r2, r2, r1
 1761 0040 5A60     		str	r2, [r3, #4]
 1762              	.L115:
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 1763              		.loc 1 663 0
 1764 0042 2368     		ldr	r3, [r4]
 1765 0044 13F0010F 		tst	r3, #1
ARM GAS  /tmp/cct7Qvry.s 			page 59


 1766 0048 79D0     		beq	.L116
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1767              		.loc 1 668 0
 1768 004a 6368     		ldr	r3, [r4, #4]
 1769 004c 012B     		cmp	r3, #1
 1770 004e 13D1     		bne	.L117
 1771              	.LVL206:
 1772              	.LBB286:
 1773              	.LBB287:
 1774              		.loc 2 531 0
 1775 0050 4FF40032 		mov	r2, #131072
 1776              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1777 0054 92FAA2F2 		rbit r2, r2
 1778              	@ 0 "" 2
 1779              		.thumb
 1780              	.LBE287:
 1781              	.LBE286:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1782              		.loc 1 671 0
 1783 0058 664A     		ldr	r2, .L149+4
 1784 005a 1168     		ldr	r1, [r2]
 1785              	.LVL207:
 1786              	.LBB288:
 1787              	.LBB289:
 1788              		.loc 2 531 0
 1789 005c 4FF40032 		mov	r2, #131072
 1790              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1791 0060 92FAA2F2 		rbit r2, r2
 1792              	@ 0 "" 2
 1793              	.LVL208:
 1794              		.thumb
 1795              	.LBE289:
 1796              	.LBE288:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 1797              		.loc 1 671 0
 1798 0064 B2FA82F2 		clz	r2, r2
 1799              	.LVL209:
 1800 0068 02F01F02 		and	r2, r2, #31
 1801 006c 0120     		movs	r0, #1
 1802              	.LVL210:
 1803 006e 00FA02F2 		lsl	r2, r0, r2
 1804 0072 1142     		tst	r1, r2
 1805 0074 28D1     		bne	.L120
 1806 0076 A5E0     		b	.L137
 1807              	.LVL211:
 1808              	.L117:
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1809              		.loc 1 677 0
 1810 0078 022B     		cmp	r3, #2
 1811 007a 13D1     		bne	.L121
 1812              	.LVL212:
 1813              	.LBB290:
 1814              	.LBB291:
 1815              		.loc 2 531 0
 1816 007c 4FF00072 		mov	r2, #33554432
 1817              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1818 0080 92FAA2F2 		rbit r2, r2
ARM GAS  /tmp/cct7Qvry.s 			page 60


 1819              	@ 0 "" 2
 1820              		.thumb
 1821              	.LBE291:
 1822              	.LBE290:
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1823              		.loc 1 680 0
 1824 0084 5B4A     		ldr	r2, .L149+4
 1825 0086 1168     		ldr	r1, [r2]
 1826              	.LVL213:
 1827              	.LBB292:
 1828              	.LBB293:
 1829              		.loc 2 531 0
 1830 0088 4FF00072 		mov	r2, #33554432
 1831              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1832 008c 92FAA2F2 		rbit r2, r2
 1833              	@ 0 "" 2
 1834              	.LVL214:
 1835              		.thumb
 1836              	.LBE293:
 1837              	.LBE292:
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 1838              		.loc 1 680 0
 1839 0090 B2FA82F2 		clz	r2, r2
 1840              	.LVL215:
 1841 0094 02F01F02 		and	r2, r2, #31
 1842 0098 0120     		movs	r0, #1
 1843              	.LVL216:
 1844 009a 00FA02F2 		lsl	r2, r0, r2
 1845 009e 1142     		tst	r1, r2
 1846 00a0 12D1     		bne	.L120
 1847 00a2 92E0     		b	.L138
 1848              	.LVL217:
 1849              	.L121:
 1850              	.LBB294:
 1851              	.LBB295:
 1852              		.loc 2 531 0
 1853 00a4 0222     		movs	r2, #2
 1854              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1855 00a6 92FAA2F2 		rbit r2, r2
 1856              	@ 0 "" 2
 1857              		.thumb
 1858              	.LBE295:
 1859              	.LBE294:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1860              		.loc 1 689 0
 1861 00aa 524A     		ldr	r2, .L149+4
 1862 00ac 1168     		ldr	r1, [r2]
 1863              	.LVL218:
 1864              	.LBB296:
 1865              	.LBB297:
 1866              		.loc 2 531 0
 1867 00ae 0222     		movs	r2, #2
 1868              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1869 00b0 92FAA2F2 		rbit r2, r2
 1870              	@ 0 "" 2
 1871              	.LVL219:
 1872              		.thumb
ARM GAS  /tmp/cct7Qvry.s 			page 61


 1873              	.LBE297:
 1874              	.LBE296:
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 1875              		.loc 1 689 0
 1876 00b4 B2FA82F2 		clz	r2, r2
 1877              	.LVL220:
 1878 00b8 02F01F02 		and	r2, r2, #31
 1879 00bc 0120     		movs	r0, #1
 1880              	.LVL221:
 1881 00be 00FA02F2 		lsl	r2, r0, r2
 1882 00c2 1142     		tst	r1, r2
 1883 00c4 00F08480 		beq	.L139
 1884              	.LVL222:
 1885              	.L120:
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 1886              		.loc 1 694 0
 1887 00c8 4A4A     		ldr	r2, .L149+4
 1888 00ca 5168     		ldr	r1, [r2, #4]
 1889 00cc 21F00301 		bic	r1, r1, #3
 1890 00d0 0B43     		orrs	r3, r3, r1
 1891 00d2 5360     		str	r3, [r2, #4]
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 1892              		.loc 1 697 0
 1893 00d4 FFF7FEFF 		bl	HAL_GetTick
 1894              	.LVL223:
 1895 00d8 0646     		mov	r6, r0
 1896              	.LVL224:
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 1897              		.loc 1 699 0
 1898 00da 6368     		ldr	r3, [r4, #4]
 1899 00dc 012B     		cmp	r3, #1
 1900 00de 0FD1     		bne	.L144
 1901 00e0 05E0     		b	.L126
 1902              	.LVL225:
 1903              	.L128:
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1904              		.loc 1 703 0
 1905 00e2 FFF7FEFF 		bl	HAL_GetTick
 1906              	.LVL226:
 1907 00e6 801B     		subs	r0, r0, r6
 1908 00e8 4045     		cmp	r0, r8
 1909 00ea 03D9     		bls	.L145
 1910 00ec 73E0     		b	.L140
 1911              	.LVL227:
 1912              	.L126:
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1913              		.loc 1 701 0 discriminator 1
 1914 00ee 414F     		ldr	r7, .L149+4
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1915              		.loc 1 703 0 discriminator 1
 1916 00f0 41F28838 		movw	r8, #5000
 1917              	.LVL228:
 1918              	.L145:
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 1919              		.loc 1 701 0 discriminator 1
 1920 00f4 7B68     		ldr	r3, [r7, #4]
 1921 00f6 03F00C03 		and	r3, r3, #12
ARM GAS  /tmp/cct7Qvry.s 			page 62


 1922 00fa 042B     		cmp	r3, #4
 1923 00fc F1D1     		bne	.L128
 1924 00fe 1EE0     		b	.L116
 1925              	.LVL229:
 1926              	.L144:
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 1927              		.loc 1 709 0
 1928 0100 022B     		cmp	r3, #2
 1929 0102 15D1     		bne	.L146
 1930 0104 05E0     		b	.L129
 1931              	.LVL230:
 1932              	.L131:
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1933              		.loc 1 713 0
 1934 0106 FFF7FEFF 		bl	HAL_GetTick
 1935              	.LVL231:
 1936 010a 801B     		subs	r0, r0, r6
 1937 010c 4045     		cmp	r0, r8
 1938 010e 03D9     		bls	.L147
 1939 0110 64E0     		b	.L141
 1940              	.LVL232:
 1941              	.L129:
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1942              		.loc 1 711 0 discriminator 1
 1943 0112 384F     		ldr	r7, .L149+4
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1944              		.loc 1 713 0 discriminator 1
 1945 0114 41F28838 		movw	r8, #5000
 1946              	.LVL233:
 1947              	.L147:
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1948              		.loc 1 711 0 discriminator 1
 1949 0118 7B68     		ldr	r3, [r7, #4]
 1950 011a 03F00C03 		and	r3, r3, #12
 1951 011e 082B     		cmp	r3, #8
 1952 0120 F1D1     		bne	.L131
 1953 0122 0CE0     		b	.L116
 1954              	.L132:
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1955              		.loc 1 723 0
 1956 0124 FFF7FEFF 		bl	HAL_GetTick
 1957              	.LVL234:
 1958 0128 801B     		subs	r0, r0, r6
 1959 012a 4045     		cmp	r0, r8
 1960 012c 03D9     		bls	.L148
 1961 012e 58E0     		b	.L142
 1962              	.LVL235:
 1963              	.L146:
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 1964              		.loc 1 721 0 discriminator 1
 1965 0130 304F     		ldr	r7, .L149+4
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 1966              		.loc 1 723 0 discriminator 1
 1967 0132 41F28838 		movw	r8, #5000
 1968              	.LVL236:
 1969              	.L148:
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
ARM GAS  /tmp/cct7Qvry.s 			page 63


 1970              		.loc 1 721 0 discriminator 1
 1971 0136 7B68     		ldr	r3, [r7, #4]
 1972 0138 13F00C0F 		tst	r3, #12
 1973 013c F2D1     		bne	.L132
 1974              	.LVL237:
 1975              	.L116:
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 1976              		.loc 1 731 0
 1977 013e 2C4B     		ldr	r3, .L149
 1978 0140 1B68     		ldr	r3, [r3]
 1979 0142 03F00703 		and	r3, r3, #7
 1980 0146 AB42     		cmp	r3, r5
 1981 0148 0AD9     		bls	.L133
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 1982              		.loc 1 734 0
 1983 014a 294B     		ldr	r3, .L149
 1984 014c 1A68     		ldr	r2, [r3]
 1985 014e 22F00702 		bic	r2, r2, #7
 1986 0152 2A43     		orrs	r2, r2, r5
 1987 0154 1A60     		str	r2, [r3]
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 1988              		.loc 1 738 0
 1989 0156 1B68     		ldr	r3, [r3]
 1990 0158 03F00703 		and	r3, r3, #7
 1991 015c AB42     		cmp	r3, r5
 1992 015e 43D1     		bne	.L143
 1993              	.L133:
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 1994              		.loc 1 745 0
 1995 0160 2368     		ldr	r3, [r4]
 1996 0162 13F0040F 		tst	r3, #4
 1997 0166 06D0     		beq	.L134
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 1998              		.loc 1 748 0
 1999 0168 224B     		ldr	r3, .L149+4
 2000 016a 5968     		ldr	r1, [r3, #4]
 2001 016c 21F4E061 		bic	r1, r1, #1792
 2002 0170 E268     		ldr	r2, [r4, #12]
 2003 0172 0A43     		orrs	r2, r2, r1
 2004 0174 5A60     		str	r2, [r3, #4]
 2005              	.L134:
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 2006              		.loc 1 752 0
 2007 0176 2368     		ldr	r3, [r4]
 2008 0178 13F0080F 		tst	r3, #8
 2009 017c 07D0     		beq	.L135
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 2010              		.loc 1 755 0
 2011 017e 1D4B     		ldr	r3, .L149+4
 2012 0180 5A68     		ldr	r2, [r3, #4]
 2013 0182 22F46052 		bic	r2, r2, #14336
 2014 0186 2169     		ldr	r1, [r4, #16]
 2015 0188 42EAC102 		orr	r2, r2, r1, lsl #3
 2016 018c 5A60     		str	r2, [r3, #4]
 2017              	.L135:
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 2018              		.loc 1 759 0
ARM GAS  /tmp/cct7Qvry.s 			page 64


 2019 018e FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 2020              	.LVL238:
 2021 0192 184B     		ldr	r3, .L149+4
 2022 0194 5A68     		ldr	r2, [r3, #4]
 2023 0196 02F0F002 		and	r2, r2, #240
 2024              	.LVL239:
 2025              	.LBB298:
 2026              	.LBB299:
 2027              		.loc 2 531 0
 2028 019a F023     		movs	r3, #240
 2029              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2030 019c 93FAA3F3 		rbit r3, r3
 2031              	@ 0 "" 2
 2032              	.LVL240:
 2033              		.thumb
 2034              	.LBE299:
 2035              	.LBE298:
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 2036              		.loc 1 759 0
 2037 01a0 B3FA83F3 		clz	r3, r3
 2038              	.LVL241:
 2039 01a4 22FA03F3 		lsr	r3, r2, r3
 2040 01a8 134A     		ldr	r2, .L149+8
 2041 01aa D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2042 01ac D840     		lsrs	r0, r0, r3
 2043 01ae 134B     		ldr	r3, .L149+12
 2044 01b0 1860     		str	r0, [r3]
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 2045              		.loc 1 762 0
 2046 01b2 0020     		movs	r0, #0
 2047 01b4 FFF7FEFF 		bl	HAL_InitTick
 2048              	.LVL242:
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return HAL_OK;
 2049              		.loc 1 764 0
 2050 01b8 0020     		movs	r0, #0
 2051 01ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2052              	.LVL243:
 2053              	.L136:
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 2054              		.loc 1 651 0
 2055 01be 0120     		movs	r0, #1
 2056              	.LVL244:
 2057 01c0 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2058              	.LVL245:
 2059              	.L137:
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2060              		.loc 1 673 0
 2061 01c4 0120     		movs	r0, #1
 2062 01c6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2063              	.LVL246:
 2064              	.L138:
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2065              		.loc 1 682 0
 2066 01ca 0120     		movs	r0, #1
 2067 01cc BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2068              	.LVL247:
 2069              	.L139:
ARM GAS  /tmp/cct7Qvry.s 			page 65


 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****         return HAL_ERROR;
 2070              		.loc 1 691 0
 2071 01d0 0120     		movs	r0, #1
 2072 01d2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2073              	.LVL248:
 2074              	.L140:
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 2075              		.loc 1 705 0
 2076 01d6 0320     		movs	r0, #3
 2077 01d8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2078              	.LVL249:
 2079              	.L141:
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 2080              		.loc 1 715 0
 2081 01dc 0320     		movs	r0, #3
 2082 01de BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2083              	.LVL250:
 2084              	.L142:
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****           return HAL_TIMEOUT;
 2085              		.loc 1 725 0
 2086 01e2 0320     		movs	r0, #3
 2087 01e4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2088              	.LVL251:
 2089              	.L143:
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****       return HAL_ERROR;
 2090              		.loc 1 740 0
 2091 01e8 0120     		movs	r0, #1
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2092              		.loc 1 765 0
 2093 01ea BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2094              	.LVL252:
 2095              	.L150:
 2096 01ee 00BF     		.align	2
 2097              	.L149:
 2098 01f0 00200240 		.word	1073881088
 2099 01f4 00100240 		.word	1073876992
 2100 01f8 00000000 		.word	AHBPrescTable
 2101 01fc 00000000 		.word	SystemCoreClock
 2102              		.cfi_endproc
 2103              	.LFE125:
 2105              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2106              		.align	2
 2107              		.global	HAL_RCC_GetHCLKFreq
 2108              		.thumb
 2109              		.thumb_func
 2111              	HAL_RCC_GetHCLKFreq:
 2112              	.LFB130:
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * 
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         and updated within this function
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval HCLK frequency
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
ARM GAS  /tmp/cct7Qvry.s 			page 66


 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2113              		.loc 1 979 0
 2114              		.cfi_startproc
 2115              		@ args = 0, pretend = 0, frame = 0
 2116              		@ frame_needed = 0, uses_anonymous_args = 0
 2117              		@ link register save eliminated.
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return SystemCoreClock;
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
 2118              		.loc 1 981 0
 2119 0000 014B     		ldr	r3, .L152
 2120 0002 1868     		ldr	r0, [r3]
 2121 0004 7047     		bx	lr
 2122              	.L153:
 2123 0006 00BF     		.align	2
 2124              	.L152:
 2125 0008 00000000 		.word	SystemCoreClock
 2126              		.cfi_endproc
 2127              	.LFE130:
 2129              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 2130              		.align	2
 2131              		.global	HAL_RCC_GetPCLK1Freq
 2132              		.thumb
 2133              		.thumb_func
 2135              	HAL_RCC_GetPCLK1Freq:
 2136              	.LFB131:
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK1 frequency
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2137              		.loc 1 990 0
 2138              		.cfi_startproc
 2139              		@ args = 0, pretend = 0, frame = 0
 2140              		@ frame_needed = 0, uses_anonymous_args = 0
 2141 0000 08B5     		push	{r3, lr}
 2142              	.LCFI5:
 2143              		.cfi_def_cfa_offset 8
 2144              		.cfi_offset 3, -8
 2145              		.cfi_offset 14, -4
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2146              		.loc 1 992 0
 2147 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2148              	.LVL253:
 2149 0006 084B     		ldr	r3, .L155
 2150 0008 5A68     		ldr	r2, [r3, #4]
 2151 000a 02F4E062 		and	r2, r2, #1792
 2152              	.LVL254:
 2153              	.LBB300:
 2154              	.LBB301:
 2155              		.loc 2 531 0
 2156 000e 4FF4E063 		mov	r3, #1792
ARM GAS  /tmp/cct7Qvry.s 			page 67


 2157              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2158 0012 93FAA3F3 		rbit r3, r3
 2159              	@ 0 "" 2
 2160              	.LVL255:
 2161              		.thumb
 2162              	.LBE301:
 2163              	.LBE300:
 2164              		.loc 1 992 0
 2165 0016 B3FA83F3 		clz	r3, r3
 2166              	.LVL256:
 2167 001a 22FA03F3 		lsr	r3, r2, r3
 2168 001e 034A     		ldr	r2, .L155+4
 2169 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }    
 2170              		.loc 1 993 0
 2171 0022 D840     		lsrs	r0, r0, r3
 2172 0024 08BD     		pop	{r3, pc}
 2173              	.L156:
 2174 0026 00BF     		.align	2
 2175              	.L155:
 2176 0028 00100240 		.word	1073876992
 2177 002c 00000000 		.word	APBPrescTable
 2178              		.cfi_endproc
 2179              	.LFE131:
 2181              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2182              		.align	2
 2183              		.global	HAL_RCC_GetPCLK2Freq
 2184              		.thumb
 2185              		.thumb_func
 2187              	HAL_RCC_GetPCLK2Freq:
 2188              	.LFB132:
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval PCLK2 frequency
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2189              		.loc 1 1002 0
 2190              		.cfi_startproc
 2191              		@ args = 0, pretend = 0, frame = 0
 2192              		@ frame_needed = 0, uses_anonymous_args = 0
 2193 0000 08B5     		push	{r3, lr}
 2194              	.LCFI6:
 2195              		.cfi_def_cfa_offset 8
 2196              		.cfi_offset 3, -8
 2197              		.cfi_offset 14, -4
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2198              		.loc 1 1004 0
 2199 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2200              	.LVL257:
 2201 0006 084B     		ldr	r3, .L158
 2202 0008 5A68     		ldr	r2, [r3, #4]
 2203 000a 02F46052 		and	r2, r2, #14336
ARM GAS  /tmp/cct7Qvry.s 			page 68


 2204              	.LVL258:
 2205              	.LBB302:
 2206              	.LBB303:
 2207              		.loc 2 531 0
 2208 000e 4FF46053 		mov	r3, #14336
 2209              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2210 0012 93FAA3F3 		rbit r3, r3
 2211              	@ 0 "" 2
 2212              	.LVL259:
 2213              		.thumb
 2214              	.LBE303:
 2215              	.LBE302:
 2216              		.loc 1 1004 0
 2217 0016 B3FA83F3 		clz	r3, r3
 2218              	.LVL260:
 2219 001a 22FA03F3 		lsr	r3, r2, r3
 2220 001e 034A     		ldr	r2, .L158+4
 2221 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** } 
 2222              		.loc 1 1005 0
 2223 0022 D840     		lsrs	r0, r0, r3
 2224 0024 08BD     		pop	{r3, pc}
 2225              	.L159:
 2226 0026 00BF     		.align	2
 2227              	.L158:
 2228 0028 00100240 		.word	1073876992
 2229 002c 00000000 		.word	APBPrescTable
 2230              		.cfi_endproc
 2231              	.LFE132:
 2233              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2234              		.align	2
 2235              		.global	HAL_RCC_GetOscConfig
 2236              		.thumb
 2237              		.thumb_func
 2239              	HAL_RCC_GetOscConfig:
 2240              	.LFB133:
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * will be configured.
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2241              		.loc 1 1015 0
 2242              		.cfi_startproc
 2243              		@ args = 0, pretend = 0, frame = 0
 2244              		@ frame_needed = 0, uses_anonymous_args = 0
 2245              		@ link register save eliminated.
 2246              	.LVL261:
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
ARM GAS  /tmp/cct7Qvry.s 			page 69


 2247              		.loc 1 1020 0
 2248 0000 0F23     		movs	r3, #15
 2249 0002 0360     		str	r3, [r0]
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2250              		.loc 1 1025 0
 2251 0004 2E4B     		ldr	r3, .L173
 2252 0006 1B68     		ldr	r3, [r3]
 2253 0008 13F4802F 		tst	r3, #262144
 2254 000c 03D0     		beq	.L161
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2255              		.loc 1 1027 0
 2256 000e 4FF4A023 		mov	r3, #327680
 2257 0012 4360     		str	r3, [r0, #4]
 2258 0014 0AE0     		b	.L162
 2259              	.L161:
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2260              		.loc 1 1029 0
 2261 0016 2A4B     		ldr	r3, .L173
 2262 0018 1B68     		ldr	r3, [r3]
 2263 001a 13F4803F 		tst	r3, #65536
 2264 001e 03D0     		beq	.L163
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2265              		.loc 1 1031 0
 2266 0020 4FF48033 		mov	r3, #65536
 2267 0024 4360     		str	r3, [r0, #4]
 2268 0026 01E0     		b	.L162
 2269              	.L163:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2270              		.loc 1 1035 0
 2271 0028 0023     		movs	r3, #0
 2272 002a 4360     		str	r3, [r0, #4]
 2273              	.L162:
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_DIV2)
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 2274              		.loc 1 1038 0
 2275 002c 244B     		ldr	r3, .L173
 2276 002e DA6A     		ldr	r2, [r3, #44]
 2277 0030 02F00F02 		and	r2, r2, #15
 2278 0034 8260     		str	r2, [r0, #8]
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2279              		.loc 1 1042 0
 2280 0036 1B68     		ldr	r3, [r3]
 2281 0038 13F0010F 		tst	r3, #1
ARM GAS  /tmp/cct7Qvry.s 			page 70


 2282 003c 02D0     		beq	.L164
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2283              		.loc 1 1044 0
 2284 003e 0123     		movs	r3, #1
 2285 0040 0361     		str	r3, [r0, #16]
 2286 0042 01E0     		b	.L165
 2287              	.L164:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2288              		.loc 1 1048 0
 2289 0044 0023     		movs	r3, #0
 2290 0046 0361     		str	r3, [r0, #16]
 2291              	.L165:
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2292              		.loc 1 1051 0
 2293 0048 1D4B     		ldr	r3, .L173
 2294 004a 1968     		ldr	r1, [r3]
 2295 004c 01F0F801 		and	r1, r1, #248
 2296              	.LVL262:
 2297              	.LBB304:
 2298              	.LBB305:
 2299              		.loc 2 531 0
 2300 0050 F822     		movs	r2, #248
 2301              	@ 531 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2302 0052 92FAA2F2 		rbit r2, r2
 2303              	@ 0 "" 2
 2304              	.LVL263:
 2305              		.thumb
 2306              	.LBE305:
 2307              	.LBE304:
 2308              		.loc 1 1051 0
 2309 0056 B2FA82F2 		clz	r2, r2
 2310              	.LVL264:
 2311 005a 21FA02F2 		lsr	r2, r1, r2
 2312 005e 4261     		str	r2, [r0, #20]
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2313              		.loc 1 1054 0
 2314 0060 1B6A     		ldr	r3, [r3, #32]
 2315 0062 13F0040F 		tst	r3, #4
 2316 0066 02D0     		beq	.L166
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2317              		.loc 1 1056 0
 2318 0068 0523     		movs	r3, #5
 2319 006a C360     		str	r3, [r0, #12]
 2320 006c 09E0     		b	.L167
 2321              	.L166:
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2322              		.loc 1 1058 0
ARM GAS  /tmp/cct7Qvry.s 			page 71


 2323 006e 144B     		ldr	r3, .L173
 2324 0070 1B6A     		ldr	r3, [r3, #32]
 2325 0072 13F0010F 		tst	r3, #1
 2326 0076 02D0     		beq	.L168
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2327              		.loc 1 1060 0
 2328 0078 0123     		movs	r3, #1
 2329 007a C360     		str	r3, [r0, #12]
 2330 007c 01E0     		b	.L167
 2331              	.L168:
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
 2332              		.loc 1 1064 0
 2333 007e 0023     		movs	r3, #0
 2334 0080 C360     		str	r3, [r0, #12]
 2335              	.L167:
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2336              		.loc 1 1068 0
 2337 0082 0F4B     		ldr	r3, .L173
 2338 0084 5B6A     		ldr	r3, [r3, #36]
 2339 0086 13F0010F 		tst	r3, #1
 2340 008a 02D0     		beq	.L169
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2341              		.loc 1 1070 0
 2342 008c 0123     		movs	r3, #1
 2343 008e 8361     		str	r3, [r0, #24]
 2344 0090 01E0     		b	.L170
 2345              	.L169:
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2346              		.loc 1 1074 0
 2347 0092 0023     		movs	r3, #0
 2348 0094 8361     		str	r3, [r0, #24]
 2349              	.L170:
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2350              		.loc 1 1079 0
 2351 0096 0A4B     		ldr	r3, .L173
 2352 0098 1B68     		ldr	r3, [r3]
 2353 009a 13F0807F 		tst	r3, #16777216
 2354 009e 02D0     		beq	.L171
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2355              		.loc 1 1081 0
 2356 00a0 0223     		movs	r3, #2
ARM GAS  /tmp/cct7Qvry.s 			page 72


 2357 00a2 C361     		str	r3, [r0, #28]
 2358 00a4 01E0     		b	.L172
 2359              	.L171:
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   else
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2360              		.loc 1 1085 0
 2361 00a6 0123     		movs	r3, #1
 2362 00a8 C361     		str	r3, [r0, #28]
 2363              	.L172:
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2364              		.loc 1 1087 0
 2365 00aa 054B     		ldr	r3, .L173
 2366 00ac 5A68     		ldr	r2, [r3, #4]
 2367 00ae 02F48032 		and	r2, r2, #65536
 2368 00b2 0262     		str	r2, [r0, #32]
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMUL);
 2369              		.loc 1 1088 0
 2370 00b4 5B68     		ldr	r3, [r3, #4]
 2371 00b6 03F47013 		and	r3, r3, #3932160
 2372 00ba 4362     		str	r3, [r0, #36]
 2373 00bc 7047     		bx	lr
 2374              	.L174:
 2375 00be 00BF     		.align	2
 2376              	.L173:
 2377 00c0 00100240 		.word	1073876992
 2378              		.cfi_endproc
 2379              	.LFE133:
 2381              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2382              		.align	2
 2383              		.global	HAL_RCC_GetClockConfig
 2384              		.thumb
 2385              		.thumb_func
 2387              	HAL_RCC_GetClockConfig:
 2388              	.LFB134:
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #if defined(RCC_CFGR_PLLSRC_HSI_PREDIV)
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PREDIV = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV);
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** #endif /* RCC_CFGR_PLLSRC_HSI_PREDIV */
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * RCC configuration registers.
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * contains the current clock configuration.
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2389              		.loc 1 1103 0
 2390              		.cfi_startproc
 2391              		@ args = 0, pretend = 0, frame = 0
 2392              		@ frame_needed = 0, uses_anonymous_args = 0
 2393              		@ link register save eliminated.
ARM GAS  /tmp/cct7Qvry.s 			page 73


 2394              	.LVL265:
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check the parameters */
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2395              		.loc 1 1109 0
 2396 0000 0F23     		movs	r3, #15
 2397 0002 0360     		str	r3, [r0]
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2398              		.loc 1 1112 0
 2399 0004 0B4B     		ldr	r3, .L176
 2400 0006 5A68     		ldr	r2, [r3, #4]
 2401 0008 02F00302 		and	r2, r2, #3
 2402 000c 4260     		str	r2, [r0, #4]
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2403              		.loc 1 1115 0
 2404 000e 5A68     		ldr	r2, [r3, #4]
 2405 0010 02F0F002 		and	r2, r2, #240
 2406 0014 8260     		str	r2, [r0, #8]
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2407              		.loc 1 1118 0
 2408 0016 5A68     		ldr	r2, [r3, #4]
 2409 0018 02F4E062 		and	r2, r2, #1792
 2410 001c C260     		str	r2, [r0, #12]
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 2411              		.loc 1 1121 0
 2412 001e 5B68     		ldr	r3, [r3, #4]
 2413 0020 03F46053 		and	r3, r3, #14336
 2414 0024 DB08     		lsrs	r3, r3, #3
 2415 0026 0361     		str	r3, [r0, #16]
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2416              		.loc 1 1124 0
 2417 0028 034B     		ldr	r3, .L176+4
 2418 002a 1B68     		ldr	r3, [r3]
 2419 002c 03F00703 		and	r3, r3, #7
 2420 0030 0B60     		str	r3, [r1]
 2421 0032 7047     		bx	lr
 2422              	.L177:
 2423              		.align	2
 2424              	.L176:
 2425 0034 00100240 		.word	1073876992
 2426 0038 00200240 		.word	1073881088
 2427              		.cfi_endproc
 2428              	.LFE134:
 2430              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
ARM GAS  /tmp/cct7Qvry.s 			page 74


 2431              		.align	2
 2432              		.weak	HAL_RCC_CSSCallback
 2433              		.thumb
 2434              		.thumb_func
 2436              	HAL_RCC_CSSCallback:
 2437              	.LFB136:
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval None
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   {
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   }
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** }
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** 
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** /**
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   * @retval none
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   */
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2438              		.loc 1 1150 0
 2439              		.cfi_startproc
 2440              		@ args = 0, pretend = 0, frame = 0
 2441              		@ frame_needed = 0, uses_anonymous_args = 0
 2442              		@ link register save eliminated.
 2443 0000 7047     		bx	lr
 2444              		.cfi_endproc
 2445              	.LFE136:
 2447 0002 00BF     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2448              		.align	2
 2449              		.global	HAL_RCC_NMI_IRQHandler
 2450              		.thumb
 2451              		.thumb_func
 2453              	HAL_RCC_NMI_IRQHandler:
 2454              	.LFB135:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2455              		.loc 1 1133 0
 2456              		.cfi_startproc
 2457              		@ args = 0, pretend = 0, frame = 0
 2458              		@ frame_needed = 0, uses_anonymous_args = 0
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c **** {
 2459              		.loc 1 1133 0
 2460 0000 08B5     		push	{r3, lr}
 2461              	.LCFI7:
 2462              		.cfi_def_cfa_offset 8
ARM GAS  /tmp/cct7Qvry.s 			page 75


 2463              		.cfi_offset 3, -8
 2464              		.cfi_offset 14, -4
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
 2465              		.loc 1 1135 0
 2466 0002 054B     		ldr	r3, .L181
 2467 0004 9B68     		ldr	r3, [r3, #8]
 2468 0006 13F0800F 		tst	r3, #128
 2469 000a 04D0     		beq	.L179
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
 2470              		.loc 1 1138 0
 2471 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2472              	.LVL266:
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
 2473              		.loc 1 1141 0
 2474 0010 8022     		movs	r2, #128
 2475 0012 024B     		ldr	r3, .L181+4
 2476 0014 1A70     		strb	r2, [r3]
 2477              	.L179:
 2478 0016 08BD     		pop	{r3, pc}
 2479              	.L182:
 2480              		.align	2
 2481              	.L181:
 2482 0018 00100240 		.word	1073876992
 2483 001c 0A100240 		.word	1073877002
 2484              		.cfi_endproc
 2485              	.LFE135:
 2487              		.global	aPredivFactorTable
 2488              		.global	aPLLMULFactorTable
 2489              		.section	.rodata.aPredivFactorTable,"a",%progbits
 2490              		.align	2
 2491              		.set	.LANCHOR1,. + 0
 2494              	aPredivFactorTable:
 2495 0000 01       		.byte	1
 2496 0001 02       		.byte	2
 2497 0002 03       		.byte	3
 2498 0003 04       		.byte	4
 2499 0004 05       		.byte	5
 2500 0005 06       		.byte	6
 2501 0006 07       		.byte	7
 2502 0007 08       		.byte	8
 2503 0008 09       		.byte	9
 2504 0009 0A       		.byte	10
 2505 000a 0B       		.byte	11
 2506 000b 0C       		.byte	12
 2507 000c 0D       		.byte	13
 2508 000d 0E       		.byte	14
 2509 000e 0F       		.byte	15
 2510 000f 10       		.byte	16
 2511              		.section	.rodata.aPLLMULFactorTable,"a",%progbits
 2512              		.align	2
 2513              		.set	.LANCHOR0,. + 0
 2516              	aPLLMULFactorTable:
 2517 0000 02       		.byte	2
 2518 0001 03       		.byte	3
 2519 0002 04       		.byte	4
 2520 0003 05       		.byte	5
 2521 0004 06       		.byte	6
ARM GAS  /tmp/cct7Qvry.s 			page 76


 2522 0005 07       		.byte	7
 2523 0006 08       		.byte	8
 2524 0007 09       		.byte	9
 2525 0008 0A       		.byte	10
 2526 0009 0B       		.byte	11
 2527 000a 0C       		.byte	12
 2528 000b 0D       		.byte	13
 2529 000c 0E       		.byte	14
 2530 000d 0F       		.byte	15
 2531 000e 10       		.byte	16
 2532 000f 10       		.byte	16
 2533              		.text
 2534              	.Letext0:
 2535              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 2536              		.file 4 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 2537              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 2538              		.file 6 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 2539              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 2540              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_rcc.h"
 2541              		.file 9 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_gpio.h"
 2542              		.file 10 "Drivers/CMSIS/Include/core_cm4.h"
 2543              		.file 11 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/system_stm32f3xx.h"
 2544              		.file 12 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/cct7Qvry.s 			page 77


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_rcc.c
     /tmp/cct7Qvry.s:21     .text.HAL_RCC_DeInit:00000000 $t
     /tmp/cct7Qvry.s:26     .text.HAL_RCC_DeInit:00000000 HAL_RCC_DeInit
     /tmp/cct7Qvry.s:70     .text.HAL_RCC_DeInit:00000038 $d
     /tmp/cct7Qvry.s:78     .text.HAL_RCC_OscConfig:00000000 $t
     /tmp/cct7Qvry.s:83     .text.HAL_RCC_OscConfig:00000000 HAL_RCC_OscConfig
     /tmp/cct7Qvry.s:742    .text.HAL_RCC_OscConfig:000002f8 $d
     /tmp/cct7Qvry.s:747    .text.HAL_RCC_OscConfig:00000300 $t
     /tmp/cct7Qvry.s:1452   .text.HAL_RCC_OscConfig:00000610 $d
     /tmp/cct7Qvry.s:1458   .text.HAL_RCC_MCOConfig:00000000 $t
     /tmp/cct7Qvry.s:1463   .text.HAL_RCC_MCOConfig:00000000 HAL_RCC_MCOConfig
     /tmp/cct7Qvry.s:1528   .text.HAL_RCC_MCOConfig:0000004c $d
     /tmp/cct7Qvry.s:1533   .text.HAL_RCC_EnableCSS:00000000 $t
     /tmp/cct7Qvry.s:1538   .text.HAL_RCC_EnableCSS:00000000 HAL_RCC_EnableCSS
     /tmp/cct7Qvry.s:1570   .text.HAL_RCC_DisableCSS:00000000 $t
     /tmp/cct7Qvry.s:1575   .text.HAL_RCC_DisableCSS:00000000 HAL_RCC_DisableCSS
     /tmp/cct7Qvry.s:1607   .text.HAL_RCC_GetSysClockFreq:00000000 $t
     /tmp/cct7Qvry.s:1612   .text.HAL_RCC_GetSysClockFreq:00000000 HAL_RCC_GetSysClockFreq
     /tmp/cct7Qvry.s:1699   .text.HAL_RCC_GetSysClockFreq:0000005c $d
     /tmp/cct7Qvry.s:1708   .text.HAL_RCC_ClockConfig:00000000 $t
     /tmp/cct7Qvry.s:1713   .text.HAL_RCC_ClockConfig:00000000 HAL_RCC_ClockConfig
     /tmp/cct7Qvry.s:2098   .text.HAL_RCC_ClockConfig:000001f0 $d
     /tmp/cct7Qvry.s:2106   .text.HAL_RCC_GetHCLKFreq:00000000 $t
     /tmp/cct7Qvry.s:2111   .text.HAL_RCC_GetHCLKFreq:00000000 HAL_RCC_GetHCLKFreq
     /tmp/cct7Qvry.s:2125   .text.HAL_RCC_GetHCLKFreq:00000008 $d
     /tmp/cct7Qvry.s:2130   .text.HAL_RCC_GetPCLK1Freq:00000000 $t
     /tmp/cct7Qvry.s:2135   .text.HAL_RCC_GetPCLK1Freq:00000000 HAL_RCC_GetPCLK1Freq
     /tmp/cct7Qvry.s:2176   .text.HAL_RCC_GetPCLK1Freq:00000028 $d
     /tmp/cct7Qvry.s:2182   .text.HAL_RCC_GetPCLK2Freq:00000000 $t
     /tmp/cct7Qvry.s:2187   .text.HAL_RCC_GetPCLK2Freq:00000000 HAL_RCC_GetPCLK2Freq
     /tmp/cct7Qvry.s:2228   .text.HAL_RCC_GetPCLK2Freq:00000028 $d
     /tmp/cct7Qvry.s:2234   .text.HAL_RCC_GetOscConfig:00000000 $t
     /tmp/cct7Qvry.s:2239   .text.HAL_RCC_GetOscConfig:00000000 HAL_RCC_GetOscConfig
     /tmp/cct7Qvry.s:2377   .text.HAL_RCC_GetOscConfig:000000c0 $d
     /tmp/cct7Qvry.s:2382   .text.HAL_RCC_GetClockConfig:00000000 $t
     /tmp/cct7Qvry.s:2387   .text.HAL_RCC_GetClockConfig:00000000 HAL_RCC_GetClockConfig
     /tmp/cct7Qvry.s:2425   .text.HAL_RCC_GetClockConfig:00000034 $d
     /tmp/cct7Qvry.s:2431   .text.HAL_RCC_CSSCallback:00000000 $t
     /tmp/cct7Qvry.s:2436   .text.HAL_RCC_CSSCallback:00000000 HAL_RCC_CSSCallback
     /tmp/cct7Qvry.s:2448   .text.HAL_RCC_NMI_IRQHandler:00000000 $t
     /tmp/cct7Qvry.s:2453   .text.HAL_RCC_NMI_IRQHandler:00000000 HAL_RCC_NMI_IRQHandler
     /tmp/cct7Qvry.s:2482   .text.HAL_RCC_NMI_IRQHandler:00000018 $d
     /tmp/cct7Qvry.s:2494   .rodata.aPredivFactorTable:00000000 aPredivFactorTable
     /tmp/cct7Qvry.s:2516   .rodata.aPLLMULFactorTable:00000000 aPLLMULFactorTable
     /tmp/cct7Qvry.s:2490   .rodata.aPredivFactorTable:00000000 $d
     /tmp/cct7Qvry.s:2512   .rodata.aPLLMULFactorTable:00000000 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
