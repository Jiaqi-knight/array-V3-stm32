ARM GAS  /tmp/cccVlT9k.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 1
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_i2c.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.I2C_Flush_TXDR,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	I2C_Flush_TXDR:
  26              	.LFB181:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @file    stm32f3xx_hal_i2c.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @version V1.4.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @date    16-December-2016
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief   I2C HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *          This file provides firmware functions to manage the following
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *          functionalities of the Inter Integrated Circuit (I2C) peripheral:
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *           + Initialization and de-initialization functions
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *           + IO operation functions
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *           + Peripheral State and Errors functions
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   @verbatim
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   ==============================================================================
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                         ##### How to use this driver #####
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   ==============================================================================
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     The I2C HAL driver can be used as follows:
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) Declare a I2C_HandleTypeDef handle structure, for example:
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_HandleTypeDef  hi2c;
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#)Initialize the I2C low level resources by implementing the HAL_I2C_MspInit() API:
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (##) Enable the I2Cx interface clock
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (##) I2C pins configuration
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Enable the clock for the I2C GPIOs
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Configure I2C pins as alternate function open-drain
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (##) NVIC configuration if you need to use interrupt process
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Configure the I2Cx interrupt priority
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Enable the NVIC I2C IRQ Channel
ARM GAS  /tmp/cccVlT9k.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (##) DMA Configuration if you need to use DMA process
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Declare a DMA_HandleTypeDef handle structure for the transmit or receive channel
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Enable the DMAx interface clock using
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Configure the DMA handle parameters
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Configure the DMA Tx or Rx channel
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Associate the initialized DMA handle to the hi2c DMA Tx or Rx handle
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (+++) Configure the priority and enable the NVIC for the transfer complete interrupt on
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                   the DMA Tx or Rx channel
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) Configure the Communication Clock Timing, Own Address1, Master Addressing mode, Dual Addres
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         Own Address2, Own Address2 Mask, General call and Nostretch mode in the hi2c Init structure
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) Initialize the I2C registers by calling the HAL_I2C_Init(), configures also the low level H
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (GPIO, CLOCK, NVIC...etc) by calling the customized HAL_I2C_MspInit(&hi2c) API.
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) To check if target device is ready for communication, use the function HAL_I2C_IsDeviceRead
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) For I2C IO and IO MEM operations, three operation modes are available within this driver :
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     *** Polling mode IO operation ***
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     =================================
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in blocking mode using HAL_I2C_Master_Transmit(
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in blocking mode using HAL_I2C_Master_Receive()
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Transmit()
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in blocking mode using HAL_I2C_Slave_Receive()
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     *** Polling mode IO MEM operation ***
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     =====================================
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Write an amount of data in blocking mode to a specific memory address using HAL_I2C_Mem_W
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Read an amount of data in blocking mode from a specific memory address using HAL_I2C_Mem_
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     *** Interrupt mode IO operation ***
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     ===================================
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Trans
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode using HAL_I2C_Master_Receiv
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Transmi
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode using HAL_I2C_Slave_Receive_
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     *** Interrupt mode IO sequential operation ***
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     ==============================================
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (@) These interfaces allow to manage a sequential transfer with a repeated start condition
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           when a direction change during transfer
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) A specific option field manage the different steps of a sequential transfer
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Option field values are defined through @ref I2C_XFEROPTIONS and are listed below:
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) I2C_FIRST_AND_LAST_FRAME: No sequential usage, functionnal is same as associated interfa
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) I2C_FIRST_FRAME: Sequential usage, this option allow to manage a sequence with start con
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                             and data to transfer without a final stop condition
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) I2C_FIRST_AND_NEXT_FRAME: Sequential usage (Master only), this option allow to manage a 
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                             and data to transfer without a final stop condition, an then permit a c
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                             several times (like HAL_I2C_Master_Sequential_Transmit_IT() then HAL_I2
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) I2C_NEXT_FRAME: Sequential usage, this option allow to manage a sequence with a restart 
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                             if no direction change and without a final stop condition in both cases
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) I2C_LAST_FRAME: Sequential usage, this option allow to manage a sequance with a restart 
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                             and with new data to transfer if the direction change or manage only th
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                             if no direction change and with a final stop condition in both cases
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Differents sequential I2C interfaces are listed below:
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Sequential transmit in master I2C mode an amount of data in non-blocking mode using HAL_
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_MasterTxCpltCallback() is execut
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Sequential receive in master I2C mode an amount of data in non-blocking mode using HAL_I
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_MasterRxCpltCallback() is executed 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Enable/disable the Address listen mode in slave I2C mode using HAL_I2C_EnableListen_IT()
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+++) When address slave I2C match, HAL_I2C_AddrCallback() is executed and user can
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code to check the Address Match Code and the transmission direction request 
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+++) At Listen mode end HAL_I2C_ListenCpltCallback() is executed and user can
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ListenCpltCallback()
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Sequential transmit in slave I2C mode an amount of data in non-blocking mode using HAL_I
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+++) At transmission end of current frame transfer, HAL_I2C_SlaveTxCpltCallback() is execute
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Sequential receive in slave I2C mode an amount of data in non-blocking mode using HAL_I2
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+++) At reception end of current frame transfer, HAL_I2C_SlaveRxCpltCallback() is executed a
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (++) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     *** Interrupt mode IO MEM operation ***
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     =======================================
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with Interrupt to a specific memory address 
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Mem_Write_IT()
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
ARM GAS  /tmp/cccVlT9k.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with Interrupt from a specific memory address
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Mem_Read_IT()
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     *** DMA mode IO operation ***
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     ==============================
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Transmit in master mode an amount of data in non-blocking mode (DMA) using
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Master_Transmit_DMA()
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_MasterTxCpltCallback() is executed and user can
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterTxCpltCallback()
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Receive in master mode an amount of data in non-blocking mode (DMA) using
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Master_Receive_DMA()
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_MasterRxCpltCallback() is executed and user can
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MasterRxCpltCallback()
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Transmit in slave mode an amount of data in non-blocking mode (DMA) using
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Slave_Transmit_DMA()
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At transmission end of transfer, HAL_I2C_SlaveTxCpltCallback() is executed and user can
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveTxCpltCallback()
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Receive in slave mode an amount of data in non-blocking mode (DMA) using
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Slave_Receive_DMA()
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At reception end of transfer, HAL_I2C_SlaveRxCpltCallback() is executed and user can
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_SlaveRxCpltCallback()
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Abort a master I2C process communication with Interrupt using HAL_I2C_Master_Abort_IT()
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) End of abort process, HAL_I2C_AbortCpltCallback() is executed and user can
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_AbortCpltCallback()
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Discard a slave I2C process communication using __HAL_I2C_GENERATE_NACK() macro.
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            This action will inform Master to generate a Stop condition to discard the communication
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     *** DMA mode IO MEM operation ***
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     =================================
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Write an amount of data in non-blocking mode with DMA to a specific memory address using
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Mem_Write_DMA()
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At Memory end of write transfer, HAL_I2C_MemTxCpltCallback() is executed and user can
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemTxCpltCallback()
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Read an amount of data in non-blocking mode with DMA from a specific memory address using
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_Mem_Read_DMA()
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) At Memory end of read transfer, HAL_I2C_MemRxCpltCallback() is executed and user can
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_MemRxCpltCallback()
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) In case of transfer Error, HAL_I2C_ErrorCallback() function is executed and user can
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****            add his own code by customization of function pointer HAL_I2C_ErrorCallback()
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      *** I2C HAL driver macros list ***
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      ==================================
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      [..]
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        Below the list of most used macros in I2C HAL driver.
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE: Enable the I2C peripheral
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE: Disable the I2C peripheral
ARM GAS  /tmp/cccVlT9k.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) __HAL_I2C_GENERATE_NACK: Generate a Non-Acknowledge I2C peripheral in Slave mode
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) __HAL_I2C_GET_FLAG: Check whether the specified I2C flag is set or not
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) __HAL_I2C_CLEAR_FLAG: Clear the specified I2C pending flag
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) __HAL_I2C_ENABLE_IT: Enable the specified I2C interrupt
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) __HAL_I2C_DISABLE_IT: Disable the specified I2C interrupt
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      [..]
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        (@) You can refer to the I2C HAL driver header file for more useful macros
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   @endverbatim
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   ******************************************************************************
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @attention
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * Redistribution and use in source and binary forms, with or without modification,
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * are permitted provided that the following conditions are met:
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer.
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *      this list of conditions and the following disclaimer in the documentation
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *      and/or other materials provided with the distribution.
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *      may be used to endorse or promote products derived from this software
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *      without specific prior written permission.
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   ******************************************************************************
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */ 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Includes ------------------------------------------------------------------*/
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #include "stm32f3xx_hal.h"
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @addtogroup STM32F3xx_HAL_Driver
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C I2C
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief I2C HAL module driver
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #ifdef HAL_I2C_MODULE_ENABLED
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private typedef -----------------------------------------------------------*/
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private define ------------------------------------------------------------*/
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C_Private_Define I2C Private Define
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define TIMING_CLEAR_MASK   (0xF0FFFFFFU)  /*!< I2C TIMING clear register Mask */
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_ADDR    (10000U)       /*!< 10 s  */
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_BUSY    (25U)          /*!< 25 ms */
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_DIR     (25U)          /*!< 25 ms */
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_RXNE    (25U)          /*!< 25 ms */
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_STOPF   (25U)          /*!< 25 ms */
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_TC      (25U)          /*!< 25 ms */
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_TCR     (25U)          /*!< 25 ms */
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_TXIS    (25U)          /*!< 25 ms */
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_TIMEOUT_FLAG    (25U)          /*!< 25 ms */
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define MAX_NBYTE_SIZE      255U
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define SlaveAddr_SHIFT     7U
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define SlaveAddr_MSK       0x06U
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private define for @ref PreviousState usage */
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_MSK             ((uint32_t)((HAL_I2C_STATE_BUSY_TX | HAL_I2C_STATE_BUSY_RX) & (~(
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_NONE            ((uint32_t)(HAL_I2C_MODE_NONE))                                  
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_TX  ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_MASTER_BUSY_RX  ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_TX   ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_SLAVE_BUSY_RX   ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_TX     ((uint32_t)((HAL_I2C_STATE_BUSY_TX & I2C_STATE_MSK) | HAL_I2C_MOD
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_STATE_MEM_BUSY_RX     ((uint32_t)((HAL_I2C_STATE_BUSY_RX & I2C_STATE_MSK) | HAL_I2C_MOD
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private define to centralize the enable/disable of Interrupts */
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_XFER_TX_IT          (0x00000001U)
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_XFER_RX_IT          (0x00000002U)
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_XFER_LISTEN_IT      (0x00000004U)
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_XFER_ERROR_IT       (0x00000011U)
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_XFER_CPLT_IT        (0x00000012U)
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_XFER_RELOAD_IT      (0x00000012U)
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private define Sequential Transfer Options default/reset value */
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_NO_OPTION_FRAME     (0xFFFF0000U)
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @}
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private macro -------------------------------------------------------------*/
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** #define I2C_GET_DMA_REMAIN_DATA(__HANDLE__) ((((__HANDLE__)->State) == HAL_I2C_STATE_BUSY_TX)   ? \
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                                             ((uint32_t)((__HANDLE__)->hdmatx->Instance->CNDTR)) : \
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                                             ((uint32_t)((__HANDLE__)->hdmarx->Instance->CNDTR)))
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private variables ---------------------------------------------------------*/
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private function prototypes -----------------------------------------------*/
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C_Private_Functions I2C Private Functions
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions to handle DMA transfer */
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma);
ARM GAS  /tmp/cccVlT9k.s 			page 7


 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma);
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma);
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma);
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma);
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma);
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c);
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c);
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags);
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode);
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions to handle IT transfer */
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions for I2C transfer IRQ handler */
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions to handle flags during polling transfer */
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions to centralize the enable/disable of Interrupts */
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest);
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions to flush TXDR register */
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c);
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Private functions to handle  start, restart or stop a transfer */
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @}
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /* Exported functions --------------------------------------------------------*/
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions I2C Exported Functions
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group1 Initialization and de-initialization functions
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  *  @brief    Initialization and Configuration functions 
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  *
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** @verbatim
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  ===============================================================================
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               ##### Initialization and de-initialization functions #####
ARM GAS  /tmp/cccVlT9k.s 			page 8


 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  ===============================================================================
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]  This subsection provides a set of functions allowing to initialize and
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           deinitialize the I2Cx peripheral:
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) User must Implement HAL_I2C_MspInit() function in which he configures
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           all related peripherals resources (CLOCK, GPIO, DMA, IT and NVIC ).
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Call the function HAL_I2C_Init() to configure the selected device with
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           the selected configuration:
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) Clock Timing
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) Own Address 1
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) Addressing mode (Master, Slave)
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) Dual Addressing mode
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) Own Address 2
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) Own Address 2 Mask
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) General call mode
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) Nostretch mode
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (+) Call the function HAL_I2C_DeInit() to restore the default configuration
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           of the selected I2Cx peripheral.
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** @endverbatim
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Initializes the I2C according to the specified parameters
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in the I2C_InitTypeDef and initialize the associated handle.
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c == NULL)
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS1(hi2c->Init.OwnAddress1));
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_ADDRESSING_MODE(hi2c->Init.AddressingMode));
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_RESET)
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Allocate lock resource and initialize it */
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 9


 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable the selected I2C peripheral */
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Configure I2Cx: Frequency range */
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Own Address1 before set the Own Address1 configuration */
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Configure I2Cx: Own Address1 and ack own address1 mode */
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else /* I2C_ADDRESSINGMODE_10BIT */
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /*---------------------------- I2Cx CR2 Configuration ----------------------*/
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Configure I2Cx: Addressing Master mode */
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Own Address2 before set the Own Address2 configuration */
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Configure I2Cx: Dual mode and Own Address2 */
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /*---------------------------- I2Cx CR1 Configuration ----------------------*/
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Configure I2Cx: Generalcall and NoStretch mode */
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Enable the selected I2C peripheral */
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
ARM GAS  /tmp/cccVlT9k.s 			page 10


 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  DeInitialize the I2C peripheral.
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DeInit(I2C_HandleTypeDef *hi2c)
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the I2C handle allocation */
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c == NULL)
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable the I2C Peripheral Clock */
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* DeInit the low level hardware: GPIO, CLOCK, NVIC */
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Release Lock */
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief Initialize the I2C MSP.
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_MspInit(I2C_HandleTypeDef *hi2c)
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_MspInit could be implemented in the user file
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief DeInitialize the I2C MSP.
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
ARM GAS  /tmp/cccVlT9k.s 			page 11


 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_MspDeInit(I2C_HandleTypeDef *hi2c)
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_MspDeInit could be implemented in the user file
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @}
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group2 Input and Output operation functions
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  *  @brief   Data transfers functions 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  *
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** @verbatim
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  ===============================================================================
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                       ##### IO operation functions #####
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  ===============================================================================
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     This subsection provides a set of functions allowing to manage the I2C data
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     transfers.
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) There are two modes of transfer:
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        (++) Blocking mode : The communication is performed in the polling mode.
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             The status of all data processing is returned by the same function 
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             after finishing transfer.
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        (++) No-Blocking mode : The communication is performed using Interrupts
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             or DMA. These functions return the status of the transfer startup.
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             The end of the data processing will be indicated through the
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             dedicated I2C IRQ when using Interrupt mode or the DMA IRQ when
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             using DMA mode.
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) Blocking mode functions are :
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit()
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive()
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit()
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive()
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write()
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read()
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_IsDeviceReady()
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) No-Blocking mode functions with Interrupt are :
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_IT()
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_IT()
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_IT()
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_IT()
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_IT()
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_IT()
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) No-Blocking mode functions with DMA are :
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Master_Transmit_DMA()
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Master_Receive_DMA()
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Transmit_DMA()
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Slave_Receive_DMA()
ARM GAS  /tmp/cccVlT9k.s 			page 12


 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Write_DMA()
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_Mem_Read_DMA()
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (#) A set of Transfer Complete Callbacks are provided in non Blocking mode:
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_MemTxCpltCallback()
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_MemRxCpltCallback()
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_MasterTxCpltCallback()
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_MasterRxCpltCallback()
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_SlaveTxCpltCallback()
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_SlaveRxCpltCallback()
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (++) HAL_I2C_ErrorCallback()
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** @endverbatim
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Transmits in master mode an amount of data in blocking mode.
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pD
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address */
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
ARM GAS  /tmp/cccVlT9k.s 			page 13


 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRIT
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Write data to TXDR */
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
ARM GAS  /tmp/cccVlT9k.s 			page 14


 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear STOP Flag */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Receives in master mode an amount of data in blocking mode.
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pDa
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {    
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
ARM GAS  /tmp/cccVlT9k.s 			page 15


 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address */
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Read data from RXDR */
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wait until TCR flag is set */
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
ARM GAS  /tmp/cccVlT9k.s 			page 16


 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until STOPF flag is set */
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear STOP Flag */
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Transmits in slave mode an amount of data in blocking mode. 
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, ui
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
ARM GAS  /tmp/cccVlT9k.s 			page 17


 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear ADDR flag */
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If 10bit addressing mode is selected */
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until ADDR flag is set */
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Disable Address Acknowledge */
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear ADDR flag */
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until DIR flag is set Transmitter mode */
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Disable Address Acknowledge */
ARM GAS  /tmp/cccVlT9k.s 			page 18


 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Write data to TXDR */
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until STOP flag is set */
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 	/* Normal use case for Transmitter mode */
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 	/* A NACK is generated to confirm the end of transfer */
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 	hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear STOP flag */
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */ 
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Address Acknowledge */
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
ARM GAS  /tmp/cccVlT9k.s 			page 19


1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in blocking mode
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size, uin
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {  
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until ADDR flag is set */
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear ADDR flag */
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until DIR flag is reset Receiver mode */
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
ARM GAS  /tmp/cccVlT9k.s 			page 20


1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Disable Address Acknowledge */
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Store Last receive data if any */
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Read data from RXDR */
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferCount--;
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_TIMEOUT)
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Read data from RXDR */
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until STOP flag is set */
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear STOP flag */
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until BUSY flag is reset */
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/cccVlT9k.s 			page 21


1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable Address Acknowledge */
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Address Acknowledge */
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with Interrupt
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
ARM GAS  /tmp/cccVlT9k.s 			page 22


1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address */
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* possible to enable all of these */
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with Interrupt
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
ARM GAS  /tmp/cccVlT9k.s 			page 23


1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address */
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* possible to enable all of these */
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with Interrupt
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
ARM GAS  /tmp/cccVlT9k.s 			page 24


1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* possible to enable all of these */
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with Interrupt 
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
ARM GAS  /tmp/cccVlT9k.s 			page 25


1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* possible to enable all of these */
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Transmit in master mode an amount of data in non-blocking mode with DMA
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
ARM GAS  /tmp/cccVlT9k.s 			page 26


1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set the DMA error callback */
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable the DMA channel */
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSi
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Send Slave Address */
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Update XferCount value */
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 process unlock */
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable DMA Request */
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
ARM GAS  /tmp/cccVlT9k.s 			page 27


1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Send Slave Address */
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set NBYTES to write and generate START condition */
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 process unlock */
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* possible to enable all of these */
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Receive in master mode an amount of data in non-blocking mode with DMA
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Receive_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t 
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/cccVlT9k.s 			page 28


1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set the I2C DMA transfer complete callback */
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set the DMA error callback */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set the unused DMA callbacks to NULL */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable the DMA channel */
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSi
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Send Slave Address */
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set NBYTES to read and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Update XferCount value */
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 process unlock */
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable DMA Request */
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Update Transfer ISR function pointer */
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Send Slave Address */
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set NBYTES to read and generate START condition */
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
ARM GAS  /tmp/cccVlT9k.s 			page 29


1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Note : The I2C interrupts must be enabled after unlocking current process
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 to avoid the risk of I2C interrupt handle execution before current
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****                 process unlock */
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK, TXI interrupt */
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* possible to enable all of these */
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Transmit in slave mode an amount of data in non-blocking mode with DMA
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Transmit_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }   
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the DMA error callback */
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
ARM GAS  /tmp/cccVlT9k.s 			page 30


1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable the DMA channel */
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable DMA Request */
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN; 
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Receive in slave mode an amount of data in non-blocking mode with DMA
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Receive_DMA(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint16_t Size)
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U)) 
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }   
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 31


1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the DMA error callback */
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable the DMA channel */
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, STOP, NACK, ADDR interrupts */
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable DMA Request */
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Write an amount of data in blocking mode to a specific memory address
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddre
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
ARM GAS  /tmp/cccVlT9k.s 			page 32


1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     do
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until TXIS flag is set */
ARM GAS  /tmp/cccVlT9k.s 			page 33


1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Write data to TXDR */
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */ 
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear STOP Flag */
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
ARM GAS  /tmp/cccVlT9k.s 			page 34


1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Read an amount of data in blocking mode from a specific memory address
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddres
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
ARM GAS  /tmp/cccVlT9k.s 			page 35


1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_O
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address */
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     do
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until RXNE flag is set */
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Read data from RXDR */
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wait until TCR flag is set */
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 36


1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until STOPF flag is reset */ 
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear STOP Flag */
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with Interrupt to a specific memory addres
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
ARM GAS  /tmp/cccVlT9k.s 			page 37


2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
ARM GAS  /tmp/cccVlT9k.s 			page 38


2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process 
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, TXI interrupt */
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* possible to enable all of these */
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Read an amount of data in non-blocking mode with Interrupt from a specific memory addre
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAdd
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
ARM GAS  /tmp/cccVlT9k.s 			page 39


2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
ARM GAS  /tmp/cccVlT9k.s 			page 40


2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR, TC, STOP, NACK, RXI interrupt */
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* possible to enable all of these */
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C_IT_ERRI | I2C_IT_TCI| I2C_IT_STOPI| I2C_IT_NACKI | I2C_IT_ADDRI | I2C_IT_RXI | I2C_IT_TX
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Write an amount of data in non-blocking mode with DMA to a specific memory address
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Write_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemA
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 41


2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the DMA error callback */
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable the DMA channel */
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address */
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Update XferCount value */
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 42


2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable DMA Request */
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Reads an amount of data in non-blocking mode with DMA from a specific memory address.
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be read
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Mem_Read_DMA(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAd
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Init tickstart for timeout management*/
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
ARM GAS  /tmp/cccVlT9k.s 			page 43


2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and Memory Address */
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the I2C DMA transfer complete callback */
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the DMA error callback */
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the unused DMA callbacks to NULL */
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable the DMA channel */
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Update XferCount value */
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 44


2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable DMA Request */
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Checks if target device is ready for communication.
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @note   This function is used with Memory devices
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Trials Number of trials
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Tria
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tickstart = 0U;
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0U;
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     do
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Generate Start */
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wait until STOPF flag is set or a NACK flag is set*/
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tickstart = HAL_GetTick();
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
ARM GAS  /tmp/cccVlT9k.s 			page 45


2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       	if(Timeout != HAL_MAX_DELAY)
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       	{
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           {
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             /* Device is ready */
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             /* Process Unlocked */
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             return HAL_TIMEOUT;
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           }
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         } 
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Check if the NACKF flag has not been set */
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */ 
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Clear STOP Flag */
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Device is ready */
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_OK;
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Clear NACK Flag */
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Clear STOP Flag, auto generated with autoend*/
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Check if the maximum allowed number of trials has been reached */
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if (I2C_Trials++ == Trials)
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Generate Stop */
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wait until STOPF flag is reset */ 
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/cccVlT9k.s 			page 46


2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Clear STOP Flag */
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }while(I2C_Trials < Trials);
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_TIMEOUT;
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Sequential transmit in master I2C mode an amount of data in non-blocking mode with Inte
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddres
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 47


2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If size > MAX_NBYTE_SIZE, use reload mode */
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to write */
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Sequential receive in master I2C mode an amount of data in non-blocking mode with Inter
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
ARM GAS  /tmp/cccVlT9k.s 			page 48


2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If hi2c->XferCount > MAX_NBYTE_SIZE, use reload mode */
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If transfer direction not change, do not generate Restart Condition */
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Mean Previous state is same as current state */
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Slave Address and set NBYTES to read */
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, xferrequest);
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Sequential transmit in slave/device I2C mode an amount of data in non-blocking mode wit
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
ARM GAS  /tmp/cccVlT9k.s 			page 49


2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Transmit_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uin
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* and then toggle the HAL slave RX state to TX state */
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable associated Interrupts */
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 50


2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     process unlock */
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Sequential receive in slave/device I2C mode an amount of data in non-blocking mode with
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @note   This interface allow to manage repeated start condition when a direction change during 
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  pData Pointer to data buffer
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Amount of data to be sent
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  XferOptions Options of Transfer, value of @ref I2C_XFEROPTIONS
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Slave_Sequential_Receive_IT(I2C_HandleTypeDef *hi2c, uint8_t *pData, uint
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_TRANSFER_OPTIONS_REQUEST(XferOptions));
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Interrupts, to prevent preemption during treatment in case of multicall */
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* I2C cannot manage full duplex exchange so disable previous IT enabled if any */
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* and then toggle the HAL slave TX state to RX state */
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable associated Interrupts */
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable Address Acknowledge */
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 51


2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Prepare transfer parameters */
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear ADDR flag after prepare the transfer parameters */
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* This action will generate an acknowledge to the Master */
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     to avoid the risk of I2C interrupt handle execution before current
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     process unlock */
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* REnable ADDR interrupt */
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Enable the Address listen mode with Interrupt.
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_EnableListen_IT(I2C_HandleTypeDef *hi2c)
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable the Address Match interrupt */
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Disable the Address listen mode with Interrupt.
ARM GAS  /tmp/cccVlT9k.s 			page 52


2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_DisableListen_IT(I2C_HandleTypeDef *hi2c)
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Declaration of tmp to prevent undefined behavior of volatile usage */
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tmp;
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Address listen mode only if a transfer is not ongoing */
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_LISTEN)
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR = NULL;
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable the Address Match interrupt */
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Abort a master I2C IT or DMA process communication with Interrupt.
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_StatusTypeDef HAL_I2C_Master_Abort_IT(I2C_HandleTypeDef *hi2c, uint16_t DevAddress)
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->Mode == HAL_I2C_MODE_MASTER)
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Locked */
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Interrupts */
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set State at HAL_I2C_STATE_ABORT */
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set NBYTES to 1 to generate a dummy read on I2C peripheral */
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set AUTOEND mode, this will generate a NACK then STOP condition to abort the current transfe
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 53


2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Note : The I2C interrupts must be enabled after unlocking current process 
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               to avoid the risk of I2C interrupt handle execution before current
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****               process unlock */
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wrong usage of abort function */
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* This function should be used only in case of abort monitored by master device */
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @}
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C_IRQ_Handler_and_Callbacks IRQ Handler and Callbacks
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  * @{
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  */   
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  This function handles I2C event interrupt request.
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** void HAL_I2C_EV_IRQHandler(I2C_HandleTypeDef *hi2c)
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Get current IT Flags and IT sources value */
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* I2C events treatment -------------------------------------*/
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferISR != NULL)
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  This function handles I2C error interrupt request.
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** void HAL_I2C_ER_IRQHandler(I2C_HandleTypeDef *hi2c)
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* I2C Bus error interrupt occurred ------------------------------------*/
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
ARM GAS  /tmp/cccVlT9k.s 			page 54


2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear BERR flag */
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* I2C Over-Run/Under-Run interrupt occurred ----------------------------------------*/
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear OVR flag */
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* I2C Arbitration Loss error interrupt occurred -------------------------------------*/
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear ARLO flag */
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Call the Error Callback in case of Error detected */
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->ErrorCode & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Master Tx Transfer completed callback.
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_MasterTxCpltCallback(I2C_HandleTypeDef *hi2c)
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_MasterTxCpltCallback could be implemented in the user file
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Master Rx Transfer completed callback.
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_MasterRxCpltCallback(I2C_HandleTypeDef *hi2c)
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 55


3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_MasterRxCpltCallback could be implemented in the user file
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @brief  Slave Tx Transfer completed callback.
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_SlaveTxCpltCallback(I2C_HandleTypeDef *hi2c)
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_SlaveTxCpltCallback could be implemented in the user file
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Slave Rx Transfer completed callback.
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_SlaveRxCpltCallback(I2C_HandleTypeDef *hi2c)
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_SlaveRxCpltCallback could be implemented in the user file
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Slave Address Match callback.
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  TransferDirection: Master request Transfer Direction (Write/Read), value of @ref I2C_XF
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  AddrMatchCode: Address Match Code
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_AddrCallback(I2C_HandleTypeDef *hi2c, uint8_t TransferDirection, uint16_t AddrM
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(TransferDirection);
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(AddrMatchCode);
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_AddrCallback() could be implemented in the user file
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 56


3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Listen Complete callback.
3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_ListenCpltCallback(I2C_HandleTypeDef *hi2c)
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_ListenCpltCallback() could be implemented in the user file
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Memory Tx Transfer completed callback.
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_MemTxCpltCallback(I2C_HandleTypeDef *hi2c)
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_MemTxCpltCallback could be implemented in the user file
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Memory Rx Transfer completed callback.
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_MemRxCpltCallback(I2C_HandleTypeDef *hi2c)
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_MemRxCpltCallback could be implemented in the user file
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C error callback.
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_ErrorCallback(I2C_HandleTypeDef *hi2c)
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/cccVlT9k.s 			page 57


3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_ErrorCallback could be implemented in the user file
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C abort callback.
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** __weak void HAL_I2C_AbortCpltCallback(I2C_HandleTypeDef *hi2c)
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hi2c);
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* NOTE : This function should not be modified, when the callback is needed,
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             the HAL_I2C_AbortCpltCallback could be implemented in the user file
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    */
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @}
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @defgroup I2C_Exported_Functions_Group3 Peripheral State, Mode and Error functions
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  *  @brief   Peripheral State, Mode and Error functions
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  *
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** @verbatim
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  ===============================================================================
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             ##### Peripheral State, Mode and Error functions #####
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****  ===============================================================================
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     [..]
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     This subsection permit to get in run-time the status of the peripheral
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     and the data flow.
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** @endverbatim
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Return the I2C handle state.
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL state
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_I2C_StateTypeDef HAL_I2C_GetState(I2C_HandleTypeDef *hi2c)
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Return I2C handle state */
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return hi2c->State;
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Returns the I2C Master, Slave, Memory or no mode.
3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
ARM GAS  /tmp/cccVlT9k.s 			page 58


3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         the configuration information for I2C module
3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL mode
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** HAL_I2C_ModeTypeDef HAL_I2C_GetMode(I2C_HandleTypeDef *hi2c)
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return hi2c->Mode;
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** * @brief  Return the I2C error code.
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *              the configuration information for the specified I2C.
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** * @retval I2C Error Code
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** */
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** uint32_t HAL_I2C_GetError(I2C_HandleTypeDef *hi2c)
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return hi2c->ErrorCode;
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @}
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */  
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @}
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /** @addtogroup I2C_Private_Functions
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @{
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with Interrupt.
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint16_t devaddress = 0U;
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process Locked */
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear NACK Flag */
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set corresponding Error Code */
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Flush TX register */
ARM GAS  /tmp/cccVlT9k.s 			page 59


3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Read data from RXDR */
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize--;
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount--;
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Write data to TXDR */
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize--;
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount--;	
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, hi2c->XferOptions, I2C_NO_STARTSTOP)
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call TxCpltCallback() if no stop mode is set */
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Call I2C Master Sequential complete process */
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITMasterSequentialCplt(hi2c);
3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Wrong size Status regarding TCR flag event */
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Call the corresponding callback to inform upper layer of End of Transfer */
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
ARM GAS  /tmp/cccVlT9k.s 			page 60


3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Generate a stop condition in case of no transfer option */
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferOptions == I2C_NO_OPTION_FRAME)
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Generate Stop */
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         else
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Call I2C Master Sequential complete process */
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_ITMasterSequentialCplt(hi2c);
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wrong size Status regarding TC flag event */
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call I2C Master complete process */
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process Unlocked */
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with Interrupt.
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_IT(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint3
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process locked */
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Mean XferCount == 0*/
3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* So clear Flag NACKF only */
ARM GAS  /tmp/cccVlT9k.s 			page 61


3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (hi2c->State == HAL_I2C_STATE_LISTEN))
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Call I2C Listen complete process */
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, ITFlags);
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else if((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_L
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Clear NACK Flag */
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Flush TX register */
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Clear NACK Flag */
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear NACK Flag */
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Read data from RXDR */
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferCount == 0U) && \
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call I2C Slave Sequential complete process */
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITSlaveSequentialCplt(hi2c);
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****    }
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
ARM GAS  /tmp/cccVlT9k.s 			page 62


3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Write data to TXDR only if XferCount not reach "0" */
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* A TXIS flag can be set, during STOP treatment      */
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check if all Datas have already been sent */
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If it is the case, this last write in TXDR is not sent, correspond to a dummy TXIS event */
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Write data to TXDR */
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Last Byte is Transmitted */
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Call I2C Slave Sequential complete process */
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check if STOPF is set */
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process Unlocked */
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Master Mode with DMA.
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Master_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uin
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint16_t devaddress = 0U;
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xfermode = 0U;
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process Locked */
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear NACK Flag */
3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
ARM GAS  /tmp/cccVlT9k.s 			page 63


3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set corresponding Error Code */
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* No need to generate STOP, it is automatically done */
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* But enable STOP interrupt, to treat it */
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Error callback will be send during stop flag treatment */
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Flush TX register */
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable TC interrupt */
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount != 0U)
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Recover Slave address */
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Prepare the new XferSize to transfer */
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         xfermode = I2C_AUTOEND_MODE;
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set the new XferSize in Nbytes register */
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Update XferCount value */
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable DMA Request */
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Wrong size Status regarding TCR flag event */
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
ARM GAS  /tmp/cccVlT9k.s 			page 64


3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call I2C Master complete process */
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process Unlocked */
3573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
3576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Interrupt Sub-Routine which handle the Interrupt Flags Slave Mode with DMA.
3580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITSources Interrupt sources enabled.
3584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
3585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Slave_ISR_DMA(struct __I2C_HandleTypeDef *hi2c, uint32_t ITFlags, uint
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process locked */
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
3590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
3592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check that I2C transfer finished */
3594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* if yes, normal use case, a NACK is sent by the MASTER when Transfer is finished */
3595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Mean XferCount == 0 */
3596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* So clear Flag NACKF only */
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
3598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear NACK Flag */
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* if no, error use case, a Non-Acknowledge of last Data is generated by the MASTER*/
3605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear NACK Flag */
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       
3608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
3609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
3613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear ADDR flag */
3615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
3618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call I2C Slave complete process */
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
3621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 65


3623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process Unlocked */
3624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
3625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
3627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for write reques
3631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
3635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
3640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint1
3642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
3644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
3651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
3655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
3660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Memory Address */
3662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
3665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
3666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
3669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
3676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
ARM GAS  /tmp/cccVlT9k.s 			page 66


3680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
3683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Wait until TCR flag is set */
3688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
3689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_TIMEOUT;
3691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** return HAL_OK;
3694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Master sends target device address followed by internal memory address for read request
3698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
3700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Target device address: The device 7 bits address value
3701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *         in datasheet must be shift at right before call interface
3702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddress Internal memory address
3703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  MemAddSize Size of internal memory address
3704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
3705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Tickstart Tick start value
3706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
3707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_RequestMemoryRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16
3709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
3711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Wait until TXIS flag is set */
3713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
3718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
3722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If Memory address size is 8Bit */
3726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
3727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send Memory Address */
3729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If Memory address size is 16Bit */
3732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
3733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send MSB of Memory Address */
3735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
3736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 67


3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until TXIS flag is set */
3738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
3739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
3741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
3743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
3747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
3750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Send LSB of Memory Address */
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
3752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Wait until TC flag is set */
3755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
3756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_TIMEOUT;
3758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C Address complete process callback.
3765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITAddrCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint8_t transferdirection = 0U;
3772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint16_t slaveaddrcode = 0U;
3773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint16_t ownadd1code = 0U;
3774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint16_t ownadd2code = 0U;
3775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
3777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(ITFlags);
3778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* In case of Listen state, need to inform upper layer of address match code event */
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
3781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
3783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
3784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
3785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
3786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If 10bits addressing mode is selected */
3788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
3789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
3791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         slaveaddrcode = ownadd1code;
3793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->AddrEventCount++;
ARM GAS  /tmp/cccVlT9k.s 			page 68


3794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->AddrEventCount == 2U)
3795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
3796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Reset Address Event counter */
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
3798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Clear ADDR flag */
3800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
3801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Process Unlocked */
3803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
3804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Call Slave Addr callback */
3806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
3808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else
3810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
3811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         slaveaddrcode = ownadd2code;
3812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Disable ADDR Interrupts */
3814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
3817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
3818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Call Slave Addr callback */
3820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
3822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* else 7 bits addressing mode is selected */
3824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable ADDR Interrupts */
3827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
3828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
3830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call Slave Addr callback */
3833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
3834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Else clear address flag only */
3837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
3838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear ADDR flag */
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
3841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
3843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C Master sequential complete process.
3849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
ARM GAS  /tmp/cccVlT9k.s 			page 69


3851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITMasterSequentialCplt(I2C_HandleTypeDef *hi2c)
3853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Reset I2C handle mode */
3855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
3856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* No Generate Stop, to permit restart mode */
3858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* The stop will be done at the end of transfer, when I2C_AUTOEND_MODE enable */
3859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
3860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
3862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
3863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
3864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Interrupts */
3866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
3869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
3873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
3875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
3876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
3878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
3880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Interrupts */
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
3885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
3889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C Slave sequential complete process.
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITSlaveSequentialCplt(I2C_HandleTypeDef *hi2c)
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Reset I2C handle mode */
3900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
3903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_TX, keep only HAL_I2C_STATE_LISTEN */
3905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
3907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 70


3908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Interrupts */
3909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
3910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
3912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the Tx complete callback to inform upper layer of the end of transmit process */
3915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
3916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
3919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Remove HAL_I2C_STATE_SLAVE_BUSY_RX, keep only HAL_I2C_STATE_LISTEN */
3921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
3922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
3923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable Interrupts */
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
3926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
3928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
3929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the Rx complete callback to inform upper layer of the end of receive process */
3931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
3932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
3934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
3936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C Master complete process.
3937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
3938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
3940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
3941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITMasterCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
3943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Clear STOP Flag */
3944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
3945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
3947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
3948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Reset handle parameters */
3950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
3952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
3953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((ITFlags & I2C_FLAG_AF) != RESET)
3955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear NACK Flag */
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
3958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set acknowledge error code */
3960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
3961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Flush TX register */
3964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 71


3965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Interrupts */
3967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT| I2C_XFER_RX_IT);
3968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
3971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
3974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
3975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_TX */
3976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_TX)
3977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
3978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
3979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
3981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
3983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
3985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
3989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
3990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
3991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
3992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
3993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
3995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
3996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
3997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call the corresponding callback to inform upper layer of End of Transfer */
3998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
3999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* hi2c->State == HAL_I2C_STATE_BUSY_RX */
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
4003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
4007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
4011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
4014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
4016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
4020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 72


4022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
4023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C Slave complete process.
4029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITSlaveCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Clear STOP Flag */
4036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Clear ADDR flag */
4039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
4040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable all interrupts */
4042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
4043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Address Acknowledge */
4045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Clear Configuration Register 2 */
4048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
4049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Flush TX register */
4051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
4052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If a DMA is ongoing, Update handle size context */
4054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
4055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
4056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
4058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* All data are not transferred, so set error code accordingly */
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferCount != 0U)
4062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set ErrorCode corresponding to a Non-Acknowledge */
4064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Store Last receive data if any */
4068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
4069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Read data from RXDR */
4071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
4072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
4074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
4077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
ARM GAS  /tmp/cccVlT9k.s 			page 73


4079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
4085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferISR = NULL;
4086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
4088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
4091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_LISTEN)
4094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call I2C Listen complete process */
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, ITFlags);
4097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
4102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
4109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
4112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the Slave Rx Complete callback */
4119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
4120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
4122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the Slave Tx Complete callback */
4129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C Listen complete process.
4135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
ARM GAS  /tmp/cccVlT9k.s 			page 74


4136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ITFlags Interrupt flags to handle.
4137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITListenCplt(I2C_HandleTypeDef *hi2c, uint32_t ITFlags)
4140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Reset handle parameters */
4142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
4143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
4146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferISR = NULL;
4147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Store Last receive data if any */
4149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Read data from RXDR */
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
4153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
4155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
4158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set ErrorCode corresponding to a Non-Acknowledge */
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
4161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable all Interrupts*/
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Clear NACK Flag */
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Process Unlocked */
4171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
4172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Call the Listen Complete callback, to inform upper layer of the end of Listen usecase */
4174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
4175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C interrupts error process.
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  ErrorCode Error code to handle.
4181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_ITError(I2C_HandleTypeDef *hi2c, uint32_t ErrorCode)
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Reset handle parameters */
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
4187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
4188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
4189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Set new error code */
4191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
4192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 75


4193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Interrupts */
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
4195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
4196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
4197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable all interrupts, except interrupts related to LISTEN state */
4199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* keep HAL_I2C_STATE_LISTEN if set */
4202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
4203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
4205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
4207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable all interrupts */
4209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
4210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
4211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* If state is an abort treatment on goind, don't change state */
4212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* This change will be do later */
4213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State != HAL_I2C_STATE_ABORT)
4214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Set HAL_I2C_STATE_READY */
4216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
4217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
4219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Abort DMA TX transfer if any */
4223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
4224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
4230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Abort DMA TX */
4235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
4236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call Directly XferAbortCallback function in case of error */
4238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
4239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Abort DMA RX transfer if any */
4242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
4243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the I2C DMA Abort callback :
4247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        will lead to call HAL_I2C_ErrorCallback() at end of DMA abort procedure */
4248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
4249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
ARM GAS  /tmp/cccVlT9k.s 			page 76


4250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Abort DMA RX */
4254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
4255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Call Directly hi2c->hdmarx->XferAbortCallback function in case of error */
4257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
4258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_ABORT)
4261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
4264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
4269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
4271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  I2C Tx data register flush process.
4282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
4286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
  28              		.loc 1 4286 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
4287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If a pending TXIS flag is set */
4288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Write a dummy data in TXDR to clear it */
4289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
  34              		.loc 1 4289 0
  35 0000 0368     		ldr	r3, [r0]
  36 0002 9A69     		ldr	r2, [r3, #24]
  37 0004 12F0020F 		tst	r2, #2
  38 0008 01D0     		beq	.L2
4290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      hi2c->Instance->TXDR = 0x00U;
  39              		.loc 1 4291 0
  40 000a 0022     		movs	r2, #0
  41 000c 9A62     		str	r2, [r3, #40]
  42              	.L2:
ARM GAS  /tmp/cccVlT9k.s 			page 77


4292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Flush TX register if not empty */
4295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
  43              		.loc 1 4295 0
  44 000e 0368     		ldr	r3, [r0]
  45 0010 9A69     		ldr	r2, [r3, #24]
  46 0012 12F0010F 		tst	r2, #1
  47 0016 03D1     		bne	.L1
4296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
  48              		.loc 1 4297 0
  49 0018 9A69     		ldr	r2, [r3, #24]
  50 001a 42F00102 		orr	r2, r2, #1
  51 001e 9A61     		str	r2, [r3, #24]
  52              	.L1:
  53 0020 7047     		bx	lr
  54              		.cfi_endproc
  55              	.LFE181:
  57 0022 00BF     		.section	.text.I2C_DMASlaveTransmitCplt,"ax",%progbits
  58              		.align	2
  59              		.thumb
  60              		.thumb_func
  62              	I2C_DMASlaveTransmitCplt:
  63              	.LFB183:
4298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  DMA I2C master transmit process complete callback.
4303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hdma DMA handle
4304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAMasterTransmitCplt(DMA_HandleTypeDef *hdma)
4307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
4309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable DMA Request */
4311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
4312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
4315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable STOP interrupt */
4317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
4321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Update Buffer pointer */
4323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
ARM GAS  /tmp/cccVlT9k.s 			page 78


4330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
4331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
4333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable the DMA channel */
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, hi2c-
4337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable TC interrupts */
4339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  DMA I2C slave transmit process complete callback.
4345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hdma DMA handle
4346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMASlaveTransmitCplt(DMA_HandleTypeDef *hdma)
4349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
  64              		.loc 1 4349 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              		@ link register save eliminated.
  69              	.LVL1:
  70 0000 7047     		bx	lr
  71              		.cfi_endproc
  72              	.LFE183:
  74 0002 00BF     		.section	.text.I2C_DMASlaveReceiveCplt,"ax",%progbits
  75              		.align	2
  76              		.thumb
  77              		.thumb_func
  79              	I2C_DMASlaveReceiveCplt:
  80              	.LFB185:
4350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hdma);
4352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
4355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief DMA I2C master receive process complete callback.
4360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hdma DMA handle
4361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAMasterReceiveCplt(DMA_HandleTypeDef *hdma)
4364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
4366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable DMA Request */
4368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
4369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* If last transfer, enable STOP interrupt */
4371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
ARM GAS  /tmp/cccVlT9k.s 			page 79


4372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable STOP interrupt */
4374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
4375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* else prepare a new DMA transfer and enable TCReload interrupt */
4377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
4378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Update Buffer pointer */
4380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
4381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Set the XferSize to transfer */
4383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
4384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     else
4388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
4390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable the DMA channel */
4393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, hi2c-
4394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable TC interrupts */
4396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
4397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  DMA I2C slave receive process complete callback.
4402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hdma DMA handle
4403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMASlaveReceiveCplt(DMA_HandleTypeDef *hdma)
4406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
  81              		.loc 1 4406 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 0
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              		@ link register save eliminated.
  86              	.LVL2:
  87 0000 7047     		bx	lr
  88              		.cfi_endproc
  89              	.LFE185:
  91 0002 00BF     		.section	.text.I2C_TransferConfig,"ax",%progbits
  92              		.align	2
  93              		.thumb
  94              		.thumb_func
  96              	I2C_TransferConfig:
  97              	.LFB193:
4407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Prevent unused argument(s) compilation warning */
4408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   UNUSED(hdma);
4409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* No specific action, Master fully manage the generation of STOP condition */
4411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Mean that this generation can arrive at any time, at the end or during DMA process */
4412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* So STOP condition should be manage through Interrupt treatment */
4413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
ARM GAS  /tmp/cccVlT9k.s 			page 80


4414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  DMA I2C communication error callback.
4417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param hdma DMA handle
4418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAError(DMA_HandleTypeDef *hdma)
4421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Acknowledge */
4425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Call the corresponding callback to inform upper layer of End of Transfer */
4428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
4429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief DMA I2C communication abort callback
4433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *        (To be called at end of DMA Abort procedure).
4434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param hdma: DMA handle.
4435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_DMAAbort(DMA_HandleTypeDef *hdma)
4438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
4440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable Acknowledge */
4442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
4443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Reset AbortCpltCallback */
4445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
4446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
4447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check if come from abort from user */
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_ABORT)
4450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
4452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
4453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
4455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
4457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Call the corresponding callback to inform upper layer of End of Transfer */
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
4460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout.
4465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Flag Specifies the I2C flag to check.
4468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Status The new Flag status (SET or RESET).
4469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Tickstart Tick start value
ARM GAS  /tmp/cccVlT9k.s 			page 81


4471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
4472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagSta
4474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
4476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check for the Timeout */
4478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
4479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
4481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
4482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
4483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
4484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
4488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
4489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of TXIS flag.
4496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
4501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
4505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check if a NACK is detected */
4507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
4510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check for the Timeout */
4513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
4514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
4517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
4520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         /* Process Unlocked */
4522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
4523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
4525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
4526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
ARM GAS  /tmp/cccVlT9k.s 			page 82


4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of STOP flag.
4533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
4538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check if a NACK is detected */
4544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
4547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check for the Timeout */
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
4554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
4557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
4560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
4563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  This function handles I2C Communication Timeout for specific usage of RXNE flag.
4567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
4572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, 
4574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
4576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check if a NACK is detected */
4578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
4579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
4581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check if a STOPF is detected */
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
ARM GAS  /tmp/cccVlT9k.s 			page 83


4585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear STOP Flag */
4587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Clear Configuration Register 2 */
4590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_RESET_CR2(hi2c);
4591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
4593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
4595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
4597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
4600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Check for the Timeout */
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
4606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
4607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Process Unlocked */
4609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
4610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
4612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
4615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  This function handles Acknowledge failed detection during an I2C Communication.
4619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Timeout Timeout duration
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Tickstart Tick start value
4623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
4624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_
4626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
4627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
4628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Wait until STOP Flag is reset */
4630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* AutoEnd should be initiate after AF */
4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
4632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Check for the Timeout */
4634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(Timeout != HAL_MAX_DELAY)
4635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       {
4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
4637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         {
4638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->State= HAL_I2C_STATE_READY;
4639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
4640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           /* Process Unlocked */
ARM GAS  /tmp/cccVlT9k.s 			page 84


4642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
4643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
4644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         }
4645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       }
4646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear NACKF Flag */
4649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear STOP Flag */
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
4653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Flush TX register */
4655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
4656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Clear Configuration Register 2 */
4658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_AF;
4661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State= HAL_I2C_STATE_READY;
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
4663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Process Unlocked */
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
4666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
4668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
4670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
4671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Handles I2Cx communication when starting transfer or during transfer (TC or TCR flag ar
4674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c I2C handle.
4675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  DevAddress Specifies the slave address to be programmed.
4676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Size Specifies the number of bytes to be programmed.
4677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *   This parameter must be a value between 0 and 255.
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Mode New state of the I2C START condition generation.
4679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *     @arg @ref I2C_RELOAD_MODE Enable Reload mode .
4681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *     @arg @ref I2C_AUTOEND_MODE Enable Automatic end mode.
4682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *     @arg @ref I2C_SOFTEND_MODE Enable Software end mode.
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  Request New state of the I2C START condition generation.
4684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *   This parameter can be one of the following values:
4685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *     @arg @ref I2C_NO_STARTSTOP Don't Generate stop and start condition.
4686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_STOP Generate stop condition (Size should be set to 0).
4687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_READ Generate Restart for read request.
4688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
4689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval None
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c,  uint16_t DevAddress, uint8_t Size, uint32_
4692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
  98              		.loc 1 4692 0
  99              		.cfi_startproc
 100              		@ args = 4, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.LVL3:
ARM GAS  /tmp/cccVlT9k.s 			page 85


 104              		.loc 1 4692 0
 105 0000 10B4     		push	{r4}
 106              	.LCFI0:
 107              		.cfi_def_cfa_offset 4
 108              		.cfi_offset 4, -4
 109              	.LVL4:
4693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tmpreg = 0U;
4694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Check the parameters */
4696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
4697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_TRANSFER_MODE(Mode));
4698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   assert_param(IS_TRANSFER_REQUEST(Request));
4699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Get the CR2 register value */
4701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   tmpreg = hi2c->Instance->CR2;
 110              		.loc 1 4701 0
 111 0002 0068     		ldr	r0, [r0]
 112              	.LVL5:
 113 0004 4468     		ldr	r4, [r0, #4]
 114              	.LVL6:
4702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* clear tmpreg specific bits */
4704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   tmpreg &= (uint32_t)~((uint32_t)(I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND
 115              		.loc 1 4704 0
 116 0006 24F07F74 		bic	r4, r4, #66846720
 117              	.LVL7:
 118 000a 24F45934 		bic	r4, r4, #222208
 119 000e 24F47F74 		bic	r4, r4, #1020
 120 0012 24F00304 		bic	r4, r4, #3
 121              	.LVL8:
4705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* update tmpreg */
4707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   tmpreg |= (uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | (((uint32_t)Size << 16 ) & I2C_CR2_N
 122              		.loc 1 4707 0
 123 0016 C1F30901 		ubfx	r1, r1, #0, #10
 124              	.LVL9:
 125 001a 41EA0242 		orr	r2, r1, r2, lsl #16
 126              	.LVL10:
 127 001e 1343     		orrs	r3, r3, r2
 128              	.LVL11:
 129 0020 0199     		ldr	r1, [sp, #4]
 130 0022 1943     		orrs	r1, r1, r3
 131 0024 0C43     		orrs	r4, r4, r1
 132              	.LVL12:
4708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             (uint32_t)Mode | (uint32_t)Request);
4709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* update CR2 register */
4711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 = tmpreg;
 133              		.loc 1 4711 0
 134 0026 4460     		str	r4, [r0, #4]
4712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 135              		.loc 1 4712 0
 136 0028 5DF8044B 		ldr	r4, [sp], #4
 137              	.LVL13:
 138 002c 7047     		bx	lr
 139              		.cfi_endproc
 140              	.LFE193:
ARM GAS  /tmp/cccVlT9k.s 			page 86


 142 002e 00BF     		.section	.text.I2C_Enable_IRQ,"ax",%progbits
 143              		.align	2
 144              		.thumb
 145              		.thumb_func
 147              	I2C_Enable_IRQ:
 148              	.LFB194:
4713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Manage the enabling of Interrupts.
4716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
4720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Enable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 149              		.loc 1 4722 0
 150              		.cfi_startproc
 151              		@ args = 0, pretend = 0, frame = 0
 152              		@ frame_needed = 0, uses_anonymous_args = 0
 153              		@ link register save eliminated.
 154              	.LVL14:
4723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
4724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->XferISR == I2C_Master_ISR_DMA) || \
 155              		.loc 1 4725 0
 156 0000 436B     		ldr	r3, [r0, #52]
 157 0002 1C4A     		ldr	r2, .L19
 158 0004 9342     		cmp	r3, r2
 159 0006 02D0     		beq	.L8
 160              		.loc 1 4725 0 is_stmt 0 discriminator 1
 161 0008 1B4A     		ldr	r2, .L19+4
 162 000a 9342     		cmp	r3, r2
 163 000c 15D1     		bne	.L9
 164              	.L8:
4726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      (hi2c->XferISR == I2C_Slave_ISR_DMA))
4727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 165              		.loc 1 4728 0 is_stmt 1
 166 000e 01F00403 		and	r3, r1, #4
 167 0012 9BB2     		uxth	r3, r3
 168 0014 03B1     		cbz	r3, .L10
4729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK and ADDR interrupts */
4731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 169              		.loc 1 4731 0
 170 0016 B823     		movs	r3, #184
 171              	.L10:
 172              	.LVL15:
4732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 173              		.loc 1 4734 0
 174 0018 01F01102 		and	r2, r1, #17
 175 001c 112A     		cmp	r2, #17
 176 001e 01D1     		bne	.L11
4735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
ARM GAS  /tmp/cccVlT9k.s 			page 87


4736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR and NACK interrupts */
4737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 177              		.loc 1 4737 0
 178 0020 43F09003 		orr	r3, r3, #144
 179              	.LVL16:
 180              	.L11:
4738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 181              		.loc 1 4740 0
 182 0024 01F01201 		and	r1, r1, #18
 183              	.LVL17:
 184 0028 1229     		cmp	r1, #18
 185 002a 01D1     		bne	.L12
4741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable STOP interrupts */
4743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 186              		.loc 1 4743 0
 187 002c 43F02003 		orr	r3, r3, #32
 188              	.LVL18:
 189              	.L12:
4744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     
4746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 190              		.loc 1 4746 0
 191 0030 1229     		cmp	r1, #18
 192 0032 18D1     		bne	.L13
4747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable TC interrupts */
4749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_TCI;
 193              		.loc 1 4749 0
 194 0034 43F04003 		orr	r3, r3, #64
 195              	.LVL19:
 196 0038 15E0     		b	.L13
 197              	.LVL20:
 198              	.L9:
4750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else
4753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 199              		.loc 1 4754 0
 200 003a 01F00403 		and	r3, r1, #4
 201 003e 9BB2     		uxth	r3, r3
 202 0040 03B1     		cbz	r3, .L14
4755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR, STOP, NACK, and ADDR interrupts */
4757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 203              		.loc 1 4757 0
 204 0042 B823     		movs	r3, #184
 205              	.L14:
 206              	.LVL21:
4758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 207              		.loc 1 4760 0
 208 0044 11F0010F 		tst	r1, #1
ARM GAS  /tmp/cccVlT9k.s 			page 88


 209 0048 01D0     		beq	.L15
4761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and RXI interrupts */
4763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_TXI;
 210              		.loc 1 4763 0
 211 004a 43F0F203 		orr	r3, r3, #242
 212              	.LVL22:
 213              	.L15:
4764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 214              		.loc 1 4766 0
 215 004e 01F00202 		and	r2, r1, #2
 216 0052 92B2     		uxth	r2, r2
 217 0054 0AB1     		cbz	r2, .L16
4767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable ERR, TC, STOP, NACK and TXI interrupts */
4769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_ERRI | I2C_IT_TCI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_RXI;
 218              		.loc 1 4769 0
 219 0056 43F0F403 		orr	r3, r3, #244
 220              	.LVL23:
 221              	.L16:
4770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 222              		.loc 1 4772 0
 223 005a 01F01201 		and	r1, r1, #18
 224              	.LVL24:
 225 005e 1229     		cmp	r1, #18
 226 0060 01D1     		bne	.L13
4773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Enable STOP interrupts */
4775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI;
 227              		.loc 1 4775 0
 228 0062 43F02003 		orr	r3, r3, #32
 229              	.LVL25:
 230              	.L13:
4776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   
4779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Enable interrupts only at the end */
4780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* to avoid the risk of I2C interrupt handle execution before */
4781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* all interrupts requested done */
4782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_ENABLE_IT(hi2c, tmpisr);
 231              		.loc 1 4782 0
 232 0066 0268     		ldr	r2, [r0]
 233 0068 1168     		ldr	r1, [r2]
 234 006a 0B43     		orrs	r3, r3, r1
 235              	.LVL26:
 236 006c 1360     		str	r3, [r2]
4783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
4785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 237              		.loc 1 4785 0
 238 006e 0020     		movs	r0, #0
 239              	.LVL27:
 240 0070 7047     		bx	lr
ARM GAS  /tmp/cccVlT9k.s 			page 89


 241              	.L20:
 242 0072 00BF     		.align	2
 243              	.L19:
 244 0074 00000000 		.word	I2C_Master_ISR_DMA
 245 0078 00000000 		.word	I2C_Slave_ISR_DMA
 246              		.cfi_endproc
 247              	.LFE194:
 249              		.section	.text.I2C_Disable_IRQ,"ax",%progbits
 250              		.align	2
 251              		.thumb
 252              		.thumb_func
 254              	I2C_Disable_IRQ:
 255              	.LFB195:
4786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** /**
4788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @brief  Manage the disabling of Interrupts.
4789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
4790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   *                the configuration information for the specified I2C.
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @param  InterruptRequest Value of @ref I2C_Interrupt_configuration_definition.
4792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   * @retval HAL status
4793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   */
4794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** static HAL_StatusTypeDef I2C_Disable_IRQ(I2C_HandleTypeDef *hi2c, uint16_t InterruptRequest)
4795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 256              		.loc 1 4795 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		@ link register save eliminated.
 261              	.LVL28:
 262 0000 10B4     		push	{r4}
 263              	.LCFI1:
 264              		.cfi_def_cfa_offset 4
 265              		.cfi_offset 4, -4
 266              	.LVL29:
4796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
4797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_TX_IT) == I2C_XFER_TX_IT)
 267              		.loc 1 4798 0
 268 0002 11F0010F 		tst	r1, #1
 269 0006 07D0     		beq	.L28
 270              	.LVL30:
4799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable TC and TXI interrupts */
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
4802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 271              		.loc 1 4803 0
 272 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 273 000c 03F02803 		and	r3, r3, #40
 274 0010 282B     		cmp	r3, #40
 275 0012 03D1     		bne	.L29
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_TXI;
 276              		.loc 1 4801 0
 277 0014 4223     		movs	r3, #66
 278 0016 02E0     		b	.L22
 279              	.LVL31:
 280              	.L28:
ARM GAS  /tmp/cccVlT9k.s 			page 90


4796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t tmpisr = 0U;
 281              		.loc 1 4796 0
 282 0018 0023     		movs	r3, #0
 283 001a 00E0     		b	.L22
 284              	.LVL32:
 285              	.L29:
4804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 286              		.loc 1 4806 0
 287 001c F223     		movs	r3, #242
 288              	.LVL33:
 289              	.L22:
4807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_RX_IT) == I2C_XFER_RX_IT)
 290              		.loc 1 4810 0
 291 001e 01F00202 		and	r2, r1, #2
 292 0022 92B2     		uxth	r2, r2
 293 0024 5AB1     		cbz	r2, .L23
4811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable TC and RXI interrupts */
4813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 294              		.loc 1 4813 0
 295 0026 43F04404 		orr	r4, r3, #68
 296              	.LVL34:
4814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->State & HAL_I2C_STATE_LISTEN) != HAL_I2C_STATE_LISTEN)
 297              		.loc 1 4815 0
 298 002a 90F84120 		ldrb	r2, [r0, #65]	@ zero_extendqisi2
 299 002e 02F02802 		and	r2, r2, #40
 300 0032 282A     		cmp	r2, #40
 301 0034 02D0     		beq	.L30
4816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     {
4817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       /* Disable NACK and STOP interrupts */
4818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tmpisr |= I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 302              		.loc 1 4818 0
 303 0036 43F0F403 		orr	r3, r3, #244
 304              	.LVL35:
 305 003a 00E0     		b	.L23
 306              	.LVL36:
 307              	.L30:
4813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI | I2C_IT_RXI;
 308              		.loc 1 4813 0
 309 003c 2346     		mov	r3, r4
 310              	.LVL37:
 311              	.L23:
4819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }
4820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_LISTEN_IT) == I2C_XFER_LISTEN_IT)
 312              		.loc 1 4822 0
 313 003e 01F00402 		and	r2, r1, #4
 314 0042 92B2     		uxth	r2, r2
 315 0044 0AB1     		cbz	r2, .L24
4823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
ARM GAS  /tmp/cccVlT9k.s 			page 91


4824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Disable ADDR, NACK and STOP interrupts */
4825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_ADDRI | I2C_IT_STOPI | I2C_IT_NACKI | I2C_IT_ERRI;
 316              		.loc 1 4825 0
 317 0046 43F0B803 		orr	r3, r3, #184
 318              	.LVL38:
 319              	.L24:
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_ERROR_IT) == I2C_XFER_ERROR_IT)
 320              		.loc 1 4828 0
 321 004a 01F01102 		and	r2, r1, #17
 322 004e 112A     		cmp	r2, #17
 323 0050 01D1     		bne	.L25
4829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable ERR and NACK interrupts */
4831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_ERRI | I2C_IT_NACKI;
 324              		.loc 1 4831 0
 325 0052 43F09003 		orr	r3, r3, #144
 326              	.LVL39:
 327              	.L25:
4832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_CPLT_IT) == I2C_XFER_CPLT_IT)
 328              		.loc 1 4834 0
 329 0056 01F01201 		and	r1, r1, #18
 330              	.LVL40:
 331 005a 1229     		cmp	r1, #18
 332 005c 01D1     		bne	.L26
4835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable STOP interrupts */
4837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_STOPI;
 333              		.loc 1 4837 0
 334 005e 43F02003 		orr	r3, r3, #32
 335              	.LVL41:
 336              	.L26:
4838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   
4840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((InterruptRequest & I2C_XFER_RELOAD_IT) == I2C_XFER_RELOAD_IT)
 337              		.loc 1 4840 0
 338 0062 1229     		cmp	r1, #18
 339 0064 01D1     		bne	.L27
4841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   {
4842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     /* Enable TC interrupts */
4843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmpisr |= I2C_IT_TCI;
 340              		.loc 1 4843 0
 341 0066 43F04003 		orr	r3, r3, #64
 342              	.LVL42:
 343              	.L27:
4844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   }
4845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* Disable interrupts only at the end */
4847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* to avoid a breaking situation like at "t" time */
4848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   /* all disable interrupts request are not done */
4849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_DISABLE_IT(hi2c, tmpisr);
 344              		.loc 1 4849 0
 345 006a 0268     		ldr	r2, [r0]
 346 006c 1168     		ldr	r1, [r2]
ARM GAS  /tmp/cccVlT9k.s 			page 92


 347 006e 21EA0303 		bic	r3, r1, r3
 348              	.LVL43:
 349 0072 1360     		str	r3, [r2]
4850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 
4851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
4852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 350              		.loc 1 4852 0
 351 0074 0020     		movs	r0, #0
 352              	.LVL44:
 353 0076 5DF8044B 		ldr	r4, [sp], #4
 354 007a 7047     		bx	lr
 355              		.cfi_endproc
 356              	.LFE195:
 358              		.section	.text.I2C_IsAcknowledgeFailed,"ax",%progbits
 359              		.align	2
 360              		.thumb
 361              		.thumb_func
 363              	I2C_IsAcknowledgeFailed:
 364              	.LFB192:
4626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 365              		.loc 1 4626 0
 366              		.cfi_startproc
 367              		@ args = 0, pretend = 0, frame = 0
 368              		@ frame_needed = 0, uses_anonymous_args = 0
 369              	.LVL45:
 370 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 371              	.LCFI2:
 372              		.cfi_def_cfa_offset 24
 373              		.cfi_offset 3, -24
 374              		.cfi_offset 4, -20
 375              		.cfi_offset 5, -16
 376              		.cfi_offset 6, -12
 377              		.cfi_offset 7, -8
 378              		.cfi_offset 14, -4
 379 0002 0546     		mov	r5, r0
 380 0004 0E46     		mov	r6, r1
 381 0006 1746     		mov	r7, r2
4627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 382              		.loc 1 4627 0
 383 0008 0368     		ldr	r3, [r0]
 384 000a 9B69     		ldr	r3, [r3, #24]
 385 000c 13F0100F 		tst	r3, #16
 386 0010 14D1     		bne	.L38
4669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 387              		.loc 1 4669 0
 388 0012 0020     		movs	r0, #0
 389              	.LVL46:
 390 0014 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 391              	.LVL47:
 392              	.L36:
4634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(Timeout != HAL_MAX_DELAY)
 393              		.loc 1 4634 0
 394 0016 B6F1FF3F 		cmp	r6, #-1
 395 001a 0FD0     		beq	.L38
4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 396              		.loc 1 4636 0
 397 001c 26B1     		cbz	r6, .L35
ARM GAS  /tmp/cccVlT9k.s 			page 93


4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 398              		.loc 1 4636 0 is_stmt 0 discriminator 1
 399 001e FFF7FEFF 		bl	HAL_GetTick
 400              	.LVL48:
 401 0022 C01B     		subs	r0, r0, r7
 402 0024 B042     		cmp	r0, r6
 403 0026 09D9     		bls	.L38
 404              	.L35:
4638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->State= HAL_I2C_STATE_READY;
 405              		.loc 1 4638 0 is_stmt 1
 406 0028 2023     		movs	r3, #32
 407 002a 85F84130 		strb	r3, [r5, #65]
4639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->Mode = HAL_I2C_MODE_NONE;
 408              		.loc 1 4639 0
 409 002e 0023     		movs	r3, #0
 410 0030 85F84230 		strb	r3, [r5, #66]
4642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
 411              		.loc 1 4642 0
 412 0034 85F84030 		strb	r3, [r5, #64]
4643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 413              		.loc 1 4643 0
 414 0038 0320     		movs	r0, #3
 415 003a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 416              	.LVL49:
 417              	.L38:
4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 418              		.loc 1 4631 0 discriminator 1
 419 003c 2B68     		ldr	r3, [r5]
 420 003e 9C69     		ldr	r4, [r3, #24]
 421 0040 14F0200F 		tst	r4, #32
 422 0044 E7D0     		beq	.L36
4649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 423              		.loc 1 4649 0
 424 0046 1022     		movs	r2, #16
 425 0048 DA61     		str	r2, [r3, #28]
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 426              		.loc 1 4652 0
 427 004a 2B68     		ldr	r3, [r5]
 428 004c 2024     		movs	r4, #32
 429 004e DC61     		str	r4, [r3, #28]
4655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 430              		.loc 1 4655 0
 431 0050 2846     		mov	r0, r5
 432 0052 FFF7FEFF 		bl	I2C_Flush_TXDR
 433              	.LVL50:
4658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 434              		.loc 1 4658 0
 435 0056 2B68     		ldr	r3, [r5]
 436 0058 5A68     		ldr	r2, [r3, #4]
 437 005a 22F0FF72 		bic	r2, r2, #33423360
 438 005e 22F48B32 		bic	r2, r2, #71168
 439 0062 22F4FF72 		bic	r2, r2, #510
 440 0066 22F00102 		bic	r2, r2, #1
 441 006a 5A60     		str	r2, [r3, #4]
4660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 442              		.loc 1 4660 0
 443 006c 0423     		movs	r3, #4
ARM GAS  /tmp/cccVlT9k.s 			page 94


 444 006e 6B64     		str	r3, [r5, #68]
4661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State= HAL_I2C_STATE_READY;
 445              		.loc 1 4661 0
 446 0070 85F84140 		strb	r4, [r5, #65]
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 447              		.loc 1 4662 0
 448 0074 0023     		movs	r3, #0
 449 0076 85F84230 		strb	r3, [r5, #66]
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 450              		.loc 1 4665 0
 451 007a 85F84030 		strb	r3, [r5, #64]
4667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 452              		.loc 1 4667 0
 453 007e 0120     		movs	r0, #1
4670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 454              		.loc 1 4670 0
 455 0080 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 456              		.cfi_endproc
 457              	.LFE192:
 459 0082 00BF     		.section	.text.I2C_WaitOnTXISFlagUntilTimeout,"ax",%progbits
 460              		.align	2
 461              		.thumb
 462              		.thumb_func
 464              	I2C_WaitOnTXISFlagUntilTimeout:
 465              	.LFB189:
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 466              		.loc 1 4503 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL51:
 471 0000 70B5     		push	{r4, r5, r6, lr}
 472              	.LCFI3:
 473              		.cfi_def_cfa_offset 16
 474              		.cfi_offset 4, -16
 475              		.cfi_offset 5, -12
 476              		.cfi_offset 6, -8
 477              		.cfi_offset 14, -4
 478 0002 0446     		mov	r4, r0
 479 0004 0D46     		mov	r5, r1
 480 0006 1646     		mov	r6, r2
4504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 481              		.loc 1 4504 0
 482 0008 1CE0     		b	.L46
 483              	.LVL52:
 484              	.L44:
4507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 485              		.loc 1 4507 0
 486 000a 2046     		mov	r0, r4
 487 000c 2946     		mov	r1, r5
 488 000e 3246     		mov	r2, r6
 489 0010 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 490              	.LVL53:
 491 0014 E8B9     		cbnz	r0, .L45
4513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
 492              		.loc 1 4513 0
 493 0016 B5F1FF3F 		cmp	r5, #-1
ARM GAS  /tmp/cccVlT9k.s 			page 95


 494 001a 13D0     		beq	.L46
4515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 495              		.loc 1 4515 0
 496 001c 25B1     		cbz	r5, .L43
4515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 497              		.loc 1 4515 0 is_stmt 0 discriminator 1
 498 001e FFF7FEFF 		bl	HAL_GetTick
 499              	.LVL54:
 500 0022 801B     		subs	r0, r0, r6
 501 0024 A842     		cmp	r0, r5
 502 0026 0DD9     		bls	.L46
 503              	.L43:
4517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 504              		.loc 1 4517 0 is_stmt 1
 505 0028 636C     		ldr	r3, [r4, #68]
 506 002a 43F02003 		orr	r3, r3, #32
 507 002e 6364     		str	r3, [r4, #68]
4518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
 508              		.loc 1 4518 0
 509 0030 2023     		movs	r3, #32
 510 0032 84F84130 		strb	r3, [r4, #65]
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 511              		.loc 1 4519 0
 512 0036 0023     		movs	r3, #0
 513 0038 84F84230 		strb	r3, [r4, #66]
4522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 514              		.loc 1 4522 0
 515 003c 84F84030 		strb	r3, [r4, #64]
4524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 516              		.loc 1 4524 0
 517 0040 0320     		movs	r0, #3
 518 0042 70BD     		pop	{r4, r5, r6, pc}
 519              	.LVL55:
 520              	.L46:
4504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 521              		.loc 1 4504 0 discriminator 1
 522 0044 2368     		ldr	r3, [r4]
 523 0046 9B69     		ldr	r3, [r3, #24]
 524 0048 13F0020F 		tst	r3, #2
 525 004c DDD0     		beq	.L44
4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 526              		.loc 1 4528 0
 527 004e 0020     		movs	r0, #0
 528 0050 70BD     		pop	{r4, r5, r6, pc}
 529              	.LVL56:
 530              	.L45:
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
 531              		.loc 1 4509 0
 532 0052 0120     		movs	r0, #1
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 533              		.loc 1 4529 0
 534 0054 70BD     		pop	{r4, r5, r6, pc}
 535              		.cfi_endproc
 536              	.LFE189:
 538 0056 00BF     		.section	.text.I2C_WaitOnFlagUntilTimeout,"ax",%progbits
 539              		.align	2
 540              		.thumb
ARM GAS  /tmp/cccVlT9k.s 			page 96


 541              		.thumb_func
 543              	I2C_WaitOnFlagUntilTimeout:
 544              	.LFB188:
4474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 545              		.loc 1 4474 0
 546              		.cfi_startproc
 547              		@ args = 4, pretend = 0, frame = 0
 548              		@ frame_needed = 0, uses_anonymous_args = 0
 549              	.LVL57:
 550 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 551              	.LCFI4:
 552              		.cfi_def_cfa_offset 24
 553              		.cfi_offset 3, -24
 554              		.cfi_offset 4, -20
 555              		.cfi_offset 5, -16
 556              		.cfi_offset 6, -12
 557              		.cfi_offset 7, -8
 558              		.cfi_offset 14, -4
 559 0002 0646     		mov	r6, r0
 560 0004 0C46     		mov	r4, r1
 561 0006 1746     		mov	r7, r2
 562 0008 1D46     		mov	r5, r3
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 563              		.loc 1 4475 0
 564 000a 13E0     		b	.L53
 565              	.LVL58:
 566              	.L52:
4478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(Timeout != HAL_MAX_DELAY)
 567              		.loc 1 4478 0
 568 000c B5F1FF3F 		cmp	r5, #-1
 569 0010 10D0     		beq	.L53
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 570              		.loc 1 4480 0
 571 0012 2DB1     		cbz	r5, .L50
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((Timeout == 0U)||((HAL_GetTick() - Tickstart ) > Timeout))
 572              		.loc 1 4480 0 is_stmt 0 discriminator 1
 573 0014 FFF7FEFF 		bl	HAL_GetTick
 574              	.LVL59:
 575 0018 069B     		ldr	r3, [sp, #24]
 576 001a C01A     		subs	r0, r0, r3
 577 001c A842     		cmp	r0, r5
 578 001e 09D9     		bls	.L53
 579              	.L50:
4482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->State= HAL_I2C_STATE_READY;
 580              		.loc 1 4482 0 is_stmt 1
 581 0020 2023     		movs	r3, #32
 582 0022 86F84130 		strb	r3, [r6, #65]
4483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Mode = HAL_I2C_MODE_NONE;
 583              		.loc 1 4483 0
 584 0026 0023     		movs	r3, #0
 585 0028 86F84230 		strb	r3, [r6, #66]
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 586              		.loc 1 4486 0
 587 002c 86F84030 		strb	r3, [r6, #64]
4487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 588              		.loc 1 4487 0
 589 0030 0320     		movs	r0, #3
ARM GAS  /tmp/cccVlT9k.s 			page 97


 590 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 591              	.LVL60:
 592              	.L53:
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 593              		.loc 1 4475 0 discriminator 1
 594 0034 3168     		ldr	r1, [r6]
 595 0036 8969     		ldr	r1, [r1, #24]
 596 0038 2140     		ands	r1, r1, r4
 597 003a A142     		cmp	r1, r4
 598 003c 14BF     		ite	ne
 599 003e 0021     		movne	r1, #0
 600 0040 0121     		moveq	r1, #1
 601 0042 B942     		cmp	r1, r7
 602 0044 E2D0     		beq	.L52
4491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 603              		.loc 1 4491 0
 604 0046 0020     		movs	r0, #0
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 605              		.loc 1 4492 0
 606 0048 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 607              		.cfi_endproc
 608              	.LFE188:
 610 004a 00BF     		.section	.text.I2C_RequestMemoryWrite,"ax",%progbits
 611              		.align	2
 612              		.thumb
 613              		.thumb_func
 615              	I2C_RequestMemoryWrite:
 616              	.LFB172:
3642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 617              		.loc 1 3642 0
 618              		.cfi_startproc
 619              		@ args = 8, pretend = 0, frame = 0
 620              		@ frame_needed = 0, uses_anonymous_args = 0
 621              	.LVL61:
 622 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 623              	.LCFI5:
 624              		.cfi_def_cfa_offset 24
 625              		.cfi_offset 4, -24
 626              		.cfi_offset 5, -20
 627              		.cfi_offset 6, -16
 628              		.cfi_offset 7, -12
 629              		.cfi_offset 8, -8
 630              		.cfi_offset 14, -4
 631 0004 82B0     		sub	sp, sp, #8
 632              	.LCFI6:
 633              		.cfi_def_cfa_offset 32
 634 0006 0446     		mov	r4, r0
 635 0008 9046     		mov	r8, r2
 636 000a 1F46     		mov	r7, r3
 637 000c 089D     		ldr	r5, [sp, #32]
 638 000e 099E     		ldr	r6, [sp, #36]
3643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 639              		.loc 1 3643 0
 640 0010 4FF40053 		mov	r3, #8192
 641              	.LVL62:
 642 0014 0093     		str	r3, [sp]
 643 0016 FAB2     		uxtb	r2, r7
ARM GAS  /tmp/cccVlT9k.s 			page 98


 644              	.LVL63:
 645 0018 4FF08073 		mov	r3, #16777216
 646 001c FFF7FEFF 		bl	I2C_TransferConfig
 647              	.LVL64:
3646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 648              		.loc 1 3646 0
 649 0020 2046     		mov	r0, r4
 650 0022 2946     		mov	r1, r5
 651 0024 3246     		mov	r2, r6
 652 0026 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 653              	.LVL65:
 654 002a 20B1     		cbz	r0, .L55
3648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 655              		.loc 1 3648 0
 656 002c 636C     		ldr	r3, [r4, #68]
 657 002e 042B     		cmp	r3, #4
 658 0030 26D1     		bne	.L60
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
 659              		.loc 1 3650 0
 660 0032 0123     		movs	r3, #1
 661 0034 27E0     		b	.L56
 662              	.L55:
3659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
 663              		.loc 1 3659 0
 664 0036 012F     		cmp	r7, #1
 665 0038 04D1     		bne	.L57
3662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 666              		.loc 1 3662 0
 667 003a 2368     		ldr	r3, [r4]
 668 003c 5FFA88F2 		uxtb	r2, r8
 669 0040 9A62     		str	r2, [r3, #40]
 670 0042 12E0     		b	.L58
 671              	.L57:
3668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 672              		.loc 1 3668 0
 673 0044 2368     		ldr	r3, [r4]
 674 0046 4FEA1822 		lsr	r2, r8, #8
 675 004a 9A62     		str	r2, [r3, #40]
3671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 676              		.loc 1 3671 0
 677 004c 2046     		mov	r0, r4
 678 004e 2946     		mov	r1, r5
 679 0050 3246     		mov	r2, r6
 680 0052 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 681              	.LVL66:
 682 0056 20B1     		cbz	r0, .L59
3673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 683              		.loc 1 3673 0
 684 0058 636C     		ldr	r3, [r4, #68]
 685 005a 042B     		cmp	r3, #4
 686 005c 12D1     		bne	.L61
3675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 687              		.loc 1 3675 0
 688 005e 0123     		movs	r3, #1
 689 0060 11E0     		b	.L56
 690              	.L59:
3684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
ARM GAS  /tmp/cccVlT9k.s 			page 99


 691              		.loc 1 3684 0
 692 0062 2368     		ldr	r3, [r4]
 693 0064 5FFA88F2 		uxtb	r2, r8
 694 0068 9A62     		str	r2, [r3, #40]
 695              	.L58:
3688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 696              		.loc 1 3688 0
 697 006a 0096     		str	r6, [sp]
 698 006c 2046     		mov	r0, r4
 699 006e 8021     		movs	r1, #128
 700 0070 0022     		movs	r2, #0
 701 0072 2B46     		mov	r3, r5
 702 0074 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 703              	.LVL67:
 704 0078 0346     		mov	r3, r0
 705 007a 20B1     		cbz	r0, .L56
3690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_TIMEOUT;
 706              		.loc 1 3690 0
 707 007c 0323     		movs	r3, #3
 708 007e 02E0     		b	.L56
 709              	.L60:
3654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 710              		.loc 1 3654 0
 711 0080 0323     		movs	r3, #3
 712 0082 00E0     		b	.L56
 713              	.L61:
3679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 714              		.loc 1 3679 0
 715 0084 0323     		movs	r3, #3
 716              	.L56:
3694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 717              		.loc 1 3694 0
 718 0086 1846     		mov	r0, r3
 719 0088 02B0     		add	sp, sp, #8
 720              		@ sp needed
 721 008a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 722              		.cfi_endproc
 723              	.LFE172:
 725 008e 00BF     		.section	.text.I2C_RequestMemoryRead,"ax",%progbits
 726              		.align	2
 727              		.thumb
 728              		.thumb_func
 730              	I2C_RequestMemoryRead:
 731              	.LFB173:
3709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 732              		.loc 1 3709 0
 733              		.cfi_startproc
 734              		@ args = 8, pretend = 0, frame = 0
 735              		@ frame_needed = 0, uses_anonymous_args = 0
 736              	.LVL68:
 737 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 738              	.LCFI7:
 739              		.cfi_def_cfa_offset 24
 740              		.cfi_offset 4, -24
 741              		.cfi_offset 5, -20
 742              		.cfi_offset 6, -16
 743              		.cfi_offset 7, -12
ARM GAS  /tmp/cccVlT9k.s 			page 100


 744              		.cfi_offset 8, -8
 745              		.cfi_offset 14, -4
 746 0004 82B0     		sub	sp, sp, #8
 747              	.LCFI8:
 748              		.cfi_def_cfa_offset 32
 749 0006 0446     		mov	r4, r0
 750 0008 9046     		mov	r8, r2
 751 000a 1F46     		mov	r7, r3
 752 000c 089D     		ldr	r5, [sp, #32]
 753 000e 099E     		ldr	r6, [sp, #36]
3710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_TransferConfig(hi2c,DevAddress,MemAddSize, I2C_SOFTEND_MODE, I2C_GENERATE_START_WRITE);
 754              		.loc 1 3710 0
 755 0010 4FF40053 		mov	r3, #8192
 756              	.LVL69:
 757 0014 0093     		str	r3, [sp]
 758 0016 FAB2     		uxtb	r2, r7
 759              	.LVL70:
 760 0018 0023     		movs	r3, #0
 761 001a FFF7FEFF 		bl	I2C_TransferConfig
 762              	.LVL71:
3713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 763              		.loc 1 3713 0
 764 001e 2046     		mov	r0, r4
 765 0020 2946     		mov	r1, r5
 766 0022 3246     		mov	r2, r6
 767 0024 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 768              	.LVL72:
 769 0028 20B1     		cbz	r0, .L63
3715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 770              		.loc 1 3715 0
 771 002a 636C     		ldr	r3, [r4, #68]
 772 002c 042B     		cmp	r3, #4
 773 002e 26D1     		bne	.L68
3717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
 774              		.loc 1 3717 0
 775 0030 0123     		movs	r3, #1
 776 0032 27E0     		b	.L64
 777              	.L63:
3726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(MemAddSize == I2C_MEMADD_SIZE_8BIT)
 778              		.loc 1 3726 0
 779 0034 012F     		cmp	r7, #1
 780 0036 04D1     		bne	.L65
3729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 781              		.loc 1 3729 0
 782 0038 2368     		ldr	r3, [r4]
 783 003a 5FFA88F2 		uxtb	r2, r8
 784 003e 9A62     		str	r2, [r3, #40]
 785 0040 12E0     		b	.L66
 786              	.L65:
3735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 787              		.loc 1 3735 0
 788 0042 2368     		ldr	r3, [r4]
 789 0044 4FEA1822 		lsr	r2, r8, #8
 790 0048 9A62     		str	r2, [r3, #40]
3738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 791              		.loc 1 3738 0
 792 004a 2046     		mov	r0, r4
ARM GAS  /tmp/cccVlT9k.s 			page 101


 793 004c 2946     		mov	r1, r5
 794 004e 3246     		mov	r2, r6
 795 0050 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 796              	.LVL73:
 797 0054 20B1     		cbz	r0, .L67
3740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 798              		.loc 1 3740 0
 799 0056 636C     		ldr	r3, [r4, #68]
 800 0058 042B     		cmp	r3, #4
 801 005a 12D1     		bne	.L69
3742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 802              		.loc 1 3742 0
 803 005c 0123     		movs	r3, #1
 804 005e 11E0     		b	.L64
 805              	.L67:
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 806              		.loc 1 3751 0
 807 0060 2368     		ldr	r3, [r4]
 808 0062 5FFA88F2 		uxtb	r2, r8
 809 0066 9A62     		str	r2, [r3, #40]
 810              	.L66:
3755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TC, RESET, Timeout, Tickstart) != HAL_OK)
 811              		.loc 1 3755 0
 812 0068 0096     		str	r6, [sp]
 813 006a 2046     		mov	r0, r4
 814 006c 4021     		movs	r1, #64
 815 006e 0022     		movs	r2, #0
 816 0070 2B46     		mov	r3, r5
 817 0072 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 818              	.LVL74:
 819 0076 0346     		mov	r3, r0
 820 0078 20B1     		cbz	r0, .L64
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_TIMEOUT;
 821              		.loc 1 3757 0
 822 007a 0323     		movs	r3, #3
 823 007c 02E0     		b	.L64
 824              	.L68:
3721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 825              		.loc 1 3721 0
 826 007e 0323     		movs	r3, #3
 827 0080 00E0     		b	.L64
 828              	.L69:
3746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 829              		.loc 1 3746 0
 830 0082 0323     		movs	r3, #3
 831              	.L64:
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 832              		.loc 1 3761 0
 833 0084 1846     		mov	r0, r3
 834 0086 02B0     		add	sp, sp, #8
 835              		@ sp needed
 836 0088 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 837              		.cfi_endproc
 838              	.LFE173:
 840              		.section	.text.I2C_WaitOnSTOPFlagUntilTimeout,"ax",%progbits
 841              		.align	2
 842              		.thumb
ARM GAS  /tmp/cccVlT9k.s 			page 102


 843              		.thumb_func
 845              	I2C_WaitOnSTOPFlagUntilTimeout:
 846              	.LFB190:
4540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 847              		.loc 1 4540 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 0
 850              		@ frame_needed = 0, uses_anonymous_args = 0
 851              	.LVL75:
 852 0000 70B5     		push	{r4, r5, r6, lr}
 853              	.LCFI9:
 854              		.cfi_def_cfa_offset 16
 855              		.cfi_offset 4, -16
 856              		.cfi_offset 5, -12
 857              		.cfi_offset 6, -8
 858              		.cfi_offset 14, -4
 859 0002 0546     		mov	r5, r0
 860 0004 0C46     		mov	r4, r1
 861 0006 1646     		mov	r6, r2
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 862              		.loc 1 4541 0
 863 0008 19E0     		b	.L71
 864              	.LVL76:
 865              	.L74:
4544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 866              		.loc 1 4544 0
 867 000a 2846     		mov	r0, r5
 868 000c 2146     		mov	r1, r4
 869 000e 3246     		mov	r2, r6
 870 0010 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 871              	.LVL77:
 872 0014 D0B9     		cbnz	r0, .L75
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 873              		.loc 1 4550 0
 874 0016 24B1     		cbz	r4, .L73
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 875              		.loc 1 4550 0 is_stmt 0 discriminator 1
 876 0018 FFF7FEFF 		bl	HAL_GetTick
 877              	.LVL78:
 878 001c 801B     		subs	r0, r0, r6
 879 001e A042     		cmp	r0, r4
 880 0020 0DD9     		bls	.L71
 881              	.L73:
4552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 882              		.loc 1 4552 0 is_stmt 1
 883 0022 6B6C     		ldr	r3, [r5, #68]
 884 0024 43F02003 		orr	r3, r3, #32
 885 0028 6B64     		str	r3, [r5, #68]
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
 886              		.loc 1 4553 0
 887 002a 2023     		movs	r3, #32
 888 002c 85F84130 		strb	r3, [r5, #65]
4554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 889              		.loc 1 4554 0
 890 0030 0023     		movs	r3, #0
 891 0032 85F84230 		strb	r3, [r5, #66]
4557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 103


 892              		.loc 1 4557 0
 893 0036 85F84030 		strb	r3, [r5, #64]
4559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 894              		.loc 1 4559 0
 895 003a 0320     		movs	r0, #3
 896 003c 70BD     		pop	{r4, r5, r6, pc}
 897              	.LVL79:
 898              	.L71:
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 899              		.loc 1 4541 0 discriminator 1
 900 003e 2B68     		ldr	r3, [r5]
 901 0040 9B69     		ldr	r3, [r3, #24]
 902 0042 13F0200F 		tst	r3, #32
 903 0046 E0D0     		beq	.L74
4562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 904              		.loc 1 4562 0
 905 0048 0020     		movs	r0, #0
 906 004a 70BD     		pop	{r4, r5, r6, pc}
 907              	.LVL80:
 908              	.L75:
4546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
 909              		.loc 1 4546 0
 910 004c 0120     		movs	r0, #1
4563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 911              		.loc 1 4563 0
 912 004e 70BD     		pop	{r4, r5, r6, pc}
 913              		.cfi_endproc
 914              	.LFE190:
 916              		.section	.text.I2C_WaitOnRXNEFlagUntilTimeout,"ax",%progbits
 917              		.align	2
 918              		.thumb
 919              		.thumb_func
 921              	I2C_WaitOnRXNEFlagUntilTimeout:
 922              	.LFB191:
4574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 923              		.loc 1 4574 0
 924              		.cfi_startproc
 925              		@ args = 0, pretend = 0, frame = 0
 926              		@ frame_needed = 0, uses_anonymous_args = 0
 927              	.LVL81:
 928 0000 70B5     		push	{r4, r5, r6, lr}
 929              	.LCFI10:
 930              		.cfi_def_cfa_offset 16
 931              		.cfi_offset 4, -16
 932              		.cfi_offset 5, -12
 933              		.cfi_offset 6, -8
 934              		.cfi_offset 14, -4
 935 0002 0446     		mov	r4, r0
 936 0004 0D46     		mov	r5, r1
 937 0006 1646     		mov	r6, r2
4575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 938              		.loc 1 4575 0
 939 0008 34E0     		b	.L78
 940              	.LVL82:
 941              	.L82:
4578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_IsAcknowledgeFailed(hi2c, Timeout, Tickstart) != HAL_OK)
 942              		.loc 1 4578 0
ARM GAS  /tmp/cccVlT9k.s 			page 104


 943 000a 2046     		mov	r0, r4
 944 000c 2946     		mov	r1, r5
 945 000e 3246     		mov	r2, r6
 946 0010 FFF7FEFF 		bl	I2C_IsAcknowledgeFailed
 947              	.LVL83:
 948 0014 0028     		cmp	r0, #0
 949 0016 34D1     		bne	.L83
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 950              		.loc 1 4584 0
 951 0018 2368     		ldr	r3, [r4]
 952 001a 9A69     		ldr	r2, [r3, #24]
 953 001c 12F0200F 		tst	r2, #32
 954 0020 16D0     		beq	.L80
4587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 955              		.loc 1 4587 0
 956 0022 2022     		movs	r2, #32
 957 0024 DA61     		str	r2, [r3, #28]
4590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_RESET_CR2(hi2c);
 958              		.loc 1 4590 0
 959 0026 2368     		ldr	r3, [r4]
 960 0028 5968     		ldr	r1, [r3, #4]
 961 002a 21F0FF71 		bic	r1, r1, #33423360
 962 002e 21F48B31 		bic	r1, r1, #71168
 963 0032 21F4FF71 		bic	r1, r1, #510
 964 0036 21F00101 		bic	r1, r1, #1
 965 003a 5960     		str	r1, [r3, #4]
4592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 966              		.loc 1 4592 0
 967 003c 0023     		movs	r3, #0
 968 003e 6364     		str	r3, [r4, #68]
4593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
 969              		.loc 1 4593 0
 970 0040 84F84120 		strb	r2, [r4, #65]
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 971              		.loc 1 4594 0
 972 0044 84F84230 		strb	r3, [r4, #66]
4597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 973              		.loc 1 4597 0
 974 0048 84F84030 		strb	r3, [r4, #64]
4599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
 975              		.loc 1 4599 0
 976 004c 0120     		movs	r0, #1
 977 004e 70BD     		pop	{r4, r5, r6, pc}
 978              	.LVL84:
 979              	.L80:
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 980              		.loc 1 4603 0
 981 0050 25B1     		cbz	r5, .L81
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((Timeout == 0U)||((HAL_GetTick() - Tickstart) > Timeout))
 982              		.loc 1 4603 0 is_stmt 0 discriminator 1
 983 0052 FFF7FEFF 		bl	HAL_GetTick
 984              	.LVL85:
 985 0056 801B     		subs	r0, r0, r6
 986 0058 A842     		cmp	r0, r5
 987 005a 0BD9     		bls	.L78
 988              	.L81:
4605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
ARM GAS  /tmp/cccVlT9k.s 			page 105


 989              		.loc 1 4605 0 is_stmt 1
 990 005c 636C     		ldr	r3, [r4, #68]
 991 005e 43F02003 		orr	r3, r3, #32
 992 0062 6364     		str	r3, [r4, #68]
4606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State= HAL_I2C_STATE_READY;
 993              		.loc 1 4606 0
 994 0064 2023     		movs	r3, #32
 995 0066 84F84130 		strb	r3, [r4, #65]
4609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 996              		.loc 1 4609 0
 997 006a 0023     		movs	r3, #0
 998 006c 84F84030 		strb	r3, [r4, #64]
4611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 999              		.loc 1 4611 0
 1000 0070 0320     		movs	r0, #3
 1001 0072 70BD     		pop	{r4, r5, r6, pc}
 1002              	.LVL86:
 1003              	.L78:
4575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   while(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 1004              		.loc 1 4575 0 discriminator 1
 1005 0074 2368     		ldr	r3, [r4]
 1006 0076 9B69     		ldr	r3, [r3, #24]
 1007 0078 13F0040F 		tst	r3, #4
 1008 007c C5D0     		beq	.L82
4614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 1009              		.loc 1 4614 0
 1010 007e 0020     		movs	r0, #0
 1011 0080 70BD     		pop	{r4, r5, r6, pc}
 1012              	.LVL87:
 1013              	.L83:
4580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_ERROR;
 1014              		.loc 1 4580 0
 1015 0082 0120     		movs	r0, #1
4615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 1016              		.loc 1 4615 0
 1017 0084 70BD     		pop	{r4, r5, r6, pc}
 1018              		.cfi_endproc
 1019              	.LFE191:
 1021 0086 00BF     		.section	.text.I2C_DMAMasterTransmitCplt,"ax",%progbits
 1022              		.align	2
 1023              		.thumb
 1024              		.thumb_func
 1026              	I2C_DMAMasterTransmitCplt:
 1027              	.LFB182:
4307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1028              		.loc 1 4307 0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              	.LVL88:
 1033 0000 10B5     		push	{r4, lr}
 1034              	.LCFI11:
 1035              		.cfi_def_cfa_offset 8
 1036              		.cfi_offset 4, -8
 1037              		.cfi_offset 14, -4
4308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1038              		.loc 1 4308 0
ARM GAS  /tmp/cccVlT9k.s 			page 106


 1039 0002 446A     		ldr	r4, [r0, #36]
 1040              	.LVL89:
4311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 1041              		.loc 1 4311 0
 1042 0004 2368     		ldr	r3, [r4]
 1043 0006 1A68     		ldr	r2, [r3]
 1044 0008 22F48042 		bic	r2, r2, #16384
 1045 000c 1A60     		str	r2, [r3]
4314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
 1046              		.loc 1 4314 0
 1047 000e 638D     		ldrh	r3, [r4, #42]
 1048 0010 9BB2     		uxth	r3, r3
 1049 0012 23B9     		cbnz	r3, .L86
4317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 1050              		.loc 1 4317 0
 1051 0014 2046     		mov	r0, r4
 1052              	.LVL90:
 1053 0016 1221     		movs	r1, #18
 1054 0018 FFF7FEFF 		bl	I2C_Enable_IRQ
 1055              	.LVL91:
 1056 001c 10BD     		pop	{r4, pc}
 1057              	.LVL92:
 1058              	.L86:
4323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
 1059              		.loc 1 4323 0
 1060 001e 218D     		ldrh	r1, [r4, #40]
 1061 0020 636A     		ldr	r3, [r4, #36]
 1062 0022 1944     		add	r1, r1, r3
 1063 0024 6162     		str	r1, [r4, #36]
4326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1064              		.loc 1 4326 0
 1065 0026 638D     		ldrh	r3, [r4, #42]
 1066 0028 9BB2     		uxth	r3, r3
 1067 002a FF2B     		cmp	r3, #255
 1068 002c 02D9     		bls	.L88
4328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1069              		.loc 1 4328 0
 1070 002e FF23     		movs	r3, #255
 1071 0030 2385     		strh	r3, [r4, #40]	@ movhi
 1072 0032 01E0     		b	.L89
 1073              	.L88:
4332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1074              		.loc 1 4332 0
 1075 0034 638D     		ldrh	r3, [r4, #42]
 1076 0036 2385     		strh	r3, [r4, #40]	@ movhi
 1077              	.L89:
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)hi2c->pBuffPtr, (uint32_t)&hi2c->Instance->TXDR, hi2c-
 1078              		.loc 1 4336 0
 1079 0038 2268     		ldr	r2, [r4]
 1080 003a A06B     		ldr	r0, [r4, #56]
 1081              	.LVL93:
 1082 003c 2832     		adds	r2, r2, #40
 1083 003e 238D     		ldrh	r3, [r4, #40]
 1084 0040 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1085              	.LVL94:
4339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
 1086              		.loc 1 4339 0
ARM GAS  /tmp/cccVlT9k.s 			page 107


 1087 0044 2046     		mov	r0, r4
 1088 0046 1221     		movs	r1, #18
 1089 0048 FFF7FEFF 		bl	I2C_Enable_IRQ
 1090              	.LVL95:
 1091 004c 10BD     		pop	{r4, pc}
 1092              		.cfi_endproc
 1093              	.LFE182:
 1095 004e 00BF     		.section	.text.I2C_DMAMasterReceiveCplt,"ax",%progbits
 1096              		.align	2
 1097              		.thumb
 1098              		.thumb_func
 1100              	I2C_DMAMasterReceiveCplt:
 1101              	.LFB184:
4364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1102              		.loc 1 4364 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 0
 1105              		@ frame_needed = 0, uses_anonymous_args = 0
 1106              	.LVL96:
 1107 0000 10B5     		push	{r4, lr}
 1108              	.LCFI12:
 1109              		.cfi_def_cfa_offset 8
 1110              		.cfi_offset 4, -8
 1111              		.cfi_offset 14, -4
4365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = (I2C_HandleTypeDef*)((DMA_HandleTypeDef*)hdma)->Parent;
 1112              		.loc 1 4365 0
 1113 0002 446A     		ldr	r4, [r0, #36]
 1114              	.LVL97:
4368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
 1115              		.loc 1 4368 0
 1116 0004 2368     		ldr	r3, [r4]
 1117 0006 1A68     		ldr	r2, [r3]
 1118 0008 22F40042 		bic	r2, r2, #32768
 1119 000c 1A60     		str	r2, [r3]
4371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferCount == 0U)
 1120              		.loc 1 4371 0
 1121 000e 638D     		ldrh	r3, [r4, #42]
 1122 0010 9BB2     		uxth	r3, r3
 1123 0012 23B9     		cbnz	r3, .L91
4374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
 1124              		.loc 1 4374 0
 1125 0014 2046     		mov	r0, r4
 1126              	.LVL98:
 1127 0016 1221     		movs	r1, #18
 1128 0018 FFF7FEFF 		bl	I2C_Enable_IRQ
 1129              	.LVL99:
 1130 001c 10BD     		pop	{r4, pc}
 1131              	.LVL100:
 1132              	.L91:
4380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr += hi2c->XferSize;
 1133              		.loc 1 4380 0
 1134 001e 228D     		ldrh	r2, [r4, #40]
 1135 0020 636A     		ldr	r3, [r4, #36]
 1136 0022 1A44     		add	r2, r2, r3
 1137 0024 6262     		str	r2, [r4, #36]
4383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1138              		.loc 1 4383 0
ARM GAS  /tmp/cccVlT9k.s 			page 108


 1139 0026 638D     		ldrh	r3, [r4, #42]
 1140 0028 9BB2     		uxth	r3, r3
 1141 002a FF2B     		cmp	r3, #255
 1142 002c 02D9     		bls	.L93
4385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1143              		.loc 1 4385 0
 1144 002e FF23     		movs	r3, #255
 1145 0030 2385     		strh	r3, [r4, #40]	@ movhi
 1146 0032 01E0     		b	.L94
 1147              	.L93:
4389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1148              		.loc 1 4389 0
 1149 0034 638D     		ldrh	r3, [r4, #42]
 1150 0036 2385     		strh	r3, [r4, #40]	@ movhi
 1151              	.L94:
4393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)hi2c->pBuffPtr, hi2c-
 1152              		.loc 1 4393 0
 1153 0038 2168     		ldr	r1, [r4]
 1154 003a E06B     		ldr	r0, [r4, #60]
 1155              	.LVL101:
 1156 003c 2431     		adds	r1, r1, #36
 1157 003e 238D     		ldrh	r3, [r4, #40]
 1158 0040 FFF7FEFF 		bl	HAL_DMA_Start_IT
 1159              	.LVL102:
4396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RELOAD_IT);
 1160              		.loc 1 4396 0
 1161 0044 2046     		mov	r0, r4
 1162 0046 1221     		movs	r1, #18
 1163 0048 FFF7FEFF 		bl	I2C_Enable_IRQ
 1164              	.LVL103:
 1165 004c 10BD     		pop	{r4, pc}
 1166              		.cfi_endproc
 1167              	.LFE184:
 1169 004e 00BF     		.section	.text.HAL_I2C_MspInit,"ax",%progbits
 1170              		.align	2
 1171              		.weak	HAL_I2C_MspInit
 1172              		.thumb
 1173              		.thumb_func
 1175              	HAL_I2C_MspInit:
 1176              	.LFB125:
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1177              		.loc 1 530 0
 1178              		.cfi_startproc
 1179              		@ args = 0, pretend = 0, frame = 0
 1180              		@ frame_needed = 0, uses_anonymous_args = 0
 1181              		@ link register save eliminated.
 1182              	.LVL104:
 1183 0000 7047     		bx	lr
 1184              		.cfi_endproc
 1185              	.LFE125:
 1187 0002 00BF     		.section	.text.HAL_I2C_Init,"ax",%progbits
 1188              		.align	2
 1189              		.global	HAL_I2C_Init
 1190              		.thumb
 1191              		.thumb_func
 1193              	HAL_I2C_Init:
 1194              	.LFB123:
ARM GAS  /tmp/cccVlT9k.s 			page 109


 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1195              		.loc 1 407 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 0
 1198              		@ frame_needed = 0, uses_anonymous_args = 0
 1199              	.LVL105:
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1200              		.loc 1 407 0
 1201 0000 10B5     		push	{r4, lr}
 1202              	.LCFI13:
 1203              		.cfi_def_cfa_offset 8
 1204              		.cfi_offset 4, -8
 1205              		.cfi_offset 14, -4
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c == NULL)
 1206              		.loc 1 409 0
 1207 0002 0446     		mov	r4, r0
 1208 0004 0028     		cmp	r0, #0
 1209 0006 57D0     		beq	.L102
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_RESET)
 1210              		.loc 1 424 0
 1211 0008 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 1212 000c 13F0FF0F 		tst	r3, #255
 1213 0010 04D1     		bne	.L98
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Lock = HAL_UNLOCKED;
 1214              		.loc 1 427 0
 1215 0012 0023     		movs	r3, #0
 1216 0014 80F84030 		strb	r3, [r0, #64]
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_MspInit(hi2c);
 1217              		.loc 1 430 0
 1218 0018 FFF7FEFF 		bl	HAL_I2C_MspInit
 1219              	.LVL106:
 1220              	.L98:
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 1221              		.loc 1 433 0
 1222 001c 2423     		movs	r3, #36
 1223 001e 84F84130 		strb	r3, [r4, #65]
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 1224              		.loc 1 436 0
 1225 0022 2368     		ldr	r3, [r4]
 1226 0024 1A68     		ldr	r2, [r3]
 1227 0026 22F00102 		bic	r2, r2, #1
 1228 002a 1A60     		str	r2, [r3]
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 1229              		.loc 1 440 0
 1230 002c 2368     		ldr	r3, [r4]
 1231 002e 6268     		ldr	r2, [r4, #4]
 1232 0030 22F07062 		bic	r2, r2, #251658240
 1233 0034 1A61     		str	r2, [r3, #16]
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 1234              		.loc 1 444 0
 1235 0036 2368     		ldr	r3, [r4]
 1236 0038 9A68     		ldr	r2, [r3, #8]
 1237 003a 22F40042 		bic	r2, r2, #32768
 1238 003e 9A60     		str	r2, [r3, #8]
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 1239              		.loc 1 447 0
 1240 0040 E368     		ldr	r3, [r4, #12]
ARM GAS  /tmp/cccVlT9k.s 			page 110


 1241 0042 012B     		cmp	r3, #1
 1242 0044 05D1     		bne	.L99
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 1243              		.loc 1 449 0
 1244 0046 2368     		ldr	r3, [r4]
 1245 0048 A268     		ldr	r2, [r4, #8]
 1246 004a 42F40042 		orr	r2, r2, #32768
 1247 004e 9A60     		str	r2, [r3, #8]
 1248 0050 04E0     		b	.L100
 1249              	.L99:
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 1250              		.loc 1 453 0
 1251 0052 2368     		ldr	r3, [r4]
 1252 0054 A268     		ldr	r2, [r4, #8]
 1253 0056 42F40442 		orr	r2, r2, #33792
 1254 005a 9A60     		str	r2, [r3, #8]
 1255              	.L100:
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 1256              		.loc 1 458 0
 1257 005c E368     		ldr	r3, [r4, #12]
 1258 005e 022B     		cmp	r3, #2
 1259 0060 03D1     		bne	.L101
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 = (I2C_CR2_ADD10);
 1260              		.loc 1 460 0
 1261 0062 2368     		ldr	r3, [r4]
 1262 0064 4FF40062 		mov	r2, #2048
 1263 0068 5A60     		str	r2, [r3, #4]
 1264              	.L101:
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 1265              		.loc 1 463 0
 1266 006a 2268     		ldr	r2, [r4]
 1267 006c 5368     		ldr	r3, [r2, #4]
 1268 006e 43F00073 		orr	r3, r3, #33554432
 1269 0072 43F40043 		orr	r3, r3, #32768
 1270 0076 5360     		str	r3, [r2, #4]
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 1271              		.loc 1 467 0
 1272 0078 2368     		ldr	r3, [r4]
 1273 007a DA68     		ldr	r2, [r3, #12]
 1274 007c 22F40042 		bic	r2, r2, #32768
 1275 0080 DA60     		str	r2, [r3, #12]
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | (hi2c->Init.OwnAddr
 1276              		.loc 1 470 0
 1277 0082 2368     		ldr	r3, [r4]
 1278 0084 2169     		ldr	r1, [r4, #16]
 1279 0086 6269     		ldr	r2, [r4, #20]
 1280 0088 1143     		orrs	r1, r1, r2
 1281 008a A269     		ldr	r2, [r4, #24]
 1282 008c 41EA0222 		orr	r2, r1, r2, lsl #8
 1283 0090 DA60     		str	r2, [r3, #12]
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 1284              		.loc 1 474 0
 1285 0092 2368     		ldr	r3, [r4]
 1286 0094 E169     		ldr	r1, [r4, #28]
 1287 0096 226A     		ldr	r2, [r4, #32]
 1288 0098 0A43     		orrs	r2, r2, r1
 1289 009a 1A60     		str	r2, [r3]
ARM GAS  /tmp/cccVlT9k.s 			page 111


 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_ENABLE(hi2c);
 1290              		.loc 1 477 0
 1291 009c 2368     		ldr	r3, [r4]
 1292 009e 1A68     		ldr	r2, [r3]
 1293 00a0 42F00102 		orr	r2, r2, #1
 1294 00a4 1A60     		str	r2, [r3]
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1295              		.loc 1 479 0
 1296 00a6 0020     		movs	r0, #0
 1297 00a8 6064     		str	r0, [r4, #68]
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 1298              		.loc 1 480 0
 1299 00aa 2023     		movs	r3, #32
 1300 00ac 84F84130 		strb	r3, [r4, #65]
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1301              		.loc 1 481 0
 1302 00b0 2063     		str	r0, [r4, #48]
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1303              		.loc 1 482 0
 1304 00b2 84F84200 		strb	r0, [r4, #66]
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 1305              		.loc 1 484 0
 1306 00b6 10BD     		pop	{r4, pc}
 1307              	.LVL107:
 1308              	.L102:
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 1309              		.loc 1 411 0
 1310 00b8 0120     		movs	r0, #1
 1311              	.LVL108:
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 1312              		.loc 1 485 0
 1313 00ba 10BD     		pop	{r4, pc}
 1314              		.cfi_endproc
 1315              	.LFE123:
 1317              		.section	.text.HAL_I2C_MspDeInit,"ax",%progbits
 1318              		.align	2
 1319              		.weak	HAL_I2C_MspDeInit
 1320              		.thumb
 1321              		.thumb_func
 1323              	HAL_I2C_MspDeInit:
 1324              	.LFB126:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1325              		.loc 1 546 0
 1326              		.cfi_startproc
 1327              		@ args = 0, pretend = 0, frame = 0
 1328              		@ frame_needed = 0, uses_anonymous_args = 0
 1329              		@ link register save eliminated.
 1330              	.LVL109:
 1331 0000 7047     		bx	lr
 1332              		.cfi_endproc
 1333              	.LFE126:
 1335 0002 00BF     		.section	.text.HAL_I2C_DeInit,"ax",%progbits
 1336              		.align	2
 1337              		.global	HAL_I2C_DeInit
 1338              		.thumb
 1339              		.thumb_func
 1341              	HAL_I2C_DeInit:
ARM GAS  /tmp/cccVlT9k.s 			page 112


 1342              	.LFB124:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1343              		.loc 1 494 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              	.LVL110:
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1348              		.loc 1 494 0
 1349 0000 10B5     		push	{r4, lr}
 1350              	.LCFI14:
 1351              		.cfi_def_cfa_offset 8
 1352              		.cfi_offset 4, -8
 1353              		.cfi_offset 14, -4
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c == NULL)
 1354              		.loc 1 496 0
 1355 0002 0446     		mov	r4, r0
 1356 0004 98B1     		cbz	r0, .L106
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_BUSY;
 1357              		.loc 1 504 0
 1358 0006 2423     		movs	r3, #36
 1359 0008 80F84130 		strb	r3, [r0, #65]
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_DISABLE(hi2c);
 1360              		.loc 1 507 0
 1361 000c 0368     		ldr	r3, [r0]
 1362 000e 1A68     		ldr	r2, [r3]
 1363 0010 22F00102 		bic	r2, r2, #1
 1364 0014 1A60     		str	r2, [r3]
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   HAL_I2C_MspDeInit(hi2c);
 1365              		.loc 1 510 0
 1366 0016 FFF7FEFF 		bl	HAL_I2C_MspDeInit
 1367              	.LVL111:
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1368              		.loc 1 512 0
 1369 001a 0020     		movs	r0, #0
 1370 001c 6064     		str	r0, [r4, #68]
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_RESET;
 1371              		.loc 1 513 0
 1372 001e 84F84100 		strb	r0, [r4, #65]
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 1373              		.loc 1 514 0
 1374 0022 2063     		str	r0, [r4, #48]
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 1375              		.loc 1 515 0
 1376 0024 84F84200 		strb	r0, [r4, #66]
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 1377              		.loc 1 518 0
 1378 0028 84F84000 		strb	r0, [r4, #64]
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 1379              		.loc 1 520 0
 1380 002c 10BD     		pop	{r4, pc}
 1381              	.LVL112:
 1382              	.L106:
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 1383              		.loc 1 498 0
 1384 002e 0120     		movs	r0, #1
 1385              	.LVL113:
ARM GAS  /tmp/cccVlT9k.s 			page 113


 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 1386              		.loc 1 521 0
 1387 0030 10BD     		pop	{r4, pc}
 1388              		.cfi_endproc
 1389              	.LFE124:
 1391 0032 00BF     		.section	.text.HAL_I2C_Master_Transmit,"ax",%progbits
 1392              		.align	2
 1393              		.global	HAL_I2C_Master_Transmit
 1394              		.thumb
 1395              		.thumb_func
 1397              	HAL_I2C_Master_Transmit:
 1398              	.LFB127:
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1399              		.loc 1 630 0
 1400              		.cfi_startproc
 1401              		@ args = 4, pretend = 0, frame = 0
 1402              		@ frame_needed = 0, uses_anonymous_args = 0
 1403              	.LVL114:
 1404 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1405              	.LCFI15:
 1406              		.cfi_def_cfa_offset 32
 1407              		.cfi_offset 4, -32
 1408              		.cfi_offset 5, -28
 1409              		.cfi_offset 6, -24
 1410              		.cfi_offset 7, -20
 1411              		.cfi_offset 8, -16
 1412              		.cfi_offset 9, -12
 1413              		.cfi_offset 10, -8
 1414              		.cfi_offset 14, -4
 1415 0004 82B0     		sub	sp, sp, #8
 1416              	.LCFI16:
 1417              		.cfi_def_cfa_offset 40
 1418 0006 0446     		mov	r4, r0
 1419 0008 0D46     		mov	r5, r1
 1420 000a 1746     		mov	r7, r2
 1421 000c 1E46     		mov	r6, r3
 1422              	.LVL115:
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 1423              		.loc 1 633 0
 1424 000e 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 1425              	.LVL116:
 1426 0012 C0B2     		uxtb	r0, r0
 1427 0014 2028     		cmp	r0, #32
 1428 0016 40F0AC80 		bne	.L117
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1429              		.loc 1 636 0
 1430 001a 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 1431              	.LVL117:
 1432 001e 012B     		cmp	r3, #1
 1433 0020 00F0A980 		beq	.L118
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1434              		.loc 1 636 0 is_stmt 0 discriminator 2
 1435 0024 4FF00109 		mov	r9, #1
 1436 0028 84F84090 		strb	r9, [r4, #64]
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 1437              		.loc 1 639 0 is_stmt 1 discriminator 2
 1438 002c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cccVlT9k.s 			page 114


 1439              	.LVL118:
 1440 0030 8046     		mov	r8, r0
 1441              	.LVL119:
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 1442              		.loc 1 641 0 discriminator 2
 1443 0032 0090     		str	r0, [sp]
 1444 0034 2046     		mov	r0, r4
 1445              	.LVL120:
 1446 0036 4FF40041 		mov	r1, #32768
 1447 003a 4A46     		mov	r2, r9
 1448 003c 1923     		movs	r3, #25
 1449 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1450              	.LVL121:
 1451 0042 0028     		cmp	r0, #0
 1452 0044 40F09980 		bne	.L119
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 1453              		.loc 1 646 0
 1454 0048 2123     		movs	r3, #33
 1455 004a 84F84130 		strb	r3, [r4, #65]
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1456              		.loc 1 647 0
 1457 004e 1023     		movs	r3, #16
 1458 0050 84F84230 		strb	r3, [r4, #66]
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1459              		.loc 1 648 0
 1460 0054 0023     		movs	r3, #0
 1461 0056 6364     		str	r3, [r4, #68]
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 1462              		.loc 1 651 0
 1463 0058 6762     		str	r7, [r4, #36]
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1464              		.loc 1 652 0
 1465 005a 6685     		strh	r6, [r4, #42]	@ movhi
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1466              		.loc 1 653 0
 1467 005c 6363     		str	r3, [r4, #52]
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1468              		.loc 1 657 0
 1469 005e 638D     		ldrh	r3, [r4, #42]
 1470 0060 9BB2     		uxth	r3, r3
 1471 0062 FF2B     		cmp	r3, #255
 1472 0064 0BD9     		bls	.L109
 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1473              		.loc 1 659 0
 1474 0066 FF22     		movs	r2, #255
 1475 0068 2285     		strh	r2, [r4, #40]	@ movhi
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRIT
 1476              		.loc 1 660 0
 1477 006a 4FF40053 		mov	r3, #8192
 1478 006e 0093     		str	r3, [sp]
 1479 0070 2046     		mov	r0, r4
 1480 0072 2946     		mov	r1, r5
 1481 0074 4FF08073 		mov	r3, #16777216
 1482 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1483              	.LVL122:
 1484 007c 4EE0     		b	.L124
 1485              	.L109:
ARM GAS  /tmp/cccVlT9k.s 			page 115


 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1486              		.loc 1 664 0
 1487 007e 628D     		ldrh	r2, [r4, #42]
 1488 0080 92B2     		uxth	r2, r2
 1489 0082 2285     		strh	r2, [r4, #40]	@ movhi
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 1490              		.loc 1 665 0
 1491 0084 4FF40053 		mov	r3, #8192
 1492 0088 0093     		str	r3, [sp]
 1493 008a 2046     		mov	r0, r4
 1494 008c 2946     		mov	r1, r5
 1495 008e D2B2     		uxtb	r2, r2
 1496 0090 4FF00073 		mov	r3, #33554432
 1497 0094 FFF7FEFF 		bl	I2C_TransferConfig
 1498              	.LVL123:
 1499 0098 40E0     		b	.L124
 1500              	.LVL124:
 1501              	.L115:
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1502              		.loc 1 671 0
 1503 009a 2046     		mov	r0, r4
 1504 009c 0A99     		ldr	r1, [sp, #40]
 1505 009e 4246     		mov	r2, r8
 1506 00a0 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 1507              	.LVL125:
 1508 00a4 20B1     		cbz	r0, .L112
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1509              		.loc 1 673 0
 1510 00a6 636C     		ldr	r3, [r4, #68]
 1511 00a8 042B     		cmp	r3, #4
 1512 00aa 68D1     		bne	.L120
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 1513              		.loc 1 675 0
 1514 00ac 0123     		movs	r3, #1
 1515 00ae 6BE0     		b	.L108
 1516              	.L112:
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 1517              		.loc 1 683 0
 1518 00b0 2368     		ldr	r3, [r4]
 1519 00b2 666A     		ldr	r6, [r4, #36]
 1520 00b4 721C     		adds	r2, r6, #1
 1521 00b6 6262     		str	r2, [r4, #36]
 1522 00b8 3278     		ldrb	r2, [r6]	@ zero_extendqisi2
 1523 00ba 9A62     		str	r2, [r3, #40]
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 1524              		.loc 1 684 0
 1525 00bc 638D     		ldrh	r3, [r4, #42]
 1526 00be 013B     		subs	r3, r3, #1
 1527 00c0 9BB2     		uxth	r3, r3
 1528 00c2 6385     		strh	r3, [r4, #42]	@ movhi
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 1529              		.loc 1 685 0
 1530 00c4 268D     		ldrh	r6, [r4, #40]
 1531 00c6 013E     		subs	r6, r6, #1
 1532 00c8 B6B2     		uxth	r6, r6
 1533 00ca 2685     		strh	r6, [r4, #40]	@ movhi
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
ARM GAS  /tmp/cccVlT9k.s 			page 116


 1534              		.loc 1 687 0
 1535 00cc 002E     		cmp	r6, #0
 1536 00ce 2AD1     		bne	.L123
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 1537              		.loc 1 687 0 is_stmt 0 discriminator 1
 1538 00d0 638D     		ldrh	r3, [r4, #42]
 1539 00d2 9BB2     		uxth	r3, r3
 1540 00d4 3BB3     		cbz	r3, .L123
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 1541              		.loc 1 690 0 is_stmt 1
 1542 00d6 CDF80080 		str	r8, [sp]
 1543 00da 2046     		mov	r0, r4
 1544 00dc 4946     		mov	r1, r9
 1545 00de 3A46     		mov	r2, r7
 1546 00e0 0A9B     		ldr	r3, [sp, #40]
 1547 00e2 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1548              	.LVL126:
 1549 00e6 0028     		cmp	r0, #0
 1550 00e8 4BD1     		bne	.L121
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1551              		.loc 1 695 0
 1552 00ea 638D     		ldrh	r3, [r4, #42]
 1553 00ec 9BB2     		uxth	r3, r3
 1554 00ee FF2B     		cmp	r3, #255
 1555 00f0 09D9     		bls	.L114
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 1556              		.loc 1 697 0
 1557 00f2 FF22     		movs	r2, #255
 1558 00f4 2285     		strh	r2, [r4, #40]	@ movhi
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 1559              		.loc 1 698 0
 1560 00f6 0097     		str	r7, [sp]
 1561 00f8 2046     		mov	r0, r4
 1562 00fa 2946     		mov	r1, r5
 1563 00fc 4FF08073 		mov	r3, #16777216
 1564 0100 FFF7FEFF 		bl	I2C_TransferConfig
 1565              	.LVL127:
 1566 0104 0FE0     		b	.L123
 1567              	.L114:
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 1568              		.loc 1 702 0
 1569 0106 628D     		ldrh	r2, [r4, #42]
 1570 0108 92B2     		uxth	r2, r2
 1571 010a 2285     		strh	r2, [r4, #40]	@ movhi
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1572              		.loc 1 703 0
 1573 010c 0097     		str	r7, [sp]
 1574 010e 2046     		mov	r0, r4
 1575 0110 2946     		mov	r1, r5
 1576 0112 D2B2     		uxtb	r2, r2
 1577 0114 5346     		mov	r3, r10
 1578 0116 FFF7FEFF 		bl	I2C_TransferConfig
 1579              	.LVL128:
 1580 011a 04E0     		b	.L123
 1581              	.LVL129:
 1582              	.L124:
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
ARM GAS  /tmp/cccVlT9k.s 			page 117


 1583              		.loc 1 690 0 discriminator 1
 1584 011c 4FF08009 		mov	r9, #128
 1585 0120 0027     		movs	r7, #0
 1586              	.LVL130:
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1587              		.loc 1 703 0 discriminator 1
 1588 0122 4FF0007A 		mov	r10, #33554432
 1589              	.L123:
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 1590              		.loc 1 668 0 discriminator 1
 1591 0126 638D     		ldrh	r3, [r4, #42]
 1592 0128 9BB2     		uxth	r3, r3
 1593 012a 002B     		cmp	r3, #0
 1594 012c B5D1     		bne	.L115
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1595              		.loc 1 710 0
 1596 012e 2046     		mov	r0, r4
 1597 0130 0A99     		ldr	r1, [sp, #40]
 1598 0132 4246     		mov	r2, r8
 1599 0134 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1600              	.LVL131:
 1601 0138 0346     		mov	r3, r0
 1602 013a 20B1     		cbz	r0, .L116
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1603              		.loc 1 712 0
 1604 013c 636C     		ldr	r3, [r4, #68]
 1605 013e 042B     		cmp	r3, #4
 1606 0140 21D1     		bne	.L122
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 1607              		.loc 1 714 0
 1608 0142 0123     		movs	r3, #1
 1609 0144 20E0     		b	.L108
 1610              	.L116:
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 1611              		.loc 1 723 0
 1612 0146 2168     		ldr	r1, [r4]
 1613 0148 2022     		movs	r2, #32
 1614 014a CA61     		str	r2, [r1, #28]
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 1615              		.loc 1 726 0
 1616 014c 2168     		ldr	r1, [r4]
 1617 014e 4868     		ldr	r0, [r1, #4]
 1618 0150 20F0FF70 		bic	r0, r0, #33423360
 1619 0154 20F48B30 		bic	r0, r0, #71168
 1620 0158 20F4FF70 		bic	r0, r0, #510
 1621 015c 20F00100 		bic	r0, r0, #1
 1622 0160 4860     		str	r0, [r1, #4]
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 1623              		.loc 1 728 0
 1624 0162 84F84120 		strb	r2, [r4, #65]
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1625              		.loc 1 729 0
 1626 0166 0022     		movs	r2, #0
 1627 0168 84F84220 		strb	r2, [r4, #66]
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 1628              		.loc 1 732 0
 1629 016c 84F84020 		strb	r2, [r4, #64]
ARM GAS  /tmp/cccVlT9k.s 			page 118


 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 1630              		.loc 1 734 0
 1631 0170 0AE0     		b	.L108
 1632              	.LVL132:
 1633              	.L117:
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 1634              		.loc 1 738 0
 1635 0172 0223     		movs	r3, #2
 1636              	.LVL133:
 1637 0174 08E0     		b	.L108
 1638              	.L118:
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1639              		.loc 1 636 0
 1640 0176 0223     		movs	r3, #2
 1641 0178 06E0     		b	.L108
 1642              	.LVL134:
 1643              	.L119:
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1644              		.loc 1 643 0
 1645 017a 0323     		movs	r3, #3
 1646 017c 04E0     		b	.L108
 1647              	.LVL135:
 1648              	.L120:
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1649              		.loc 1 679 0
 1650 017e 0323     		movs	r3, #3
 1651 0180 02E0     		b	.L108
 1652              	.L121:
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1653              		.loc 1 692 0
 1654 0182 0323     		movs	r3, #3
 1655 0184 00E0     		b	.L108
 1656              	.L122:
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 1657              		.loc 1 718 0
 1658 0186 0323     		movs	r3, #3
 1659              	.LVL136:
 1660              	.L108:
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 1661              		.loc 1 740 0
 1662 0188 1846     		mov	r0, r3
 1663 018a 02B0     		add	sp, sp, #8
 1664              		@ sp needed
 1665 018c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1666              		.cfi_endproc
 1667              	.LFE127:
 1669              		.section	.text.HAL_I2C_Master_Receive,"ax",%progbits
 1670              		.align	2
 1671              		.global	HAL_I2C_Master_Receive
 1672              		.thumb
 1673              		.thumb_func
 1675              	HAL_I2C_Master_Receive:
 1676              	.LFB128:
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1677              		.loc 1 754 0
 1678              		.cfi_startproc
 1679              		@ args = 4, pretend = 0, frame = 0
ARM GAS  /tmp/cccVlT9k.s 			page 119


 1680              		@ frame_needed = 0, uses_anonymous_args = 0
 1681              	.LVL137:
 1682 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1683              	.LCFI17:
 1684              		.cfi_def_cfa_offset 32
 1685              		.cfi_offset 4, -32
 1686              		.cfi_offset 5, -28
 1687              		.cfi_offset 6, -24
 1688              		.cfi_offset 7, -20
 1689              		.cfi_offset 8, -16
 1690              		.cfi_offset 9, -12
 1691              		.cfi_offset 10, -8
 1692              		.cfi_offset 14, -4
 1693 0004 82B0     		sub	sp, sp, #8
 1694              	.LCFI18:
 1695              		.cfi_def_cfa_offset 40
 1696 0006 0446     		mov	r4, r0
 1697 0008 0D46     		mov	r5, r1
 1698 000a 1746     		mov	r7, r2
 1699 000c 1E46     		mov	r6, r3
 1700              	.LVL138:
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 1701              		.loc 1 757 0
 1702 000e 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 1703              	.LVL139:
 1704 0012 C0B2     		uxtb	r0, r0
 1705 0014 2028     		cmp	r0, #32
 1706 0016 40F0AC80 		bne	.L135
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1707              		.loc 1 760 0
 1708 001a 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 1709              	.LVL140:
 1710 001e 012B     		cmp	r3, #1
 1711 0020 00F0A980 		beq	.L136
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1712              		.loc 1 760 0 is_stmt 0 discriminator 2
 1713 0024 4FF00109 		mov	r9, #1
 1714 0028 84F84090 		strb	r9, [r4, #64]
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 1715              		.loc 1 763 0 is_stmt 1 discriminator 2
 1716 002c FFF7FEFF 		bl	HAL_GetTick
 1717              	.LVL141:
 1718 0030 8046     		mov	r8, r0
 1719              	.LVL142:
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 1720              		.loc 1 765 0 discriminator 2
 1721 0032 0090     		str	r0, [sp]
 1722 0034 2046     		mov	r0, r4
 1723              	.LVL143:
 1724 0036 4FF40041 		mov	r1, #32768
 1725 003a 4A46     		mov	r2, r9
 1726 003c 1923     		movs	r3, #25
 1727 003e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 1728              	.LVL144:
 1729 0042 0028     		cmp	r0, #0
 1730 0044 40F09980 		bne	.L137
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
ARM GAS  /tmp/cccVlT9k.s 			page 120


 1731              		.loc 1 770 0
 1732 0048 2223     		movs	r3, #34
 1733 004a 84F84130 		strb	r3, [r4, #65]
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 1734              		.loc 1 771 0
 1735 004e 1023     		movs	r3, #16
 1736 0050 84F84230 		strb	r3, [r4, #66]
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 1737              		.loc 1 772 0
 1738 0054 0023     		movs	r3, #0
 1739 0056 6364     		str	r3, [r4, #68]
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 1740              		.loc 1 775 0
 1741 0058 6762     		str	r7, [r4, #36]
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 1742              		.loc 1 776 0
 1743 005a 6685     		strh	r6, [r4, #42]	@ movhi
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 1744              		.loc 1 777 0
 1745 005c 6363     		str	r3, [r4, #52]
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1746              		.loc 1 781 0
 1747 005e 638D     		ldrh	r3, [r4, #42]
 1748 0060 9BB2     		uxth	r3, r3
 1749 0062 FF2B     		cmp	r3, #255
 1750 0064 0BD9     		bls	.L127
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 1751              		.loc 1 783 0
 1752 0066 FF22     		movs	r2, #255
 1753 0068 2285     		strh	r2, [r4, #40]	@ movhi
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 1754              		.loc 1 784 0
 1755 006a 4FF41053 		mov	r3, #9216
 1756 006e 0093     		str	r3, [sp]
 1757 0070 2046     		mov	r0, r4
 1758 0072 2946     		mov	r1, r5
 1759 0074 4FF08073 		mov	r3, #16777216
 1760 0078 FFF7FEFF 		bl	I2C_TransferConfig
 1761              	.LVL145:
 1762 007c 4EE0     		b	.L142
 1763              	.L127:
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 1764              		.loc 1 788 0
 1765 007e 628D     		ldrh	r2, [r4, #42]
 1766 0080 92B2     		uxth	r2, r2
 1767 0082 2285     		strh	r2, [r4, #40]	@ movhi
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 1768              		.loc 1 789 0
 1769 0084 4FF41053 		mov	r3, #9216
 1770 0088 0093     		str	r3, [sp]
 1771 008a 2046     		mov	r0, r4
 1772 008c 2946     		mov	r1, r5
 1773 008e D2B2     		uxtb	r2, r2
 1774 0090 4FF00073 		mov	r3, #33554432
 1775 0094 FFF7FEFF 		bl	I2C_TransferConfig
 1776              	.LVL146:
 1777 0098 40E0     		b	.L142
ARM GAS  /tmp/cccVlT9k.s 			page 121


 1778              	.LVL147:
 1779              	.L133:
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1780              		.loc 1 795 0
 1781 009a 2046     		mov	r0, r4
 1782 009c 0A99     		ldr	r1, [sp, #40]
 1783 009e 4246     		mov	r2, r8
 1784 00a0 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 1785              	.LVL148:
 1786 00a4 20B1     		cbz	r0, .L130
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1787              		.loc 1 797 0
 1788 00a6 636C     		ldr	r3, [r4, #68]
 1789 00a8 042B     		cmp	r3, #4
 1790 00aa 68D1     		bne	.L138
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 1791              		.loc 1 799 0
 1792 00ac 0123     		movs	r3, #1
 1793 00ae 6BE0     		b	.L126
 1794              	.L130:
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 1795              		.loc 1 808 0
 1796 00b0 666A     		ldr	r6, [r4, #36]
 1797 00b2 731C     		adds	r3, r6, #1
 1798 00b4 6362     		str	r3, [r4, #36]
 1799 00b6 2368     		ldr	r3, [r4]
 1800 00b8 5B6A     		ldr	r3, [r3, #36]
 1801 00ba 3370     		strb	r3, [r6]
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 1802              		.loc 1 809 0
 1803 00bc 268D     		ldrh	r6, [r4, #40]
 1804 00be 013E     		subs	r6, r6, #1
 1805 00c0 B6B2     		uxth	r6, r6
 1806 00c2 2685     		strh	r6, [r4, #40]	@ movhi
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 1807              		.loc 1 810 0
 1808 00c4 638D     		ldrh	r3, [r4, #42]
 1809 00c6 013B     		subs	r3, r3, #1
 1810 00c8 9BB2     		uxth	r3, r3
 1811 00ca 6385     		strh	r3, [r4, #42]	@ movhi
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 1812              		.loc 1 812 0
 1813 00cc 002E     		cmp	r6, #0
 1814 00ce 2AD1     		bne	.L141
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 1815              		.loc 1 812 0 is_stmt 0 discriminator 1
 1816 00d0 638D     		ldrh	r3, [r4, #42]
 1817 00d2 9BB2     		uxth	r3, r3
 1818 00d4 3BB3     		cbz	r3, .L141
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 1819              		.loc 1 815 0 is_stmt 1
 1820 00d6 CDF80080 		str	r8, [sp]
 1821 00da 2046     		mov	r0, r4
 1822 00dc 4946     		mov	r1, r9
 1823 00de 3A46     		mov	r2, r7
 1824 00e0 0A9B     		ldr	r3, [sp, #40]
 1825 00e2 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
ARM GAS  /tmp/cccVlT9k.s 			page 122


 1826              	.LVL149:
 1827 00e6 0028     		cmp	r0, #0
 1828 00e8 4BD1     		bne	.L139
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 1829              		.loc 1 820 0
 1830 00ea 638D     		ldrh	r3, [r4, #42]
 1831 00ec 9BB2     		uxth	r3, r3
 1832 00ee FF2B     		cmp	r3, #255
 1833 00f0 09D9     		bls	.L132
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 1834              		.loc 1 822 0
 1835 00f2 FF22     		movs	r2, #255
 1836 00f4 2285     		strh	r2, [r4, #40]	@ movhi
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 1837              		.loc 1 823 0
 1838 00f6 0097     		str	r7, [sp]
 1839 00f8 2046     		mov	r0, r4
 1840 00fa 2946     		mov	r1, r5
 1841 00fc 4FF08073 		mov	r3, #16777216
 1842 0100 FFF7FEFF 		bl	I2C_TransferConfig
 1843              	.LVL150:
 1844 0104 0FE0     		b	.L141
 1845              	.L132:
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 1846              		.loc 1 827 0
 1847 0106 628D     		ldrh	r2, [r4, #42]
 1848 0108 92B2     		uxth	r2, r2
 1849 010a 2285     		strh	r2, [r4, #40]	@ movhi
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1850              		.loc 1 828 0
 1851 010c 0097     		str	r7, [sp]
 1852 010e 2046     		mov	r0, r4
 1853 0110 2946     		mov	r1, r5
 1854 0112 D2B2     		uxtb	r2, r2
 1855 0114 5346     		mov	r3, r10
 1856 0116 FFF7FEFF 		bl	I2C_TransferConfig
 1857              	.LVL151:
 1858 011a 04E0     		b	.L141
 1859              	.LVL152:
 1860              	.L142:
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 1861              		.loc 1 815 0 discriminator 1
 1862 011c 4FF08009 		mov	r9, #128
 1863 0120 0027     		movs	r7, #0
 1864              	.LVL153:
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 1865              		.loc 1 828 0 discriminator 1
 1866 0122 4FF0007A 		mov	r10, #33554432
 1867              	.L141:
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 1868              		.loc 1 792 0 discriminator 1
 1869 0126 638D     		ldrh	r3, [r4, #42]
 1870 0128 9BB2     		uxth	r3, r3
 1871 012a 002B     		cmp	r3, #0
 1872 012c B5D1     		bne	.L133
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 1873              		.loc 1 835 0
ARM GAS  /tmp/cccVlT9k.s 			page 123


 1874 012e 2046     		mov	r0, r4
 1875 0130 0A99     		ldr	r1, [sp, #40]
 1876 0132 4246     		mov	r2, r8
 1877 0134 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 1878              	.LVL154:
 1879 0138 0346     		mov	r3, r0
 1880 013a 20B1     		cbz	r0, .L134
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 1881              		.loc 1 837 0
 1882 013c 636C     		ldr	r3, [r4, #68]
 1883 013e 042B     		cmp	r3, #4
 1884 0140 21D1     		bne	.L140
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 1885              		.loc 1 839 0
 1886 0142 0123     		movs	r3, #1
 1887 0144 20E0     		b	.L126
 1888              	.L134:
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 1889              		.loc 1 848 0
 1890 0146 2168     		ldr	r1, [r4]
 1891 0148 2022     		movs	r2, #32
 1892 014a CA61     		str	r2, [r1, #28]
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 1893              		.loc 1 851 0
 1894 014c 2168     		ldr	r1, [r4]
 1895 014e 4868     		ldr	r0, [r1, #4]
 1896 0150 20F0FF70 		bic	r0, r0, #33423360
 1897 0154 20F48B30 		bic	r0, r0, #71168
 1898 0158 20F4FF70 		bic	r0, r0, #510
 1899 015c 20F00100 		bic	r0, r0, #1
 1900 0160 4860     		str	r0, [r1, #4]
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 1901              		.loc 1 853 0
 1902 0162 84F84120 		strb	r2, [r4, #65]
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 1903              		.loc 1 854 0
 1904 0166 0022     		movs	r2, #0
 1905 0168 84F84220 		strb	r2, [r4, #66]
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 1906              		.loc 1 857 0
 1907 016c 84F84020 		strb	r2, [r4, #64]
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 1908              		.loc 1 859 0
 1909 0170 0AE0     		b	.L126
 1910              	.LVL155:
 1911              	.L135:
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 1912              		.loc 1 863 0
 1913 0172 0223     		movs	r3, #2
 1914              	.LVL156:
 1915 0174 08E0     		b	.L126
 1916              	.L136:
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1917              		.loc 1 760 0
 1918 0176 0223     		movs	r3, #2
 1919 0178 06E0     		b	.L126
 1920              	.LVL157:
ARM GAS  /tmp/cccVlT9k.s 			page 124


 1921              	.L137:
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 1922              		.loc 1 767 0
 1923 017a 0323     		movs	r3, #3
 1924 017c 04E0     		b	.L126
 1925              	.LVL158:
 1926              	.L138:
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1927              		.loc 1 803 0
 1928 017e 0323     		movs	r3, #3
 1929 0180 02E0     		b	.L126
 1930              	.L139:
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 1931              		.loc 1 817 0
 1932 0182 0323     		movs	r3, #3
 1933 0184 00E0     		b	.L126
 1934              	.L140:
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 1935              		.loc 1 843 0
 1936 0186 0323     		movs	r3, #3
 1937              	.LVL159:
 1938              	.L126:
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 1939              		.loc 1 865 0
 1940 0188 1846     		mov	r0, r3
 1941 018a 02B0     		add	sp, sp, #8
 1942              		@ sp needed
 1943 018c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1944              		.cfi_endproc
 1945              	.LFE128:
 1947              		.section	.text.HAL_I2C_Slave_Transmit,"ax",%progbits
 1948              		.align	2
 1949              		.global	HAL_I2C_Slave_Transmit
 1950              		.thumb
 1951              		.thumb_func
 1953              	HAL_I2C_Slave_Transmit:
 1954              	.LFB129:
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 1955              		.loc 1 877 0
 1956              		.cfi_startproc
 1957              		@ args = 0, pretend = 0, frame = 0
 1958              		@ frame_needed = 0, uses_anonymous_args = 0
 1959              	.LVL160:
 1960 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1961              	.LCFI19:
 1962              		.cfi_def_cfa_offset 24
 1963              		.cfi_offset 4, -24
 1964              		.cfi_offset 5, -20
 1965              		.cfi_offset 6, -16
 1966              		.cfi_offset 7, -12
 1967              		.cfi_offset 8, -8
 1968              		.cfi_offset 14, -4
 1969 0004 82B0     		sub	sp, sp, #8
 1970              	.LCFI20:
 1971              		.cfi_def_cfa_offset 32
 1972 0006 0446     		mov	r4, r0
 1973 0008 0D46     		mov	r5, r1
ARM GAS  /tmp/cccVlT9k.s 			page 125


 1974 000a 1646     		mov	r6, r2
 1975 000c 1F46     		mov	r7, r3
 1976              	.LVL161:
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 1977              		.loc 1 880 0
 1978 000e 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 1979              	.LVL162:
 1980 0012 C0B2     		uxtb	r0, r0
 1981 0014 2028     		cmp	r0, #32
 1982 0016 40F0AA80 		bne	.L153
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 1983              		.loc 1 882 0
 1984 001a 0029     		cmp	r1, #0
 1985 001c 00F0A980 		beq	.L154
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 1986              		.loc 1 882 0 is_stmt 0 discriminator 1
 1987 0020 002A     		cmp	r2, #0
 1988 0022 00F0A880 		beq	.L155
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1989              		.loc 1 887 0 is_stmt 1
 1990 0026 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 1991              	.LVL163:
 1992 002a 012B     		cmp	r3, #1
 1993 002c 00F0A580 		beq	.L156
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 1994              		.loc 1 887 0 is_stmt 0 discriminator 2
 1995 0030 0123     		movs	r3, #1
 1996 0032 84F84030 		strb	r3, [r4, #64]
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 1997              		.loc 1 890 0 is_stmt 1 discriminator 2
 1998 0036 FFF7FEFF 		bl	HAL_GetTick
 1999              	.LVL164:
 2000 003a 8046     		mov	r8, r0
 2001              	.LVL165:
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 2002              		.loc 1 892 0 discriminator 2
 2003 003c 2123     		movs	r3, #33
 2004 003e 84F84130 		strb	r3, [r4, #65]
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2005              		.loc 1 893 0 discriminator 2
 2006 0042 2023     		movs	r3, #32
 2007 0044 84F84230 		strb	r3, [r4, #66]
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2008              		.loc 1 894 0 discriminator 2
 2009 0048 0022     		movs	r2, #0
 2010 004a 6264     		str	r2, [r4, #68]
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 2011              		.loc 1 897 0 discriminator 2
 2012 004c 6562     		str	r5, [r4, #36]
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2013              		.loc 1 898 0 discriminator 2
 2014 004e 6685     		strh	r6, [r4, #42]	@ movhi
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2015              		.loc 1 899 0 discriminator 2
 2016 0050 6263     		str	r2, [r4, #52]
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2017              		.loc 1 902 0 discriminator 2
ARM GAS  /tmp/cccVlT9k.s 			page 126


 2018 0052 2368     		ldr	r3, [r4]
 2019 0054 5968     		ldr	r1, [r3, #4]
 2020 0056 21F40041 		bic	r1, r1, #32768
 2021 005a 5960     		str	r1, [r3, #4]
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 2022              		.loc 1 905 0 discriminator 2
 2023 005c 0090     		str	r0, [sp]
 2024 005e 2046     		mov	r0, r4
 2025              	.LVL166:
 2026 0060 0821     		movs	r1, #8
 2027 0062 3B46     		mov	r3, r7
 2028 0064 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2029              	.LVL167:
 2030 0068 30B1     		cbz	r0, .L145
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2031              		.loc 1 908 0
 2032 006a 2368     		ldr	r3, [r4]
 2033 006c 5A68     		ldr	r2, [r3, #4]
 2034 006e 42F40042 		orr	r2, r2, #32768
 2035 0072 5A60     		str	r2, [r3, #4]
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2036              		.loc 1 909 0
 2037 0074 0323     		movs	r3, #3
 2038 0076 85E0     		b	.L144
 2039              	.L145:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 2040              		.loc 1 913 0
 2041 0078 2368     		ldr	r3, [r4]
 2042 007a 0822     		movs	r2, #8
 2043 007c DA61     		str	r2, [r3, #28]
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 2044              		.loc 1 916 0
 2045 007e E368     		ldr	r3, [r4, #12]
 2046 0080 022B     		cmp	r3, #2
 2047 0082 12D1     		bne	.L146
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 2048              		.loc 1 919 0
 2049 0084 CDF80080 		str	r8, [sp]
 2050 0088 2046     		mov	r0, r4
 2051 008a 1146     		mov	r1, r2
 2052 008c 0022     		movs	r2, #0
 2053 008e 3B46     		mov	r3, r7
 2054 0090 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2055              	.LVL168:
 2056 0094 30B1     		cbz	r0, .L147
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2057              		.loc 1 922 0
 2058 0096 2368     		ldr	r3, [r4]
 2059 0098 5A68     		ldr	r2, [r3, #4]
 2060 009a 42F40042 		orr	r2, r2, #32768
 2061 009e 5A60     		str	r2, [r3, #4]
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 2062              		.loc 1 923 0
 2063 00a0 0323     		movs	r3, #3
 2064 00a2 6FE0     		b	.L144
 2065              	.L147:
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
ARM GAS  /tmp/cccVlT9k.s 			page 127


 2066              		.loc 1 927 0
 2067 00a4 2368     		ldr	r3, [r4]
 2068 00a6 0822     		movs	r2, #8
 2069 00a8 DA61     		str	r2, [r3, #28]
 2070              	.L146:
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, RESET, Timeout, tickstart) != HAL_OK)
 2071              		.loc 1 931 0
 2072 00aa CDF80080 		str	r8, [sp]
 2073 00ae 2046     		mov	r0, r4
 2074 00b0 4FF48031 		mov	r1, #65536
 2075 00b4 0022     		movs	r2, #0
 2076 00b6 3B46     		mov	r3, r7
 2077 00b8 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2078              	.LVL169:
 2079 00bc 00B3     		cbz	r0, .L159
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2080              		.loc 1 934 0
 2081 00be 2368     		ldr	r3, [r4]
 2082 00c0 5A68     		ldr	r2, [r3, #4]
 2083 00c2 42F40042 		orr	r2, r2, #32768
 2084 00c6 5A60     		str	r2, [r3, #4]
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2085              		.loc 1 935 0
 2086 00c8 0323     		movs	r3, #3
 2087 00ca 5BE0     		b	.L144
 2088              	.L150:
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2089              		.loc 1 941 0
 2090 00cc 2046     		mov	r0, r4
 2091 00ce 3946     		mov	r1, r7
 2092 00d0 4246     		mov	r2, r8
 2093 00d2 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 2094              	.LVL170:
 2095 00d6 48B1     		cbz	r0, .L149
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2096              		.loc 1 944 0
 2097 00d8 2368     		ldr	r3, [r4]
 2098 00da 5A68     		ldr	r2, [r3, #4]
 2099 00dc 42F40042 		orr	r2, r2, #32768
 2100 00e0 5A60     		str	r2, [r3, #4]
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 2101              		.loc 1 946 0
 2102 00e2 636C     		ldr	r3, [r4, #68]
 2103 00e4 042B     		cmp	r3, #4
 2104 00e6 4AD1     		bne	.L157
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 2105              		.loc 1 948 0
 2106 00e8 0123     		movs	r3, #1
 2107 00ea 4BE0     		b	.L144
 2108              	.L149:
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 2109              		.loc 1 957 0
 2110 00ec 2268     		ldr	r2, [r4]
 2111 00ee 636A     		ldr	r3, [r4, #36]
 2112 00f0 591C     		adds	r1, r3, #1
 2113 00f2 6162     		str	r1, [r4, #36]
 2114 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/cccVlT9k.s 			page 128


 2115 00f6 9362     		str	r3, [r2, #40]
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 2116              		.loc 1 958 0
 2117 00f8 638D     		ldrh	r3, [r4, #42]
 2118 00fa 013B     		subs	r3, r3, #1
 2119 00fc 9BB2     		uxth	r3, r3
 2120 00fe 6385     		strh	r3, [r4, #42]	@ movhi
 2121              	.L159:
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 2122              		.loc 1 938 0 discriminator 1
 2123 0100 638D     		ldrh	r3, [r4, #42]
 2124 0102 9BB2     		uxth	r3, r3
 2125 0104 002B     		cmp	r3, #0
 2126 0106 E1D1     		bne	.L150
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2127              		.loc 1 962 0
 2128 0108 2046     		mov	r0, r4
 2129 010a 3946     		mov	r1, r7
 2130 010c 4246     		mov	r2, r8
 2131 010e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2132              	.LVL171:
 2133 0112 48B1     		cbz	r0, .L151
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2134              		.loc 1 965 0
 2135 0114 2368     		ldr	r3, [r4]
 2136 0116 5A68     		ldr	r2, [r3, #4]
 2137 0118 42F40042 		orr	r2, r2, #32768
 2138 011c 5A60     		str	r2, [r3, #4]
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 2139              		.loc 1 967 0
 2140 011e 636C     		ldr	r3, [r4, #68]
 2141 0120 042B     		cmp	r3, #4
 2142 0122 2ED1     		bne	.L158
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** 	hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2143              		.loc 1 971 0
 2144 0124 0023     		movs	r3, #0
 2145 0126 6364     		str	r3, [r4, #68]
 2146              	.L151:
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
 2147              		.loc 1 980 0
 2148 0128 2368     		ldr	r3, [r4]
 2149 012a 2022     		movs	r2, #32
 2150 012c DA61     		str	r2, [r3, #28]
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 2151              		.loc 1 983 0
 2152 012e CDF80080 		str	r8, [sp]
 2153 0132 2046     		mov	r0, r4
 2154 0134 4FF40041 		mov	r1, #32768
 2155 0138 0122     		movs	r2, #1
 2156 013a 3B46     		mov	r3, r7
 2157 013c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2158              	.LVL172:
 2159 0140 0346     		mov	r3, r0
 2160 0142 30B1     		cbz	r0, .L152
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2161              		.loc 1 986 0
 2162 0144 2368     		ldr	r3, [r4]
ARM GAS  /tmp/cccVlT9k.s 			page 129


 2163 0146 5A68     		ldr	r2, [r3, #4]
 2164 0148 42F40042 		orr	r2, r2, #32768
 2165 014c 5A60     		str	r2, [r3, #4]
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2166              		.loc 1 987 0
 2167 014e 0323     		movs	r3, #3
 2168 0150 18E0     		b	.L144
 2169              	.L152:
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2170              		.loc 1 991 0
 2171 0152 2268     		ldr	r2, [r4]
 2172 0154 5168     		ldr	r1, [r2, #4]
 2173 0156 41F40041 		orr	r1, r1, #32768
 2174 015a 5160     		str	r1, [r2, #4]
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 2175              		.loc 1 993 0
 2176 015c 2022     		movs	r2, #32
 2177 015e 84F84120 		strb	r2, [r4, #65]
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2178              		.loc 1 994 0
 2179 0162 0022     		movs	r2, #0
 2180 0164 84F84220 		strb	r2, [r4, #66]
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2181              		.loc 1 997 0
 2182 0168 84F84020 		strb	r2, [r4, #64]
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 2183              		.loc 1 999 0
 2184 016c 0AE0     		b	.L144
 2185              	.LVL173:
 2186              	.L153:
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 2187              		.loc 1 1003 0
 2188 016e 0223     		movs	r3, #2
 2189              	.LVL174:
 2190 0170 08E0     		b	.L144
 2191              	.LVL175:
 2192              	.L154:
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 2193              		.loc 1 884 0
 2194 0172 0123     		movs	r3, #1
 2195              	.LVL176:
 2196 0174 06E0     		b	.L144
 2197              	.LVL177:
 2198              	.L155:
 2199 0176 0123     		movs	r3, #1
 2200              	.LVL178:
 2201 0178 04E0     		b	.L144
 2202              	.L156:
 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2203              		.loc 1 887 0
 2204 017a 0223     		movs	r3, #2
 2205 017c 02E0     		b	.L144
 2206              	.LVL179:
 2207              	.L157:
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 2208              		.loc 1 952 0
 2209 017e 0323     		movs	r3, #3
ARM GAS  /tmp/cccVlT9k.s 			page 130


 2210 0180 00E0     		b	.L144
 2211              	.L158:
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 2212              		.loc 1 975 0
 2213 0182 0323     		movs	r3, #3
 2214              	.LVL180:
 2215              	.L144:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 2216              		.loc 1 1005 0
 2217 0184 1846     		mov	r0, r3
 2218 0186 02B0     		add	sp, sp, #8
 2219              		@ sp needed
 2220 0188 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2221              		.cfi_endproc
 2222              	.LFE129:
 2224              		.section	.text.HAL_I2C_Slave_Receive,"ax",%progbits
 2225              		.align	2
 2226              		.global	HAL_I2C_Slave_Receive
 2227              		.thumb
 2228              		.thumb_func
 2230              	HAL_I2C_Slave_Receive:
 2231              	.LFB130:
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 2232              		.loc 1 1017 0
 2233              		.cfi_startproc
 2234              		@ args = 0, pretend = 0, frame = 0
 2235              		@ frame_needed = 0, uses_anonymous_args = 0
 2236              	.LVL181:
 2237 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 2238              	.LCFI21:
 2239              		.cfi_def_cfa_offset 24
 2240              		.cfi_offset 4, -24
 2241              		.cfi_offset 5, -20
 2242              		.cfi_offset 6, -16
 2243              		.cfi_offset 7, -12
 2244              		.cfi_offset 8, -8
 2245              		.cfi_offset 14, -4
 2246 0004 82B0     		sub	sp, sp, #8
 2247              	.LCFI22:
 2248              		.cfi_def_cfa_offset 32
 2249 0006 0446     		mov	r4, r0
 2250 0008 0D46     		mov	r5, r1
 2251 000a 1646     		mov	r6, r2
 2252 000c 1F46     		mov	r7, r3
 2253              	.LVL182:
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2254              		.loc 1 1020 0
 2255 000e 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 2256              	.LVL183:
 2257 0012 C0B2     		uxtb	r0, r0
 2258 0014 2028     		cmp	r0, #32
 2259 0016 40F0A380 		bne	.L169
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 2260              		.loc 1 1022 0
 2261 001a 0029     		cmp	r1, #0
 2262 001c 00F0A280 		beq	.L170
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
ARM GAS  /tmp/cccVlT9k.s 			page 131


 2263              		.loc 1 1022 0 is_stmt 0 discriminator 1
 2264 0020 002A     		cmp	r2, #0
 2265 0022 00F0A180 		beq	.L171
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2266              		.loc 1 1027 0 is_stmt 1
 2267 0026 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 2268              	.LVL184:
 2269 002a 012B     		cmp	r3, #1
 2270 002c 00F09E80 		beq	.L172
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2271              		.loc 1 1027 0 is_stmt 0 discriminator 2
 2272 0030 0123     		movs	r3, #1
 2273 0032 84F84030 		strb	r3, [r4, #64]
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 2274              		.loc 1 1030 0 is_stmt 1 discriminator 2
 2275 0036 FFF7FEFF 		bl	HAL_GetTick
 2276              	.LVL185:
 2277 003a 8046     		mov	r8, r0
 2278              	.LVL186:
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 2279              		.loc 1 1032 0 discriminator 2
 2280 003c 2223     		movs	r3, #34
 2281 003e 84F84130 		strb	r3, [r4, #65]
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 2282              		.loc 1 1033 0 discriminator 2
 2283 0042 2023     		movs	r3, #32
 2284 0044 84F84230 		strb	r3, [r4, #66]
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 2285              		.loc 1 1034 0 discriminator 2
 2286 0048 0022     		movs	r2, #0
 2287 004a 6264     		str	r2, [r4, #68]
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 2288              		.loc 1 1037 0 discriminator 2
 2289 004c 6562     		str	r5, [r4, #36]
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 2290              		.loc 1 1038 0 discriminator 2
 2291 004e 6685     		strh	r6, [r4, #42]	@ movhi
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 2292              		.loc 1 1039 0 discriminator 2
 2293 0050 6263     		str	r2, [r4, #52]
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2294              		.loc 1 1042 0 discriminator 2
 2295 0052 2368     		ldr	r3, [r4]
 2296 0054 5968     		ldr	r1, [r3, #4]
 2297 0056 21F40041 		bic	r1, r1, #32768
 2298 005a 5960     		str	r1, [r3, #4]
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, RESET, Timeout, tickstart) != HAL_OK)
 2299              		.loc 1 1045 0 discriminator 2
 2300 005c 0090     		str	r0, [sp]
 2301 005e 2046     		mov	r0, r4
 2302              	.LVL187:
 2303 0060 0821     		movs	r1, #8
 2304 0062 3B46     		mov	r3, r7
 2305 0064 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2306              	.LVL188:
 2307 0068 30B1     		cbz	r0, .L162
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
ARM GAS  /tmp/cccVlT9k.s 			page 132


 2308              		.loc 1 1048 0
 2309 006a 2368     		ldr	r3, [r4]
 2310 006c 5A68     		ldr	r2, [r3, #4]
 2311 006e 42F40042 		orr	r2, r2, #32768
 2312 0072 5A60     		str	r2, [r3, #4]
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2313              		.loc 1 1049 0
 2314 0074 0323     		movs	r3, #3
 2315 0076 7EE0     		b	.L161
 2316              	.L162:
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 2317              		.loc 1 1053 0
 2318 0078 2368     		ldr	r3, [r4]
 2319 007a 0822     		movs	r2, #8
 2320 007c DA61     		str	r2, [r3, #28]
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_DIR, SET, Timeout, tickstart) != HAL_OK)
 2321              		.loc 1 1056 0
 2322 007e CDF80080 		str	r8, [sp]
 2323 0082 2046     		mov	r0, r4
 2324 0084 4FF48031 		mov	r1, #65536
 2325 0088 0122     		movs	r2, #1
 2326 008a 3B46     		mov	r3, r7
 2327 008c FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2328              	.LVL189:
 2329 0090 0028     		cmp	r0, #0
 2330 0092 2ED0     		beq	.L175
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2331              		.loc 1 1059 0
 2332 0094 2368     		ldr	r3, [r4]
 2333 0096 5A68     		ldr	r2, [r3, #4]
 2334 0098 42F40042 		orr	r2, r2, #32768
 2335 009c 5A60     		str	r2, [r3, #4]
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2336              		.loc 1 1060 0
 2337 009e 0323     		movs	r3, #3
 2338 00a0 69E0     		b	.L161
 2339              	.L166:
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2340              		.loc 1 1066 0
 2341 00a2 2046     		mov	r0, r4
 2342 00a4 3946     		mov	r1, r7
 2343 00a6 4246     		mov	r2, r8
 2344 00a8 FFF7FEFF 		bl	I2C_WaitOnRXNEFlagUntilTimeout
 2345              	.LVL190:
 2346 00ac B8B1     		cbz	r0, .L164
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2347              		.loc 1 1069 0
 2348 00ae 2368     		ldr	r3, [r4]
 2349 00b0 5A68     		ldr	r2, [r3, #4]
 2350 00b2 42F40042 		orr	r2, r2, #32768
 2351 00b6 5A60     		str	r2, [r3, #4]
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET)
 2352              		.loc 1 1072 0
 2353 00b8 2268     		ldr	r2, [r4]
 2354 00ba 9369     		ldr	r3, [r2, #24]
 2355 00bc 13F0040F 		tst	r3, #4
 2356 00c0 08D0     		beq	.L165
ARM GAS  /tmp/cccVlT9k.s 			page 133


1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 2357              		.loc 1 1075 0
 2358 00c2 636A     		ldr	r3, [r4, #36]
 2359 00c4 591C     		adds	r1, r3, #1
 2360 00c6 6162     		str	r1, [r4, #36]
 2361 00c8 526A     		ldr	r2, [r2, #36]
 2362 00ca 1A70     		strb	r2, [r3]
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferCount--;
 2363              		.loc 1 1076 0
 2364 00cc 638D     		ldrh	r3, [r4, #42]
 2365 00ce 013B     		subs	r3, r3, #1
 2366 00d0 9BB2     		uxth	r3, r3
 2367 00d2 6385     		strh	r3, [r4, #42]	@ movhi
 2368              	.L165:
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_TIMEOUT)
 2369              		.loc 1 1079 0
 2370 00d4 636C     		ldr	r3, [r4, #68]
 2371 00d6 202B     		cmp	r3, #32
 2372 00d8 4AD1     		bne	.L173
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 2373              		.loc 1 1081 0
 2374 00da 0323     		movs	r3, #3
 2375 00dc 4BE0     		b	.L161
 2376              	.L164:
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 2377              		.loc 1 1090 0
 2378 00de 636A     		ldr	r3, [r4, #36]
 2379 00e0 5A1C     		adds	r2, r3, #1
 2380 00e2 6262     		str	r2, [r4, #36]
 2381 00e4 2268     		ldr	r2, [r4]
 2382 00e6 526A     		ldr	r2, [r2, #36]
 2383 00e8 1A70     		strb	r2, [r3]
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 2384              		.loc 1 1091 0
 2385 00ea 638D     		ldrh	r3, [r4, #42]
 2386 00ec 013B     		subs	r3, r3, #1
 2387 00ee 9BB2     		uxth	r3, r3
 2388 00f0 6385     		strh	r3, [r4, #42]	@ movhi
 2389              	.L175:
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     while(hi2c->XferCount > 0U)
 2390              		.loc 1 1063 0 discriminator 1
 2391 00f2 638D     		ldrh	r3, [r4, #42]
 2392 00f4 9BB2     		uxth	r3, r3
 2393 00f6 002B     		cmp	r3, #0
 2394 00f8 D3D1     		bne	.L166
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 2395              		.loc 1 1095 0
 2396 00fa 2046     		mov	r0, r4
 2397 00fc 3946     		mov	r1, r7
 2398 00fe 4246     		mov	r2, r8
 2399 0100 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 2400              	.LVL191:
 2401 0104 48B1     		cbz	r0, .L167
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2402              		.loc 1 1098 0
 2403 0106 2368     		ldr	r3, [r4]
 2404 0108 5A68     		ldr	r2, [r3, #4]
ARM GAS  /tmp/cccVlT9k.s 			page 134


 2405 010a 42F40042 		orr	r2, r2, #32768
 2406 010e 5A60     		str	r2, [r3, #4]
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 2407              		.loc 1 1100 0
 2408 0110 636C     		ldr	r3, [r4, #68]
 2409 0112 042B     		cmp	r3, #4
 2410 0114 2ED1     		bne	.L174
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 2411              		.loc 1 1102 0
 2412 0116 0123     		movs	r3, #1
 2413 0118 2DE0     		b	.L161
 2414              	.L167:
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_STOPF);
 2415              		.loc 1 1111 0
 2416 011a 2368     		ldr	r3, [r4]
 2417 011c 2022     		movs	r2, #32
 2418 011e DA61     		str	r2, [r3, #28]
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, Timeout, tickstart) != HAL_OK)
 2419              		.loc 1 1114 0
 2420 0120 CDF80080 		str	r8, [sp]
 2421 0124 2046     		mov	r0, r4
 2422 0126 4FF40041 		mov	r1, #32768
 2423 012a 0122     		movs	r2, #1
 2424 012c 3B46     		mov	r3, r7
 2425 012e FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 2426              	.LVL192:
 2427 0132 0346     		mov	r3, r0
 2428 0134 30B1     		cbz	r0, .L168
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2429              		.loc 1 1117 0
 2430 0136 2368     		ldr	r3, [r4]
 2431 0138 5A68     		ldr	r2, [r3, #4]
 2432 013a 42F40042 		orr	r2, r2, #32768
 2433 013e 5A60     		str	r2, [r3, #4]
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 2434              		.loc 1 1118 0
 2435 0140 0323     		movs	r3, #3
 2436 0142 18E0     		b	.L161
 2437              	.L168:
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 |= I2C_CR2_NACK;
 2438              		.loc 1 1122 0
 2439 0144 2268     		ldr	r2, [r4]
 2440 0146 5168     		ldr	r1, [r2, #4]
 2441 0148 41F40041 		orr	r1, r1, #32768
 2442 014c 5160     		str	r1, [r2, #4]
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 2443              		.loc 1 1124 0
 2444 014e 2022     		movs	r2, #32
 2445 0150 84F84120 		strb	r2, [r4, #65]
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 2446              		.loc 1 1125 0
 2447 0154 0022     		movs	r2, #0
 2448 0156 84F84220 		strb	r2, [r4, #66]
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2449              		.loc 1 1128 0
 2450 015a 84F84020 		strb	r2, [r4, #64]
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
ARM GAS  /tmp/cccVlT9k.s 			page 135


 2451              		.loc 1 1130 0
 2452 015e 0AE0     		b	.L161
 2453              	.LVL193:
 2454              	.L169:
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 2455              		.loc 1 1134 0
 2456 0160 0223     		movs	r3, #2
 2457              	.LVL194:
 2458 0162 08E0     		b	.L161
 2459              	.LVL195:
 2460              	.L170:
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 2461              		.loc 1 1024 0
 2462 0164 0123     		movs	r3, #1
 2463              	.LVL196:
 2464 0166 06E0     		b	.L161
 2465              	.LVL197:
 2466              	.L171:
 2467 0168 0123     		movs	r3, #1
 2468              	.LVL198:
 2469 016a 04E0     		b	.L161
 2470              	.L172:
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2471              		.loc 1 1027 0
 2472 016c 0223     		movs	r3, #2
 2473 016e 02E0     		b	.L161
 2474              	.LVL199:
 2475              	.L173:
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 2476              		.loc 1 1085 0
 2477 0170 0123     		movs	r3, #1
 2478 0172 00E0     		b	.L161
 2479              	.L174:
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 2480              		.loc 1 1106 0
 2481 0174 0323     		movs	r3, #3
 2482              	.LVL200:
 2483              	.L161:
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 2484              		.loc 1 1136 0
 2485 0176 1846     		mov	r0, r3
 2486 0178 02B0     		add	sp, sp, #8
 2487              		@ sp needed
 2488 017a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2489              		.cfi_endproc
 2490              	.LFE130:
 2492 017e 00BF     		.section	.text.HAL_I2C_Master_Transmit_IT,"ax",%progbits
 2493              		.align	2
 2494              		.global	HAL_I2C_Master_Transmit_IT
 2495              		.thumb
 2496              		.thumb_func
 2498              	HAL_I2C_Master_Transmit_IT:
 2499              	.LFB131:
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 2500              		.loc 1 1149 0
 2501              		.cfi_startproc
 2502              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cccVlT9k.s 			page 136


 2503              		@ frame_needed = 0, uses_anonymous_args = 0
 2504              	.LVL201:
 2505 0000 30B5     		push	{r4, r5, lr}
 2506              	.LCFI23:
 2507              		.cfi_def_cfa_offset 12
 2508              		.cfi_offset 4, -12
 2509              		.cfi_offset 5, -8
 2510              		.cfi_offset 14, -4
 2511 0002 83B0     		sub	sp, sp, #12
 2512              	.LCFI24:
 2513              		.cfi_def_cfa_offset 24
 2514 0004 0446     		mov	r4, r0
 2515              	.LVL202:
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2516              		.loc 1 1152 0
 2517 0006 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 2518              	.LVL203:
 2519 000a C0B2     		uxtb	r0, r0
 2520 000c 2028     		cmp	r0, #32
 2521 000e 37D1     		bne	.L180
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2522              		.loc 1 1154 0
 2523 0010 2068     		ldr	r0, [r4]
 2524 0012 8069     		ldr	r0, [r0, #24]
 2525 0014 10F4004F 		tst	r0, #32768
 2526 0018 34D1     		bne	.L181
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2527              		.loc 1 1160 0
 2528 001a 94F84000 		ldrb	r0, [r4, #64]	@ zero_extendqisi2
 2529 001e 0128     		cmp	r0, #1
 2530 0020 32D0     		beq	.L182
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2531              		.loc 1 1160 0 is_stmt 0 discriminator 2
 2532 0022 0120     		movs	r0, #1
 2533 0024 84F84000 		strb	r0, [r4, #64]
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 2534              		.loc 1 1162 0 is_stmt 1 discriminator 2
 2535 0028 2120     		movs	r0, #33
 2536 002a 84F84100 		strb	r0, [r4, #65]
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2537              		.loc 1 1163 0 discriminator 2
 2538 002e 1020     		movs	r0, #16
 2539 0030 84F84200 		strb	r0, [r4, #66]
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2540              		.loc 1 1164 0 discriminator 2
 2541 0034 0020     		movs	r0, #0
 2542 0036 6064     		str	r0, [r4, #68]
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2543              		.loc 1 1167 0 discriminator 2
 2544 0038 6262     		str	r2, [r4, #36]
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2545              		.loc 1 1168 0 discriminator 2
 2546 003a 6385     		strh	r3, [r4, #42]	@ movhi
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2547              		.loc 1 1169 0 discriminator 2
 2548 003c 144B     		ldr	r3, .L183
 2549              	.LVL204:
ARM GAS  /tmp/cccVlT9k.s 			page 137


 2550 003e E362     		str	r3, [r4, #44]
 2551              	.LVL205:
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2552              		.loc 1 1170 0 discriminator 2
 2553 0040 144B     		ldr	r3, .L183+4
 2554 0042 6363     		str	r3, [r4, #52]
1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 2555              		.loc 1 1172 0 discriminator 2
 2556 0044 638D     		ldrh	r3, [r4, #42]
 2557 0046 9BB2     		uxth	r3, r3
 2558 0048 FF2B     		cmp	r3, #255
 2559 004a 04D9     		bls	.L178
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 2560              		.loc 1 1174 0
 2561 004c FF23     		movs	r3, #255
 2562 004e 2385     		strh	r3, [r4, #40]	@ movhi
 2563              	.LVL206:
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2564              		.loc 1 1175 0
 2565 0050 4FF08073 		mov	r3, #16777216
 2566 0054 03E0     		b	.L179
 2567              	.LVL207:
 2568              	.L178:
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 2569              		.loc 1 1179 0
 2570 0056 638D     		ldrh	r3, [r4, #42]
 2571 0058 2385     		strh	r3, [r4, #40]	@ movhi
 2572              	.LVL208:
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2573              		.loc 1 1180 0
 2574 005a 4FF00073 		mov	r3, #33554432
 2575              	.LVL209:
 2576              	.L179:
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
 2577              		.loc 1 1185 0
 2578 005e 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 2579              	.LVL210:
 2580 0062 4FF40050 		mov	r0, #8192
 2581 0066 0090     		str	r0, [sp]
 2582              	.LVL211:
 2583 0068 2046     		mov	r0, r4
 2584 006a FFF7FEFF 		bl	I2C_TransferConfig
 2585              	.LVL212:
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
 2586              		.loc 1 1188 0
 2587 006e 0025     		movs	r5, #0
 2588 0070 84F84050 		strb	r5, [r4, #64]
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 2589              		.loc 1 1197 0
 2590 0074 2046     		mov	r0, r4
 2591 0076 0121     		movs	r1, #1
 2592 0078 FFF7FEFF 		bl	I2C_Enable_IRQ
 2593              	.LVL213:
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 2594              		.loc 1 1199 0
 2595 007c 2846     		mov	r0, r5
 2596 007e 04E0     		b	.L177
ARM GAS  /tmp/cccVlT9k.s 			page 138


 2597              	.LVL214:
 2598              	.L180:
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 2599              		.loc 1 1203 0
 2600 0080 0220     		movs	r0, #2
 2601 0082 02E0     		b	.L177
 2602              	.L181:
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 2603              		.loc 1 1156 0
 2604 0084 0220     		movs	r0, #2
 2605 0086 00E0     		b	.L177
 2606              	.L182:
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2607              		.loc 1 1160 0
 2608 0088 0220     		movs	r0, #2
 2609              	.LVL215:
 2610              	.L177:
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 2611              		.loc 1 1205 0
 2612 008a 03B0     		add	sp, sp, #12
 2613              		@ sp needed
 2614 008c 30BD     		pop	{r4, r5, pc}
 2615              	.LVL216:
 2616              	.L184:
 2617 008e 00BF     		.align	2
 2618              	.L183:
 2619 0090 0000FFFF 		.word	-65536
 2620 0094 00000000 		.word	I2C_Master_ISR_IT
 2621              		.cfi_endproc
 2622              	.LFE131:
 2624              		.section	.text.HAL_I2C_Master_Receive_IT,"ax",%progbits
 2625              		.align	2
 2626              		.global	HAL_I2C_Master_Receive_IT
 2627              		.thumb
 2628              		.thumb_func
 2630              	HAL_I2C_Master_Receive_IT:
 2631              	.LFB132:
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 2632              		.loc 1 1218 0
 2633              		.cfi_startproc
 2634              		@ args = 0, pretend = 0, frame = 0
 2635              		@ frame_needed = 0, uses_anonymous_args = 0
 2636              	.LVL217:
 2637 0000 30B5     		push	{r4, r5, lr}
 2638              	.LCFI25:
 2639              		.cfi_def_cfa_offset 12
 2640              		.cfi_offset 4, -12
 2641              		.cfi_offset 5, -8
 2642              		.cfi_offset 14, -4
 2643 0002 83B0     		sub	sp, sp, #12
 2644              	.LCFI26:
 2645              		.cfi_def_cfa_offset 24
 2646 0004 0446     		mov	r4, r0
 2647              	.LVL218:
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2648              		.loc 1 1221 0
 2649 0006 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
ARM GAS  /tmp/cccVlT9k.s 			page 139


 2650              	.LVL219:
 2651 000a C0B2     		uxtb	r0, r0
 2652 000c 2028     		cmp	r0, #32
 2653 000e 37D1     		bne	.L189
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2654              		.loc 1 1223 0
 2655 0010 2068     		ldr	r0, [r4]
 2656 0012 8069     		ldr	r0, [r0, #24]
 2657 0014 10F4004F 		tst	r0, #32768
 2658 0018 34D1     		bne	.L190
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2659              		.loc 1 1229 0
 2660 001a 94F84000 		ldrb	r0, [r4, #64]	@ zero_extendqisi2
 2661 001e 0128     		cmp	r0, #1
 2662 0020 32D0     		beq	.L191
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2663              		.loc 1 1229 0 is_stmt 0 discriminator 2
 2664 0022 0120     		movs	r0, #1
 2665 0024 84F84000 		strb	r0, [r4, #64]
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 2666              		.loc 1 1231 0 is_stmt 1 discriminator 2
 2667 0028 2220     		movs	r0, #34
 2668 002a 84F84100 		strb	r0, [r4, #65]
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2669              		.loc 1 1232 0 discriminator 2
 2670 002e 1020     		movs	r0, #16
 2671 0030 84F84200 		strb	r0, [r4, #66]
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2672              		.loc 1 1233 0 discriminator 2
 2673 0034 0020     		movs	r0, #0
 2674 0036 6064     		str	r0, [r4, #68]
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2675              		.loc 1 1236 0 discriminator 2
 2676 0038 6262     		str	r2, [r4, #36]
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2677              		.loc 1 1237 0 discriminator 2
 2678 003a 6385     		strh	r3, [r4, #42]	@ movhi
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2679              		.loc 1 1238 0 discriminator 2
 2680 003c 144B     		ldr	r3, .L192
 2681              	.LVL220:
 2682 003e E362     		str	r3, [r4, #44]
 2683              	.LVL221:
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 2684              		.loc 1 1239 0 discriminator 2
 2685 0040 144B     		ldr	r3, .L192+4
 2686 0042 6363     		str	r3, [r4, #52]
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 2687              		.loc 1 1241 0 discriminator 2
 2688 0044 638D     		ldrh	r3, [r4, #42]
 2689 0046 9BB2     		uxth	r3, r3
 2690 0048 FF2B     		cmp	r3, #255
 2691 004a 04D9     		bls	.L187
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 2692              		.loc 1 1243 0
 2693 004c FF23     		movs	r3, #255
 2694 004e 2385     		strh	r3, [r4, #40]	@ movhi
ARM GAS  /tmp/cccVlT9k.s 			page 140


 2695              	.LVL222:
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 2696              		.loc 1 1244 0
 2697 0050 4FF08073 		mov	r3, #16777216
 2698 0054 03E0     		b	.L188
 2699              	.LVL223:
 2700              	.L187:
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 2701              		.loc 1 1248 0
 2702 0056 638D     		ldrh	r3, [r4, #42]
 2703 0058 2385     		strh	r3, [r4, #40]	@ movhi
 2704              	.LVL224:
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 2705              		.loc 1 1249 0
 2706 005a 4FF00073 		mov	r3, #33554432
 2707              	.LVL225:
 2708              	.L188:
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 2709              		.loc 1 1254 0
 2710 005e 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 2711              	.LVL226:
 2712 0062 4FF41050 		mov	r0, #9216
 2713 0066 0090     		str	r0, [sp]
 2714              	.LVL227:
 2715 0068 2046     		mov	r0, r4
 2716 006a FFF7FEFF 		bl	I2C_TransferConfig
 2717              	.LVL228:
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2718              		.loc 1 1257 0
 2719 006e 0025     		movs	r5, #0
 2720 0070 84F84050 		strb	r5, [r4, #64]
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 2721              		.loc 1 1266 0
 2722 0074 2046     		mov	r0, r4
 2723 0076 0221     		movs	r1, #2
 2724 0078 FFF7FEFF 		bl	I2C_Enable_IRQ
 2725              	.LVL229:
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 2726              		.loc 1 1268 0
 2727 007c 2846     		mov	r0, r5
 2728 007e 04E0     		b	.L186
 2729              	.LVL230:
 2730              	.L189:
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 2731              		.loc 1 1272 0
 2732 0080 0220     		movs	r0, #2
 2733 0082 02E0     		b	.L186
 2734              	.L190:
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 2735              		.loc 1 1225 0
 2736 0084 0220     		movs	r0, #2
 2737 0086 00E0     		b	.L186
 2738              	.L191:
1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2739              		.loc 1 1229 0
 2740 0088 0220     		movs	r0, #2
 2741              	.LVL231:
ARM GAS  /tmp/cccVlT9k.s 			page 141


 2742              	.L186:
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 2743              		.loc 1 1274 0
 2744 008a 03B0     		add	sp, sp, #12
 2745              		@ sp needed
 2746 008c 30BD     		pop	{r4, r5, pc}
 2747              	.LVL232:
 2748              	.L193:
 2749 008e 00BF     		.align	2
 2750              	.L192:
 2751 0090 0000FFFF 		.word	-65536
 2752 0094 00000000 		.word	I2C_Master_ISR_IT
 2753              		.cfi_endproc
 2754              	.LFE132:
 2756              		.section	.text.HAL_I2C_Slave_Transmit_IT,"ax",%progbits
 2757              		.align	2
 2758              		.global	HAL_I2C_Slave_Transmit_IT
 2759              		.thumb
 2760              		.thumb_func
 2762              	HAL_I2C_Slave_Transmit_IT:
 2763              	.LFB133:
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 2764              		.loc 1 1285 0
 2765              		.cfi_startproc
 2766              		@ args = 0, pretend = 0, frame = 0
 2767              		@ frame_needed = 0, uses_anonymous_args = 0
 2768              	.LVL233:
 2769 0000 38B5     		push	{r3, r4, r5, lr}
 2770              	.LCFI27:
 2771              		.cfi_def_cfa_offset 16
 2772              		.cfi_offset 3, -16
 2773              		.cfi_offset 4, -12
 2774              		.cfi_offset 5, -8
 2775              		.cfi_offset 14, -4
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2776              		.loc 1 1286 0
 2777 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2778 0006 DBB2     		uxtb	r3, r3
 2779 0008 202B     		cmp	r3, #32
 2780 000a 22D1     		bne	.L196
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2781              		.loc 1 1289 0
 2782 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2783 0010 012B     		cmp	r3, #1
 2784 0012 20D0     		beq	.L197
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2785              		.loc 1 1289 0 is_stmt 0 discriminator 2
 2786 0014 0123     		movs	r3, #1
 2787 0016 80F84030 		strb	r3, [r0, #64]
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 2788              		.loc 1 1291 0 is_stmt 1 discriminator 2
 2789 001a 2123     		movs	r3, #33
 2790 001c 80F84130 		strb	r3, [r0, #65]
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2791              		.loc 1 1292 0 discriminator 2
 2792 0020 2023     		movs	r3, #32
 2793 0022 80F84230 		strb	r3, [r0, #66]
ARM GAS  /tmp/cccVlT9k.s 			page 142


1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2794              		.loc 1 1293 0 discriminator 2
 2795 0026 0024     		movs	r4, #0
 2796 0028 4464     		str	r4, [r0, #68]
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2797              		.loc 1 1296 0 discriminator 2
 2798 002a 0368     		ldr	r3, [r0]
 2799 002c 5D68     		ldr	r5, [r3, #4]
 2800 002e 25F40045 		bic	r5, r5, #32768
 2801 0032 5D60     		str	r5, [r3, #4]
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2802              		.loc 1 1299 0 discriminator 2
 2803 0034 4162     		str	r1, [r0, #36]
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2804              		.loc 1 1300 0 discriminator 2
 2805 0036 4285     		strh	r2, [r0, #42]	@ movhi
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2806              		.loc 1 1301 0 discriminator 2
 2807 0038 438D     		ldrh	r3, [r0, #42]
 2808 003a 0385     		strh	r3, [r0, #40]	@ movhi
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2809              		.loc 1 1302 0 discriminator 2
 2810 003c 074B     		ldr	r3, .L198
 2811 003e C362     		str	r3, [r0, #44]
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2812              		.loc 1 1303 0 discriminator 2
 2813 0040 074B     		ldr	r3, .L198+4
 2814 0042 4363     		str	r3, [r0, #52]
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2815              		.loc 1 1306 0 discriminator 2
 2816 0044 80F84040 		strb	r4, [r0, #64]
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
 2817              		.loc 1 1315 0 discriminator 2
 2818 0048 0521     		movs	r1, #5
 2819              	.LVL234:
 2820 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 2821              	.LVL235:
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 2822              		.loc 1 1317 0 discriminator 2
 2823 004e 2046     		mov	r0, r4
 2824 0050 38BD     		pop	{r3, r4, r5, pc}
 2825              	.LVL236:
 2826              	.L196:
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 2827              		.loc 1 1321 0
 2828 0052 0220     		movs	r0, #2
 2829              	.LVL237:
 2830 0054 38BD     		pop	{r3, r4, r5, pc}
 2831              	.LVL238:
 2832              	.L197:
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2833              		.loc 1 1289 0
 2834 0056 0220     		movs	r0, #2
 2835              	.LVL239:
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 2836              		.loc 1 1323 0
 2837 0058 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cccVlT9k.s 			page 143


 2838              	.L199:
 2839 005a 00BF     		.align	2
 2840              	.L198:
 2841 005c 0000FFFF 		.word	-65536
 2842 0060 00000000 		.word	I2C_Slave_ISR_IT
 2843              		.cfi_endproc
 2844              	.LFE133:
 2846              		.section	.text.HAL_I2C_Slave_Receive_IT,"ax",%progbits
 2847              		.align	2
 2848              		.global	HAL_I2C_Slave_Receive_IT
 2849              		.thumb
 2850              		.thumb_func
 2852              	HAL_I2C_Slave_Receive_IT:
 2853              	.LFB134:
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 2854              		.loc 1 1334 0
 2855              		.cfi_startproc
 2856              		@ args = 0, pretend = 0, frame = 0
 2857              		@ frame_needed = 0, uses_anonymous_args = 0
 2858              	.LVL240:
 2859 0000 38B5     		push	{r3, r4, r5, lr}
 2860              	.LCFI28:
 2861              		.cfi_def_cfa_offset 16
 2862              		.cfi_offset 3, -16
 2863              		.cfi_offset 4, -12
 2864              		.cfi_offset 5, -8
 2865              		.cfi_offset 14, -4
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2866              		.loc 1 1335 0
 2867 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 2868 0006 DBB2     		uxtb	r3, r3
 2869 0008 202B     		cmp	r3, #32
 2870 000a 22D1     		bne	.L202
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2871              		.loc 1 1338 0
 2872 000c 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 2873 0010 012B     		cmp	r3, #1
 2874 0012 20D0     		beq	.L203
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2875              		.loc 1 1338 0 is_stmt 0 discriminator 2
 2876 0014 0123     		movs	r3, #1
 2877 0016 80F84030 		strb	r3, [r0, #64]
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 2878              		.loc 1 1340 0 is_stmt 1 discriminator 2
 2879 001a 2223     		movs	r3, #34
 2880 001c 80F84130 		strb	r3, [r0, #65]
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 2881              		.loc 1 1341 0 discriminator 2
 2882 0020 2023     		movs	r3, #32
 2883 0022 80F84230 		strb	r3, [r0, #66]
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2884              		.loc 1 1342 0 discriminator 2
 2885 0026 0024     		movs	r4, #0
 2886 0028 4464     		str	r4, [r0, #68]
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 2887              		.loc 1 1345 0 discriminator 2
 2888 002a 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cccVlT9k.s 			page 144


 2889 002c 5D68     		ldr	r5, [r3, #4]
 2890 002e 25F40045 		bic	r5, r5, #32768
 2891 0032 5D60     		str	r5, [r3, #4]
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2892              		.loc 1 1348 0 discriminator 2
 2893 0034 4162     		str	r1, [r0, #36]
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2894              		.loc 1 1349 0 discriminator 2
 2895 0036 4285     		strh	r2, [r0, #42]	@ movhi
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 2896              		.loc 1 1350 0 discriminator 2
 2897 0038 438D     		ldrh	r3, [r0, #42]
 2898 003a 0385     		strh	r3, [r0, #40]	@ movhi
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2899              		.loc 1 1351 0 discriminator 2
 2900 003c 074B     		ldr	r3, .L204
 2901 003e C362     		str	r3, [r0, #44]
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 2902              		.loc 1 1352 0 discriminator 2
 2903 0040 074B     		ldr	r3, .L204+4
 2904 0042 4363     		str	r3, [r0, #52]
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 2905              		.loc 1 1355 0 discriminator 2
 2906 0044 80F84040 		strb	r4, [r0, #64]
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
 2907              		.loc 1 1364 0 discriminator 2
 2908 0048 0621     		movs	r1, #6
 2909              	.LVL241:
 2910 004a FFF7FEFF 		bl	I2C_Enable_IRQ
 2911              	.LVL242:
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 2912              		.loc 1 1366 0 discriminator 2
 2913 004e 2046     		mov	r0, r4
 2914 0050 38BD     		pop	{r3, r4, r5, pc}
 2915              	.LVL243:
 2916              	.L202:
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 2917              		.loc 1 1370 0
 2918 0052 0220     		movs	r0, #2
 2919              	.LVL244:
 2920 0054 38BD     		pop	{r3, r4, r5, pc}
 2921              	.LVL245:
 2922              	.L203:
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2923              		.loc 1 1338 0
 2924 0056 0220     		movs	r0, #2
 2925              	.LVL246:
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 2926              		.loc 1 1372 0
 2927 0058 38BD     		pop	{r3, r4, r5, pc}
 2928              	.L205:
 2929 005a 00BF     		.align	2
 2930              	.L204:
 2931 005c 0000FFFF 		.word	-65536
 2932 0060 00000000 		.word	I2C_Slave_ISR_IT
 2933              		.cfi_endproc
 2934              	.LFE134:
ARM GAS  /tmp/cccVlT9k.s 			page 145


 2936              		.section	.text.HAL_I2C_Master_Transmit_DMA,"ax",%progbits
 2937              		.align	2
 2938              		.global	HAL_I2C_Master_Transmit_DMA
 2939              		.thumb
 2940              		.thumb_func
 2942              	HAL_I2C_Master_Transmit_DMA:
 2943              	.LFB135:
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 2944              		.loc 1 1385 0
 2945              		.cfi_startproc
 2946              		@ args = 0, pretend = 0, frame = 0
 2947              		@ frame_needed = 0, uses_anonymous_args = 0
 2948              	.LVL247:
 2949 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2950              	.LCFI29:
 2951              		.cfi_def_cfa_offset 20
 2952              		.cfi_offset 4, -20
 2953              		.cfi_offset 5, -16
 2954              		.cfi_offset 6, -12
 2955              		.cfi_offset 7, -8
 2956              		.cfi_offset 14, -4
 2957 0002 83B0     		sub	sp, sp, #12
 2958              	.LCFI30:
 2959              		.cfi_def_cfa_offset 32
 2960 0004 0446     		mov	r4, r0
 2961 0006 0D46     		mov	r5, r1
 2962              	.LVL248:
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 2963              		.loc 1 1388 0
 2964 0008 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 2965              	.LVL249:
 2966 000c C0B2     		uxtb	r0, r0
 2967 000e 2028     		cmp	r0, #32
 2968 0010 6DD1     		bne	.L211
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 2969              		.loc 1 1390 0
 2970 0012 2168     		ldr	r1, [r4]
 2971              	.LVL250:
 2972 0014 8969     		ldr	r1, [r1, #24]
 2973 0016 11F4004F 		tst	r1, #32768
 2974 001a 6AD1     		bne	.L212
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2975              		.loc 1 1396 0
 2976 001c 94F84010 		ldrb	r1, [r4, #64]	@ zero_extendqisi2
 2977 0020 0129     		cmp	r1, #1
 2978 0022 68D0     		beq	.L213
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 2979              		.loc 1 1396 0 is_stmt 0 discriminator 2
 2980 0024 0121     		movs	r1, #1
 2981 0026 84F84010 		strb	r1, [r4, #64]
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 2982              		.loc 1 1398 0 is_stmt 1 discriminator 2
 2983 002a 2121     		movs	r1, #33
 2984 002c 84F84110 		strb	r1, [r4, #65]
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 2985              		.loc 1 1399 0 discriminator 2
 2986 0030 1021     		movs	r1, #16
ARM GAS  /tmp/cccVlT9k.s 			page 146


 2987 0032 84F84210 		strb	r1, [r4, #66]
1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 2988              		.loc 1 1400 0 discriminator 2
 2989 0036 0021     		movs	r1, #0
 2990 0038 6164     		str	r1, [r4, #68]
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 2991              		.loc 1 1403 0 discriminator 2
 2992 003a 6262     		str	r2, [r4, #36]
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 2993              		.loc 1 1404 0 discriminator 2
 2994 003c 6385     		strh	r3, [r4, #42]	@ movhi
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 2995              		.loc 1 1405 0 discriminator 2
 2996 003e 2F4B     		ldr	r3, .L214
 2997              	.LVL251:
 2998 0040 E362     		str	r3, [r4, #44]
 2999              	.LVL252:
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3000              		.loc 1 1406 0 discriminator 2
 3001 0042 2F4B     		ldr	r3, .L214+4
 3002 0044 6363     		str	r3, [r4, #52]
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 3003              		.loc 1 1408 0 discriminator 2
 3004 0046 638D     		ldrh	r3, [r4, #42]
 3005 0048 9BB2     		uxth	r3, r3
 3006 004a FF2B     		cmp	r3, #255
 3007 004c 04D9     		bls	.L208
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 3008              		.loc 1 1410 0
 3009 004e FF23     		movs	r3, #255
 3010 0050 2385     		strh	r3, [r4, #40]	@ movhi
 3011              	.LVL253:
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3012              		.loc 1 1411 0
 3013 0052 4FF08077 		mov	r7, #16777216
 3014 0056 03E0     		b	.L209
 3015              	.LVL254:
 3016              	.L208:
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3017              		.loc 1 1415 0
 3018 0058 638D     		ldrh	r3, [r4, #42]
 3019 005a 2385     		strh	r3, [r4, #40]	@ movhi
 3020              	.LVL255:
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3021              		.loc 1 1416 0
 3022 005c 4FF00077 		mov	r7, #33554432
 3023              	.LVL256:
 3024              	.L209:
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
 3025              		.loc 1 1419 0
 3026 0060 268D     		ldrh	r6, [r4, #40]
 3027 0062 002E     		cmp	r6, #0
 3028 0064 2ED0     		beq	.L210
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
 3029              		.loc 1 1422 0
 3030 0066 A36B     		ldr	r3, [r4, #56]
 3031 0068 2649     		ldr	r1, .L214+8
ARM GAS  /tmp/cccVlT9k.s 			page 147


 3032 006a 9962     		str	r1, [r3, #40]
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 3033              		.loc 1 1425 0
 3034 006c A36B     		ldr	r3, [r4, #56]
 3035 006e 2649     		ldr	r1, .L214+12
 3036 0070 1963     		str	r1, [r3, #48]
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferHalfCpltCallback = NULL;
 3037              		.loc 1 1428 0
 3038 0072 A36B     		ldr	r3, [r4, #56]
 3039 0074 0026     		movs	r6, #0
 3040 0076 DE62     		str	r6, [r3, #44]
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback = NULL;
 3041              		.loc 1 1429 0
 3042 0078 A36B     		ldr	r3, [r4, #56]
 3043 007a 5E63     		str	r6, [r3, #52]
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSi
 3044              		.loc 1 1432 0
 3045 007c 2368     		ldr	r3, [r4]
 3046 007e A06B     		ldr	r0, [r4, #56]
 3047 0080 1146     		mov	r1, r2
 3048 0082 03F12802 		add	r2, r3, #40
 3049              	.LVL257:
 3050 0086 238D     		ldrh	r3, [r4, #40]
 3051 0088 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3052              	.LVL258:
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_WRITE);
 3053              		.loc 1 1436 0
 3054 008c 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3055 0090 4FF40053 		mov	r3, #8192
 3056 0094 0093     		str	r3, [sp]
 3057 0096 2046     		mov	r0, r4
 3058 0098 2946     		mov	r1, r5
 3059 009a 3B46     		mov	r3, r7
 3060 009c FFF7FEFF 		bl	I2C_TransferConfig
 3061              	.LVL259:
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 3062              		.loc 1 1439 0
 3063 00a0 628D     		ldrh	r2, [r4, #42]
 3064 00a2 238D     		ldrh	r3, [r4, #40]
 3065 00a4 D31A     		subs	r3, r2, r3
 3066 00a6 9BB2     		uxth	r3, r3
 3067 00a8 6385     		strh	r3, [r4, #42]	@ movhi
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3068              		.loc 1 1442 0
 3069 00aa 84F84060 		strb	r6, [r4, #64]
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 3070              		.loc 1 1448 0
 3071 00ae 2046     		mov	r0, r4
 3072 00b0 1121     		movs	r1, #17
 3073 00b2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3074              	.LVL260:
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 3075              		.loc 1 1451 0
 3076 00b6 2368     		ldr	r3, [r4]
 3077 00b8 1A68     		ldr	r2, [r3]
 3078 00ba 42F48042 		orr	r2, r2, #16384
 3079 00be 1A60     		str	r2, [r3]
ARM GAS  /tmp/cccVlT9k.s 			page 148


1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 3080              		.loc 1 1474 0
 3081 00c0 3046     		mov	r0, r6
 3082 00c2 19E0     		b	.L207
 3083              	.LVL261:
 3084              	.L210:
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
 3085              		.loc 1 1456 0
 3086 00c4 114B     		ldr	r3, .L214+16
 3087 00c6 6363     		str	r3, [r4, #52]
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_WRI
 3088              		.loc 1 1460 0
 3089 00c8 4FF40053 		mov	r3, #8192
 3090 00cc 0093     		str	r3, [sp]
 3091 00ce 2046     		mov	r0, r4
 3092 00d0 2946     		mov	r1, r5
 3093 00d2 F2B2     		uxtb	r2, r6
 3094              	.LVL262:
 3095 00d4 4FF00073 		mov	r3, #33554432
 3096 00d8 FFF7FEFF 		bl	I2C_TransferConfig
 3097              	.LVL263:
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3098              		.loc 1 1463 0
 3099 00dc 0025     		movs	r5, #0
 3100 00de 84F84050 		strb	r5, [r4, #64]
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 3101              		.loc 1 1471 0
 3102 00e2 2046     		mov	r0, r4
 3103 00e4 0121     		movs	r1, #1
 3104 00e6 FFF7FEFF 		bl	I2C_Enable_IRQ
 3105              	.LVL264:
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 3106              		.loc 1 1474 0
 3107 00ea 2846     		mov	r0, r5
 3108 00ec 04E0     		b	.L207
 3109              	.LVL265:
 3110              	.L211:
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 3111              		.loc 1 1478 0
 3112 00ee 0220     		movs	r0, #2
 3113 00f0 02E0     		b	.L207
 3114              	.LVL266:
 3115              	.L212:
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 3116              		.loc 1 1392 0
 3117 00f2 0220     		movs	r0, #2
 3118 00f4 00E0     		b	.L207
 3119              	.L213:
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3120              		.loc 1 1396 0
 3121 00f6 0220     		movs	r0, #2
 3122              	.LVL267:
 3123              	.L207:
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 3124              		.loc 1 1480 0
 3125 00f8 03B0     		add	sp, sp, #12
 3126              		@ sp needed
ARM GAS  /tmp/cccVlT9k.s 			page 149


 3127 00fa F0BD     		pop	{r4, r5, r6, r7, pc}
 3128              	.LVL268:
 3129              	.L215:
 3130              		.align	2
 3131              	.L214:
 3132 00fc 0000FFFF 		.word	-65536
 3133 0100 00000000 		.word	I2C_Master_ISR_DMA
 3134 0104 00000000 		.word	I2C_DMAMasterTransmitCplt
 3135 0108 00000000 		.word	I2C_DMAError
 3136 010c 00000000 		.word	I2C_Master_ISR_IT
 3137              		.cfi_endproc
 3138              	.LFE135:
 3140              		.section	.text.HAL_I2C_Master_Receive_DMA,"ax",%progbits
 3141              		.align	2
 3142              		.global	HAL_I2C_Master_Receive_DMA
 3143              		.thumb
 3144              		.thumb_func
 3146              	HAL_I2C_Master_Receive_DMA:
 3147              	.LFB136:
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 3148              		.loc 1 1493 0
 3149              		.cfi_startproc
 3150              		@ args = 0, pretend = 0, frame = 0
 3151              		@ frame_needed = 0, uses_anonymous_args = 0
 3152              	.LVL269:
 3153 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 3154              	.LCFI31:
 3155              		.cfi_def_cfa_offset 20
 3156              		.cfi_offset 4, -20
 3157              		.cfi_offset 5, -16
 3158              		.cfi_offset 6, -12
 3159              		.cfi_offset 7, -8
 3160              		.cfi_offset 14, -4
 3161 0002 83B0     		sub	sp, sp, #12
 3162              	.LCFI32:
 3163              		.cfi_def_cfa_offset 32
 3164 0004 0446     		mov	r4, r0
 3165 0006 0D46     		mov	r5, r1
 3166              	.LVL270:
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3167              		.loc 1 1496 0
 3168 0008 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 3169              	.LVL271:
 3170 000c C0B2     		uxtb	r0, r0
 3171 000e 2028     		cmp	r0, #32
 3172 0010 6BD1     		bne	.L221
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 3173              		.loc 1 1498 0
 3174 0012 2168     		ldr	r1, [r4]
 3175              	.LVL272:
 3176 0014 8969     		ldr	r1, [r1, #24]
 3177 0016 11F4004F 		tst	r1, #32768
 3178 001a 68D1     		bne	.L222
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3179              		.loc 1 1504 0
 3180 001c 94F84010 		ldrb	r1, [r4, #64]	@ zero_extendqisi2
 3181 0020 0129     		cmp	r1, #1
ARM GAS  /tmp/cccVlT9k.s 			page 150


 3182 0022 66D0     		beq	.L223
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3183              		.loc 1 1504 0 is_stmt 0 discriminator 2
 3184 0024 0121     		movs	r1, #1
 3185 0026 84F84010 		strb	r1, [r4, #64]
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 3186              		.loc 1 1506 0 is_stmt 1 discriminator 2
 3187 002a 2221     		movs	r1, #34
 3188 002c 84F84110 		strb	r1, [r4, #65]
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MASTER;
 3189              		.loc 1 1507 0 discriminator 2
 3190 0030 1021     		movs	r1, #16
 3191 0032 84F84210 		strb	r1, [r4, #66]
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3192              		.loc 1 1508 0 discriminator 2
 3193 0036 0021     		movs	r1, #0
 3194 0038 6164     		str	r1, [r4, #68]
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3195              		.loc 1 1511 0 discriminator 2
 3196 003a 6262     		str	r2, [r4, #36]
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3197              		.loc 1 1512 0 discriminator 2
 3198 003c 6385     		strh	r3, [r4, #42]	@ movhi
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3199              		.loc 1 1513 0 discriminator 2
 3200 003e 2E4B     		ldr	r3, .L224
 3201              	.LVL273:
 3202 0040 E362     		str	r3, [r4, #44]
 3203              	.LVL274:
1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 3204              		.loc 1 1514 0 discriminator 2
 3205 0042 2E4B     		ldr	r3, .L224+4
 3206 0044 6363     		str	r3, [r4, #52]
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 3207              		.loc 1 1516 0 discriminator 2
 3208 0046 638D     		ldrh	r3, [r4, #42]
 3209 0048 9BB2     		uxth	r3, r3
 3210 004a FF2B     		cmp	r3, #255
 3211 004c 04D9     		bls	.L218
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 3212              		.loc 1 1518 0
 3213 004e FF23     		movs	r3, #255
 3214 0050 2385     		strh	r3, [r4, #40]	@ movhi
 3215              	.LVL275:
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 3216              		.loc 1 1519 0
 3217 0052 4FF08077 		mov	r7, #16777216
 3218 0056 03E0     		b	.L219
 3219              	.LVL276:
 3220              	.L218:
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3221              		.loc 1 1523 0
 3222 0058 638D     		ldrh	r3, [r4, #42]
 3223 005a 2385     		strh	r3, [r4, #40]	@ movhi
 3224              	.LVL277:
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 3225              		.loc 1 1524 0
ARM GAS  /tmp/cccVlT9k.s 			page 151


 3226 005c 4FF00077 		mov	r7, #33554432
 3227              	.LVL278:
 3228              	.L219:
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferSize > 0U)
 3229              		.loc 1 1527 0
 3230 0060 268D     		ldrh	r6, [r4, #40]
 3231 0062 002E     		cmp	r6, #0
 3232 0064 2CD0     		beq	.L220
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
 3233              		.loc 1 1530 0
 3234 0066 E36B     		ldr	r3, [r4, #60]
 3235 0068 2549     		ldr	r1, .L224+8
 3236 006a 9962     		str	r1, [r3, #40]
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 3237              		.loc 1 1533 0
 3238 006c E36B     		ldr	r3, [r4, #60]
 3239 006e 2549     		ldr	r1, .L224+12
 3240 0070 1963     		str	r1, [r3, #48]
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferHalfCpltCallback = NULL;
 3241              		.loc 1 1536 0
 3242 0072 E36B     		ldr	r3, [r4, #60]
 3243 0074 0026     		movs	r6, #0
 3244 0076 DE62     		str	r6, [r3, #44]
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback = NULL;
 3245              		.loc 1 1537 0
 3246 0078 E36B     		ldr	r3, [r4, #60]
 3247 007a 5E63     		str	r6, [r3, #52]
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSi
 3248              		.loc 1 1540 0
 3249 007c 2168     		ldr	r1, [r4]
 3250 007e E06B     		ldr	r0, [r4, #60]
 3251 0080 2431     		adds	r1, r1, #36
 3252 0082 238D     		ldrh	r3, [r4, #40]
 3253 0084 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3254              	.LVL279:
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 3255              		.loc 1 1544 0
 3256 0088 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 3257 008c 4FF41053 		mov	r3, #9216
 3258 0090 0093     		str	r3, [sp]
 3259 0092 2046     		mov	r0, r4
 3260 0094 2946     		mov	r1, r5
 3261 0096 3B46     		mov	r3, r7
 3262 0098 FFF7FEFF 		bl	I2C_TransferConfig
 3263              	.LVL280:
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 3264              		.loc 1 1547 0
 3265 009c 628D     		ldrh	r2, [r4, #42]
 3266 009e 238D     		ldrh	r3, [r4, #40]
 3267 00a0 D31A     		subs	r3, r2, r3
 3268 00a2 9BB2     		uxth	r3, r3
 3269 00a4 6385     		strh	r3, [r4, #42]	@ movhi
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3270              		.loc 1 1550 0
 3271 00a6 84F84060 		strb	r6, [r4, #64]
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 3272              		.loc 1 1556 0
ARM GAS  /tmp/cccVlT9k.s 			page 152


 3273 00aa 2046     		mov	r0, r4
 3274 00ac 1121     		movs	r1, #17
 3275 00ae FFF7FEFF 		bl	I2C_Enable_IRQ
 3276              	.LVL281:
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 3277              		.loc 1 1559 0
 3278 00b2 2368     		ldr	r3, [r4]
 3279 00b4 1A68     		ldr	r2, [r3]
 3280 00b6 42F40042 		orr	r2, r2, #32768
 3281 00ba 1A60     		str	r2, [r3]
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 3282              		.loc 1 1581 0
 3283 00bc 3046     		mov	r0, r6
 3284 00be 19E0     		b	.L217
 3285              	.LVL282:
 3286              	.L220:
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferISR = I2C_Master_ISR_IT;
 3287              		.loc 1 1564 0
 3288 00c0 114B     		ldr	r3, .L224+16
 3289 00c2 6363     		str	r3, [r4, #52]
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 3290              		.loc 1 1568 0
 3291 00c4 4FF41053 		mov	r3, #9216
 3292 00c8 0093     		str	r3, [sp]
 3293 00ca 2046     		mov	r0, r4
 3294 00cc 2946     		mov	r1, r5
 3295 00ce F2B2     		uxtb	r2, r6
 3296              	.LVL283:
 3297 00d0 4FF00073 		mov	r3, #33554432
 3298 00d4 FFF7FEFF 		bl	I2C_TransferConfig
 3299              	.LVL284:
1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 3300              		.loc 1 1571 0
 3301 00d8 0025     		movs	r5, #0
 3302 00da 84F84050 		strb	r5, [r4, #64]
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 3303              		.loc 1 1579 0
 3304 00de 2046     		mov	r0, r4
 3305 00e0 0121     		movs	r1, #1
 3306 00e2 FFF7FEFF 		bl	I2C_Enable_IRQ
 3307              	.LVL285:
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 3308              		.loc 1 1581 0
 3309 00e6 2846     		mov	r0, r5
 3310 00e8 04E0     		b	.L217
 3311              	.LVL286:
 3312              	.L221:
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 3313              		.loc 1 1585 0
 3314 00ea 0220     		movs	r0, #2
 3315 00ec 02E0     		b	.L217
 3316              	.LVL287:
 3317              	.L222:
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 3318              		.loc 1 1500 0
 3319 00ee 0220     		movs	r0, #2
 3320 00f0 00E0     		b	.L217
ARM GAS  /tmp/cccVlT9k.s 			page 153


 3321              	.L223:
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3322              		.loc 1 1504 0
 3323 00f2 0220     		movs	r0, #2
 3324              	.LVL288:
 3325              	.L217:
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 3326              		.loc 1 1587 0
 3327 00f4 03B0     		add	sp, sp, #12
 3328              		@ sp needed
 3329 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 3330              	.LVL289:
 3331              	.L225:
 3332              		.align	2
 3333              	.L224:
 3334 00f8 0000FFFF 		.word	-65536
 3335 00fc 00000000 		.word	I2C_Master_ISR_DMA
 3336 0100 00000000 		.word	I2C_DMAMasterReceiveCplt
 3337 0104 00000000 		.word	I2C_DMAError
 3338 0108 00000000 		.word	I2C_Master_ISR_IT
 3339              		.cfi_endproc
 3340              	.LFE136:
 3342              		.section	.text.HAL_I2C_Slave_Transmit_DMA,"ax",%progbits
 3343              		.align	2
 3344              		.global	HAL_I2C_Slave_Transmit_DMA
 3345              		.thumb
 3346              		.thumb_func
 3348              	HAL_I2C_Slave_Transmit_DMA:
 3349              	.LFB137:
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 3350              		.loc 1 1598 0
 3351              		.cfi_startproc
 3352              		@ args = 0, pretend = 0, frame = 0
 3353              		@ frame_needed = 0, uses_anonymous_args = 0
 3354              	.LVL290:
 3355 0000 38B5     		push	{r3, r4, r5, lr}
 3356              	.LCFI33:
 3357              		.cfi_def_cfa_offset 16
 3358              		.cfi_offset 3, -16
 3359              		.cfi_offset 4, -12
 3360              		.cfi_offset 5, -8
 3361              		.cfi_offset 14, -4
 3362 0002 0446     		mov	r4, r0
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3363              		.loc 1 1599 0
 3364 0004 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3365 0008 DBB2     		uxtb	r3, r3
 3366 000a 202B     		cmp	r3, #32
 3367 000c 3CD1     		bne	.L228
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3368              		.loc 1 1601 0
 3369 000e 0029     		cmp	r1, #0
 3370 0010 3CD0     		beq	.L229
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3371              		.loc 1 1601 0 is_stmt 0 discriminator 1
 3372 0012 002A     		cmp	r2, #0
 3373 0014 3CD0     		beq	.L230
ARM GAS  /tmp/cccVlT9k.s 			page 154


1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3374              		.loc 1 1606 0 is_stmt 1
 3375 0016 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3376 001a 012B     		cmp	r3, #1
 3377 001c 3AD0     		beq	.L231
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3378              		.loc 1 1606 0 is_stmt 0 discriminator 2
 3379 001e 0123     		movs	r3, #1
 3380 0020 80F84030 		strb	r3, [r0, #64]
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 3381              		.loc 1 1608 0 is_stmt 1 discriminator 2
 3382 0024 2123     		movs	r3, #33
 3383 0026 80F84130 		strb	r3, [r0, #65]
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3384              		.loc 1 1609 0 discriminator 2
 3385 002a 2023     		movs	r3, #32
 3386 002c 80F84230 		strb	r3, [r0, #66]
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3387              		.loc 1 1610 0 discriminator 2
 3388 0030 0025     		movs	r5, #0
 3389 0032 4564     		str	r5, [r0, #68]
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3390              		.loc 1 1613 0 discriminator 2
 3391 0034 4162     		str	r1, [r0, #36]
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3392              		.loc 1 1614 0 discriminator 2
 3393 0036 4285     		strh	r2, [r0, #42]	@ movhi
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3394              		.loc 1 1615 0 discriminator 2
 3395 0038 438D     		ldrh	r3, [r0, #42]
 3396 003a 0385     		strh	r3, [r0, #40]	@ movhi
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3397              		.loc 1 1616 0 discriminator 2
 3398 003c 164B     		ldr	r3, .L232
 3399 003e C362     		str	r3, [r0, #44]
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3400              		.loc 1 1617 0 discriminator 2
 3401 0040 164B     		ldr	r3, .L232+4
 3402 0042 4363     		str	r3, [r0, #52]
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMASlaveTransmitCplt;
 3403              		.loc 1 1620 0 discriminator 2
 3404 0044 836B     		ldr	r3, [r0, #56]
 3405 0046 164A     		ldr	r2, .L232+8
 3406              	.LVL291:
 3407 0048 9A62     		str	r2, [r3, #40]
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 3408              		.loc 1 1623 0 discriminator 2
 3409 004a 836B     		ldr	r3, [r0, #56]
 3410 004c 154A     		ldr	r2, .L232+12
 3411 004e 1A63     		str	r2, [r3, #48]
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
 3412              		.loc 1 1626 0 discriminator 2
 3413 0050 836B     		ldr	r3, [r0, #56]
 3414 0052 DD62     		str	r5, [r3, #44]
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 3415              		.loc 1 1627 0 discriminator 2
 3416 0054 836B     		ldr	r3, [r0, #56]
ARM GAS  /tmp/cccVlT9k.s 			page 155


 3417 0056 5D63     		str	r5, [r3, #52]
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
 3418              		.loc 1 1630 0 discriminator 2
 3419 0058 0268     		ldr	r2, [r0]
 3420 005a 806B     		ldr	r0, [r0, #56]
 3421              	.LVL292:
 3422 005c 2832     		adds	r2, r2, #40
 3423 005e 238D     		ldrh	r3, [r4, #40]
 3424 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3425              	.LVL293:
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3426              		.loc 1 1633 0 discriminator 2
 3427 0064 2368     		ldr	r3, [r4]
 3428 0066 5A68     		ldr	r2, [r3, #4]
 3429 0068 22F40042 		bic	r2, r2, #32768
 3430 006c 5A60     		str	r2, [r3, #4]
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3431              		.loc 1 1636 0 discriminator 2
 3432 006e 84F84050 		strb	r5, [r4, #64]
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 3433              		.loc 1 1642 0 discriminator 2
 3434 0072 2046     		mov	r0, r4
 3435 0074 0421     		movs	r1, #4
 3436 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 3437              	.LVL294:
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN; 
 3438              		.loc 1 1645 0 discriminator 2
 3439 007a 2368     		ldr	r3, [r4]
 3440 007c 1A68     		ldr	r2, [r3]
 3441 007e 42F48042 		orr	r2, r2, #16384
 3442 0082 1A60     		str	r2, [r3]
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 3443              		.loc 1 1647 0 discriminator 2
 3444 0084 2846     		mov	r0, r5
 3445 0086 38BD     		pop	{r3, r4, r5, pc}
 3446              	.LVL295:
 3447              	.L228:
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 3448              		.loc 1 1651 0
 3449 0088 0220     		movs	r0, #2
 3450              	.LVL296:
 3451 008a 38BD     		pop	{r3, r4, r5, pc}
 3452              	.LVL297:
 3453              	.L229:
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 3454              		.loc 1 1603 0
 3455 008c 0120     		movs	r0, #1
 3456              	.LVL298:
 3457 008e 38BD     		pop	{r3, r4, r5, pc}
 3458              	.LVL299:
 3459              	.L230:
 3460 0090 0120     		movs	r0, #1
 3461              	.LVL300:
 3462 0092 38BD     		pop	{r3, r4, r5, pc}
 3463              	.LVL301:
 3464              	.L231:
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 156


 3465              		.loc 1 1606 0
 3466 0094 0220     		movs	r0, #2
 3467              	.LVL302:
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 3468              		.loc 1 1653 0
 3469 0096 38BD     		pop	{r3, r4, r5, pc}
 3470              	.LVL303:
 3471              	.L233:
 3472              		.align	2
 3473              	.L232:
 3474 0098 0000FFFF 		.word	-65536
 3475 009c 00000000 		.word	I2C_Slave_ISR_DMA
 3476 00a0 00000000 		.word	I2C_DMASlaveTransmitCplt
 3477 00a4 00000000 		.word	I2C_DMAError
 3478              		.cfi_endproc
 3479              	.LFE137:
 3481              		.section	.text.HAL_I2C_Slave_Receive_DMA,"ax",%progbits
 3482              		.align	2
 3483              		.global	HAL_I2C_Slave_Receive_DMA
 3484              		.thumb
 3485              		.thumb_func
 3487              	HAL_I2C_Slave_Receive_DMA:
 3488              	.LFB138:
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 3489              		.loc 1 1664 0
 3490              		.cfi_startproc
 3491              		@ args = 0, pretend = 0, frame = 0
 3492              		@ frame_needed = 0, uses_anonymous_args = 0
 3493              	.LVL304:
 3494 0000 70B5     		push	{r4, r5, r6, lr}
 3495              	.LCFI34:
 3496              		.cfi_def_cfa_offset 16
 3497              		.cfi_offset 4, -16
 3498              		.cfi_offset 5, -12
 3499              		.cfi_offset 6, -8
 3500              		.cfi_offset 14, -4
 3501 0002 0446     		mov	r4, r0
 3502 0004 0D46     		mov	r5, r1
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3503              		.loc 1 1665 0
 3504 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 3505 000a DBB2     		uxtb	r3, r3
 3506 000c 202B     		cmp	r3, #32
 3507 000e 3DD1     		bne	.L236
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U)) 
 3508              		.loc 1 1667 0
 3509 0010 0029     		cmp	r1, #0
 3510 0012 3DD0     		beq	.L237
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U)) 
 3511              		.loc 1 1667 0 is_stmt 0 discriminator 1
 3512 0014 002A     		cmp	r2, #0
 3513 0016 3DD0     		beq	.L238
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3514              		.loc 1 1672 0 is_stmt 1
 3515 0018 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 3516 001c 012B     		cmp	r3, #1
 3517 001e 3BD0     		beq	.L239
ARM GAS  /tmp/cccVlT9k.s 			page 157


1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3518              		.loc 1 1672 0 is_stmt 0 discriminator 2
 3519 0020 0123     		movs	r3, #1
 3520 0022 80F84030 		strb	r3, [r0, #64]
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 3521              		.loc 1 1674 0 is_stmt 1 discriminator 2
 3522 0026 2223     		movs	r3, #34
 3523 0028 80F84130 		strb	r3, [r0, #65]
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_SLAVE;
 3524              		.loc 1 1675 0 discriminator 2
 3525 002c 2023     		movs	r3, #32
 3526 002e 80F84230 		strb	r3, [r0, #66]
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 3527              		.loc 1 1676 0 discriminator 2
 3528 0032 0026     		movs	r6, #0
 3529 0034 4664     		str	r6, [r0, #68]
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 3530              		.loc 1 1679 0 discriminator 2
 3531 0036 6162     		str	r1, [r4, #36]
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 3532              		.loc 1 1680 0 discriminator 2
 3533 0038 4285     		strh	r2, [r0, #42]	@ movhi
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 3534              		.loc 1 1681 0 discriminator 2
 3535 003a 438D     		ldrh	r3, [r0, #42]
 3536 003c 0385     		strh	r3, [r0, #40]	@ movhi
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 3537              		.loc 1 1682 0 discriminator 2
 3538 003e 174B     		ldr	r3, .L240
 3539 0040 C362     		str	r3, [r0, #44]
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_DMA;
 3540              		.loc 1 1683 0 discriminator 2
 3541 0042 174B     		ldr	r3, .L240+4
 3542 0044 4363     		str	r3, [r0, #52]
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMASlaveReceiveCplt;
 3543              		.loc 1 1686 0 discriminator 2
 3544 0046 C36B     		ldr	r3, [r0, #60]
 3545 0048 164A     		ldr	r2, .L240+8
 3546              	.LVL305:
 3547 004a 9A62     		str	r2, [r3, #40]
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 3548              		.loc 1 1689 0 discriminator 2
 3549 004c C36B     		ldr	r3, [r0, #60]
 3550 004e 164A     		ldr	r2, .L240+12
 3551 0050 1A63     		str	r2, [r3, #48]
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
 3552              		.loc 1 1692 0 discriminator 2
 3553 0052 C36B     		ldr	r3, [r0, #60]
 3554 0054 DE62     		str	r6, [r3, #44]
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 3555              		.loc 1 1693 0 discriminator 2
 3556 0056 C36B     		ldr	r3, [r0, #60]
 3557 0058 5E63     		str	r6, [r3, #52]
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
 3558              		.loc 1 1696 0 discriminator 2
 3559 005a 0168     		ldr	r1, [r0]
 3560              	.LVL306:
ARM GAS  /tmp/cccVlT9k.s 			page 158


 3561 005c C06B     		ldr	r0, [r0, #60]
 3562              	.LVL307:
 3563 005e 2431     		adds	r1, r1, #36
 3564 0060 2A46     		mov	r2, r5
 3565 0062 238D     		ldrh	r3, [r4, #40]
 3566 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3567              	.LVL308:
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 3568              		.loc 1 1699 0 discriminator 2
 3569 0068 2368     		ldr	r3, [r4]
 3570 006a 5A68     		ldr	r2, [r3, #4]
 3571 006c 22F40042 		bic	r2, r2, #32768
 3572 0070 5A60     		str	r2, [r3, #4]
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3573              		.loc 1 1702 0 discriminator 2
 3574 0072 84F84060 		strb	r6, [r4, #64]
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 3575              		.loc 1 1708 0 discriminator 2
 3576 0076 2046     		mov	r0, r4
 3577 0078 0421     		movs	r1, #4
 3578 007a FFF7FEFF 		bl	I2C_Enable_IRQ
 3579              	.LVL309:
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 3580              		.loc 1 1711 0 discriminator 2
 3581 007e 2368     		ldr	r3, [r4]
 3582 0080 1A68     		ldr	r2, [r3]
 3583 0082 42F40042 		orr	r2, r2, #32768
 3584 0086 1A60     		str	r2, [r3]
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 3585              		.loc 1 1713 0 discriminator 2
 3586 0088 3046     		mov	r0, r6
 3587 008a 70BD     		pop	{r4, r5, r6, pc}
 3588              	.LVL310:
 3589              	.L236:
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 3590              		.loc 1 1717 0
 3591 008c 0220     		movs	r0, #2
 3592              	.LVL311:
 3593 008e 70BD     		pop	{r4, r5, r6, pc}
 3594              	.LVL312:
 3595              	.L237:
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 3596              		.loc 1 1669 0
 3597 0090 0120     		movs	r0, #1
 3598              	.LVL313:
 3599 0092 70BD     		pop	{r4, r5, r6, pc}
 3600              	.LVL314:
 3601              	.L238:
 3602 0094 0120     		movs	r0, #1
 3603              	.LVL315:
 3604 0096 70BD     		pop	{r4, r5, r6, pc}
 3605              	.LVL316:
 3606              	.L239:
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3607              		.loc 1 1672 0
 3608 0098 0220     		movs	r0, #2
 3609              	.LVL317:
ARM GAS  /tmp/cccVlT9k.s 			page 159


1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 3610              		.loc 1 1719 0
 3611 009a 70BD     		pop	{r4, r5, r6, pc}
 3612              	.LVL318:
 3613              	.L241:
 3614              		.align	2
 3615              	.L240:
 3616 009c 0000FFFF 		.word	-65536
 3617 00a0 00000000 		.word	I2C_Slave_ISR_DMA
 3618 00a4 00000000 		.word	I2C_DMASlaveReceiveCplt
 3619 00a8 00000000 		.word	I2C_DMAError
 3620              		.cfi_endproc
 3621              	.LFE138:
 3623              		.section	.text.HAL_I2C_Mem_Write,"ax",%progbits
 3624              		.align	2
 3625              		.global	HAL_I2C_Mem_Write
 3626              		.thumb
 3627              		.thumb_func
 3629              	HAL_I2C_Mem_Write:
 3630              	.LFB139:
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 3631              		.loc 1 1734 0
 3632              		.cfi_startproc
 3633              		@ args = 12, pretend = 0, frame = 0
 3634              		@ frame_needed = 0, uses_anonymous_args = 0
 3635              	.LVL319:
 3636 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3637              	.LCFI35:
 3638              		.cfi_def_cfa_offset 32
 3639              		.cfi_offset 4, -32
 3640              		.cfi_offset 5, -28
 3641              		.cfi_offset 6, -24
 3642              		.cfi_offset 7, -20
 3643              		.cfi_offset 8, -16
 3644              		.cfi_offset 9, -12
 3645              		.cfi_offset 10, -8
 3646              		.cfi_offset 14, -4
 3647 0004 82B0     		sub	sp, sp, #8
 3648              	.LCFI36:
 3649              		.cfi_def_cfa_offset 40
 3650 0006 0446     		mov	r4, r0
 3651 0008 0E46     		mov	r6, r1
 3652 000a 9046     		mov	r8, r2
 3653 000c 1F46     		mov	r7, r3
 3654 000e BDF82C50 		ldrh	r5, [sp, #44]
 3655              	.LVL320:
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3656              		.loc 1 1740 0
 3657 0012 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 3658              	.LVL321:
 3659 0016 C0B2     		uxtb	r0, r0
 3660 0018 2028     		cmp	r0, #32
 3661 001a 40F0C780 		bne	.L253
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3662              		.loc 1 1742 0
 3663 001e 0A9A     		ldr	r2, [sp, #40]
 3664              	.LVL322:
ARM GAS  /tmp/cccVlT9k.s 			page 160


 3665 0020 002A     		cmp	r2, #0
 3666 0022 00F0C580 		beq	.L254
1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3667              		.loc 1 1742 0 is_stmt 0 discriminator 1
 3668 0026 002D     		cmp	r5, #0
 3669 0028 00F0C480 		beq	.L255
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3670              		.loc 1 1748 0 is_stmt 1
 3671 002c 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 3672              	.LVL323:
 3673 0030 012B     		cmp	r3, #1
 3674 0032 00F0C180 		beq	.L256
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3675              		.loc 1 1748 0 is_stmt 0 discriminator 2
 3676 0036 4FF0010A 		mov	r10, #1
 3677 003a 84F840A0 		strb	r10, [r4, #64]
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 3678              		.loc 1 1751 0 is_stmt 1 discriminator 2
 3679 003e FFF7FEFF 		bl	HAL_GetTick
 3680              	.LVL324:
 3681 0042 8146     		mov	r9, r0
 3682              	.LVL325:
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 3683              		.loc 1 1753 0 discriminator 2
 3684 0044 0090     		str	r0, [sp]
 3685 0046 2046     		mov	r0, r4
 3686              	.LVL326:
 3687 0048 4FF40041 		mov	r1, #32768
 3688 004c 5246     		mov	r2, r10
 3689 004e 1923     		movs	r3, #25
 3690 0050 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3691              	.LVL327:
 3692 0054 0028     		cmp	r0, #0
 3693 0056 40F0B180 		bne	.L257
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 3694              		.loc 1 1758 0
 3695 005a 2123     		movs	r3, #33
 3696 005c 84F84130 		strb	r3, [r4, #65]
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 3697              		.loc 1 1759 0
 3698 0060 4023     		movs	r3, #64
 3699 0062 84F84230 		strb	r3, [r4, #66]
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 3700              		.loc 1 1760 0
 3701 0066 0023     		movs	r3, #0
 3702 0068 6364     		str	r3, [r4, #68]
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 3703              		.loc 1 1763 0
 3704 006a 0A9A     		ldr	r2, [sp, #40]
 3705 006c 6262     		str	r2, [r4, #36]
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 3706              		.loc 1 1764 0
 3707 006e 6585     		strh	r5, [r4, #42]	@ movhi
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 3708              		.loc 1 1765 0
 3709 0070 6363     		str	r3, [r4, #52]
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_
ARM GAS  /tmp/cccVlT9k.s 			page 161


 3710              		.loc 1 1768 0
 3711 0072 0C9B     		ldr	r3, [sp, #48]
 3712 0074 0093     		str	r3, [sp]
 3713 0076 CDF80490 		str	r9, [sp, #4]
 3714 007a 2046     		mov	r0, r4
 3715 007c 3146     		mov	r1, r6
 3716 007e 4246     		mov	r2, r8
 3717 0080 3B46     		mov	r3, r7
 3718 0082 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 3719              	.LVL328:
 3720 0086 60B1     		cbz	r0, .L244
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 3721              		.loc 1 1770 0
 3722 0088 636C     		ldr	r3, [r4, #68]
 3723 008a 042B     		cmp	r3, #4
 3724 008c 04D1     		bne	.L245
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 3725              		.loc 1 1773 0
 3726 008e 0023     		movs	r3, #0
 3727 0090 84F84030 		strb	r3, [r4, #64]
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 3728              		.loc 1 1774 0
 3729 0094 5346     		mov	r3, r10
 3730 0096 98E0     		b	.L243
 3731              	.L245:
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 3732              		.loc 1 1779 0
 3733 0098 0023     		movs	r3, #0
 3734 009a 84F84030 		strb	r3, [r4, #64]
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 3735              		.loc 1 1780 0
 3736 009e 0323     		movs	r3, #3
 3737 00a0 93E0     		b	.L243
 3738              	.L244:
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 3739              		.loc 1 1785 0
 3740 00a2 638D     		ldrh	r3, [r4, #42]
 3741 00a4 9BB2     		uxth	r3, r3
 3742 00a6 FF2B     		cmp	r3, #255
 3743 00a8 0AD9     		bls	.L246
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 3744              		.loc 1 1787 0
 3745 00aa FF22     		movs	r2, #255
 3746 00ac 2285     		strh	r2, [r4, #40]	@ movhi
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 3747              		.loc 1 1788 0
 3748 00ae 0023     		movs	r3, #0
 3749 00b0 0093     		str	r3, [sp]
 3750 00b2 2046     		mov	r0, r4
 3751 00b4 3146     		mov	r1, r6
 3752 00b6 4FF08073 		mov	r3, #16777216
 3753 00ba FFF7FEFF 		bl	I2C_TransferConfig
 3754              	.LVL329:
 3755 00be 0BE0     		b	.L251
 3756              	.L246:
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 3757              		.loc 1 1792 0
ARM GAS  /tmp/cccVlT9k.s 			page 162


 3758 00c0 628D     		ldrh	r2, [r4, #42]
 3759 00c2 92B2     		uxth	r2, r2
 3760 00c4 2285     		strh	r2, [r4, #40]	@ movhi
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 3761              		.loc 1 1793 0
 3762 00c6 0023     		movs	r3, #0
 3763 00c8 0093     		str	r3, [sp]
 3764 00ca 2046     		mov	r0, r4
 3765 00cc 3146     		mov	r1, r6
 3766 00ce D2B2     		uxtb	r2, r2
 3767 00d0 4FF00073 		mov	r3, #33554432
 3768 00d4 FFF7FEFF 		bl	I2C_TransferConfig
 3769              	.LVL330:
 3770              	.L251:
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 3771              		.loc 1 1819 0
 3772 00d8 4FF08008 		mov	r8, #128
 3773 00dc 0027     		movs	r7, #0
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 3774              		.loc 1 1832 0
 3775 00de 4FF0007A 		mov	r10, #33554432
 3776              	.L261:
1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 3777              		.loc 1 1799 0
 3778 00e2 2046     		mov	r0, r4
 3779 00e4 0C99     		ldr	r1, [sp, #48]
 3780 00e6 4A46     		mov	r2, r9
 3781 00e8 FFF7FEFF 		bl	I2C_WaitOnTXISFlagUntilTimeout
 3782              	.LVL331:
 3783 00ec 20B1     		cbz	r0, .L248
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 3784              		.loc 1 1801 0
 3785 00ee 636C     		ldr	r3, [r4, #68]
 3786 00f0 042B     		cmp	r3, #4
 3787 00f2 65D1     		bne	.L258
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_ERROR;
 3788              		.loc 1 1803 0
 3789 00f4 0123     		movs	r3, #1
 3790 00f6 68E0     		b	.L243
 3791              	.L248:
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 3792              		.loc 1 1812 0
 3793 00f8 2368     		ldr	r3, [r4]
 3794 00fa 656A     		ldr	r5, [r4, #36]
 3795 00fc 6A1C     		adds	r2, r5, #1
 3796 00fe 6262     		str	r2, [r4, #36]
 3797 0100 2A78     		ldrb	r2, [r5]	@ zero_extendqisi2
 3798 0102 9A62     		str	r2, [r3, #40]
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 3799              		.loc 1 1813 0
 3800 0104 638D     		ldrh	r3, [r4, #42]
 3801 0106 013B     		subs	r3, r3, #1
 3802 0108 9BB2     		uxth	r3, r3
 3803 010a 6385     		strh	r3, [r4, #42]	@ movhi
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 3804              		.loc 1 1814 0
 3805 010c 258D     		ldrh	r5, [r4, #40]
ARM GAS  /tmp/cccVlT9k.s 			page 163


 3806 010e 013D     		subs	r5, r5, #1
 3807 0110 ADB2     		uxth	r5, r5
 3808 0112 2585     		strh	r5, [r4, #40]	@ movhi
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 3809              		.loc 1 1816 0
 3810 0114 25BB     		cbnz	r5, .L249
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount!=0U))
 3811              		.loc 1 1816 0 is_stmt 0 discriminator 1
 3812 0116 638D     		ldrh	r3, [r4, #42]
 3813 0118 9BB2     		uxth	r3, r3
 3814 011a 0BB3     		cbz	r3, .L249
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 3815              		.loc 1 1819 0 is_stmt 1
 3816 011c CDF80090 		str	r9, [sp]
 3817 0120 2046     		mov	r0, r4
 3818 0122 4146     		mov	r1, r8
 3819 0124 3A46     		mov	r2, r7
 3820 0126 0C9B     		ldr	r3, [sp, #48]
 3821 0128 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 3822              	.LVL332:
 3823 012c 0028     		cmp	r0, #0
 3824 012e 49D1     		bne	.L259
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 3825              		.loc 1 1824 0
 3826 0130 638D     		ldrh	r3, [r4, #42]
 3827 0132 9BB2     		uxth	r3, r3
 3828 0134 FF2B     		cmp	r3, #255
 3829 0136 09D9     		bls	.L250
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 3830              		.loc 1 1826 0
 3831 0138 FF22     		movs	r2, #255
 3832 013a 2285     		strh	r2, [r4, #40]	@ movhi
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 3833              		.loc 1 1827 0
 3834 013c 0097     		str	r7, [sp]
 3835 013e 2046     		mov	r0, r4
 3836 0140 3146     		mov	r1, r6
 3837 0142 4FF08073 		mov	r3, #16777216
 3838 0146 FFF7FEFF 		bl	I2C_TransferConfig
 3839              	.LVL333:
 3840 014a 09E0     		b	.L249
 3841              	.L250:
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 3842              		.loc 1 1831 0
 3843 014c 628D     		ldrh	r2, [r4, #42]
 3844 014e 92B2     		uxth	r2, r2
 3845 0150 2285     		strh	r2, [r4, #40]	@ movhi
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 3846              		.loc 1 1832 0
 3847 0152 0097     		str	r7, [sp]
 3848 0154 2046     		mov	r0, r4
 3849 0156 3146     		mov	r1, r6
 3850 0158 D2B2     		uxtb	r2, r2
 3851 015a 5346     		mov	r3, r10
 3852 015c FFF7FEFF 		bl	I2C_TransferConfig
 3853              	.LVL334:
 3854              	.L249:
ARM GAS  /tmp/cccVlT9k.s 			page 164


1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
 3855              		.loc 1 1836 0
 3856 0160 638D     		ldrh	r3, [r4, #42]
 3857 0162 9BB2     		uxth	r3, r3
 3858 0164 002B     		cmp	r3, #0
 3859 0166 BCD1     		bne	.L261
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 3860              		.loc 1 1840 0
 3861 0168 2046     		mov	r0, r4
 3862 016a 0C99     		ldr	r1, [sp, #48]
 3863 016c 4A46     		mov	r2, r9
 3864 016e FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 3865              	.LVL335:
 3866 0172 0346     		mov	r3, r0
 3867 0174 20B1     		cbz	r0, .L252
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 3868              		.loc 1 1842 0
 3869 0176 636C     		ldr	r3, [r4, #68]
 3870 0178 042B     		cmp	r3, #4
 3871 017a 25D1     		bne	.L260
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 3872              		.loc 1 1844 0
 3873 017c 0123     		movs	r3, #1
 3874 017e 24E0     		b	.L243
 3875              	.L252:
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 3876              		.loc 1 1853 0
 3877 0180 2168     		ldr	r1, [r4]
 3878 0182 2022     		movs	r2, #32
 3879 0184 CA61     		str	r2, [r1, #28]
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 3880              		.loc 1 1856 0
 3881 0186 2168     		ldr	r1, [r4]
 3882 0188 4868     		ldr	r0, [r1, #4]
 3883 018a 20F0FF70 		bic	r0, r0, #33423360
 3884 018e 20F48B30 		bic	r0, r0, #71168
 3885 0192 20F4FF70 		bic	r0, r0, #510
 3886 0196 20F00100 		bic	r0, r0, #1
 3887 019a 4860     		str	r0, [r1, #4]
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 3888              		.loc 1 1858 0
 3889 019c 84F84120 		strb	r2, [r4, #65]
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 3890              		.loc 1 1859 0
 3891 01a0 0022     		movs	r2, #0
 3892 01a2 84F84220 		strb	r2, [r4, #66]
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 3893              		.loc 1 1862 0
 3894 01a6 84F84020 		strb	r2, [r4, #64]
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 3895              		.loc 1 1864 0
 3896 01aa 0EE0     		b	.L243
 3897              	.LVL336:
 3898              	.L253:
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 3899              		.loc 1 1868 0
 3900 01ac 0223     		movs	r3, #2
ARM GAS  /tmp/cccVlT9k.s 			page 165


 3901              	.LVL337:
 3902 01ae 0CE0     		b	.L243
 3903              	.LVL338:
 3904              	.L254:
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 3905              		.loc 1 1744 0
 3906 01b0 0123     		movs	r3, #1
 3907              	.LVL339:
 3908 01b2 0AE0     		b	.L243
 3909              	.LVL340:
 3910              	.L255:
 3911 01b4 0123     		movs	r3, #1
 3912              	.LVL341:
 3913 01b6 08E0     		b	.L243
 3914              	.L256:
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3915              		.loc 1 1748 0
 3916 01b8 0223     		movs	r3, #2
 3917 01ba 06E0     		b	.L243
 3918              	.LVL342:
 3919              	.L257:
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 3920              		.loc 1 1755 0
 3921 01bc 0323     		movs	r3, #3
 3922 01be 04E0     		b	.L243
 3923              	.L258:
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 3924              		.loc 1 1807 0
 3925 01c0 0323     		movs	r3, #3
 3926 01c2 02E0     		b	.L243
 3927              	.L259:
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 3928              		.loc 1 1821 0
 3929 01c4 0323     		movs	r3, #3
 3930 01c6 00E0     		b	.L243
 3931              	.L260:
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 3932              		.loc 1 1848 0
 3933 01c8 0323     		movs	r3, #3
 3934              	.LVL343:
 3935              	.L243:
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 3936              		.loc 1 1870 0
 3937 01ca 1846     		mov	r0, r3
 3938 01cc 02B0     		add	sp, sp, #8
 3939              		@ sp needed
 3940 01ce BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 3941              		.cfi_endproc
 3942              	.LFE139:
 3944 01d2 00BF     		.section	.text.HAL_I2C_Mem_Read,"ax",%progbits
 3945              		.align	2
 3946              		.global	HAL_I2C_Mem_Read
 3947              		.thumb
 3948              		.thumb_func
 3950              	HAL_I2C_Mem_Read:
 3951              	.LFB140:
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
ARM GAS  /tmp/cccVlT9k.s 			page 166


 3952              		.loc 1 1886 0
 3953              		.cfi_startproc
 3954              		@ args = 12, pretend = 0, frame = 0
 3955              		@ frame_needed = 0, uses_anonymous_args = 0
 3956              	.LVL344:
 3957 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 3958              	.LCFI37:
 3959              		.cfi_def_cfa_offset 32
 3960              		.cfi_offset 4, -32
 3961              		.cfi_offset 5, -28
 3962              		.cfi_offset 6, -24
 3963              		.cfi_offset 7, -20
 3964              		.cfi_offset 8, -16
 3965              		.cfi_offset 9, -12
 3966              		.cfi_offset 10, -8
 3967              		.cfi_offset 14, -4
 3968 0004 82B0     		sub	sp, sp, #8
 3969              	.LCFI38:
 3970              		.cfi_def_cfa_offset 40
 3971 0006 0446     		mov	r4, r0
 3972 0008 0E46     		mov	r6, r1
 3973 000a 9046     		mov	r8, r2
 3974 000c 1F46     		mov	r7, r3
 3975 000e BDF82C50 		ldrh	r5, [sp, #44]
 3976              	.LVL345:
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 3977              		.loc 1 1892 0
 3978 0012 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 3979              	.LVL346:
 3980 0016 C0B2     		uxtb	r0, r0
 3981 0018 2028     		cmp	r0, #32
 3982 001a 40F0C880 		bne	.L273
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3983              		.loc 1 1894 0
 3984 001e 0A9A     		ldr	r2, [sp, #40]
 3985              	.LVL347:
 3986 0020 002A     		cmp	r2, #0
 3987 0022 00F0C680 		beq	.L274
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 3988              		.loc 1 1894 0 is_stmt 0 discriminator 1
 3989 0026 002D     		cmp	r5, #0
 3990 0028 00F0C580 		beq	.L275
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3991              		.loc 1 1900 0 is_stmt 1
 3992 002c 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 3993              	.LVL348:
 3994 0030 012B     		cmp	r3, #1
 3995 0032 00F0C280 		beq	.L276
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 3996              		.loc 1 1900 0 is_stmt 0 discriminator 2
 3997 0036 4FF0010A 		mov	r10, #1
 3998 003a 84F840A0 		strb	r10, [r4, #64]
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 3999              		.loc 1 1903 0 is_stmt 1 discriminator 2
 4000 003e FFF7FEFF 		bl	HAL_GetTick
 4001              	.LVL349:
 4002 0042 8146     		mov	r9, r0
ARM GAS  /tmp/cccVlT9k.s 			page 167


 4003              	.LVL350:
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 4004              		.loc 1 1905 0 discriminator 2
 4005 0044 0090     		str	r0, [sp]
 4006 0046 2046     		mov	r0, r4
 4007              	.LVL351:
 4008 0048 4FF40041 		mov	r1, #32768
 4009 004c 5246     		mov	r2, r10
 4010 004e 1923     		movs	r3, #25
 4011 0050 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4012              	.LVL352:
 4013 0054 0028     		cmp	r0, #0
 4014 0056 40F0B280 		bne	.L277
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 4015              		.loc 1 1910 0
 4016 005a 2223     		movs	r3, #34
 4017 005c 84F84130 		strb	r3, [r4, #65]
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MEM;
 4018              		.loc 1 1911 0
 4019 0060 4023     		movs	r3, #64
 4020 0062 84F84230 		strb	r3, [r4, #66]
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 4021              		.loc 1 1912 0
 4022 0066 0023     		movs	r3, #0
 4023 0068 6364     		str	r3, [r4, #68]
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr  = pData;
 4024              		.loc 1 1915 0
 4025 006a 0A9A     		ldr	r2, [sp, #40]
 4026 006c 6262     		str	r2, [r4, #36]
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = Size;
 4027              		.loc 1 1916 0
 4028 006e 6585     		strh	r5, [r4, #42]	@ movhi
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR   = NULL;
 4029              		.loc 1 1917 0
 4030 0070 6363     		str	r3, [r4, #52]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_O
 4031              		.loc 1 1920 0
 4032 0072 0C9B     		ldr	r3, [sp, #48]
 4033 0074 0093     		str	r3, [sp]
 4034 0076 CDF80490 		str	r9, [sp, #4]
 4035 007a 2046     		mov	r0, r4
 4036 007c 3146     		mov	r1, r6
 4037 007e 4246     		mov	r2, r8
 4038 0080 3B46     		mov	r3, r7
 4039 0082 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4040              	.LVL353:
 4041 0086 60B1     		cbz	r0, .L265
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4042              		.loc 1 1922 0
 4043 0088 636C     		ldr	r3, [r4, #68]
 4044 008a 042B     		cmp	r3, #4
 4045 008c 04D1     		bne	.L266
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4046              		.loc 1 1925 0
 4047 008e 0023     		movs	r3, #0
 4048 0090 84F84030 		strb	r3, [r4, #64]
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
ARM GAS  /tmp/cccVlT9k.s 			page 168


 4049              		.loc 1 1926 0
 4050 0094 5346     		mov	r3, r10
 4051 0096 99E0     		b	.L264
 4052              	.L266:
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4053              		.loc 1 1931 0
 4054 0098 0023     		movs	r3, #0
 4055 009a 84F84030 		strb	r3, [r4, #64]
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4056              		.loc 1 1932 0
 4057 009e 0323     		movs	r3, #3
 4058 00a0 94E0     		b	.L264
 4059              	.L265:
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4060              		.loc 1 1938 0
 4061 00a2 638D     		ldrh	r3, [r4, #42]
 4062 00a4 9BB2     		uxth	r3, r3
 4063 00a6 FF2B     		cmp	r3, #255
 4064 00a8 0BD9     		bls	.L267
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4065              		.loc 1 1940 0
 4066 00aa FF22     		movs	r2, #255
 4067 00ac 2285     		strh	r2, [r4, #40]	@ movhi
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_GENERATE_START_READ
 4068              		.loc 1 1941 0
 4069 00ae 4FF41053 		mov	r3, #9216
 4070 00b2 0093     		str	r3, [sp]
 4071 00b4 2046     		mov	r0, r4
 4072 00b6 3146     		mov	r1, r6
 4073 00b8 4FF08073 		mov	r3, #16777216
 4074 00bc FFF7FEFF 		bl	I2C_TransferConfig
 4075              	.LVL354:
 4076 00c0 0CE0     		b	.L271
 4077              	.L267:
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4078              		.loc 1 1945 0
 4079 00c2 628D     		ldrh	r2, [r4, #42]
 4080 00c4 92B2     		uxth	r2, r2
 4081 00c6 2285     		strh	r2, [r4, #40]	@ movhi
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_GENERATE_START_REA
 4082              		.loc 1 1946 0
 4083 00c8 4FF41053 		mov	r3, #9216
 4084 00cc 0093     		str	r3, [sp]
 4085 00ce 2046     		mov	r0, r4
 4086 00d0 3146     		mov	r1, r6
 4087 00d2 D2B2     		uxtb	r2, r2
 4088 00d4 4FF00073 		mov	r3, #33554432
 4089 00d8 FFF7FEFF 		bl	I2C_TransferConfig
 4090              	.LVL355:
 4091              	.L271:
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 4092              		.loc 1 1952 0
 4093 00dc 0427     		movs	r7, #4
 4094 00de 0025     		movs	r5, #0
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 4095              		.loc 1 1965 0
 4096 00e0 4FF08008 		mov	r8, #128
ARM GAS  /tmp/cccVlT9k.s 			page 169


 4097              	.L281:
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_RXNE, RESET, Timeout, tickstart) != HAL_OK)
 4098              		.loc 1 1952 0
 4099 00e4 CDF80090 		str	r9, [sp]
 4100 00e8 2046     		mov	r0, r4
 4101 00ea 3946     		mov	r1, r7
 4102 00ec 2A46     		mov	r2, r5
 4103 00ee 0C9B     		ldr	r3, [sp, #48]
 4104 00f0 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4105              	.LVL356:
 4106 00f4 0028     		cmp	r0, #0
 4107 00f6 64D1     		bne	.L278
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 4108              		.loc 1 1958 0
 4109 00f8 636A     		ldr	r3, [r4, #36]
 4110 00fa 5A1C     		adds	r2, r3, #1
 4111 00fc 6262     		str	r2, [r4, #36]
 4112 00fe 2268     		ldr	r2, [r4]
 4113 0100 526A     		ldr	r2, [r2, #36]
 4114 0102 1A70     		strb	r2, [r3]
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 4115              		.loc 1 1959 0
 4116 0104 238D     		ldrh	r3, [r4, #40]
 4117 0106 013B     		subs	r3, r3, #1
 4118 0108 9BB2     		uxth	r3, r3
 4119 010a 2385     		strh	r3, [r4, #40]	@ movhi
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 4120              		.loc 1 1960 0
 4121 010c 628D     		ldrh	r2, [r4, #42]
 4122 010e 013A     		subs	r2, r2, #1
 4123 0110 92B2     		uxth	r2, r2
 4124 0112 6285     		strh	r2, [r4, #42]	@ movhi
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 4125              		.loc 1 1962 0
 4126 0114 2BBB     		cbnz	r3, .L269
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 4127              		.loc 1 1962 0 is_stmt 0 discriminator 1
 4128 0116 638D     		ldrh	r3, [r4, #42]
 4129 0118 9BB2     		uxth	r3, r3
 4130 011a 13B3     		cbz	r3, .L269
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 4131              		.loc 1 1965 0 is_stmt 1
 4132 011c CDF80090 		str	r9, [sp]
 4133 0120 2046     		mov	r0, r4
 4134 0122 4146     		mov	r1, r8
 4135 0124 2A46     		mov	r2, r5
 4136 0126 0C9B     		ldr	r3, [sp, #48]
 4137 0128 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 4138              	.LVL357:
 4139 012c 0028     		cmp	r0, #0
 4140 012e 4AD1     		bne	.L279
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4141              		.loc 1 1970 0
 4142 0130 638D     		ldrh	r3, [r4, #42]
 4143 0132 9BB2     		uxth	r3, r3
 4144 0134 FF2B     		cmp	r3, #255
 4145 0136 09D9     		bls	.L270
ARM GAS  /tmp/cccVlT9k.s 			page 170


1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = MAX_NBYTE_SIZE;
 4146              		.loc 1 1972 0
 4147 0138 FF22     		movs	r2, #255
 4148 013a 2285     		strh	r2, [r4, #40]	@ movhi
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 4149              		.loc 1 1973 0
 4150 013c 0095     		str	r5, [sp]
 4151 013e 2046     		mov	r0, r4
 4152 0140 3146     		mov	r1, r6
 4153 0142 4FF08073 		mov	r3, #16777216
 4154 0146 FFF7FEFF 		bl	I2C_TransferConfig
 4155              	.LVL358:
 4156 014a 0AE0     		b	.L269
 4157              	.L270:
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->XferSize = hi2c->XferCount;
 4158              		.loc 1 1977 0
 4159 014c 628D     		ldrh	r2, [r4, #42]
 4160 014e 92B2     		uxth	r2, r2
 4161 0150 2285     		strh	r2, [r4, #40]	@ movhi
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 4162              		.loc 1 1978 0
 4163 0152 0095     		str	r5, [sp]
 4164 0154 2046     		mov	r0, r4
 4165 0156 3146     		mov	r1, r6
 4166 0158 D2B2     		uxtb	r2, r2
 4167 015a 4FF00073 		mov	r3, #33554432
 4168 015e FFF7FEFF 		bl	I2C_TransferConfig
 4169              	.LVL359:
 4170              	.L269:
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }while(hi2c->XferCount > 0U);
 4171              		.loc 1 1981 0
 4172 0162 638D     		ldrh	r3, [r4, #42]
 4173 0164 9BB2     		uxth	r3, r3
 4174 0166 002B     		cmp	r3, #0
 4175 0168 BCD1     		bne	.L281
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 4176              		.loc 1 1985 0
 4177 016a 2046     		mov	r0, r4
 4178 016c 0C99     		ldr	r1, [sp, #48]
 4179 016e 4A46     		mov	r2, r9
 4180 0170 FFF7FEFF 		bl	I2C_WaitOnSTOPFlagUntilTimeout
 4181              	.LVL360:
 4182 0174 0346     		mov	r3, r0
 4183 0176 20B1     		cbz	r0, .L272
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4184              		.loc 1 1987 0
 4185 0178 636C     		ldr	r3, [r4, #68]
 4186 017a 042B     		cmp	r3, #4
 4187 017c 25D1     		bne	.L280
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 4188              		.loc 1 1989 0
 4189 017e 0123     		movs	r3, #1
 4190 0180 24E0     		b	.L264
 4191              	.L272:
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 4192              		.loc 1 1998 0
 4193 0182 2168     		ldr	r1, [r4]
ARM GAS  /tmp/cccVlT9k.s 			page 171


 4194 0184 2022     		movs	r2, #32
 4195 0186 CA61     		str	r2, [r1, #28]
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_RESET_CR2(hi2c);
 4196              		.loc 1 2001 0
 4197 0188 2168     		ldr	r1, [r4]
 4198 018a 4868     		ldr	r0, [r1, #4]
 4199 018c 20F0FF70 		bic	r0, r0, #33423360
 4200 0190 20F48B30 		bic	r0, r0, #71168
 4201 0194 20F4FF70 		bic	r0, r0, #510
 4202 0198 20F00100 		bic	r0, r0, #1
 4203 019c 4860     		str	r0, [r1, #4]
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 4204              		.loc 1 2003 0
 4205 019e 84F84120 		strb	r2, [r4, #65]
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode  = HAL_I2C_MODE_NONE;
 4206              		.loc 1 2004 0
 4207 01a2 0022     		movs	r2, #0
 4208 01a4 84F84220 		strb	r2, [r4, #66]
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4209              		.loc 1 2007 0
 4210 01a8 84F84020 		strb	r2, [r4, #64]
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 4211              		.loc 1 2009 0
 4212 01ac 0EE0     		b	.L264
 4213              	.LVL361:
 4214              	.L273:
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 4215              		.loc 1 2013 0
 4216 01ae 0223     		movs	r3, #2
 4217              	.LVL362:
 4218 01b0 0CE0     		b	.L264
 4219              	.LVL363:
 4220              	.L274:
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 4221              		.loc 1 1896 0
 4222 01b2 0123     		movs	r3, #1
 4223              	.LVL364:
 4224 01b4 0AE0     		b	.L264
 4225              	.LVL365:
 4226              	.L275:
 4227 01b6 0123     		movs	r3, #1
 4228              	.LVL366:
 4229 01b8 08E0     		b	.L264
 4230              	.L276:
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4231              		.loc 1 1900 0
 4232 01ba 0223     		movs	r3, #2
 4233 01bc 06E0     		b	.L264
 4234              	.LVL367:
 4235              	.L277:
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_TIMEOUT;
 4236              		.loc 1 1907 0
 4237 01be 0323     		movs	r3, #3
 4238 01c0 04E0     		b	.L264
 4239              	.L278:
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4240              		.loc 1 1954 0
ARM GAS  /tmp/cccVlT9k.s 			page 172


 4241 01c2 0323     		movs	r3, #3
 4242 01c4 02E0     		b	.L264
 4243              	.L279:
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 4244              		.loc 1 1967 0
 4245 01c6 0323     		movs	r3, #3
 4246 01c8 00E0     		b	.L264
 4247              	.L280:
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4248              		.loc 1 1993 0
 4249 01ca 0323     		movs	r3, #3
 4250              	.LVL368:
 4251              	.L264:
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 4252              		.loc 1 2015 0
 4253 01cc 1846     		mov	r0, r3
 4254 01ce 02B0     		add	sp, sp, #8
 4255              		@ sp needed
 4256 01d0 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 4257              		.cfi_endproc
 4258              	.LFE140:
 4260              		.section	.text.HAL_I2C_Mem_Write_IT,"ax",%progbits
 4261              		.align	2
 4262              		.global	HAL_I2C_Mem_Write_IT
 4263              		.thumb
 4264              		.thumb_func
 4266              	HAL_I2C_Mem_Write_IT:
 4267              	.LFB141:
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 4268              		.loc 1 2029 0
 4269              		.cfi_startproc
 4270              		@ args = 8, pretend = 0, frame = 0
 4271              		@ frame_needed = 0, uses_anonymous_args = 0
 4272              	.LVL369:
 4273 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4274              	.LCFI39:
 4275              		.cfi_def_cfa_offset 28
 4276              		.cfi_offset 4, -28
 4277              		.cfi_offset 5, -24
 4278              		.cfi_offset 6, -20
 4279              		.cfi_offset 7, -16
 4280              		.cfi_offset 8, -12
 4281              		.cfi_offset 9, -8
 4282              		.cfi_offset 14, -4
 4283 0004 83B0     		sub	sp, sp, #12
 4284              	.LCFI40:
 4285              		.cfi_def_cfa_offset 40
 4286 0006 0446     		mov	r4, r0
 4287 0008 0E46     		mov	r6, r1
 4288 000a 9046     		mov	r8, r2
 4289 000c 1F46     		mov	r7, r3
 4290 000e BDF82C50 		ldrh	r5, [sp, #44]
 4291              	.LVL370:
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4292              		.loc 1 2036 0
 4293 0012 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 4294              	.LVL371:
ARM GAS  /tmp/cccVlT9k.s 			page 173


 4295 0016 C0B2     		uxtb	r0, r0
 4296 0018 2028     		cmp	r0, #32
 4297 001a 56D1     		bne	.L289
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4298              		.loc 1 2038 0
 4299 001c 0A9B     		ldr	r3, [sp, #40]
 4300              	.LVL372:
 4301 001e 002B     		cmp	r3, #0
 4302 0020 55D0     		beq	.L290
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4303              		.loc 1 2038 0 is_stmt 0 discriminator 1
 4304 0022 002D     		cmp	r5, #0
 4305 0024 55D0     		beq	.L291
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4306              		.loc 1 2043 0 is_stmt 1
 4307 0026 2368     		ldr	r3, [r4]
 4308 0028 9B69     		ldr	r3, [r3, #24]
 4309 002a 13F4004F 		tst	r3, #32768
 4310 002e 52D1     		bne	.L292
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4311              		.loc 1 2049 0
 4312 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 4313 0034 012B     		cmp	r3, #1
 4314 0036 50D0     		beq	.L293
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4315              		.loc 1 2049 0 is_stmt 0 discriminator 2
 4316 0038 0123     		movs	r3, #1
 4317 003a 84F84030 		strb	r3, [r4, #64]
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4318              		.loc 1 2052 0 is_stmt 1 discriminator 2
 4319 003e FFF7FEFF 		bl	HAL_GetTick
 4320              	.LVL373:
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 4321              		.loc 1 2054 0 discriminator 2
 4322 0042 2123     		movs	r3, #33
 4323 0044 84F84130 		strb	r3, [r4, #65]
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4324              		.loc 1 2055 0 discriminator 2
 4325 0048 4023     		movs	r3, #64
 4326 004a 84F84230 		strb	r3, [r4, #66]
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4327              		.loc 1 2056 0 discriminator 2
 4328 004e 0023     		movs	r3, #0
 4329 0050 6364     		str	r3, [r4, #68]
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4330              		.loc 1 2059 0 discriminator 2
 4331 0052 0A9B     		ldr	r3, [sp, #40]
 4332 0054 6362     		str	r3, [r4, #36]
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4333              		.loc 1 2060 0 discriminator 2
 4334 0056 6585     		strh	r5, [r4, #42]	@ movhi
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4335              		.loc 1 2061 0 discriminator 2
 4336 0058 224B     		ldr	r3, .L294
 4337 005a E362     		str	r3, [r4, #44]
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4338              		.loc 1 2062 0 discriminator 2
ARM GAS  /tmp/cccVlT9k.s 			page 174


 4339 005c 224B     		ldr	r3, .L294+4
 4340 005e 6363     		str	r3, [r4, #52]
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4341              		.loc 1 2064 0 discriminator 2
 4342 0060 638D     		ldrh	r3, [r4, #42]
 4343 0062 9BB2     		uxth	r3, r3
 4344 0064 FF2B     		cmp	r3, #255
 4345 0066 04D9     		bls	.L285
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4346              		.loc 1 2066 0
 4347 0068 FF23     		movs	r3, #255
 4348 006a 2385     		strh	r3, [r4, #40]	@ movhi
 4349              	.LVL374:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4350              		.loc 1 2067 0
 4351 006c 4FF08079 		mov	r9, #16777216
 4352 0070 03E0     		b	.L286
 4353              	.LVL375:
 4354              	.L285:
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4355              		.loc 1 2071 0
 4356 0072 638D     		ldrh	r3, [r4, #42]
 4357 0074 2385     		strh	r3, [r4, #40]	@ movhi
 4358              	.LVL376:
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4359              		.loc 1 2072 0
 4360 0076 4FF00079 		mov	r9, #33554432
 4361              	.LVL377:
 4362              	.L286:
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
 4363              		.loc 1 2076 0
 4364 007a 1922     		movs	r2, #25
 4365 007c 0092     		str	r2, [sp]
 4366 007e 0190     		str	r0, [sp, #4]
 4367 0080 2046     		mov	r0, r4
 4368              	.LVL378:
 4369 0082 3146     		mov	r1, r6
 4370 0084 4246     		mov	r2, r8
 4371 0086 3B46     		mov	r3, r7
 4372 0088 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4373              	.LVL379:
 4374 008c 0546     		mov	r5, r0
 4375 008e 60B1     		cbz	r0, .L287
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4376              		.loc 1 2078 0
 4377 0090 636C     		ldr	r3, [r4, #68]
 4378 0092 042B     		cmp	r3, #4
 4379 0094 04D1     		bne	.L288
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4380              		.loc 1 2081 0
 4381 0096 0023     		movs	r3, #0
 4382 0098 84F84030 		strb	r3, [r4, #64]
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 4383              		.loc 1 2082 0
 4384 009c 0125     		movs	r5, #1
 4385 009e 1DE0     		b	.L284
 4386              	.L288:
ARM GAS  /tmp/cccVlT9k.s 			page 175


2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4387              		.loc 1 2087 0
 4388 00a0 0023     		movs	r3, #0
 4389 00a2 84F84030 		strb	r3, [r4, #64]
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4390              		.loc 1 2088 0
 4391 00a6 0325     		movs	r5, #3
 4392 00a8 18E0     		b	.L284
 4393              	.L287:
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 4394              		.loc 1 2093 0
 4395 00aa 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 4396 00ae 0027     		movs	r7, #0
 4397 00b0 0097     		str	r7, [sp]
 4398 00b2 2046     		mov	r0, r4
 4399 00b4 3146     		mov	r1, r6
 4400 00b6 4B46     		mov	r3, r9
 4401 00b8 FFF7FEFF 		bl	I2C_TransferConfig
 4402              	.LVL380:
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c); 
 4403              		.loc 1 2096 0
 4404 00bc 84F84070 		strb	r7, [r4, #64]
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 4405              		.loc 1 2105 0
 4406 00c0 2046     		mov	r0, r4
 4407 00c2 0121     		movs	r1, #1
 4408 00c4 FFF7FEFF 		bl	I2C_Enable_IRQ
 4409              	.LVL381:
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 4410              		.loc 1 2107 0
 4411 00c8 08E0     		b	.L284
 4412              	.LVL382:
 4413              	.L289:
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 4414              		.loc 1 2111 0
 4415 00ca 0225     		movs	r5, #2
 4416 00cc 06E0     		b	.L284
 4417              	.LVL383:
 4418              	.L290:
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 4419              		.loc 1 2040 0
 4420 00ce 0125     		movs	r5, #1
 4421 00d0 04E0     		b	.L284
 4422              	.L291:
 4423 00d2 0125     		movs	r5, #1
 4424 00d4 02E0     		b	.L284
 4425              	.L292:
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 4426              		.loc 1 2045 0
 4427 00d6 0225     		movs	r5, #2
 4428 00d8 00E0     		b	.L284
 4429              	.L293:
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4430              		.loc 1 2049 0
 4431 00da 0225     		movs	r5, #2
 4432              	.LVL384:
 4433              	.L284:
ARM GAS  /tmp/cccVlT9k.s 			page 176


2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 4434              		.loc 1 2113 0
 4435 00dc 2846     		mov	r0, r5
 4436 00de 03B0     		add	sp, sp, #12
 4437              		@ sp needed
 4438 00e0 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4439              	.LVL385:
 4440              	.L295:
 4441              		.align	2
 4442              	.L294:
 4443 00e4 0000FFFF 		.word	-65536
 4444 00e8 00000000 		.word	I2C_Master_ISR_IT
 4445              		.cfi_endproc
 4446              	.LFE141:
 4448              		.section	.text.HAL_I2C_Mem_Read_IT,"ax",%progbits
 4449              		.align	2
 4450              		.global	HAL_I2C_Mem_Read_IT
 4451              		.thumb
 4452              		.thumb_func
 4454              	HAL_I2C_Mem_Read_IT:
 4455              	.LFB142:
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 4456              		.loc 1 2128 0
 4457              		.cfi_startproc
 4458              		@ args = 8, pretend = 0, frame = 0
 4459              		@ frame_needed = 0, uses_anonymous_args = 0
 4460              	.LVL386:
 4461 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4462              	.LCFI41:
 4463              		.cfi_def_cfa_offset 28
 4464              		.cfi_offset 4, -28
 4465              		.cfi_offset 5, -24
 4466              		.cfi_offset 6, -20
 4467              		.cfi_offset 7, -16
 4468              		.cfi_offset 8, -12
 4469              		.cfi_offset 9, -8
 4470              		.cfi_offset 14, -4
 4471 0004 83B0     		sub	sp, sp, #12
 4472              	.LCFI42:
 4473              		.cfi_def_cfa_offset 40
 4474 0006 0446     		mov	r4, r0
 4475 0008 0E46     		mov	r6, r1
 4476 000a 9046     		mov	r8, r2
 4477 000c 1F46     		mov	r7, r3
 4478 000e BDF82C50 		ldrh	r5, [sp, #44]
 4479              	.LVL387:
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4480              		.loc 1 2135 0
 4481 0012 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 4482              	.LVL388:
 4483 0016 C0B2     		uxtb	r0, r0
 4484 0018 2028     		cmp	r0, #32
 4485 001a 58D1     		bne	.L302
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4486              		.loc 1 2137 0
 4487 001c 0A9B     		ldr	r3, [sp, #40]
 4488              	.LVL389:
ARM GAS  /tmp/cccVlT9k.s 			page 177


 4489 001e 002B     		cmp	r3, #0
 4490 0020 57D0     		beq	.L303
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4491              		.loc 1 2137 0 is_stmt 0 discriminator 1
 4492 0022 002D     		cmp	r5, #0
 4493 0024 57D0     		beq	.L304
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4494              		.loc 1 2142 0 is_stmt 1
 4495 0026 2368     		ldr	r3, [r4]
 4496 0028 9B69     		ldr	r3, [r3, #24]
 4497 002a 13F4004F 		tst	r3, #32768
 4498 002e 54D1     		bne	.L305
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4499              		.loc 1 2148 0
 4500 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 4501 0034 012B     		cmp	r3, #1
 4502 0036 52D0     		beq	.L306
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4503              		.loc 1 2148 0 is_stmt 0 discriminator 2
 4504 0038 0123     		movs	r3, #1
 4505 003a 84F84030 		strb	r3, [r4, #64]
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4506              		.loc 1 2151 0 is_stmt 1 discriminator 2
 4507 003e FFF7FEFF 		bl	HAL_GetTick
 4508              	.LVL390:
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 4509              		.loc 1 2153 0 discriminator 2
 4510 0042 2223     		movs	r3, #34
 4511 0044 84F84130 		strb	r3, [r4, #65]
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4512              		.loc 1 2154 0 discriminator 2
 4513 0048 4023     		movs	r3, #64
 4514 004a 84F84230 		strb	r3, [r4, #66]
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4515              		.loc 1 2155 0 discriminator 2
 4516 004e 0023     		movs	r3, #0
 4517 0050 6364     		str	r3, [r4, #68]
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4518              		.loc 1 2158 0 discriminator 2
 4519 0052 0A9B     		ldr	r3, [sp, #40]
 4520 0054 6362     		str	r3, [r4, #36]
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4521              		.loc 1 2159 0 discriminator 2
 4522 0056 6585     		strh	r5, [r4, #42]	@ movhi
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4523              		.loc 1 2160 0 discriminator 2
 4524 0058 234B     		ldr	r3, .L307
 4525 005a E362     		str	r3, [r4, #44]
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 4526              		.loc 1 2161 0 discriminator 2
 4527 005c 234B     		ldr	r3, .L307+4
 4528 005e 6363     		str	r3, [r4, #52]
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4529              		.loc 1 2163 0 discriminator 2
 4530 0060 638D     		ldrh	r3, [r4, #42]
 4531 0062 9BB2     		uxth	r3, r3
 4532 0064 FF2B     		cmp	r3, #255
ARM GAS  /tmp/cccVlT9k.s 			page 178


 4533 0066 04D9     		bls	.L298
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4534              		.loc 1 2165 0
 4535 0068 FF23     		movs	r3, #255
 4536 006a 2385     		strh	r3, [r4, #40]	@ movhi
 4537              	.LVL391:
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4538              		.loc 1 2166 0
 4539 006c 4FF08079 		mov	r9, #16777216
 4540 0070 03E0     		b	.L299
 4541              	.LVL392:
 4542              	.L298:
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4543              		.loc 1 2170 0
 4544 0072 638D     		ldrh	r3, [r4, #42]
 4545 0074 2385     		strh	r3, [r4, #40]	@ movhi
 4546              	.LVL393:
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4547              		.loc 1 2171 0
 4548 0076 4FF00079 		mov	r9, #33554432
 4549              	.LVL394:
 4550              	.L299:
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
 4551              		.loc 1 2175 0
 4552 007a 1922     		movs	r2, #25
 4553 007c 0092     		str	r2, [sp]
 4554 007e 0190     		str	r0, [sp, #4]
 4555 0080 2046     		mov	r0, r4
 4556              	.LVL395:
 4557 0082 3146     		mov	r1, r6
 4558 0084 4246     		mov	r2, r8
 4559 0086 3B46     		mov	r3, r7
 4560 0088 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4561              	.LVL396:
 4562 008c 0546     		mov	r5, r0
 4563 008e 60B1     		cbz	r0, .L300
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4564              		.loc 1 2177 0
 4565 0090 636C     		ldr	r3, [r4, #68]
 4566 0092 042B     		cmp	r3, #4
 4567 0094 04D1     		bne	.L301
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4568              		.loc 1 2180 0
 4569 0096 0023     		movs	r3, #0
 4570 0098 84F84030 		strb	r3, [r4, #64]
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 4571              		.loc 1 2181 0
 4572 009c 0125     		movs	r5, #1
 4573 009e 1FE0     		b	.L297
 4574              	.L301:
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4575              		.loc 1 2186 0
 4576 00a0 0023     		movs	r3, #0
 4577 00a2 84F84030 		strb	r3, [r4, #64]
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4578              		.loc 1 2187 0
 4579 00a6 0325     		movs	r5, #3
ARM GAS  /tmp/cccVlT9k.s 			page 179


 4580 00a8 1AE0     		b	.L297
 4581              	.L300:
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress,hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 4582              		.loc 1 2192 0
 4583 00aa 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 4584 00ae 4FF41053 		mov	r3, #9216
 4585 00b2 0093     		str	r3, [sp]
 4586 00b4 2046     		mov	r0, r4
 4587 00b6 3146     		mov	r1, r6
 4588 00b8 4B46     		mov	r3, r9
 4589 00ba FFF7FEFF 		bl	I2C_TransferConfig
 4590              	.LVL397:
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4591              		.loc 1 2195 0
 4592 00be 0023     		movs	r3, #0
 4593 00c0 84F84030 		strb	r3, [r4, #64]
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 4594              		.loc 1 2204 0
 4595 00c4 2046     		mov	r0, r4
 4596 00c6 0221     		movs	r1, #2
 4597 00c8 FFF7FEFF 		bl	I2C_Enable_IRQ
 4598              	.LVL398:
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 4599              		.loc 1 2206 0
 4600 00cc 08E0     		b	.L297
 4601              	.LVL399:
 4602              	.L302:
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 4603              		.loc 1 2210 0
 4604 00ce 0225     		movs	r5, #2
 4605 00d0 06E0     		b	.L297
 4606              	.LVL400:
 4607              	.L303:
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 4608              		.loc 1 2139 0
 4609 00d2 0125     		movs	r5, #1
 4610 00d4 04E0     		b	.L297
 4611              	.L304:
 4612 00d6 0125     		movs	r5, #1
 4613 00d8 02E0     		b	.L297
 4614              	.L305:
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 4615              		.loc 1 2144 0
 4616 00da 0225     		movs	r5, #2
 4617 00dc 00E0     		b	.L297
 4618              	.L306:
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4619              		.loc 1 2148 0
 4620 00de 0225     		movs	r5, #2
 4621              	.LVL401:
 4622              	.L297:
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 4623              		.loc 1 2212 0
 4624 00e0 2846     		mov	r0, r5
 4625 00e2 03B0     		add	sp, sp, #12
 4626              		@ sp needed
 4627 00e4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
ARM GAS  /tmp/cccVlT9k.s 			page 180


 4628              	.LVL402:
 4629              	.L308:
 4630              		.align	2
 4631              	.L307:
 4632 00e8 0000FFFF 		.word	-65536
 4633 00ec 00000000 		.word	I2C_Master_ISR_IT
 4634              		.cfi_endproc
 4635              	.LFE142:
 4637              		.section	.text.HAL_I2C_Mem_Write_DMA,"ax",%progbits
 4638              		.align	2
 4639              		.global	HAL_I2C_Mem_Write_DMA
 4640              		.thumb
 4641              		.thumb_func
 4643              	HAL_I2C_Mem_Write_DMA:
 4644              	.LFB143:
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 4645              		.loc 1 2226 0
 4646              		.cfi_startproc
 4647              		@ args = 8, pretend = 0, frame = 0
 4648              		@ frame_needed = 0, uses_anonymous_args = 0
 4649              	.LVL403:
 4650 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4651              	.LCFI43:
 4652              		.cfi_def_cfa_offset 28
 4653              		.cfi_offset 4, -28
 4654              		.cfi_offset 5, -24
 4655              		.cfi_offset 6, -20
 4656              		.cfi_offset 7, -16
 4657              		.cfi_offset 8, -12
 4658              		.cfi_offset 9, -8
 4659              		.cfi_offset 14, -4
 4660 0004 83B0     		sub	sp, sp, #12
 4661              	.LCFI44:
 4662              		.cfi_def_cfa_offset 40
 4663 0006 0446     		mov	r4, r0
 4664 0008 0E46     		mov	r6, r1
 4665 000a 9046     		mov	r8, r2
 4666 000c 1F46     		mov	r7, r3
 4667 000e BDF82C50 		ldrh	r5, [sp, #44]
 4668              	.LVL404:
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4669              		.loc 1 2233 0
 4670 0012 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 4671              	.LVL405:
 4672 0016 C0B2     		uxtb	r0, r0
 4673 0018 2028     		cmp	r0, #32
 4674 001a 71D1     		bne	.L315
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4675              		.loc 1 2235 0
 4676 001c 0A9B     		ldr	r3, [sp, #40]
 4677              	.LVL406:
 4678 001e 002B     		cmp	r3, #0
 4679 0020 70D0     		beq	.L316
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4680              		.loc 1 2235 0 is_stmt 0 discriminator 1
 4681 0022 002D     		cmp	r5, #0
 4682 0024 70D0     		beq	.L317
ARM GAS  /tmp/cccVlT9k.s 			page 181


2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4683              		.loc 1 2240 0 is_stmt 1
 4684 0026 2368     		ldr	r3, [r4]
 4685 0028 9B69     		ldr	r3, [r3, #24]
 4686 002a 13F4004F 		tst	r3, #32768
 4687 002e 6DD1     		bne	.L318
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4688              		.loc 1 2246 0
 4689 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 4690 0034 012B     		cmp	r3, #1
 4691 0036 6BD0     		beq	.L319
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4692              		.loc 1 2246 0 is_stmt 0 discriminator 2
 4693 0038 0123     		movs	r3, #1
 4694 003a 84F84030 		strb	r3, [r4, #64]
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4695              		.loc 1 2249 0 is_stmt 1 discriminator 2
 4696 003e FFF7FEFF 		bl	HAL_GetTick
 4697              	.LVL407:
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 4698              		.loc 1 2251 0 discriminator 2
 4699 0042 2123     		movs	r3, #33
 4700 0044 84F84130 		strb	r3, [r4, #65]
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4701              		.loc 1 2252 0 discriminator 2
 4702 0048 4023     		movs	r3, #64
 4703 004a 84F84230 		strb	r3, [r4, #66]
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4704              		.loc 1 2253 0 discriminator 2
 4705 004e 0023     		movs	r3, #0
 4706 0050 6364     		str	r3, [r4, #68]
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4707              		.loc 1 2256 0 discriminator 2
 4708 0052 0A9B     		ldr	r3, [sp, #40]
 4709 0054 6362     		str	r3, [r4, #36]
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4710              		.loc 1 2257 0 discriminator 2
 4711 0056 6585     		strh	r5, [r4, #42]	@ movhi
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4712              		.loc 1 2258 0 discriminator 2
 4713 0058 304B     		ldr	r3, .L320
 4714 005a E362     		str	r3, [r4, #44]
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4715              		.loc 1 2259 0 discriminator 2
 4716 005c 304B     		ldr	r3, .L320+4
 4717 005e 6363     		str	r3, [r4, #52]
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4718              		.loc 1 2261 0 discriminator 2
 4719 0060 638D     		ldrh	r3, [r4, #42]
 4720 0062 9BB2     		uxth	r3, r3
 4721 0064 FF2B     		cmp	r3, #255
 4722 0066 04D9     		bls	.L311
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4723              		.loc 1 2263 0
 4724 0068 FF23     		movs	r3, #255
 4725 006a 2385     		strh	r3, [r4, #40]	@ movhi
 4726              	.LVL408:
ARM GAS  /tmp/cccVlT9k.s 			page 182


2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4727              		.loc 1 2264 0
 4728 006c 4FF08079 		mov	r9, #16777216
 4729 0070 03E0     		b	.L312
 4730              	.LVL409:
 4731              	.L311:
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4732              		.loc 1 2268 0
 4733 0072 638D     		ldrh	r3, [r4, #42]
 4734 0074 2385     		strh	r3, [r4, #40]	@ movhi
 4735              	.LVL410:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4736              		.loc 1 2269 0
 4737 0076 4FF00079 		mov	r9, #33554432
 4738              	.LVL411:
 4739              	.L312:
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart
 4740              		.loc 1 2273 0
 4741 007a 1922     		movs	r2, #25
 4742 007c 0092     		str	r2, [sp]
 4743 007e 0190     		str	r0, [sp, #4]
 4744 0080 2046     		mov	r0, r4
 4745              	.LVL412:
 4746 0082 3146     		mov	r1, r6
 4747 0084 4246     		mov	r2, r8
 4748 0086 3B46     		mov	r3, r7
 4749 0088 FFF7FEFF 		bl	I2C_RequestMemoryWrite
 4750              	.LVL413:
 4751 008c 0546     		mov	r5, r0
 4752 008e 60B1     		cbz	r0, .L313
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4753              		.loc 1 2275 0
 4754 0090 636C     		ldr	r3, [r4, #68]
 4755 0092 042B     		cmp	r3, #4
 4756 0094 04D1     		bne	.L314
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4757              		.loc 1 2278 0
 4758 0096 0023     		movs	r3, #0
 4759 0098 84F84030 		strb	r3, [r4, #64]
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 4760              		.loc 1 2279 0
 4761 009c 0125     		movs	r5, #1
 4762 009e 38E0     		b	.L310
 4763              	.L314:
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4764              		.loc 1 2284 0
 4765 00a0 0023     		movs	r3, #0
 4766 00a2 84F84030 		strb	r3, [r4, #64]
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4767              		.loc 1 2285 0
 4768 00a6 0325     		movs	r5, #3
 4769 00a8 33E0     		b	.L310
 4770              	.L313:
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferCpltCallback = I2C_DMAMasterTransmitCplt;
 4771              		.loc 1 2290 0
 4772 00aa A36B     		ldr	r3, [r4, #56]
 4773 00ac 1D4A     		ldr	r2, .L320+8
ARM GAS  /tmp/cccVlT9k.s 			page 183


 4774 00ae 9A62     		str	r2, [r3, #40]
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferErrorCallback = I2C_DMAError;
 4775              		.loc 1 2293 0
 4776 00b0 A36B     		ldr	r3, [r4, #56]
 4777 00b2 1D4A     		ldr	r2, .L320+12
 4778 00b4 1A63     		str	r2, [r3, #48]
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferHalfCpltCallback = NULL;
 4779              		.loc 1 2296 0
 4780 00b6 A36B     		ldr	r3, [r4, #56]
 4781 00b8 0027     		movs	r7, #0
 4782 00ba DF62     		str	r7, [r3, #44]
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = NULL;
 4783              		.loc 1 2297 0
 4784 00bc A36B     		ldr	r3, [r4, #56]
 4785 00be 5F63     		str	r7, [r3, #52]
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmatx, (uint32_t)pData, (uint32_t)&hi2c->Instance->TXDR, hi2c->XferSize
 4786              		.loc 1 2300 0
 4787 00c0 2268     		ldr	r2, [r4]
 4788 00c2 A06B     		ldr	r0, [r4, #56]
 4789 00c4 0A99     		ldr	r1, [sp, #40]
 4790 00c6 2832     		adds	r2, r2, #40
 4791 00c8 238D     		ldrh	r3, [r4, #40]
 4792 00ca FFF7FEFF 		bl	HAL_DMA_Start_IT
 4793              	.LVL414:
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 4794              		.loc 1 2304 0
 4795 00ce 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 4796 00d2 0097     		str	r7, [sp]
 4797 00d4 2046     		mov	r0, r4
 4798 00d6 3146     		mov	r1, r6
 4799 00d8 4B46     		mov	r3, r9
 4800 00da FFF7FEFF 		bl	I2C_TransferConfig
 4801              	.LVL415:
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
 4802              		.loc 1 2307 0
 4803 00de 628D     		ldrh	r2, [r4, #42]
 4804 00e0 238D     		ldrh	r3, [r4, #40]
 4805 00e2 D31A     		subs	r3, r2, r3
 4806 00e4 9BB2     		uxth	r3, r3
 4807 00e6 6385     		strh	r3, [r4, #42]	@ movhi
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 4808              		.loc 1 2310 0
 4809 00e8 84F84070 		strb	r7, [r4, #64]
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 4810              		.loc 1 2316 0
 4811 00ec 2046     		mov	r0, r4
 4812 00ee 1121     		movs	r1, #17
 4813 00f0 FFF7FEFF 		bl	I2C_Enable_IRQ
 4814              	.LVL416:
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 4815              		.loc 1 2319 0
 4816 00f4 2368     		ldr	r3, [r4]
 4817 00f6 1A68     		ldr	r2, [r3]
 4818 00f8 42F48042 		orr	r2, r2, #16384
 4819 00fc 1A60     		str	r2, [r3]
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 4820              		.loc 1 2321 0
ARM GAS  /tmp/cccVlT9k.s 			page 184


 4821 00fe 08E0     		b	.L310
 4822              	.LVL417:
 4823              	.L315:
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 4824              		.loc 1 2325 0
 4825 0100 0225     		movs	r5, #2
 4826 0102 06E0     		b	.L310
 4827              	.LVL418:
 4828              	.L316:
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 4829              		.loc 1 2237 0
 4830 0104 0125     		movs	r5, #1
 4831 0106 04E0     		b	.L310
 4832              	.L317:
 4833 0108 0125     		movs	r5, #1
 4834 010a 02E0     		b	.L310
 4835              	.L318:
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 4836              		.loc 1 2242 0
 4837 010c 0225     		movs	r5, #2
 4838 010e 00E0     		b	.L310
 4839              	.L319:
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4840              		.loc 1 2246 0
 4841 0110 0225     		movs	r5, #2
 4842              	.LVL419:
 4843              	.L310:
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 4844              		.loc 1 2327 0
 4845 0112 2846     		mov	r0, r5
 4846 0114 03B0     		add	sp, sp, #12
 4847              		@ sp needed
 4848 0116 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4849              	.LVL420:
 4850              	.L321:
 4851 011a 00BF     		.align	2
 4852              	.L320:
 4853 011c 0000FFFF 		.word	-65536
 4854 0120 00000000 		.word	I2C_Master_ISR_DMA
 4855 0124 00000000 		.word	I2C_DMAMasterTransmitCplt
 4856 0128 00000000 		.word	I2C_DMAError
 4857              		.cfi_endproc
 4858              	.LFE143:
 4860              		.section	.text.HAL_I2C_Mem_Read_DMA,"ax",%progbits
 4861              		.align	2
 4862              		.global	HAL_I2C_Mem_Read_DMA
 4863              		.thumb
 4864              		.thumb_func
 4866              	HAL_I2C_Mem_Read_DMA:
 4867              	.LFB144:
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 4868              		.loc 1 2342 0
 4869              		.cfi_startproc
 4870              		@ args = 8, pretend = 0, frame = 0
 4871              		@ frame_needed = 0, uses_anonymous_args = 0
 4872              	.LVL421:
 4873 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
ARM GAS  /tmp/cccVlT9k.s 			page 185


 4874              	.LCFI45:
 4875              		.cfi_def_cfa_offset 28
 4876              		.cfi_offset 4, -28
 4877              		.cfi_offset 5, -24
 4878              		.cfi_offset 6, -20
 4879              		.cfi_offset 7, -16
 4880              		.cfi_offset 8, -12
 4881              		.cfi_offset 9, -8
 4882              		.cfi_offset 14, -4
 4883 0004 83B0     		sub	sp, sp, #12
 4884              	.LCFI46:
 4885              		.cfi_def_cfa_offset 40
 4886 0006 0446     		mov	r4, r0
 4887 0008 0E46     		mov	r6, r1
 4888 000a 9046     		mov	r8, r2
 4889 000c 1F46     		mov	r7, r3
 4890 000e BDF82C50 		ldrh	r5, [sp, #44]
 4891              	.LVL422:
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 4892              		.loc 1 2349 0
 4893 0012 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 4894              	.LVL423:
 4895 0016 C0B2     		uxtb	r0, r0
 4896 0018 2028     		cmp	r0, #32
 4897 001a 73D1     		bne	.L328
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4898              		.loc 1 2351 0
 4899 001c 0A9B     		ldr	r3, [sp, #40]
 4900              	.LVL424:
 4901 001e 002B     		cmp	r3, #0
 4902 0020 72D0     		beq	.L329
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 4903              		.loc 1 2351 0 is_stmt 0 discriminator 1
 4904 0022 002D     		cmp	r5, #0
 4905 0024 72D0     		beq	.L330
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 4906              		.loc 1 2356 0 is_stmt 1
 4907 0026 2368     		ldr	r3, [r4]
 4908 0028 9B69     		ldr	r3, [r3, #24]
 4909 002a 13F4004F 		tst	r3, #32768
 4910 002e 6FD1     		bne	.L331
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4911              		.loc 1 2362 0
 4912 0030 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 4913 0034 012B     		cmp	r3, #1
 4914 0036 6DD0     		beq	.L332
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 4915              		.loc 1 2362 0 is_stmt 0 discriminator 2
 4916 0038 0123     		movs	r3, #1
 4917 003a 84F84030 		strb	r3, [r4, #64]
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tickstart = HAL_GetTick();
 4918              		.loc 1 2365 0 is_stmt 1 discriminator 2
 4919 003e FFF7FEFF 		bl	HAL_GetTick
 4920              	.LVL425:
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 4921              		.loc 1 2367 0 discriminator 2
 4922 0042 2223     		movs	r3, #34
ARM GAS  /tmp/cccVlT9k.s 			page 186


 4923 0044 84F84130 		strb	r3, [r4, #65]
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode        = HAL_I2C_MODE_MEM;
 4924              		.loc 1 2368 0 discriminator 2
 4925 0048 4023     		movs	r3, #64
 4926 004a 84F84230 		strb	r3, [r4, #66]
2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 4927              		.loc 1 2369 0 discriminator 2
 4928 004e 0023     		movs	r3, #0
 4929 0050 6364     		str	r3, [r4, #68]
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 4930              		.loc 1 2372 0 discriminator 2
 4931 0052 0A9B     		ldr	r3, [sp, #40]
 4932 0054 6362     		str	r3, [r4, #36]
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 4933              		.loc 1 2373 0 discriminator 2
 4934 0056 6585     		strh	r5, [r4, #42]	@ movhi
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 4935              		.loc 1 2374 0 discriminator 2
 4936 0058 314B     		ldr	r3, .L333
 4937 005a E362     		str	r3, [r4, #44]
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_DMA;
 4938              		.loc 1 2375 0 discriminator 2
 4939 005c 314B     		ldr	r3, .L333+4
 4940 005e 6363     		str	r3, [r4, #52]
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 4941              		.loc 1 2377 0 discriminator 2
 4942 0060 638D     		ldrh	r3, [r4, #42]
 4943 0062 9BB2     		uxth	r3, r3
 4944 0064 FF2B     		cmp	r3, #255
 4945 0066 04D9     		bls	.L324
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 4946              		.loc 1 2379 0
 4947 0068 FF23     		movs	r3, #255
 4948 006a 2385     		strh	r3, [r4, #40]	@ movhi
 4949              	.LVL426:
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 4950              		.loc 1 2380 0
 4951 006c 4FF08079 		mov	r9, #16777216
 4952 0070 03E0     		b	.L325
 4953              	.LVL427:
 4954              	.L324:
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 4955              		.loc 1 2384 0
 4956 0072 638D     		ldrh	r3, [r4, #42]
 4957 0074 2385     		strh	r3, [r4, #40]	@ movhi
 4958              	.LVL428:
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_AUTOEND_MODE;
 4959              		.loc 1 2385 0
 4960 0076 4FF00079 		mov	r9, #33554432
 4961              	.LVL429:
 4962              	.L325:
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, I2C_TIMEOUT_FLAG, tickstart)
 4963              		.loc 1 2389 0
 4964 007a 1922     		movs	r2, #25
 4965 007c 0092     		str	r2, [sp]
 4966 007e 0190     		str	r0, [sp, #4]
 4967 0080 2046     		mov	r0, r4
ARM GAS  /tmp/cccVlT9k.s 			page 187


 4968              	.LVL430:
 4969 0082 3146     		mov	r1, r6
 4970 0084 4246     		mov	r2, r8
 4971 0086 3B46     		mov	r3, r7
 4972 0088 FFF7FEFF 		bl	I2C_RequestMemoryRead
 4973              	.LVL431:
 4974 008c 0546     		mov	r5, r0
 4975 008e 60B1     		cbz	r0, .L326
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 4976              		.loc 1 2391 0
 4977 0090 636C     		ldr	r3, [r4, #68]
 4978 0092 042B     		cmp	r3, #4
 4979 0094 04D1     		bne	.L327
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4980              		.loc 1 2394 0
 4981 0096 0023     		movs	r3, #0
 4982 0098 84F84030 		strb	r3, [r4, #64]
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_ERROR;
 4983              		.loc 1 2395 0
 4984 009c 0125     		movs	r5, #1
 4985 009e 3AE0     		b	.L323
 4986              	.L327:
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 4987              		.loc 1 2400 0
 4988 00a0 0023     		movs	r3, #0
 4989 00a2 84F84030 		strb	r3, [r4, #64]
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_TIMEOUT;
 4990              		.loc 1 2401 0
 4991 00a6 0325     		movs	r5, #3
 4992 00a8 35E0     		b	.L323
 4993              	.L326:
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferCpltCallback = I2C_DMAMasterReceiveCplt;
 4994              		.loc 1 2406 0
 4995 00aa E36B     		ldr	r3, [r4, #60]
 4996 00ac 1E4A     		ldr	r2, .L333+8
 4997 00ae 9A62     		str	r2, [r3, #40]
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferErrorCallback = I2C_DMAError;
 4998              		.loc 1 2409 0
 4999 00b0 E36B     		ldr	r3, [r4, #60]
 5000 00b2 1E4A     		ldr	r2, .L333+12
 5001 00b4 1A63     		str	r2, [r3, #48]
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferHalfCpltCallback = NULL;
 5002              		.loc 1 2412 0
 5003 00b6 E36B     		ldr	r3, [r4, #60]
 5004 00b8 0027     		movs	r7, #0
 5005 00ba DF62     		str	r7, [r3, #44]
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = NULL;
 5006              		.loc 1 2413 0
 5007 00bc E36B     		ldr	r3, [r4, #60]
 5008 00be 5F63     		str	r7, [r3, #52]
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_DMA_Start_IT(hi2c->hdmarx, (uint32_t)&hi2c->Instance->RXDR, (uint32_t)pData, hi2c->XferSize
 5009              		.loc 1 2416 0
 5010 00c0 2168     		ldr	r1, [r4]
 5011 00c2 E06B     		ldr	r0, [r4, #60]
 5012 00c4 2431     		adds	r1, r1, #36
 5013 00c6 0A9A     		ldr	r2, [sp, #40]
 5014 00c8 238D     		ldrh	r3, [r4, #40]
ARM GAS  /tmp/cccVlT9k.s 			page 188


 5015 00ca FFF7FEFF 		bl	HAL_DMA_Start_IT
 5016              	.LVL432:
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, I2C_GENERATE_START_READ);
 5017              		.loc 1 2419 0
 5018 00ce 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5019 00d2 4FF41053 		mov	r3, #9216
 5020 00d6 0093     		str	r3, [sp]
 5021 00d8 2046     		mov	r0, r4
 5022 00da 3146     		mov	r1, r6
 5023 00dc 4B46     		mov	r3, r9
 5024 00de FFF7FEFF 		bl	I2C_TransferConfig
 5025              	.LVL433:
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount -= hi2c->XferSize;
 5026              		.loc 1 2422 0
 5027 00e2 628D     		ldrh	r2, [r4, #42]
 5028 00e4 238D     		ldrh	r3, [r4, #40]
 5029 00e6 D31A     		subs	r3, r2, r3
 5030 00e8 9BB2     		uxth	r3, r3
 5031 00ea 6385     		strh	r3, [r4, #42]	@ movhi
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5032              		.loc 1 2425 0
 5033 00ec 84F84070 		strb	r7, [r4, #64]
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 5034              		.loc 1 2428 0
 5035 00f0 2368     		ldr	r3, [r4]
 5036 00f2 1A68     		ldr	r2, [r3]
 5037 00f4 42F40042 		orr	r2, r2, #32768
 5038 00f8 1A60     		str	r2, [r3]
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_ERROR_IT);
 5039              		.loc 1 2434 0
 5040 00fa 2046     		mov	r0, r4
 5041 00fc 1121     		movs	r1, #17
 5042 00fe FFF7FEFF 		bl	I2C_Enable_IRQ
 5043              	.LVL434:
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 5044              		.loc 1 2436 0
 5045 0102 08E0     		b	.L323
 5046              	.LVL435:
 5047              	.L328:
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 5048              		.loc 1 2440 0
 5049 0104 0225     		movs	r5, #2
 5050 0106 06E0     		b	.L323
 5051              	.LVL436:
 5052              	.L329:
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 5053              		.loc 1 2353 0
 5054 0108 0125     		movs	r5, #1
 5055 010a 04E0     		b	.L323
 5056              	.L330:
 5057 010c 0125     		movs	r5, #1
 5058 010e 02E0     		b	.L323
 5059              	.L331:
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 5060              		.loc 1 2358 0
 5061 0110 0225     		movs	r5, #2
 5062 0112 00E0     		b	.L323
ARM GAS  /tmp/cccVlT9k.s 			page 189


 5063              	.L332:
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5064              		.loc 1 2362 0
 5065 0114 0225     		movs	r5, #2
 5066              	.LVL437:
 5067              	.L323:
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5068              		.loc 1 2442 0
 5069 0116 2846     		mov	r0, r5
 5070 0118 03B0     		add	sp, sp, #12
 5071              		@ sp needed
 5072 011a BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5073              	.LVL438:
 5074              	.L334:
 5075 011e 00BF     		.align	2
 5076              	.L333:
 5077 0120 0000FFFF 		.word	-65536
 5078 0124 00000000 		.word	I2C_Master_ISR_DMA
 5079 0128 00000000 		.word	I2C_DMAMasterReceiveCplt
 5080 012c 00000000 		.word	I2C_DMAError
 5081              		.cfi_endproc
 5082              	.LFE144:
 5084              		.section	.text.HAL_I2C_IsDeviceReady,"ax",%progbits
 5085              		.align	2
 5086              		.global	HAL_I2C_IsDeviceReady
 5087              		.thumb
 5088              		.thumb_func
 5090              	HAL_I2C_IsDeviceReady:
 5091              	.LFB145:
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5092              		.loc 1 2456 0
 5093              		.cfi_startproc
 5094              		@ args = 0, pretend = 0, frame = 8
 5095              		@ frame_needed = 0, uses_anonymous_args = 0
 5096              	.LVL439:
 5097 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 5098              	.LCFI47:
 5099              		.cfi_def_cfa_offset 32
 5100              		.cfi_offset 4, -32
 5101              		.cfi_offset 5, -28
 5102              		.cfi_offset 6, -24
 5103              		.cfi_offset 7, -20
 5104              		.cfi_offset 8, -16
 5105              		.cfi_offset 9, -12
 5106              		.cfi_offset 10, -8
 5107              		.cfi_offset 14, -4
 5108 0004 84B0     		sub	sp, sp, #16
 5109              	.LCFI48:
 5110              		.cfi_def_cfa_offset 48
 5111 0006 0446     		mov	r4, r0
 5112 0008 1746     		mov	r7, r2
 5113 000a 1E46     		mov	r6, r3
 5114              	.LVL440:
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __IO uint32_t I2C_Trials = 0U;
 5115              		.loc 1 2459 0
 5116 000c 0023     		movs	r3, #0
 5117              	.LVL441:
ARM GAS  /tmp/cccVlT9k.s 			page 190


 5118 000e 0393     		str	r3, [sp, #12]
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5119              		.loc 1 2461 0
 5120 0010 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 5121 0014 DBB2     		uxtb	r3, r3
 5122 0016 202B     		cmp	r3, #32
 5123 0018 40F08F80 		bne	.L347
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) == SET)
 5124              		.loc 1 2463 0
 5125 001c 0368     		ldr	r3, [r0]
 5126 001e 9B69     		ldr	r3, [r3, #24]
 5127 0020 13F4004F 		tst	r3, #32768
 5128 0024 40F08B80 		bne	.L348
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5129              		.loc 1 2469 0
 5130 0028 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 5131 002c 012B     		cmp	r3, #1
 5132 002e 00F08880 		beq	.L349
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5133              		.loc 1 2469 0 is_stmt 0 discriminator 2
 5134 0032 0123     		movs	r3, #1
 5135 0034 80F84030 		strb	r3, [r0, #64]
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_BUSY;
 5136              		.loc 1 2471 0 is_stmt 1 discriminator 2
 5137 0038 2423     		movs	r3, #36
 5138 003a 80F84130 		strb	r3, [r0, #65]
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5139              		.loc 1 2472 0 discriminator 2
 5140 003e 0023     		movs	r3, #0
 5141 0040 4364     		str	r3, [r0, #68]
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5142              		.loc 1 2477 0 discriminator 2
 5143 0042 C1F3090A 		ubfx	r10, r1, #0, #10
 5144 0046 4AF42059 		orr	r9, r10, #10240
 5145              	.LVL442:
 5146              	.L346:
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5147              		.loc 1 2477 0 is_stmt 0
 5148 004a 2268     		ldr	r2, [r4]
 5149 004c E368     		ldr	r3, [r4, #12]
 5150 004e 012B     		cmp	r3, #1
 5151 0050 04D1     		bne	.L337
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5152              		.loc 1 2477 0 discriminator 1
 5153 0052 4AF00073 		orr	r3, r10, #33554432
 5154 0056 43F40053 		orr	r3, r3, #8192
 5155 005a 01E0     		b	.L338
 5156              	.L337:
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5157              		.loc 1 2477 0 discriminator 2
 5158 005c 1FFA89F3 		uxth	r3, r9
 5159              	.L338:
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->CR2 = I2C_GENERATE_START(hi2c->Init.AddressingMode,DevAddress);
 5160              		.loc 1 2477 0 discriminator 3
 5161 0060 5360     		str	r3, [r2, #4]
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       tickstart = HAL_GetTick();
 5162              		.loc 1 2481 0 is_stmt 1 discriminator 3
ARM GAS  /tmp/cccVlT9k.s 			page 191


 5163 0062 FFF7FEFF 		bl	HAL_GetTick
 5164              	.LVL443:
 5165 0066 8046     		mov	r8, r0
 5166              	.LVL444:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5167              		.loc 1 2482 0 discriminator 3
 5168 0068 11E0     		b	.L354
 5169              	.LVL445:
 5170              	.L343:
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       	if(Timeout != HAL_MAX_DELAY)
 5171              		.loc 1 2484 0
 5172 006a B6F1FF3F 		cmp	r6, #-1
 5173 006e 0ED0     		beq	.L354
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 5174              		.loc 1 2486 0
 5175 0070 2EB1     		cbz	r6, .L341
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           if((Timeout == 0U) || ((HAL_GetTick() - tickstart) > Timeout))
 5176              		.loc 1 2486 0 is_stmt 0 discriminator 1
 5177 0072 FFF7FEFF 		bl	HAL_GetTick
 5178              	.LVL446:
 5179 0076 C8EB0000 		rsb	r0, r8, r0
 5180 007a B042     		cmp	r0, r6
 5181 007c 07D9     		bls	.L354
 5182              	.L341:
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             hi2c->State = HAL_I2C_STATE_READY;
 5183              		.loc 1 2489 0 is_stmt 1
 5184 007e 2023     		movs	r3, #32
 5185 0080 84F84130 		strb	r3, [r4, #65]
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             __HAL_UNLOCK(hi2c);
 5186              		.loc 1 2491 0
 5187 0084 0023     		movs	r3, #0
 5188 0086 84F84030 		strb	r3, [r4, #64]
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****             return HAL_TIMEOUT;
 5189              		.loc 1 2492 0
 5190 008a 0323     		movs	r3, #3
 5191 008c 60E0     		b	.L336
 5192              	.L354:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5193              		.loc 1 2482 0 discriminator 1
 5194 008e 2168     		ldr	r1, [r4]
 5195 0090 8D69     		ldr	r5, [r1, #24]
 5196 0092 15F0200F 		tst	r5, #32
 5197 0096 08D1     		bne	.L342
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5198              		.loc 1 2482 0 is_stmt 0 discriminator 2
 5199 0098 8B69     		ldr	r3, [r1, #24]
 5200 009a 13F0100F 		tst	r3, #16
 5201 009e 04D1     		bne	.L342
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       while((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (__HAL_I2C_GET_FLAG(hi2c, I2C_FL
 5202              		.loc 1 2482 0 discriminator 1
 5203 00a0 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 5204 00a4 DBB2     		uxtb	r3, r3
 5205 00a6 A02B     		cmp	r3, #160
 5206 00a8 DFD1     		bne	.L343
 5207              	.L342:
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == RESET)
 5208              		.loc 1 2498 0 is_stmt 1
ARM GAS  /tmp/cccVlT9k.s 			page 192


 5209 00aa 8B69     		ldr	r3, [r1, #24]
 5210 00ac 13F0100F 		tst	r3, #16
 5211 00b0 13D1     		bne	.L344
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5212              		.loc 1 2501 0
 5213 00b2 CDF80080 		str	r8, [sp]
 5214 00b6 2046     		mov	r0, r4
 5215 00b8 2021     		movs	r1, #32
 5216 00ba 0022     		movs	r2, #0
 5217 00bc 3346     		mov	r3, r6
 5218 00be FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5219              	.LVL447:
 5220 00c2 0346     		mov	r3, r0
 5221 00c4 0028     		cmp	r0, #0
 5222 00c6 3ED1     		bne	.L350
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5223              		.loc 1 2507 0
 5224 00c8 2168     		ldr	r1, [r4]
 5225 00ca 2022     		movs	r2, #32
 5226 00cc CA61     		str	r2, [r1, #28]
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->State = HAL_I2C_STATE_READY;
 5227              		.loc 1 2510 0
 5228 00ce 84F84120 		strb	r2, [r4, #65]
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 5229              		.loc 1 2513 0
 5230 00d2 0022     		movs	r2, #0
 5231 00d4 84F84020 		strb	r2, [r4, #64]
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         return HAL_OK;
 5232              		.loc 1 2515 0
 5233 00d8 3AE0     		b	.L336
 5234              	.L344:
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5235              		.loc 1 2520 0
 5236 00da CDF80080 		str	r8, [sp]
 5237 00de 2046     		mov	r0, r4
 5238 00e0 2021     		movs	r1, #32
 5239 00e2 0022     		movs	r2, #0
 5240 00e4 3346     		mov	r3, r6
 5241 00e6 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5242              	.LVL448:
 5243 00ea 70BB     		cbnz	r0, .L351
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 5244              		.loc 1 2526 0
 5245 00ec 2368     		ldr	r3, [r4]
 5246 00ee 1022     		movs	r2, #16
 5247 00f0 DA61     		str	r2, [r3, #28]
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5248              		.loc 1 2529 0
 5249 00f2 2368     		ldr	r3, [r4]
 5250 00f4 2022     		movs	r2, #32
 5251 00f6 DA61     		str	r2, [r3, #28]
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if (I2C_Trials++ == Trials)
 5252              		.loc 1 2533 0
 5253 00f8 039B     		ldr	r3, [sp, #12]
 5254 00fa 5A1C     		adds	r2, r3, #1
 5255 00fc 0392     		str	r2, [sp, #12]
 5256 00fe BB42     		cmp	r3, r7
ARM GAS  /tmp/cccVlT9k.s 			page 193


 5257 0100 10D1     		bne	.L345
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR2 |= I2C_CR2_STOP;
 5258              		.loc 1 2536 0
 5259 0102 2368     		ldr	r3, [r4]
 5260 0104 5A68     		ldr	r2, [r3, #4]
 5261 0106 42F48042 		orr	r2, r2, #16384
 5262 010a 5A60     		str	r2, [r3, #4]
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_STOPF, RESET, Timeout, tickstart) != HAL_OK)
 5263              		.loc 1 2539 0
 5264 010c CDF80080 		str	r8, [sp]
 5265 0110 2046     		mov	r0, r4
 5266 0112 2021     		movs	r1, #32
 5267 0114 0022     		movs	r2, #0
 5268 0116 3346     		mov	r3, r6
 5269 0118 FFF7FEFF 		bl	I2C_WaitOnFlagUntilTimeout
 5270              	.LVL449:
 5271 011c B8B9     		cbnz	r0, .L352
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 5272              		.loc 1 2545 0
 5273 011e 2368     		ldr	r3, [r4]
 5274 0120 2022     		movs	r2, #32
 5275 0122 DA61     		str	r2, [r3, #28]
 5276              	.L345:
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     }while(I2C_Trials < Trials);
 5277              		.loc 1 2547 0
 5278 0124 039B     		ldr	r3, [sp, #12]
 5279 0126 BB42     		cmp	r3, r7
 5280 0128 8FD3     		bcc	.L346
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 5281              		.loc 1 2549 0
 5282 012a 2023     		movs	r3, #32
 5283 012c 84F84130 		strb	r3, [r4, #65]
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5284              		.loc 1 2552 0
 5285 0130 0023     		movs	r3, #0
 5286 0132 84F84030 		strb	r3, [r4, #64]
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_TIMEOUT;
 5287              		.loc 1 2554 0
 5288 0136 0323     		movs	r3, #3
 5289 0138 0AE0     		b	.L336
 5290              	.LVL450:
 5291              	.L347:
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 5292              		.loc 1 2558 0
 5293 013a 0223     		movs	r3, #2
 5294 013c 08E0     		b	.L336
 5295              	.L348:
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return HAL_BUSY;
 5296              		.loc 1 2465 0
 5297 013e 0223     		movs	r3, #2
 5298 0140 06E0     		b	.L336
 5299              	.L349:
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5300              		.loc 1 2469 0
 5301 0142 0223     		movs	r3, #2
 5302 0144 04E0     		b	.L336
 5303              	.LVL451:
ARM GAS  /tmp/cccVlT9k.s 			page 194


 5304              	.L350:
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5305              		.loc 1 2503 0
 5306 0146 0323     		movs	r3, #3
 5307 0148 02E0     		b	.L336
 5308              	.L351:
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5309              		.loc 1 2522 0
 5310 014a 0323     		movs	r3, #3
 5311 014c 00E0     		b	.L336
 5312              	.L352:
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           return HAL_TIMEOUT;
 5313              		.loc 1 2541 0
 5314 014e 0323     		movs	r3, #3
 5315              	.LVL452:
 5316              	.L336:
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5317              		.loc 1 2560 0
 5318 0150 1846     		mov	r0, r3
 5319 0152 04B0     		add	sp, sp, #16
 5320              		@ sp needed
 5321 0154 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 5322              		.cfi_endproc
 5323              	.LFE145:
 5325              		.section	.text.HAL_I2C_Master_Sequential_Transmit_IT,"ax",%progbits
 5326              		.align	2
 5327              		.global	HAL_I2C_Master_Sequential_Transmit_IT
 5328              		.thumb
 5329              		.thumb_func
 5331              	HAL_I2C_Master_Sequential_Transmit_IT:
 5332              	.LFB146:
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5333              		.loc 1 2575 0
 5334              		.cfi_startproc
 5335              		@ args = 4, pretend = 0, frame = 0
 5336              		@ frame_needed = 0, uses_anonymous_args = 0
 5337              	.LVL453:
 5338 0000 30B5     		push	{r4, r5, lr}
 5339              	.LCFI49:
 5340              		.cfi_def_cfa_offset 12
 5341              		.cfi_offset 4, -12
 5342              		.cfi_offset 5, -8
 5343              		.cfi_offset 14, -4
 5344 0002 83B0     		sub	sp, sp, #12
 5345              	.LCFI50:
 5346              		.cfi_def_cfa_offset 24
 5347 0004 0446     		mov	r4, r0
 5348              	.LVL454:
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5349              		.loc 1 2582 0
 5350 0006 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 5351              	.LVL455:
 5352 000a C0B2     		uxtb	r0, r0
 5353 000c 2028     		cmp	r0, #32
 5354 000e 36D1     		bne	.L360
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5355              		.loc 1 2585 0
ARM GAS  /tmp/cccVlT9k.s 			page 195


 5356 0010 94F84000 		ldrb	r0, [r4, #64]	@ zero_extendqisi2
 5357 0014 0128     		cmp	r0, #1
 5358 0016 34D0     		beq	.L361
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5359              		.loc 1 2585 0 is_stmt 0 discriminator 2
 5360 0018 0120     		movs	r0, #1
 5361 001a 84F84000 		strb	r0, [r4, #64]
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 5362              		.loc 1 2587 0 is_stmt 1 discriminator 2
 5363 001e 2120     		movs	r0, #33
 5364 0020 84F84100 		strb	r0, [r4, #65]
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5365              		.loc 1 2588 0 discriminator 2
 5366 0024 1020     		movs	r0, #16
 5367 0026 84F84200 		strb	r0, [r4, #66]
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5368              		.loc 1 2589 0 discriminator 2
 5369 002a 0020     		movs	r0, #0
 5370 002c 6064     		str	r0, [r4, #68]
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5371              		.loc 1 2592 0 discriminator 2
 5372 002e 6262     		str	r2, [r4, #36]
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5373              		.loc 1 2593 0 discriminator 2
 5374 0030 6385     		strh	r3, [r4, #42]	@ movhi
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5375              		.loc 1 2594 0 discriminator 2
 5376 0032 069B     		ldr	r3, [sp, #24]
 5377              	.LVL456:
 5378 0034 E362     		str	r3, [r4, #44]
 5379              	.LVL457:
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5380              		.loc 1 2595 0 discriminator 2
 5381 0036 144B     		ldr	r3, .L363
 5382 0038 6363     		str	r3, [r4, #52]
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 5383              		.loc 1 2598 0 discriminator 2
 5384 003a 638D     		ldrh	r3, [r4, #42]
 5385 003c 9BB2     		uxth	r3, r3
 5386 003e FF2B     		cmp	r3, #255
 5387 0040 04D9     		bls	.L357
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5388              		.loc 1 2600 0
 5389 0042 FF23     		movs	r3, #255
 5390 0044 2385     		strh	r3, [r4, #40]	@ movhi
 5391              	.LVL458:
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5392              		.loc 1 2601 0
 5393 0046 4FF08073 		mov	r3, #16777216
 5394 004a 02E0     		b	.L358
 5395              	.LVL459:
 5396              	.L357:
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5397              		.loc 1 2605 0
 5398 004c 638D     		ldrh	r3, [r4, #42]
 5399 004e 2385     		strh	r3, [r4, #40]	@ movhi
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
ARM GAS  /tmp/cccVlT9k.s 			page 196


 5400              		.loc 1 2606 0
 5401 0050 E36A     		ldr	r3, [r4, #44]
 5402              	.LVL460:
 5403              	.L358:
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 5404              		.loc 1 2611 0
 5405 0052 226B     		ldr	r2, [r4, #48]
 5406              	.LVL461:
 5407 0054 112A     		cmp	r2, #17
 5408 0056 02D0     		beq	.L362
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_WRITE;
 5409              		.loc 1 2577 0
 5410 0058 4FF40050 		mov	r0, #8192
 5411 005c 00E0     		b	.L359
 5412              	.L362:
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
 5413              		.loc 1 2613 0
 5414 005e 0020     		movs	r0, #0
 5415              	.L359:
 5416              	.LVL462:
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, hi2c->XferSize, xfermode, xferrequest);
 5417              		.loc 1 2617 0
 5418 0060 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5419 0064 0090     		str	r0, [sp]
 5420              	.LVL463:
 5421 0066 2046     		mov	r0, r4
 5422              	.LVL464:
 5423 0068 FFF7FEFF 		bl	I2C_TransferConfig
 5424              	.LVL465:
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5425              		.loc 1 2620 0
 5426 006c 0025     		movs	r5, #0
 5427 006e 84F84050 		strb	r5, [r4, #64]
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT);
 5428              		.loc 1 2625 0
 5429 0072 2046     		mov	r0, r4
 5430 0074 0121     		movs	r1, #1
 5431 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 5432              	.LVL466:
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 5433              		.loc 1 2627 0
 5434 007a 2846     		mov	r0, r5
 5435 007c 02E0     		b	.L356
 5436              	.LVL467:
 5437              	.L360:
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 5438              		.loc 1 2631 0
 5439 007e 0220     		movs	r0, #2
 5440 0080 00E0     		b	.L356
 5441              	.L361:
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5442              		.loc 1 2585 0
 5443 0082 0220     		movs	r0, #2
 5444              	.LVL468:
 5445              	.L356:
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5446              		.loc 1 2633 0
ARM GAS  /tmp/cccVlT9k.s 			page 197


 5447 0084 03B0     		add	sp, sp, #12
 5448              		@ sp needed
 5449 0086 30BD     		pop	{r4, r5, pc}
 5450              	.LVL469:
 5451              	.L364:
 5452              		.align	2
 5453              	.L363:
 5454 0088 00000000 		.word	I2C_Master_ISR_IT
 5455              		.cfi_endproc
 5456              	.LFE146:
 5458              		.section	.text.HAL_I2C_Master_Sequential_Receive_IT,"ax",%progbits
 5459              		.align	2
 5460              		.global	HAL_I2C_Master_Sequential_Receive_IT
 5461              		.thumb
 5462              		.thumb_func
 5464              	HAL_I2C_Master_Sequential_Receive_IT:
 5465              	.LFB147:
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5466              		.loc 1 2648 0
 5467              		.cfi_startproc
 5468              		@ args = 4, pretend = 0, frame = 0
 5469              		@ frame_needed = 0, uses_anonymous_args = 0
 5470              	.LVL470:
 5471 0000 30B5     		push	{r4, r5, lr}
 5472              	.LCFI51:
 5473              		.cfi_def_cfa_offset 12
 5474              		.cfi_offset 4, -12
 5475              		.cfi_offset 5, -8
 5476              		.cfi_offset 14, -4
 5477 0002 83B0     		sub	sp, sp, #12
 5478              	.LCFI52:
 5479              		.cfi_def_cfa_offset 24
 5480 0004 0446     		mov	r4, r0
 5481              	.LVL471:
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5482              		.loc 1 2655 0
 5483 0006 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 5484              	.LVL472:
 5485 000a C0B2     		uxtb	r0, r0
 5486 000c 2028     		cmp	r0, #32
 5487 000e 36D1     		bne	.L370
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5488              		.loc 1 2658 0
 5489 0010 94F84000 		ldrb	r0, [r4, #64]	@ zero_extendqisi2
 5490 0014 0128     		cmp	r0, #1
 5491 0016 34D0     		beq	.L371
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5492              		.loc 1 2658 0 is_stmt 0 discriminator 2
 5493 0018 0120     		movs	r0, #1
 5494 001a 84F84000 		strb	r0, [r4, #64]
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 5495              		.loc 1 2660 0 is_stmt 1 discriminator 2
 5496 001e 2220     		movs	r0, #34
 5497 0020 84F84100 		strb	r0, [r4, #65]
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_MASTER;
 5498              		.loc 1 2661 0 discriminator 2
 5499 0024 1020     		movs	r0, #16
ARM GAS  /tmp/cccVlT9k.s 			page 198


 5500 0026 84F84200 		strb	r0, [r4, #66]
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5501              		.loc 1 2662 0 discriminator 2
 5502 002a 0020     		movs	r0, #0
 5503 002c 6064     		str	r0, [r4, #68]
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5504              		.loc 1 2665 0 discriminator 2
 5505 002e 6262     		str	r2, [r4, #36]
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5506              		.loc 1 2666 0 discriminator 2
 5507 0030 6385     		strh	r3, [r4, #42]	@ movhi
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5508              		.loc 1 2667 0 discriminator 2
 5509 0032 069B     		ldr	r3, [sp, #24]
 5510              	.LVL473:
 5511 0034 E362     		str	r3, [r4, #44]
 5512              	.LVL474:
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Master_ISR_IT;
 5513              		.loc 1 2668 0 discriminator 2
 5514 0036 144B     		ldr	r3, .L373
 5515 0038 6363     		str	r3, [r4, #52]
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > MAX_NBYTE_SIZE)
 5516              		.loc 1 2671 0 discriminator 2
 5517 003a 638D     		ldrh	r3, [r4, #42]
 5518 003c 9BB2     		uxth	r3, r3
 5519 003e FF2B     		cmp	r3, #255
 5520 0040 04D9     		bls	.L367
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = MAX_NBYTE_SIZE;
 5521              		.loc 1 2673 0
 5522 0042 FF23     		movs	r3, #255
 5523 0044 2385     		strh	r3, [r4, #40]	@ movhi
 5524              	.LVL475:
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = I2C_RELOAD_MODE;
 5525              		.loc 1 2674 0
 5526 0046 4FF08073 		mov	r3, #16777216
 5527 004a 02E0     		b	.L368
 5528              	.LVL476:
 5529              	.L367:
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize = hi2c->XferCount;
 5530              		.loc 1 2678 0
 5531 004c 638D     		ldrh	r3, [r4, #42]
 5532 004e 2385     		strh	r3, [r4, #40]	@ movhi
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xfermode = hi2c->XferOptions;
 5533              		.loc 1 2679 0
 5534 0050 E36A     		ldr	r3, [r4, #44]
 5535              	.LVL477:
 5536              	.L368:
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 5537              		.loc 1 2684 0
 5538 0052 226B     		ldr	r2, [r4, #48]
 5539              	.LVL478:
 5540 0054 122A     		cmp	r2, #18
 5541 0056 02D0     		beq	.L372
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t xferrequest = I2C_GENERATE_START_READ;
 5542              		.loc 1 2650 0
 5543 0058 4FF41050 		mov	r0, #9216
 5544 005c 00E0     		b	.L369
ARM GAS  /tmp/cccVlT9k.s 			page 199


 5545              	.L372:
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       xferrequest = I2C_NO_STARTSTOP;
 5546              		.loc 1 2686 0
 5547 005e 0020     		movs	r0, #0
 5548              	.L369:
 5549              	.LVL479:
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c,DevAddress, hi2c->XferSize, xfermode, xferrequest);
 5550              		.loc 1 2690 0
 5551 0060 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 5552 0064 0090     		str	r0, [sp]
 5553              	.LVL480:
 5554 0066 2046     		mov	r0, r4
 5555              	.LVL481:
 5556 0068 FFF7FEFF 		bl	I2C_TransferConfig
 5557              	.LVL482:
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5558              		.loc 1 2693 0
 5559 006c 0025     		movs	r5, #0
 5560 006e 84F84050 		strb	r5, [r4, #64]
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT);
 5561              		.loc 1 2698 0
 5562 0072 2046     		mov	r0, r4
 5563 0074 0221     		movs	r1, #2
 5564 0076 FFF7FEFF 		bl	I2C_Enable_IRQ
 5565              	.LVL483:
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 5566              		.loc 1 2700 0
 5567 007a 2846     		mov	r0, r5
 5568 007c 02E0     		b	.L366
 5569              	.LVL484:
 5570              	.L370:
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 5571              		.loc 1 2704 0
 5572 007e 0220     		movs	r0, #2
 5573 0080 00E0     		b	.L366
 5574              	.L371:
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5575              		.loc 1 2658 0
 5576 0082 0220     		movs	r0, #2
 5577              	.LVL485:
 5578              	.L366:
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5579              		.loc 1 2706 0
 5580 0084 03B0     		add	sp, sp, #12
 5581              		@ sp needed
 5582 0086 30BD     		pop	{r4, r5, pc}
 5583              	.LVL486:
 5584              	.L374:
 5585              		.align	2
 5586              	.L373:
 5587 0088 00000000 		.word	I2C_Master_ISR_IT
 5588              		.cfi_endproc
 5589              	.LFE147:
 5591              		.section	.text.HAL_I2C_Slave_Sequential_Transmit_IT,"ax",%progbits
 5592              		.align	2
 5593              		.global	HAL_I2C_Slave_Sequential_Transmit_IT
 5594              		.thumb
ARM GAS  /tmp/cccVlT9k.s 			page 200


 5595              		.thumb_func
 5597              	HAL_I2C_Slave_Sequential_Transmit_IT:
 5598              	.LFB148:
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5599              		.loc 1 2719 0
 5600              		.cfi_startproc
 5601              		@ args = 0, pretend = 0, frame = 0
 5602              		@ frame_needed = 0, uses_anonymous_args = 0
 5603              	.LVL487:
 5604 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5605              	.LCFI53:
 5606              		.cfi_def_cfa_offset 24
 5607              		.cfi_offset 3, -24
 5608              		.cfi_offset 4, -20
 5609              		.cfi_offset 5, -16
 5610              		.cfi_offset 6, -12
 5611              		.cfi_offset 7, -8
 5612              		.cfi_offset 14, -4
 5613 0002 0446     		mov	r4, r0
 5614 0004 0D46     		mov	r5, r1
 5615 0006 1646     		mov	r6, r2
 5616 0008 1F46     		mov	r7, r3
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 5617              		.loc 1 2723 0
 5618 000a 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 5619              	.LVL488:
 5620 000e 00F02800 		and	r0, r0, #40
 5621 0012 2828     		cmp	r0, #40
 5622 0014 3BD1     		bne	.L379
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5623              		.loc 1 2725 0
 5624 0016 0029     		cmp	r1, #0
 5625 0018 3BD0     		beq	.L380
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5626              		.loc 1 2725 0 is_stmt 0 discriminator 1
 5627 001a 002A     		cmp	r2, #0
 5628 001c 3BD0     		beq	.L381
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT);
 5629              		.loc 1 2731 0 is_stmt 1
 5630 001e 2046     		mov	r0, r4
 5631 0020 0521     		movs	r1, #5
 5632              	.LVL489:
 5633 0022 FFF7FEFF 		bl	I2C_Disable_IRQ
 5634              	.LVL490:
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5635              		.loc 1 2734 0
 5636 0026 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 5637 002a 012B     		cmp	r3, #1
 5638 002c 35D0     		beq	.L382
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5639              		.loc 1 2734 0 is_stmt 0 discriminator 2
 5640 002e 0123     		movs	r3, #1
 5641 0030 84F84030 		strb	r3, [r4, #64]
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
 5642              		.loc 1 2738 0 is_stmt 1 discriminator 2
 5643 0034 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 5644 0038 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cccVlT9k.s 			page 201


 5645 003a 2A2B     		cmp	r3, #42
 5646 003c 03D1     		bne	.L377
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 5647              		.loc 1 2741 0
 5648 003e 2046     		mov	r0, r4
 5649 0040 0221     		movs	r1, #2
 5650 0042 FFF7FEFF 		bl	I2C_Disable_IRQ
 5651              	.LVL491:
 5652              	.L377:
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_TX_LISTEN;
 5653              		.loc 1 2744 0
 5654 0046 2923     		movs	r3, #41
 5655 0048 84F84130 		strb	r3, [r4, #65]
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 5656              		.loc 1 2745 0
 5657 004c 2023     		movs	r3, #32
 5658 004e 84F84230 		strb	r3, [r4, #66]
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5659              		.loc 1 2746 0
 5660 0052 0023     		movs	r3, #0
 5661 0054 6364     		str	r3, [r4, #68]
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 5662              		.loc 1 2749 0
 5663 0056 2368     		ldr	r3, [r4]
 5664 0058 5A68     		ldr	r2, [r3, #4]
 5665 005a 22F40042 		bic	r2, r2, #32768
 5666 005e 5A60     		str	r2, [r3, #4]
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5667              		.loc 1 2752 0
 5668 0060 6562     		str	r5, [r4, #36]
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5669              		.loc 1 2753 0
 5670 0062 6685     		strh	r6, [r4, #42]	@ movhi
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 5671              		.loc 1 2754 0
 5672 0064 638D     		ldrh	r3, [r4, #42]
 5673 0066 2385     		strh	r3, [r4, #40]	@ movhi
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5674              		.loc 1 2755 0
 5675 0068 E762     		str	r7, [r4, #44]
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 5676              		.loc 1 2756 0
 5677 006a 0D4B     		ldr	r3, .L383
 5678 006c 6363     		str	r3, [r4, #52]
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_RECEIVE)
 5679              		.loc 1 2758 0
 5680 006e 2368     		ldr	r3, [r4]
 5681 0070 9A69     		ldr	r2, [r3, #24]
 5682 0072 12F4803F 		tst	r2, #65536
 5683 0076 01D0     		beq	.L378
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 5684              		.loc 1 2762 0
 5685 0078 0822     		movs	r2, #8
 5686 007a DA61     		str	r2, [r3, #28]
 5687              	.L378:
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5688              		.loc 1 2766 0
ARM GAS  /tmp/cccVlT9k.s 			page 202


 5689 007c 0025     		movs	r5, #0
 5690              	.LVL492:
 5691 007e 84F84050 		strb	r5, [r4, #64]
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_TX_IT | I2C_XFER_LISTEN_IT);
 5692              		.loc 1 2772 0
 5693 0082 2046     		mov	r0, r4
 5694 0084 0521     		movs	r1, #5
 5695 0086 FFF7FEFF 		bl	I2C_Enable_IRQ
 5696              	.LVL493:
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 5697              		.loc 1 2774 0
 5698 008a 2846     		mov	r0, r5
 5699 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5700              	.LVL494:
 5701              	.L379:
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 5702              		.loc 1 2778 0
 5703 008e 0120     		movs	r0, #1
 5704 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5705              	.LVL495:
 5706              	.L380:
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 5707              		.loc 1 2727 0
 5708 0092 0120     		movs	r0, #1
 5709 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5710              	.LVL496:
 5711              	.L381:
 5712 0096 0120     		movs	r0, #1
 5713 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5714              	.LVL497:
 5715              	.L382:
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5716              		.loc 1 2734 0
 5717 009a 0220     		movs	r0, #2
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5718              		.loc 1 2780 0
 5719 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5720              	.LVL498:
 5721              	.L384:
 5722 009e 00BF     		.align	2
 5723              	.L383:
 5724 00a0 00000000 		.word	I2C_Slave_ISR_IT
 5725              		.cfi_endproc
 5726              	.LFE148:
 5728              		.section	.text.HAL_I2C_Slave_Sequential_Receive_IT,"ax",%progbits
 5729              		.align	2
 5730              		.global	HAL_I2C_Slave_Sequential_Receive_IT
 5731              		.thumb
 5732              		.thumb_func
 5734              	HAL_I2C_Slave_Sequential_Receive_IT:
 5735              	.LFB149:
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5736              		.loc 1 2793 0
 5737              		.cfi_startproc
 5738              		@ args = 0, pretend = 0, frame = 0
 5739              		@ frame_needed = 0, uses_anonymous_args = 0
 5740              	.LVL499:
ARM GAS  /tmp/cccVlT9k.s 			page 203


 5741 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5742              	.LCFI54:
 5743              		.cfi_def_cfa_offset 24
 5744              		.cfi_offset 3, -24
 5745              		.cfi_offset 4, -20
 5746              		.cfi_offset 5, -16
 5747              		.cfi_offset 6, -12
 5748              		.cfi_offset 7, -8
 5749              		.cfi_offset 14, -4
 5750 0002 0446     		mov	r4, r0
 5751 0004 0D46     		mov	r5, r1
 5752 0006 1646     		mov	r6, r2
 5753 0008 1F46     		mov	r7, r3
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 5754              		.loc 1 2797 0
 5755 000a 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 5756              	.LVL500:
 5757 000e 00F02800 		and	r0, r0, #40
 5758 0012 2828     		cmp	r0, #40
 5759 0014 3BD1     		bne	.L389
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5760              		.loc 1 2799 0
 5761 0016 0029     		cmp	r1, #0
 5762 0018 3BD0     		beq	.L390
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((pData == NULL) || (Size == 0U))
 5763              		.loc 1 2799 0 is_stmt 0 discriminator 1
 5764 001a 002A     		cmp	r2, #0
 5765 001c 3BD0     		beq	.L391
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT);
 5766              		.loc 1 2805 0 is_stmt 1
 5767 001e 2046     		mov	r0, r4
 5768 0020 0621     		movs	r1, #6
 5769              	.LVL501:
 5770 0022 FFF7FEFF 		bl	I2C_Disable_IRQ
 5771              	.LVL502:
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5772              		.loc 1 2808 0
 5773 0026 94F84030 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 5774 002a 012B     		cmp	r3, #1
 5775 002c 35D0     		beq	.L392
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5776              		.loc 1 2808 0 is_stmt 0 discriminator 2
 5777 002e 0123     		movs	r3, #1
 5778 0030 84F84030 		strb	r3, [r4, #64]
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
 5779              		.loc 1 2812 0 is_stmt 1 discriminator 2
 5780 0034 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 5781 0038 DBB2     		uxtb	r3, r3
 5782 003a 292B     		cmp	r3, #41
 5783 003c 03D1     		bne	.L387
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 5784              		.loc 1 2815 0
 5785 003e 2046     		mov	r0, r4
 5786 0040 0121     		movs	r1, #1
 5787 0042 FFF7FEFF 		bl	I2C_Disable_IRQ
 5788              	.LVL503:
 5789              	.L387:
ARM GAS  /tmp/cccVlT9k.s 			page 204


2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State     = HAL_I2C_STATE_BUSY_RX_LISTEN;
 5790              		.loc 1 2818 0
 5791 0046 2A23     		movs	r3, #42
 5792 0048 84F84130 		strb	r3, [r4, #65]
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode      = HAL_I2C_MODE_SLAVE;
 5793              		.loc 1 2819 0
 5794 004c 2023     		movs	r3, #32
 5795 004e 84F84230 		strb	r3, [r4, #66]
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 5796              		.loc 1 2820 0
 5797 0052 0023     		movs	r3, #0
 5798 0054 6364     		str	r3, [r4, #68]
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR2 &= ~I2C_CR2_NACK;
 5799              		.loc 1 2823 0
 5800 0056 2368     		ldr	r3, [r4]
 5801 0058 5A68     		ldr	r2, [r3, #4]
 5802 005a 22F40042 		bic	r2, r2, #32768
 5803 005e 5A60     		str	r2, [r3, #4]
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->pBuffPtr    = pData;
 5804              		.loc 1 2826 0
 5805 0060 6562     		str	r5, [r4, #36]
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount   = Size;
 5806              		.loc 1 2827 0
 5807 0062 6685     		strh	r6, [r4, #42]	@ movhi
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize    = hi2c->XferCount;
 5808              		.loc 1 2828 0
 5809 0064 638D     		ldrh	r3, [r4, #42]
 5810 0066 2385     		strh	r3, [r4, #40]	@ movhi
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = XferOptions;
 5811              		.loc 1 2829 0
 5812 0068 E762     		str	r7, [r4, #44]
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR     = I2C_Slave_ISR_IT;
 5813              		.loc 1 2830 0
 5814 006a 0D4B     		ldr	r3, .L393
 5815 006c 6363     		str	r3, [r4, #52]
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DIR(hi2c) == I2C_DIRECTION_TRANSMIT)
 5816              		.loc 1 2832 0
 5817 006e 2368     		ldr	r3, [r4]
 5818 0070 9A69     		ldr	r2, [r3, #24]
 5819 0072 12F4803F 		tst	r2, #65536
 5820 0076 01D1     		bne	.L388
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 5821              		.loc 1 2836 0
 5822 0078 0822     		movs	r2, #8
 5823 007a DA61     		str	r2, [r3, #28]
 5824              	.L388:
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 5825              		.loc 1 2840 0
 5826 007c 0025     		movs	r5, #0
 5827              	.LVL504:
 5828 007e 84F84050 		strb	r5, [r4, #64]
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_LISTEN_IT);
 5829              		.loc 1 2846 0
 5830 0082 2046     		mov	r0, r4
 5831 0084 0621     		movs	r1, #6
 5832 0086 FFF7FEFF 		bl	I2C_Enable_IRQ
 5833              	.LVL505:
ARM GAS  /tmp/cccVlT9k.s 			page 205


2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 5834              		.loc 1 2848 0
 5835 008a 2846     		mov	r0, r5
 5836 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5837              	.LVL506:
 5838              	.L389:
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 5839              		.loc 1 2852 0
 5840 008e 0120     		movs	r0, #1
 5841 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5842              	.LVL507:
 5843              	.L390:
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       return  HAL_ERROR;
 5844              		.loc 1 2801 0
 5845 0092 0120     		movs	r0, #1
 5846 0094 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5847              	.LVL508:
 5848              	.L391:
 5849 0096 0120     		movs	r0, #1
 5850 0098 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5851              	.LVL509:
 5852              	.L392:
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 5853              		.loc 1 2808 0
 5854 009a 0220     		movs	r0, #2
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5855              		.loc 1 2854 0
 5856 009c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5857              	.LVL510:
 5858              	.L394:
 5859 009e 00BF     		.align	2
 5860              	.L393:
 5861 00a0 00000000 		.word	I2C_Slave_ISR_IT
 5862              		.cfi_endproc
 5863              	.LFE149:
 5865              		.section	.text.HAL_I2C_EnableListen_IT,"ax",%progbits
 5866              		.align	2
 5867              		.global	HAL_I2C_EnableListen_IT
 5868              		.thumb
 5869              		.thumb_func
 5871              	HAL_I2C_EnableListen_IT:
 5872              	.LFB150:
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5873              		.loc 1 2863 0
 5874              		.cfi_startproc
 5875              		@ args = 0, pretend = 0, frame = 0
 5876              		@ frame_needed = 0, uses_anonymous_args = 0
 5877              	.LVL511:
 5878 0000 08B5     		push	{r3, lr}
 5879              	.LCFI55:
 5880              		.cfi_def_cfa_offset 8
 5881              		.cfi_offset 3, -8
 5882              		.cfi_offset 14, -4
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_READY)
 5883              		.loc 1 2864 0
 5884 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 5885 0006 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/cccVlT9k.s 			page 206


 5886 0008 202B     		cmp	r3, #32
 5887 000a 09D1     		bne	.L397
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_LISTEN;
 5888              		.loc 1 2866 0
 5889 000c 2823     		movs	r3, #40
 5890 000e 80F84130 		strb	r3, [r0, #65]
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR = I2C_Slave_ISR_IT;
 5891              		.loc 1 2867 0
 5892 0012 044B     		ldr	r3, .L398
 5893 0014 4363     		str	r3, [r0, #52]
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 5894              		.loc 1 2870 0
 5895 0016 0421     		movs	r1, #4
 5896 0018 FFF7FEFF 		bl	I2C_Enable_IRQ
 5897              	.LVL512:
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 5898              		.loc 1 2872 0
 5899 001c 0020     		movs	r0, #0
 5900 001e 08BD     		pop	{r3, pc}
 5901              	.LVL513:
 5902              	.L397:
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 5903              		.loc 1 2876 0
 5904 0020 0220     		movs	r0, #2
 5905              	.LVL514:
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5906              		.loc 1 2878 0
 5907 0022 08BD     		pop	{r3, pc}
 5908              	.L399:
 5909              		.align	2
 5910              	.L398:
 5911 0024 00000000 		.word	I2C_Slave_ISR_IT
 5912              		.cfi_endproc
 5913              	.LFE150:
 5915              		.section	.text.HAL_I2C_DisableListen_IT,"ax",%progbits
 5916              		.align	2
 5917              		.global	HAL_I2C_DisableListen_IT
 5918              		.thumb
 5919              		.thumb_func
 5921              	HAL_I2C_DisableListen_IT:
 5922              	.LFB151:
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5923              		.loc 1 2887 0
 5924              		.cfi_startproc
 5925              		@ args = 0, pretend = 0, frame = 0
 5926              		@ frame_needed = 0, uses_anonymous_args = 0
 5927              	.LVL515:
 5928 0000 10B5     		push	{r4, lr}
 5929              	.LCFI56:
 5930              		.cfi_def_cfa_offset 8
 5931              		.cfi_offset 4, -8
 5932              		.cfi_offset 14, -4
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_LISTEN)
 5933              		.loc 1 2892 0
 5934 0002 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 5935 0006 DBB2     		uxtb	r3, r3
 5936 0008 282B     		cmp	r3, #40
ARM GAS  /tmp/cccVlT9k.s 			page 207


 5937 000a 13D1     		bne	.L402
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     tmp = (uint32_t)(hi2c->State) & I2C_STATE_MSK;
 5938              		.loc 1 2894 0
 5939 000c 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 5940 0010 03F00303 		and	r3, r3, #3
 5941              	.LVL516:
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = tmp | (uint32_t)(hi2c->Mode);
 5942              		.loc 1 2895 0
 5943 0014 90F84220 		ldrb	r2, [r0, #66]	@ zero_extendqisi2
 5944 0018 1343     		orrs	r3, r3, r2
 5945              	.LVL517:
 5946 001a 0363     		str	r3, [r0, #48]
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 5947              		.loc 1 2896 0
 5948 001c 2023     		movs	r3, #32
 5949 001e 80F84130 		strb	r3, [r0, #65]
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Mode = HAL_I2C_MODE_NONE;
 5950              		.loc 1 2897 0
 5951 0022 0024     		movs	r4, #0
 5952 0024 80F84240 		strb	r4, [r0, #66]
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR = NULL;
 5953              		.loc 1 2898 0
 5954 0028 4463     		str	r4, [r0, #52]
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 5955              		.loc 1 2901 0
 5956 002a 0421     		movs	r1, #4
 5957 002c FFF7FEFF 		bl	I2C_Disable_IRQ
 5958              	.LVL518:
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 5959              		.loc 1 2903 0
 5960 0030 2046     		mov	r0, r4
 5961 0032 10BD     		pop	{r4, pc}
 5962              	.LVL519:
 5963              	.L402:
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_BUSY;
 5964              		.loc 1 2907 0
 5965 0034 0220     		movs	r0, #2
 5966              	.LVL520:
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 5967              		.loc 1 2909 0
 5968 0036 10BD     		pop	{r4, pc}
 5969              		.cfi_endproc
 5970              	.LFE151:
 5972              		.section	.text.HAL_I2C_Master_Abort_IT,"ax",%progbits
 5973              		.align	2
 5974              		.global	HAL_I2C_Master_Abort_IT
 5975              		.thumb
 5976              		.thumb_func
 5978              	HAL_I2C_Master_Abort_IT:
 5979              	.LFB152:
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 5980              		.loc 1 2920 0
 5981              		.cfi_startproc
 5982              		@ args = 0, pretend = 0, frame = 0
 5983              		@ frame_needed = 0, uses_anonymous_args = 0
 5984              	.LVL521:
 5985 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/cccVlT9k.s 			page 208


 5986              	.LCFI57:
 5987              		.cfi_def_cfa_offset 16
 5988              		.cfi_offset 4, -16
 5989              		.cfi_offset 5, -12
 5990              		.cfi_offset 6, -8
 5991              		.cfi_offset 14, -4
 5992 0002 82B0     		sub	sp, sp, #8
 5993              	.LCFI58:
 5994              		.cfi_def_cfa_offset 24
 5995 0004 0446     		mov	r4, r0
 5996 0006 0D46     		mov	r5, r1
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->Mode == HAL_I2C_MODE_MASTER)
 5997              		.loc 1 2921 0
 5998 0008 90F84230 		ldrb	r3, [r0, #66]	@ zero_extendqisi2
 5999 000c DBB2     		uxtb	r3, r3
 6000 000e 102B     		cmp	r3, #16
 6001 0010 23D1     		bne	.L405
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6002              		.loc 1 2924 0
 6003 0012 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 6004 0016 012B     		cmp	r3, #1
 6005 0018 21D0     		beq	.L406
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6006              		.loc 1 2924 0 is_stmt 0 discriminator 2
 6007 001a 0126     		movs	r6, #1
 6008 001c 80F84060 		strb	r6, [r0, #64]
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6009              		.loc 1 2927 0 is_stmt 1 discriminator 2
 6010 0020 0221     		movs	r1, #2
 6011              	.LVL522:
 6012 0022 FFF7FEFF 		bl	I2C_Disable_IRQ
 6013              	.LVL523:
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6014              		.loc 1 2928 0 discriminator 2
 6015 0026 2046     		mov	r0, r4
 6016 0028 3146     		mov	r1, r6
 6017 002a FFF7FEFF 		bl	I2C_Disable_IRQ
 6018              	.LVL524:
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_ABORT;
 6019              		.loc 1 2931 0 discriminator 2
 6020 002e 6023     		movs	r3, #96
 6021 0030 84F84130 		strb	r3, [r4, #65]
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_TransferConfig(hi2c, DevAddress, 1, I2C_AUTOEND_MODE, I2C_GENERATE_STOP);
 6022              		.loc 1 2935 0 discriminator 2
 6023 0034 4FF48043 		mov	r3, #16384
 6024 0038 0093     		str	r3, [sp]
 6025 003a 2046     		mov	r0, r4
 6026 003c 2946     		mov	r1, r5
 6027 003e 3246     		mov	r2, r6
 6028 0040 4FF00073 		mov	r3, #33554432
 6029 0044 FFF7FEFF 		bl	I2C_TransferConfig
 6030              	.LVL525:
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6031              		.loc 1 2938 0 discriminator 2
 6032 0048 0025     		movs	r5, #0
 6033 004a 84F84050 		strb	r5, [r4, #64]
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
ARM GAS  /tmp/cccVlT9k.s 			page 209


 6034              		.loc 1 2943 0 discriminator 2
 6035 004e 2046     		mov	r0, r4
 6036 0050 1221     		movs	r1, #18
 6037 0052 FFF7FEFF 		bl	I2C_Enable_IRQ
 6038              	.LVL526:
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_OK;
 6039              		.loc 1 2945 0 discriminator 2
 6040 0056 2846     		mov	r0, r5
 6041 0058 02E0     		b	.L404
 6042              	.LVL527:
 6043              	.L405:
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     return HAL_ERROR;
 6044              		.loc 1 2951 0
 6045 005a 0120     		movs	r0, #1
 6046              	.LVL528:
 6047 005c 00E0     		b	.L404
 6048              	.LVL529:
 6049              	.L406:
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_LOCK(hi2c);
 6050              		.loc 1 2924 0
 6051 005e 0220     		movs	r0, #2
 6052              	.LVL530:
 6053              	.L404:
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 6054              		.loc 1 2953 0
 6055 0060 02B0     		add	sp, sp, #8
 6056              		@ sp needed
 6057 0062 70BD     		pop	{r4, r5, r6, pc}
 6058              		.cfi_endproc
 6059              	.LFE152:
 6061              		.section	.text.HAL_I2C_EV_IRQHandler,"ax",%progbits
 6062              		.align	2
 6063              		.global	HAL_I2C_EV_IRQHandler
 6064              		.thumb
 6065              		.thumb_func
 6067              	HAL_I2C_EV_IRQHandler:
 6068              	.LFB153:
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6069              		.loc 1 2970 0
 6070              		.cfi_startproc
 6071              		@ args = 0, pretend = 0, frame = 0
 6072              		@ frame_needed = 0, uses_anonymous_args = 0
 6073              	.LVL531:
 6074 0000 08B5     		push	{r3, lr}
 6075              	.LCFI59:
 6076              		.cfi_def_cfa_offset 8
 6077              		.cfi_offset 3, -8
 6078              		.cfi_offset 14, -4
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 6079              		.loc 1 2972 0
 6080 0002 0368     		ldr	r3, [r0]
 6081 0004 9969     		ldr	r1, [r3, #24]
 6082              	.LVL532:
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 6083              		.loc 1 2973 0
 6084 0006 1A68     		ldr	r2, [r3]
 6085              	.LVL533:
ARM GAS  /tmp/cccVlT9k.s 			page 210


2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferISR != NULL)
 6086              		.loc 1 2976 0
 6087 0008 436B     		ldr	r3, [r0, #52]
 6088 000a 03B1     		cbz	r3, .L407
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR(hi2c, itflags, itsources);
 6089              		.loc 1 2978 0
 6090 000c 9847     		blx	r3
 6091              	.LVL534:
 6092              	.L407:
 6093 000e 08BD     		pop	{r3, pc}
 6094              		.cfi_endproc
 6095              	.LFE153:
 6097              		.section	.text.HAL_I2C_MasterTxCpltCallback,"ax",%progbits
 6098              		.align	2
 6099              		.weak	HAL_I2C_MasterTxCpltCallback
 6100              		.thumb
 6101              		.thumb_func
 6103              	HAL_I2C_MasterTxCpltCallback:
 6104              	.LFB155:
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6105              		.loc 1 3034 0
 6106              		.cfi_startproc
 6107              		@ args = 0, pretend = 0, frame = 0
 6108              		@ frame_needed = 0, uses_anonymous_args = 0
 6109              		@ link register save eliminated.
 6110              	.LVL535:
 6111 0000 7047     		bx	lr
 6112              		.cfi_endproc
 6113              	.LFE155:
 6115 0002 00BF     		.section	.text.HAL_I2C_MasterRxCpltCallback,"ax",%progbits
 6116              		.align	2
 6117              		.weak	HAL_I2C_MasterRxCpltCallback
 6118              		.thumb
 6119              		.thumb_func
 6121              	HAL_I2C_MasterRxCpltCallback:
 6122              	.LFB156:
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6123              		.loc 1 3050 0
 6124              		.cfi_startproc
 6125              		@ args = 0, pretend = 0, frame = 0
 6126              		@ frame_needed = 0, uses_anonymous_args = 0
 6127              		@ link register save eliminated.
 6128              	.LVL536:
 6129 0000 7047     		bx	lr
 6130              		.cfi_endproc
 6131              	.LFE156:
 6133 0002 00BF     		.section	.text.I2C_ITMasterSequentialCplt,"ax",%progbits
 6134              		.align	2
 6135              		.thumb
 6136              		.thumb_func
 6138              	I2C_ITMasterSequentialCplt:
 6139              	.LFB175:
3853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6140              		.loc 1 3853 0
 6141              		.cfi_startproc
 6142              		@ args = 0, pretend = 0, frame = 0
 6143              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cccVlT9k.s 			page 211


 6144              	.LVL537:
3853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6145              		.loc 1 3853 0
 6146 0000 38B5     		push	{r3, r4, r5, lr}
 6147              	.LCFI60:
 6148              		.cfi_def_cfa_offset 16
 6149              		.cfi_offset 3, -16
 6150              		.cfi_offset 4, -12
 6151              		.cfi_offset 5, -8
 6152              		.cfi_offset 14, -4
 6153 0002 0446     		mov	r4, r0
3855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 6154              		.loc 1 3855 0
 6155 0004 0023     		movs	r3, #0
 6156 0006 80F84230 		strb	r3, [r0, #66]
3859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if (hi2c->State == HAL_I2C_STATE_BUSY_TX)
 6157              		.loc 1 3859 0
 6158 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6159 000e DBB2     		uxtb	r3, r3
 6160 0010 212B     		cmp	r3, #33
 6161 0012 0FD1     		bne	.L412
3861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
 6162              		.loc 1 3861 0
 6163 0014 2023     		movs	r3, #32
 6164 0016 80F84130 		strb	r3, [r0, #65]
3862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_TX;
 6165              		.loc 1 3862 0
 6166 001a 1123     		movs	r3, #17
 6167 001c 0363     		str	r3, [r0, #48]
3863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 6168              		.loc 1 3863 0
 6169 001e 0025     		movs	r5, #0
 6170 0020 4563     		str	r5, [r0, #52]
3866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6171              		.loc 1 3866 0
 6172 0022 0121     		movs	r1, #1
 6173 0024 FFF7FEFF 		bl	I2C_Disable_IRQ
 6174              	.LVL538:
3869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6175              		.loc 1 3869 0
 6176 0028 84F84050 		strb	r5, [r4, #64]
3872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_MasterTxCpltCallback(hi2c);
 6177              		.loc 1 3872 0
 6178 002c 2046     		mov	r0, r4
 6179 002e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 6180              	.LVL539:
 6181 0032 38BD     		pop	{r3, r4, r5, pc}
 6182              	.LVL540:
 6183              	.L412:
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_READY;
 6184              		.loc 1 3877 0
 6185 0034 2023     		movs	r3, #32
 6186 0036 80F84130 		strb	r3, [r0, #65]
3878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_MASTER_BUSY_RX;
 6187              		.loc 1 3878 0
 6188 003a 1223     		movs	r3, #18
 6189 003c 0363     		str	r3, [r0, #48]
ARM GAS  /tmp/cccVlT9k.s 			page 212


3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 6190              		.loc 1 3879 0
 6191 003e 0025     		movs	r5, #0
 6192 0040 4563     		str	r5, [r0, #52]
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6193              		.loc 1 3882 0
 6194 0042 0221     		movs	r1, #2
 6195 0044 FFF7FEFF 		bl	I2C_Disable_IRQ
 6196              	.LVL541:
3885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6197              		.loc 1 3885 0
 6198 0048 84F84050 		strb	r5, [r4, #64]
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_MasterRxCpltCallback(hi2c);
 6199              		.loc 1 3888 0
 6200 004c 2046     		mov	r0, r4
 6201 004e FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 6202              	.LVL542:
 6203 0052 38BD     		pop	{r3, r4, r5, pc}
 6204              		.cfi_endproc
 6205              	.LFE175:
 6207              		.section	.text.HAL_I2C_SlaveTxCpltCallback,"ax",%progbits
 6208              		.align	2
 6209              		.weak	HAL_I2C_SlaveTxCpltCallback
 6210              		.thumb
 6211              		.thumb_func
 6213              	HAL_I2C_SlaveTxCpltCallback:
 6214              	.LFB157:
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6215              		.loc 1 3065 0
 6216              		.cfi_startproc
 6217              		@ args = 0, pretend = 0, frame = 0
 6218              		@ frame_needed = 0, uses_anonymous_args = 0
 6219              		@ link register save eliminated.
 6220              	.LVL543:
 6221 0000 7047     		bx	lr
 6222              		.cfi_endproc
 6223              	.LFE157:
 6225 0002 00BF     		.section	.text.HAL_I2C_SlaveRxCpltCallback,"ax",%progbits
 6226              		.align	2
 6227              		.weak	HAL_I2C_SlaveRxCpltCallback
 6228              		.thumb
 6229              		.thumb_func
 6231              	HAL_I2C_SlaveRxCpltCallback:
 6232              	.LFB158:
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6233              		.loc 1 3081 0
 6234              		.cfi_startproc
 6235              		@ args = 0, pretend = 0, frame = 0
 6236              		@ frame_needed = 0, uses_anonymous_args = 0
 6237              		@ link register save eliminated.
 6238              	.LVL544:
 6239 0000 7047     		bx	lr
 6240              		.cfi_endproc
 6241              	.LFE158:
 6243 0002 00BF     		.section	.text.I2C_ITSlaveSequentialCplt,"ax",%progbits
 6244              		.align	2
 6245              		.thumb
ARM GAS  /tmp/cccVlT9k.s 			page 213


 6246              		.thumb_func
 6248              	I2C_ITSlaveSequentialCplt:
 6249              	.LFB176:
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6250              		.loc 1 3898 0
 6251              		.cfi_startproc
 6252              		@ args = 0, pretend = 0, frame = 0
 6253              		@ frame_needed = 0, uses_anonymous_args = 0
 6254              	.LVL545:
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6255              		.loc 1 3898 0
 6256 0000 10B5     		push	{r4, lr}
 6257              	.LCFI61:
 6258              		.cfi_def_cfa_offset 8
 6259              		.cfi_offset 4, -8
 6260              		.cfi_offset 14, -4
 6261 0002 0446     		mov	r4, r0
3900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 6262              		.loc 1 3900 0
 6263 0004 0023     		movs	r3, #0
 6264 0006 80F84230 		strb	r3, [r0, #66]
3902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN)
 6265              		.loc 1 3902 0
 6266 000a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6267 000e DBB2     		uxtb	r3, r3
 6268 0010 292B     		cmp	r3, #41
 6269 0012 0ED1     		bne	.L417
3905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 6270              		.loc 1 3905 0
 6271 0014 2823     		movs	r3, #40
 6272 0016 80F84130 		strb	r3, [r0, #65]
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_TX;
 6273              		.loc 1 3906 0
 6274 001a 2123     		movs	r3, #33
 6275 001c 0363     		str	r3, [r0, #48]
3909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT);
 6276              		.loc 1 3909 0
 6277 001e 0121     		movs	r1, #1
 6278 0020 FFF7FEFF 		bl	I2C_Disable_IRQ
 6279              	.LVL546:
3912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6280              		.loc 1 3912 0
 6281 0024 0023     		movs	r3, #0
 6282 0026 84F84030 		strb	r3, [r4, #64]
3915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
 6283              		.loc 1 3915 0
 6284 002a 2046     		mov	r0, r4
 6285 002c FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 6286              	.LVL547:
 6287 0030 10BD     		pop	{r4, pc}
 6288              	.LVL548:
 6289              	.L417:
3918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN)
 6290              		.loc 1 3918 0
 6291 0032 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6292 0036 DBB2     		uxtb	r3, r3
 6293 0038 2A2B     		cmp	r3, #42
ARM GAS  /tmp/cccVlT9k.s 			page 214


 6294 003a 0DD1     		bne	.L416
3921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 6295              		.loc 1 3921 0
 6296 003c 2823     		movs	r3, #40
 6297 003e 80F84130 		strb	r3, [r0, #65]
3922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_SLAVE_BUSY_RX;
 6298              		.loc 1 3922 0
 6299 0042 2223     		movs	r3, #34
 6300 0044 0363     		str	r3, [r0, #48]
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT);
 6301              		.loc 1 3925 0
 6302 0046 0221     		movs	r1, #2
 6303 0048 FFF7FEFF 		bl	I2C_Disable_IRQ
 6304              	.LVL549:
3928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6305              		.loc 1 3928 0
 6306 004c 0023     		movs	r3, #0
 6307 004e 84F84030 		strb	r3, [r4, #64]
3931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
 6308              		.loc 1 3931 0
 6309 0052 2046     		mov	r0, r4
 6310 0054 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 6311              	.LVL550:
 6312              	.L416:
 6313 0058 10BD     		pop	{r4, pc}
 6314              		.cfi_endproc
 6315              	.LFE176:
 6317 005a 00BF     		.section	.text.HAL_I2C_AddrCallback,"ax",%progbits
 6318              		.align	2
 6319              		.weak	HAL_I2C_AddrCallback
 6320              		.thumb
 6321              		.thumb_func
 6323              	HAL_I2C_AddrCallback:
 6324              	.LFB159:
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6325              		.loc 1 3099 0
 6326              		.cfi_startproc
 6327              		@ args = 0, pretend = 0, frame = 0
 6328              		@ frame_needed = 0, uses_anonymous_args = 0
 6329              		@ link register save eliminated.
 6330              	.LVL551:
 6331 0000 7047     		bx	lr
 6332              		.cfi_endproc
 6333              	.LFE159:
 6335 0002 00BF     		.section	.text.I2C_ITAddrCplt,"ax",%progbits
 6336              		.align	2
 6337              		.thumb
 6338              		.thumb_func
 6340              	I2C_ITAddrCplt:
 6341              	.LFB174:
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6342              		.loc 1 3770 0
 6343              		.cfi_startproc
 6344              		@ args = 0, pretend = 0, frame = 0
 6345              		@ frame_needed = 0, uses_anonymous_args = 0
 6346              	.LVL552:
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
ARM GAS  /tmp/cccVlT9k.s 			page 215


 6347              		.loc 1 3770 0
 6348 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 6349              	.LCFI62:
 6350              		.cfi_def_cfa_offset 24
 6351              		.cfi_offset 4, -24
 6352              		.cfi_offset 5, -20
 6353              		.cfi_offset 6, -16
 6354              		.cfi_offset 7, -12
 6355              		.cfi_offset 8, -8
 6356              		.cfi_offset 14, -4
 6357 0004 0446     		mov	r4, r0
 6358              	.LVL553:
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State & HAL_I2C_STATE_LISTEN) == HAL_I2C_STATE_LISTEN)
 6359              		.loc 1 3780 0
 6360 0006 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6361 000a 03F02803 		and	r3, r3, #40
 6362 000e 282B     		cmp	r3, #40
 6363 0010 45D1     		bne	.L421
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     transferdirection = I2C_GET_DIR(hi2c);
 6364              		.loc 1 3782 0
 6365 0012 0368     		ldr	r3, [r0]
 6366 0014 9E69     		ldr	r6, [r3, #24]
 6367 0016 C6F30046 		ubfx	r6, r6, #16, #1
 6368              	.LVL554:
3783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     slaveaddrcode     = I2C_GET_ADDR_MATCH(hi2c);
 6369              		.loc 1 3783 0
 6370 001a 9869     		ldr	r0, [r3, #24]
 6371              	.LVL555:
 6372 001c 00F47E00 		and	r0, r0, #16646144
 6373 0020 000C     		lsrs	r0, r0, #16
 6374 0022 87B2     		uxth	r7, r0
 6375              	.LVL556:
3784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     ownadd1code       = I2C_GET_OWN_ADDRESS1(hi2c);
 6376              		.loc 1 3784 0
 6377 0024 9D68     		ldr	r5, [r3, #8]
 6378 0026 C5F3090C 		ubfx	ip, r5, #0, #10
 6379              	.LVL557:
3785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     ownadd2code       = I2C_GET_OWN_ADDRESS2(hi2c);
 6380              		.loc 1 3785 0
 6381 002a DD68     		ldr	r5, [r3, #12]
 6382 002c 05F0FE08 		and	r8, r5, #254
 6383              	.LVL558:
3788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 6384              		.loc 1 3788 0
 6385 0030 E568     		ldr	r5, [r4, #12]
 6386 0032 022D     		cmp	r5, #2
 6387 0034 25D1     		bne	.L422
3790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((slaveaddrcode & SlaveAddr_MSK) == ((ownadd1code >> SlaveAddr_SHIFT) & SlaveAddr_MSK))
 6388              		.loc 1 3790 0
 6389 0036 80EADC10 		eor	r0, r0, ip, lsr #7
 6390              	.LVL559:
 6391 003a 10F0060F 		tst	r0, #6
 6392 003e 12D1     		bne	.L423
 6393              	.LVL560:
3793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->AddrEventCount++;
 6394              		.loc 1 3793 0
 6395 0040 A26C     		ldr	r2, [r4, #72]
ARM GAS  /tmp/cccVlT9k.s 			page 216


 6396 0042 0132     		adds	r2, r2, #1
 6397 0044 A264     		str	r2, [r4, #72]
3794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->AddrEventCount == 2U)
 6398              		.loc 1 3794 0
 6399 0046 A26C     		ldr	r2, [r4, #72]
 6400 0048 022A     		cmp	r2, #2
 6401 004a 2ED1     		bne	.L420
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->AddrEventCount = 0U;
 6402              		.loc 1 3797 0
 6403 004c 0022     		movs	r2, #0
 6404 004e A264     		str	r2, [r4, #72]
3800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 6405              		.loc 1 3800 0
 6406 0050 0821     		movs	r1, #8
 6407              	.LVL561:
 6408 0052 D961     		str	r1, [r3, #28]
3803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           __HAL_UNLOCK(hi2c);
 6409              		.loc 1 3803 0
 6410 0054 84F84020 		strb	r2, [r4, #64]
3806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 6411              		.loc 1 3806 0
 6412 0058 2046     		mov	r0, r4
 6413 005a 3146     		mov	r1, r6
 6414 005c 6246     		mov	r2, ip
 6415 005e FFF7FEFF 		bl	HAL_I2C_AddrCallback
 6416              	.LVL562:
 6417 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6418              	.LVL563:
 6419              	.L423:
3814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 6420              		.loc 1 3814 0
 6421 0066 2046     		mov	r0, r4
 6422 0068 0421     		movs	r1, #4
 6423              	.LVL564:
 6424 006a FFF7FEFF 		bl	I2C_Disable_IRQ
 6425              	.LVL565:
3817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_UNLOCK(hi2c);
 6426              		.loc 1 3817 0
 6427 006e 0023     		movs	r3, #0
 6428 0070 84F84030 		strb	r3, [r4, #64]
3820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 6429              		.loc 1 3820 0
 6430 0074 2046     		mov	r0, r4
 6431 0076 3146     		mov	r1, r6
 6432 0078 4246     		mov	r2, r8
 6433 007a FFF7FEFF 		bl	HAL_I2C_AddrCallback
 6434              	.LVL566:
 6435 007e BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6436              	.LVL567:
 6437              	.L422:
3827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT);
 6438              		.loc 1 3827 0
 6439 0082 2046     		mov	r0, r4
 6440              	.LVL568:
 6441 0084 0421     		movs	r1, #4
 6442              	.LVL569:
 6443 0086 FFF7FEFF 		bl	I2C_Disable_IRQ
ARM GAS  /tmp/cccVlT9k.s 			page 217


 6444              	.LVL570:
3830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 6445              		.loc 1 3830 0
 6446 008a 0023     		movs	r3, #0
 6447 008c 84F84030 		strb	r3, [r4, #64]
3833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_AddrCallback(hi2c, transferdirection, slaveaddrcode);
 6448              		.loc 1 3833 0
 6449 0090 2046     		mov	r0, r4
 6450 0092 3146     		mov	r1, r6
 6451 0094 3A46     		mov	r2, r7
 6452 0096 FFF7FEFF 		bl	HAL_I2C_AddrCallback
 6453              	.LVL571:
 6454 009a BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6455              	.LVL572:
 6456              	.L421:
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 6457              		.loc 1 3840 0
 6458 009e 0368     		ldr	r3, [r0]
 6459 00a0 0822     		movs	r2, #8
 6460 00a2 DA61     		str	r2, [r3, #28]
3843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6461              		.loc 1 3843 0
 6462 00a4 0023     		movs	r3, #0
 6463 00a6 80F84030 		strb	r3, [r0, #64]
 6464              	.LVL573:
 6465              	.L420:
 6466 00aa BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 6467              		.cfi_endproc
 6468              	.LFE174:
 6470 00ae 00BF     		.section	.text.HAL_I2C_ListenCpltCallback,"ax",%progbits
 6471              		.align	2
 6472              		.weak	HAL_I2C_ListenCpltCallback
 6473              		.thumb
 6474              		.thumb_func
 6476              	HAL_I2C_ListenCpltCallback:
 6477              	.LFB160:
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6478              		.loc 1 3117 0
 6479              		.cfi_startproc
 6480              		@ args = 0, pretend = 0, frame = 0
 6481              		@ frame_needed = 0, uses_anonymous_args = 0
 6482              		@ link register save eliminated.
 6483              	.LVL574:
 6484 0000 7047     		bx	lr
 6485              		.cfi_endproc
 6486              	.LFE160:
 6488 0002 00BF     		.section	.text.I2C_ITListenCplt,"ax",%progbits
 6489              		.align	2
 6490              		.thumb
 6491              		.thumb_func
 6493              	I2C_ITListenCplt:
 6494              	.LFB179:
4140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6495              		.loc 1 4140 0
 6496              		.cfi_startproc
 6497              		@ args = 0, pretend = 0, frame = 0
 6498              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cccVlT9k.s 			page 218


 6499              	.LVL575:
4140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6500              		.loc 1 4140 0
 6501 0000 10B5     		push	{r4, lr}
 6502              	.LCFI63:
 6503              		.cfi_def_cfa_offset 8
 6504              		.cfi_offset 4, -8
 6505              		.cfi_offset 14, -4
 6506 0002 0446     		mov	r4, r0
4142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 6507              		.loc 1 4142 0
 6508 0004 164B     		ldr	r3, .L428
 6509 0006 C362     		str	r3, [r0, #44]
4143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 6510              		.loc 1 4143 0
 6511 0008 0023     		movs	r3, #0
 6512 000a 0363     		str	r3, [r0, #48]
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->State = HAL_I2C_STATE_READY;
 6513              		.loc 1 4144 0
 6514 000c 2022     		movs	r2, #32
 6515 000e 80F84120 		strb	r2, [r0, #65]
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 6516              		.loc 1 4145 0
 6517 0012 80F84230 		strb	r3, [r0, #66]
4146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 6518              		.loc 1 4146 0
 6519 0016 4363     		str	r3, [r0, #52]
4149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
 6520              		.loc 1 4149 0
 6521 0018 11F0040F 		tst	r1, #4
 6522 001c 11D0     		beq	.L427
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 6523              		.loc 1 4152 0
 6524 001e 436A     		ldr	r3, [r0, #36]
 6525 0020 5A1C     		adds	r2, r3, #1
 6526 0022 4262     		str	r2, [r0, #36]
 6527 0024 0268     		ldr	r2, [r0]
 6528 0026 526A     		ldr	r2, [r2, #36]
 6529 0028 1A70     		strb	r2, [r3]
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
 6530              		.loc 1 4154 0
 6531 002a 038D     		ldrh	r3, [r0, #40]
 6532 002c 4BB1     		cbz	r3, .L427
4156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 6533              		.loc 1 4156 0
 6534 002e 013B     		subs	r3, r3, #1
 6535 0030 0385     		strh	r3, [r0, #40]	@ movhi
4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 6536              		.loc 1 4157 0
 6537 0032 438D     		ldrh	r3, [r0, #42]
 6538 0034 013B     		subs	r3, r3, #1
 6539 0036 9BB2     		uxth	r3, r3
 6540 0038 4385     		strh	r3, [r0, #42]	@ movhi
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 6541              		.loc 1 4160 0
 6542 003a 436C     		ldr	r3, [r0, #68]
 6543 003c 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/cccVlT9k.s 			page 219


 6544 0040 4364     		str	r3, [r0, #68]
 6545              	.L427:
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 6546              		.loc 1 4165 0
 6547 0042 2046     		mov	r0, r4
 6548              	.LVL576:
 6549 0044 0721     		movs	r1, #7
 6550              	.LVL577:
 6551 0046 FFF7FEFF 		bl	I2C_Disable_IRQ
 6552              	.LVL578:
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 6553              		.loc 1 4168 0
 6554 004a 2368     		ldr	r3, [r4]
 6555 004c 1022     		movs	r2, #16
 6556 004e DA61     		str	r2, [r3, #28]
4171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 6557              		.loc 1 4171 0
 6558 0050 0023     		movs	r3, #0
 6559 0052 84F84030 		strb	r3, [r4, #64]
4174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   HAL_I2C_ListenCpltCallback(hi2c);
 6560              		.loc 1 4174 0
 6561 0056 2046     		mov	r0, r4
 6562 0058 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 6563              	.LVL579:
 6564 005c 10BD     		pop	{r4, pc}
 6565              	.LVL580:
 6566              	.L429:
 6567 005e 00BF     		.align	2
 6568              	.L428:
 6569 0060 0000FFFF 		.word	-65536
 6570              		.cfi_endproc
 6571              	.LFE179:
 6573              		.section	.text.HAL_I2C_MemTxCpltCallback,"ax",%progbits
 6574              		.align	2
 6575              		.weak	HAL_I2C_MemTxCpltCallback
 6576              		.thumb
 6577              		.thumb_func
 6579              	HAL_I2C_MemTxCpltCallback:
 6580              	.LFB161:
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6581              		.loc 1 3133 0
 6582              		.cfi_startproc
 6583              		@ args = 0, pretend = 0, frame = 0
 6584              		@ frame_needed = 0, uses_anonymous_args = 0
 6585              		@ link register save eliminated.
 6586              	.LVL581:
 6587 0000 7047     		bx	lr
 6588              		.cfi_endproc
 6589              	.LFE161:
 6591 0002 00BF     		.section	.text.HAL_I2C_MemRxCpltCallback,"ax",%progbits
 6592              		.align	2
 6593              		.weak	HAL_I2C_MemRxCpltCallback
 6594              		.thumb
 6595              		.thumb_func
 6597              	HAL_I2C_MemRxCpltCallback:
 6598              	.LFB162:
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
ARM GAS  /tmp/cccVlT9k.s 			page 220


 6599              		.loc 1 3149 0
 6600              		.cfi_startproc
 6601              		@ args = 0, pretend = 0, frame = 0
 6602              		@ frame_needed = 0, uses_anonymous_args = 0
 6603              		@ link register save eliminated.
 6604              	.LVL582:
 6605 0000 7047     		bx	lr
 6606              		.cfi_endproc
 6607              	.LFE162:
 6609 0002 00BF     		.section	.text.HAL_I2C_ErrorCallback,"ax",%progbits
 6610              		.align	2
 6611              		.weak	HAL_I2C_ErrorCallback
 6612              		.thumb
 6613              		.thumb_func
 6615              	HAL_I2C_ErrorCallback:
 6616              	.LFB163:
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6617              		.loc 1 3165 0
 6618              		.cfi_startproc
 6619              		@ args = 0, pretend = 0, frame = 0
 6620              		@ frame_needed = 0, uses_anonymous_args = 0
 6621              		@ link register save eliminated.
 6622              	.LVL583:
 6623 0000 7047     		bx	lr
 6624              		.cfi_endproc
 6625              	.LFE163:
 6627 0002 00BF     		.section	.text.HAL_I2C_AbortCpltCallback,"ax",%progbits
 6628              		.align	2
 6629              		.weak	HAL_I2C_AbortCpltCallback
 6630              		.thumb
 6631              		.thumb_func
 6633              	HAL_I2C_AbortCpltCallback:
 6634              	.LFB164:
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6635              		.loc 1 3181 0
 6636              		.cfi_startproc
 6637              		@ args = 0, pretend = 0, frame = 0
 6638              		@ frame_needed = 0, uses_anonymous_args = 0
 6639              		@ link register save eliminated.
 6640              	.LVL584:
 6641 0000 7047     		bx	lr
 6642              		.cfi_endproc
 6643              	.LFE164:
 6645 0002 00BF     		.section	.text.I2C_ITError,"ax",%progbits
 6646              		.align	2
 6647              		.thumb
 6648              		.thumb_func
 6650              	I2C_ITError:
 6651              	.LFB180:
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6652              		.loc 1 4184 0
 6653              		.cfi_startproc
 6654              		@ args = 0, pretend = 0, frame = 0
 6655              		@ frame_needed = 0, uses_anonymous_args = 0
 6656              	.LVL585:
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6657              		.loc 1 4184 0
ARM GAS  /tmp/cccVlT9k.s 			page 221


 6658 0000 10B5     		push	{r4, lr}
 6659              	.LCFI64:
 6660              		.cfi_def_cfa_offset 8
 6661              		.cfi_offset 4, -8
 6662              		.cfi_offset 14, -4
 6663 0002 0446     		mov	r4, r0
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode          = HAL_I2C_MODE_NONE;
 6664              		.loc 1 4186 0
 6665 0004 0023     		movs	r3, #0
 6666 0006 80F84230 		strb	r3, [r0, #66]
4187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
 6667              		.loc 1 4187 0
 6668 000a 394A     		ldr	r2, .L443
 6669 000c C262     		str	r2, [r0, #44]
4188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferCount     = 0U;
 6670              		.loc 1 4188 0
 6671 000e 4385     		strh	r3, [r0, #42]	@ movhi
4191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->ErrorCode |= ErrorCode;
 6672              		.loc 1 4191 0
 6673 0010 436C     		ldr	r3, [r0, #68]
 6674 0012 1943     		orrs	r1, r1, r3
 6675              	.LVL586:
 6676 0014 4164     		str	r1, [r0, #68]
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
 6677              		.loc 1 4194 0
 6678 0016 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6679 001a DBB2     		uxtb	r3, r3
 6680 001c 282B     		cmp	r3, #40
 6681 001e 09D0     		beq	.L435
4195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 6682              		.loc 1 4195 0 discriminator 1
 6683 0020 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6684 0024 DBB2     		uxtb	r3, r3
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->State == HAL_I2C_STATE_LISTEN)         ||
 6685              		.loc 1 4194 0 discriminator 1
 6686 0026 292B     		cmp	r3, #41
 6687 0028 04D0     		beq	.L435
4196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_RX_LISTEN))
 6688              		.loc 1 4196 0
 6689 002a 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 6690 002e DBB2     		uxtb	r3, r3
4195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      (hi2c->State == HAL_I2C_STATE_BUSY_TX_LISTEN) ||
 6691              		.loc 1 4195 0
 6692 0030 2A2B     		cmp	r3, #42
 6693 0032 0BD1     		bne	.L436
 6694              	.L435:
4199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 6695              		.loc 1 4199 0
 6696 0034 2046     		mov	r0, r4
 6697              	.LVL587:
 6698 0036 0321     		movs	r1, #3
 6699 0038 FFF7FEFF 		bl	I2C_Disable_IRQ
 6700              	.LVL588:
4202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State         = HAL_I2C_STATE_LISTEN;
 6701              		.loc 1 4202 0
 6702 003c 2823     		movs	r3, #40
 6703 003e 84F84130 		strb	r3, [r4, #65]
ARM GAS  /tmp/cccVlT9k.s 			page 222


4203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 6704              		.loc 1 4203 0
 6705 0042 0023     		movs	r3, #0
 6706 0044 2363     		str	r3, [r4, #48]
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = I2C_Slave_ISR_IT;
 6707              		.loc 1 4204 0
 6708 0046 2B4B     		ldr	r3, .L443+4
 6709 0048 6363     		str	r3, [r4, #52]
 6710 004a 0DE0     		b	.L437
 6711              	.LVL589:
 6712              	.L436:
4209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_RX_IT | I2C_XFER_TX_IT);
 6713              		.loc 1 4209 0
 6714 004c 0721     		movs	r1, #7
 6715 004e FFF7FEFF 		bl	I2C_Disable_IRQ
 6716              	.LVL590:
4213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State != HAL_I2C_STATE_ABORT)
 6717              		.loc 1 4213 0
 6718 0052 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6719 0056 DBB2     		uxtb	r3, r3
 6720 0058 602B     		cmp	r3, #96
 6721 005a 02D0     		beq	.L438
4216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->State         = HAL_I2C_STATE_READY;
 6722              		.loc 1 4216 0
 6723 005c 2023     		movs	r3, #32
 6724 005e 84F84130 		strb	r3, [r4, #65]
 6725              	.L438:
4218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->PreviousState = I2C_STATE_NONE;
 6726              		.loc 1 4218 0
 6727 0062 0023     		movs	r3, #0
 6728 0064 2363     		str	r3, [r4, #48]
4219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferISR       = NULL;
 6729              		.loc 1 4219 0
 6730 0066 6363     		str	r3, [r4, #52]
 6731              	.L437:
4223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN)
 6732              		.loc 1 4223 0
 6733 0068 2368     		ldr	r3, [r4]
 6734 006a 1A68     		ldr	r2, [r3]
 6735 006c 12F4804F 		tst	r2, #16384
 6736 0070 12D0     		beq	.L439
4225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_TXDMAEN;
 6737              		.loc 1 4225 0
 6738 0072 1A68     		ldr	r2, [r3]
 6739 0074 22F48042 		bic	r2, r2, #16384
 6740 0078 1A60     		str	r2, [r3]
4229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmatx->XferAbortCallback = I2C_DMAAbort;
 6741              		.loc 1 4229 0
 6742 007a A36B     		ldr	r3, [r4, #56]
 6743 007c 1E4A     		ldr	r2, .L443+8
 6744 007e 5A63     		str	r2, [r3, #52]
4232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6745              		.loc 1 4232 0
 6746 0080 0023     		movs	r3, #0
 6747 0082 84F84030 		strb	r3, [r4, #64]
4235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmatx) != HAL_OK)
 6748              		.loc 1 4235 0
ARM GAS  /tmp/cccVlT9k.s 			page 223


 6749 0086 A06B     		ldr	r0, [r4, #56]
 6750 0088 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6751              	.LVL591:
 6752 008c 0028     		cmp	r0, #0
 6753 008e 2ED0     		beq	.L434
4238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmatx->XferAbortCallback(hi2c->hdmatx);
 6754              		.loc 1 4238 0
 6755 0090 A06B     		ldr	r0, [r4, #56]
 6756 0092 436B     		ldr	r3, [r0, #52]
 6757 0094 9847     		blx	r3
 6758              	.LVL592:
 6759 0096 10BD     		pop	{r4, pc}
 6760              	.LVL593:
 6761              	.L439:
4242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN)
 6762              		.loc 1 4242 0
 6763 0098 1A68     		ldr	r2, [r3]
 6764 009a 12F4004F 		tst	r2, #32768
 6765 009e 11D0     		beq	.L441
4244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->CR1 &= ~I2C_CR1_RXDMAEN;
 6766              		.loc 1 4244 0
 6767 00a0 1A68     		ldr	r2, [r3]
 6768 00a2 22F40042 		bic	r2, r2, #32768
 6769 00a6 1A60     		str	r2, [r3]
4248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->hdmarx->XferAbortCallback = I2C_DMAAbort;
 6770              		.loc 1 4248 0
 6771 00a8 E36B     		ldr	r3, [r4, #60]
 6772 00aa 134A     		ldr	r2, .L443+8
 6773 00ac 5A63     		str	r2, [r3, #52]
4251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6774              		.loc 1 4251 0
 6775 00ae 0023     		movs	r3, #0
 6776 00b0 84F84030 		strb	r3, [r4, #64]
4254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(HAL_DMA_Abort_IT(hi2c->hdmarx) != HAL_OK)
 6777              		.loc 1 4254 0
 6778 00b4 E06B     		ldr	r0, [r4, #60]
 6779 00b6 FFF7FEFF 		bl	HAL_DMA_Abort_IT
 6780              	.LVL594:
 6781 00ba C0B1     		cbz	r0, .L434
4257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->hdmarx->XferAbortCallback(hi2c->hdmarx);
 6782              		.loc 1 4257 0
 6783 00bc E06B     		ldr	r0, [r4, #60]
 6784 00be 436B     		ldr	r3, [r0, #52]
 6785 00c0 9847     		blx	r3
 6786              	.LVL595:
 6787 00c2 10BD     		pop	{r4, pc}
 6788              	.LVL596:
 6789              	.L441:
4260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_ABORT)
 6790              		.loc 1 4260 0
 6791 00c4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6792 00c8 DBB2     		uxtb	r3, r3
 6793 00ca 602B     		cmp	r3, #96
 6794 00cc 09D1     		bne	.L442
4262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 6795              		.loc 1 4262 0
 6796 00ce 2023     		movs	r3, #32
ARM GAS  /tmp/cccVlT9k.s 			page 224


 6797 00d0 84F84130 		strb	r3, [r4, #65]
4265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6798              		.loc 1 4265 0
 6799 00d4 0023     		movs	r3, #0
 6800 00d6 84F84030 		strb	r3, [r4, #64]
4268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
 6801              		.loc 1 4268 0
 6802 00da 2046     		mov	r0, r4
 6803 00dc FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 6804              	.LVL597:
 6805 00e0 10BD     		pop	{r4, pc}
 6806              	.LVL598:
 6807              	.L442:
4273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6808              		.loc 1 4273 0
 6809 00e2 0023     		movs	r3, #0
 6810 00e4 84F84030 		strb	r3, [r4, #64]
4276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
 6811              		.loc 1 4276 0
 6812 00e8 2046     		mov	r0, r4
 6813 00ea FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 6814              	.LVL599:
 6815              	.L434:
 6816 00ee 10BD     		pop	{r4, pc}
 6817              	.LVL600:
 6818              	.L444:
 6819              		.align	2
 6820              	.L443:
 6821 00f0 0000FFFF 		.word	-65536
 6822 00f4 00000000 		.word	I2C_Slave_ISR_IT
 6823 00f8 00000000 		.word	I2C_DMAAbort
 6824              		.cfi_endproc
 6825              	.LFE180:
 6827              		.section	.text.I2C_ITSlaveCplt,"ax",%progbits
 6828              		.align	2
 6829              		.thumb
 6830              		.thumb_func
 6832              	I2C_ITSlaveCplt:
 6833              	.LFB178:
4034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 6834              		.loc 1 4034 0
 6835              		.cfi_startproc
 6836              		@ args = 0, pretend = 0, frame = 0
 6837              		@ frame_needed = 0, uses_anonymous_args = 0
 6838              	.LVL601:
 6839 0000 38B5     		push	{r3, r4, r5, lr}
 6840              	.LCFI65:
 6841              		.cfi_def_cfa_offset 16
 6842              		.cfi_offset 3, -16
 6843              		.cfi_offset 4, -12
 6844              		.cfi_offset 5, -8
 6845              		.cfi_offset 14, -4
 6846 0002 0446     		mov	r4, r0
 6847 0004 0D46     		mov	r5, r1
4036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 6848              		.loc 1 4036 0
 6849 0006 0368     		ldr	r3, [r0]
ARM GAS  /tmp/cccVlT9k.s 			page 225


 6850 0008 2022     		movs	r2, #32
 6851 000a DA61     		str	r2, [r3, #28]
4039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c,I2C_FLAG_ADDR);
 6852              		.loc 1 4039 0
 6853 000c 0368     		ldr	r3, [r0]
 6854 000e 0822     		movs	r2, #8
 6855 0010 DA61     		str	r2, [r3, #28]
4042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_LISTEN_IT | I2C_XFER_TX_IT | I2C_XFER_RX_IT);
 6856              		.loc 1 4042 0
 6857 0012 0721     		movs	r1, #7
 6858              	.LVL602:
 6859 0014 FFF7FEFF 		bl	I2C_Disable_IRQ
 6860              	.LVL603:
4045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 6861              		.loc 1 4045 0
 6862 0018 2368     		ldr	r3, [r4]
 6863 001a 5A68     		ldr	r2, [r3, #4]
 6864 001c 42F40042 		orr	r2, r2, #32768
 6865 0020 5A60     		str	r2, [r3, #4]
4048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
 6866              		.loc 1 4048 0
 6867 0022 2368     		ldr	r3, [r4]
 6868 0024 5A68     		ldr	r2, [r3, #4]
 6869 0026 22F0FF72 		bic	r2, r2, #33423360
 6870 002a 22F48B32 		bic	r2, r2, #71168
 6871 002e 22F4FF72 		bic	r2, r2, #510
 6872 0032 22F00102 		bic	r2, r2, #1
 6873 0036 5A60     		str	r2, [r3, #4]
4051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
 6874              		.loc 1 4051 0
 6875 0038 2046     		mov	r0, r4
 6876 003a FFF7FEFF 		bl	I2C_Flush_TXDR
 6877              	.LVL604:
4054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
 6878              		.loc 1 4054 0
 6879 003e 2368     		ldr	r3, [r4]
 6880 0040 1A68     		ldr	r2, [r3]
 6881 0042 12F4804F 		tst	r2, #16384
 6882 0046 03D1     		bne	.L446
4055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****      ((hi2c->Instance->CR1 & I2C_CR1_RXDMAEN) == I2C_CR1_RXDMAEN))
 6883              		.loc 1 4055 0 discriminator 1
 6884 0048 1A68     		ldr	r2, [r3]
4054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((hi2c->Instance->CR1 & I2C_CR1_TXDMAEN) == I2C_CR1_TXDMAEN) ||
 6885              		.loc 1 4054 0 discriminator 1
 6886 004a 12F4004F 		tst	r2, #32768
 6887 004e 0ED0     		beq	.L447
 6888              	.L446:
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 6889              		.loc 1 4057 0
 6890 0050 94F84120 		ldrb	r2, [r4, #65]	@ zero_extendqisi2
 6891 0054 D2B2     		uxtb	r2, r2
 6892 0056 212A     		cmp	r2, #33
 6893 0058 04D1     		bne	.L448
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 6894              		.loc 1 4057 0 is_stmt 0 discriminator 1
 6895 005a A26B     		ldr	r2, [r4, #56]
 6896 005c 1268     		ldr	r2, [r2]
ARM GAS  /tmp/cccVlT9k.s 			page 226


 6897 005e 5268     		ldr	r2, [r2, #4]
 6898 0060 92B2     		uxth	r2, r2
 6899 0062 03E0     		b	.L449
 6900              	.L448:
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 6901              		.loc 1 4057 0 discriminator 2
 6902 0064 E26B     		ldr	r2, [r4, #60]
 6903 0066 1268     		ldr	r2, [r2]
 6904 0068 5268     		ldr	r2, [r2, #4]
 6905 006a 92B2     		uxth	r2, r2
 6906              	.L449:
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount = I2C_GET_DMA_REMAIN_DATA(hi2c);
 6907              		.loc 1 4057 0 discriminator 3
 6908 006c 6285     		strh	r2, [r4, #42]	@ movhi
 6909              	.L447:
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->XferCount != 0U)
 6910              		.loc 1 4061 0 is_stmt 1
 6911 006e 628D     		ldrh	r2, [r4, #42]
 6912 0070 92B2     		uxth	r2, r2
 6913 0072 1AB1     		cbz	r2, .L450
4064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 6914              		.loc 1 4064 0
 6915 0074 626C     		ldr	r2, [r4, #68]
 6916 0076 42F00402 		orr	r2, r2, #4
 6917 007a 6264     		str	r2, [r4, #68]
 6918              	.L450:
4068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_RXNE) != RESET))
 6919              		.loc 1 4068 0
 6920 007c 15F0040F 		tst	r5, #4
 6921 0080 10D0     		beq	.L451
4071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 6922              		.loc 1 4071 0
 6923 0082 626A     		ldr	r2, [r4, #36]
 6924 0084 511C     		adds	r1, r2, #1
 6925 0086 6162     		str	r1, [r4, #36]
 6926 0088 5B6A     		ldr	r3, [r3, #36]
 6927 008a 1370     		strb	r3, [r2]
4073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferSize > 0U))
 6928              		.loc 1 4073 0
 6929 008c 238D     		ldrh	r3, [r4, #40]
 6930 008e 4BB1     		cbz	r3, .L451
4075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 6931              		.loc 1 4075 0
 6932 0090 013B     		subs	r3, r3, #1
 6933 0092 2385     		strh	r3, [r4, #40]	@ movhi
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 6934              		.loc 1 4076 0
 6935 0094 638D     		ldrh	r3, [r4, #42]
 6936 0096 013B     		subs	r3, r3, #1
 6937 0098 9BB2     		uxth	r3, r3
 6938 009a 6385     		strh	r3, [r4, #42]	@ movhi
4079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 6939              		.loc 1 4079 0
 6940 009c 636C     		ldr	r3, [r4, #68]
 6941 009e 43F00403 		orr	r3, r3, #4
 6942 00a2 6364     		str	r3, [r4, #68]
 6943              	.L451:
ARM GAS  /tmp/cccVlT9k.s 			page 227


4083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 6944              		.loc 1 4083 0
 6945 00a4 0023     		movs	r3, #0
 6946 00a6 2363     		str	r3, [r4, #48]
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Mode = HAL_I2C_MODE_NONE;
 6947              		.loc 1 4084 0
 6948 00a8 84F84230 		strb	r3, [r4, #66]
4085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferISR = NULL;
 6949              		.loc 1 4085 0
 6950 00ac 6363     		str	r3, [r4, #52]
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->ErrorCode != HAL_I2C_ERROR_NONE)
 6951              		.loc 1 4087 0
 6952 00ae 636C     		ldr	r3, [r4, #68]
 6953 00b0 6BB1     		cbz	r3, .L452
4090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 6954              		.loc 1 4090 0
 6955 00b2 616C     		ldr	r1, [r4, #68]
 6956 00b4 2046     		mov	r0, r4
 6957 00b6 FFF7FEFF 		bl	I2C_ITError
 6958              	.LVL605:
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->State == HAL_I2C_STATE_LISTEN)
 6959              		.loc 1 4093 0
 6960 00ba 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6961 00be DBB2     		uxtb	r3, r3
 6962 00c0 282B     		cmp	r3, #40
 6963 00c2 2CD1     		bne	.L445
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITListenCplt(hi2c, ITFlags);
 6964              		.loc 1 4096 0
 6965 00c4 2046     		mov	r0, r4
 6966 00c6 2946     		mov	r1, r5
 6967 00c8 FFF7FEFF 		bl	I2C_ITListenCplt
 6968              	.LVL606:
 6969 00cc 38BD     		pop	{r3, r4, r5, pc}
 6970              	.LVL607:
 6971              	.L452:
4099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 6972              		.loc 1 4099 0
 6973 00ce E36A     		ldr	r3, [r4, #44]
 6974 00d0 13F5803F 		cmn	r3, #65536
 6975 00d4 0BD0     		beq	.L454
4101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 6976              		.loc 1 4101 0
 6977 00d6 124B     		ldr	r3, .L456
 6978 00d8 E362     		str	r3, [r4, #44]
4102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 6979              		.loc 1 4102 0
 6980 00da 2023     		movs	r3, #32
 6981 00dc 84F84130 		strb	r3, [r4, #65]
4105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 6982              		.loc 1 4105 0
 6983 00e0 0023     		movs	r3, #0
 6984 00e2 84F84030 		strb	r3, [r4, #64]
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_ListenCpltCallback(hi2c);
 6985              		.loc 1 4108 0
 6986 00e6 2046     		mov	r0, r4
 6987 00e8 FFF7FEFF 		bl	HAL_I2C_ListenCpltCallback
 6988              	.LVL608:
ARM GAS  /tmp/cccVlT9k.s 			page 228


 6989 00ec 38BD     		pop	{r3, r4, r5, pc}
 6990              	.LVL609:
 6991              	.L454:
4111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
 6992              		.loc 1 4111 0
 6993 00ee 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 6994 00f2 DBB2     		uxtb	r3, r3
 6995 00f4 222B     		cmp	r3, #34
 6996 00f6 09D1     		bne	.L455
4113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 6997              		.loc 1 4113 0
 6998 00f8 2023     		movs	r3, #32
 6999 00fa 84F84130 		strb	r3, [r4, #65]
4116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7000              		.loc 1 4116 0
 7001 00fe 0023     		movs	r3, #0
 7002 0100 84F84030 		strb	r3, [r4, #64]
4119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveRxCpltCallback(hi2c);
 7003              		.loc 1 4119 0
 7004 0104 2046     		mov	r0, r4
 7005 0106 FFF7FEFF 		bl	HAL_I2C_SlaveRxCpltCallback
 7006              	.LVL610:
 7007 010a 38BD     		pop	{r3, r4, r5, pc}
 7008              	.LVL611:
 7009              	.L455:
4123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7010              		.loc 1 4123 0
 7011 010c 2023     		movs	r3, #32
 7012 010e 84F84130 		strb	r3, [r4, #65]
4126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_UNLOCK(hi2c);
 7013              		.loc 1 4126 0
 7014 0112 0023     		movs	r3, #0
 7015 0114 84F84030 		strb	r3, [r4, #64]
4129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_SlaveTxCpltCallback(hi2c);
 7016              		.loc 1 4129 0
 7017 0118 2046     		mov	r0, r4
 7018 011a FFF7FEFF 		bl	HAL_I2C_SlaveTxCpltCallback
 7019              	.LVL612:
 7020              	.L445:
 7021 011e 38BD     		pop	{r3, r4, r5, pc}
 7022              	.LVL613:
 7023              	.L457:
 7024              		.align	2
 7025              	.L456:
 7026 0120 0000FFFF 		.word	-65536
 7027              		.cfi_endproc
 7028              	.LFE178:
 7030              		.section	.text.I2C_Slave_ISR_IT,"ax",%progbits
 7031              		.align	2
 7032              		.thumb
 7033              		.thumb_func
 7035              	I2C_Slave_ISR_IT:
 7036              	.LFB169:
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 7037              		.loc 1 3385 0
 7038              		.cfi_startproc
 7039              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/cccVlT9k.s 			page 229


 7040              		@ frame_needed = 0, uses_anonymous_args = 0
 7041              	.LVL614:
 7042 0000 70B5     		push	{r4, r5, r6, lr}
 7043              	.LCFI66:
 7044              		.cfi_def_cfa_offset 16
 7045              		.cfi_offset 4, -16
 7046              		.cfi_offset 5, -12
 7047              		.cfi_offset 6, -8
 7048              		.cfi_offset 14, -4
 7049 0002 0446     		mov	r4, r0
 7050 0004 0D46     		mov	r5, r1
 7051 0006 1646     		mov	r6, r2
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7052              		.loc 1 3387 0
 7053 0008 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7054 000c 012B     		cmp	r3, #1
 7055 000e 00F09880 		beq	.L472
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7056              		.loc 1 3387 0 is_stmt 0 discriminator 2
 7057 0012 0123     		movs	r3, #1
 7058 0014 80F84030 		strb	r3, [r0, #64]
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7059              		.loc 1 3389 0 is_stmt 1 discriminator 2
 7060 0018 11F0100F 		tst	r1, #16
 7061 001c 36D0     		beq	.L460
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7062              		.loc 1 3389 0 is_stmt 0 discriminator 1
 7063 001e 12F0100F 		tst	r2, #16
 7064 0022 33D0     		beq	.L460
3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
 7065              		.loc 1 3395 0 is_stmt 1
 7066 0024 438D     		ldrh	r3, [r0, #42]
 7067 0026 9BB2     		uxth	r3, r3
 7068 0028 43BB     		cbnz	r3, .L461
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
 7069              		.loc 1 3397 0
 7070 002a C36A     		ldr	r3, [r0, #44]
 7071 002c B3F1007F 		cmp	r3, #33554432
 7072 0030 03D0     		beq	.L462
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
 7073              		.loc 1 3397 0 is_stmt 0 discriminator 2
 7074 0032 C36A     		ldr	r3, [r0, #44]
 7075 0034 B3F1007F 		cmp	r3, #33554432
 7076 0038 09D1     		bne	.L463
 7077              	.L462:
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         (hi2c->State == HAL_I2C_STATE_LISTEN))
 7078              		.loc 1 3398 0 is_stmt 1 discriminator 1
 7079 003a 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7080 003e DBB2     		uxtb	r3, r3
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(((hi2c->XferOptions == I2C_FIRST_AND_LAST_FRAME) || (hi2c->XferOptions == I2C_LAST_FRAME))
 7081              		.loc 1 3397 0 discriminator 1
 7082 0040 282B     		cmp	r3, #40
 7083 0042 04D1     		bne	.L463
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITListenCplt(hi2c, ITFlags);
 7084              		.loc 1 3401 0
 7085 0044 2046     		mov	r0, r4
 7086              	.LVL615:
ARM GAS  /tmp/cccVlT9k.s 			page 230


 7087 0046 2946     		mov	r1, r5
 7088              	.LVL616:
 7089 0048 FFF7FEFF 		bl	I2C_ITListenCplt
 7090              	.LVL617:
 7091 004c 6BE0     		b	.L464
 7092              	.LVL618:
 7093              	.L463:
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else if((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_L
 7094              		.loc 1 3403 0
 7095 004e E36A     		ldr	r3, [r4, #44]
 7096 0050 13F5803F 		cmn	r3, #65536
 7097 0054 0ED0     		beq	.L465
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       else if((hi2c->XferOptions != I2C_NO_OPTION_FRAME) && (hi2c->State == HAL_I2C_STATE_BUSY_TX_L
 7098              		.loc 1 3403 0 is_stmt 0 discriminator 1
 7099 0056 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7100 005a DBB2     		uxtb	r3, r3
 7101 005c 292B     		cmp	r3, #41
 7102 005e 09D1     		bne	.L465
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7103              		.loc 1 3406 0 is_stmt 1
 7104 0060 2368     		ldr	r3, [r4]
 7105 0062 1022     		movs	r2, #16
 7106              	.LVL619:
 7107 0064 DA61     		str	r2, [r3, #28]
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_Flush_TXDR(hi2c);
 7108              		.loc 1 3409 0
 7109 0066 2046     		mov	r0, r4
 7110              	.LVL620:
 7111 0068 FFF7FEFF 		bl	I2C_Flush_TXDR
 7112              	.LVL621:
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
 7113              		.loc 1 3413 0
 7114 006c 2046     		mov	r0, r4
 7115 006e FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7116              	.LVL622:
 7117 0072 58E0     		b	.L464
 7118              	.LVL623:
 7119              	.L465:
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7120              		.loc 1 3418 0
 7121 0074 2368     		ldr	r3, [r4]
 7122 0076 1022     		movs	r2, #16
 7123              	.LVL624:
 7124 0078 DA61     		str	r2, [r3, #28]
 7125 007a 54E0     		b	.L464
 7126              	.LVL625:
 7127              	.L461:
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7128              		.loc 1 3425 0
 7129 007c 0368     		ldr	r3, [r0]
 7130 007e 1022     		movs	r2, #16
 7131              	.LVL626:
 7132 0080 DA61     		str	r2, [r3, #28]
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7133              		.loc 1 3428 0
 7134 0082 436C     		ldr	r3, [r0, #68]
 7135 0084 43F00403 		orr	r3, r3, #4
ARM GAS  /tmp/cccVlT9k.s 			page 231


 7136 0088 4364     		str	r3, [r0, #68]
 7137 008a 4CE0     		b	.L464
 7138              	.LVL627:
 7139              	.L460:
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 7140              		.loc 1 3431 0
 7141 008c 15F0040F 		tst	r5, #4
 7142 0090 1ED0     		beq	.L466
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 7143              		.loc 1 3431 0 is_stmt 0 discriminator 1
 7144 0092 16F0040F 		tst	r6, #4
 7145 0096 1BD0     		beq	.L466
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
 7146              		.loc 1 3433 0 is_stmt 1
 7147 0098 638D     		ldrh	r3, [r4, #42]
 7148 009a 9BB2     		uxth	r3, r3
 7149 009c 63B1     		cbz	r3, .L467
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 7150              		.loc 1 3436 0
 7151 009e 636A     		ldr	r3, [r4, #36]
 7152 00a0 5A1C     		adds	r2, r3, #1
 7153              	.LVL628:
 7154 00a2 6262     		str	r2, [r4, #36]
 7155 00a4 2268     		ldr	r2, [r4]
 7156 00a6 526A     		ldr	r2, [r2, #36]
 7157 00a8 1A70     		strb	r2, [r3]
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 7158              		.loc 1 3437 0
 7159 00aa 238D     		ldrh	r3, [r4, #40]
 7160 00ac 013B     		subs	r3, r3, #1
 7161 00ae 2385     		strh	r3, [r4, #40]	@ movhi
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 7162              		.loc 1 3438 0
 7163 00b0 638D     		ldrh	r3, [r4, #42]
 7164 00b2 013B     		subs	r3, r3, #1
 7165 00b4 9BB2     		uxth	r3, r3
 7166 00b6 6385     		strh	r3, [r4, #42]	@ movhi
 7167              	.L467:
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferCount == 0U) && \
 7168              		.loc 1 3441 0
 7169 00b8 638D     		ldrh	r3, [r4, #42]
 7170 00ba 9BB2     		uxth	r3, r3
 7171 00bc 002B     		cmp	r3, #0
 7172 00be 32D1     		bne	.L464
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****        (hi2c->XferOptions != I2C_NO_OPTION_FRAME))
 7173              		.loc 1 3442 0 discriminator 1
 7174 00c0 E36A     		ldr	r3, [r4, #44]
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferCount == 0U) && \
 7175              		.loc 1 3441 0 discriminator 1
 7176 00c2 13F5803F 		cmn	r3, #65536
 7177 00c6 2ED0     		beq	.L464
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITSlaveSequentialCplt(hi2c);
 7178              		.loc 1 3445 0
 7179 00c8 2046     		mov	r0, r4
 7180              	.LVL629:
 7181 00ca FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7182              	.LVL630:
ARM GAS  /tmp/cccVlT9k.s 			page 232


 7183 00ce 2AE0     		b	.L464
 7184              	.LVL631:
 7185              	.L466:
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 7186              		.loc 1 3448 0
 7187 00d0 15F0080F 		tst	r5, #8
 7188 00d4 07D0     		beq	.L468
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 7189              		.loc 1 3448 0 is_stmt 0 discriminator 1
 7190 00d6 16F0080F 		tst	r6, #8
 7191 00da 04D0     		beq	.L468
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITAddrCplt(hi2c, ITFlags);
 7192              		.loc 1 3450 0 is_stmt 1
 7193 00dc 2046     		mov	r0, r4
 7194              	.LVL632:
 7195 00de 2946     		mov	r1, r5
 7196              	.LVL633:
 7197 00e0 FFF7FEFF 		bl	I2C_ITAddrCplt
 7198              	.LVL634:
 7199 00e4 1FE0     		b	.L464
 7200              	.LVL635:
 7201              	.L468:
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7202              		.loc 1 3452 0
 7203 00e6 15F0020F 		tst	r5, #2
 7204 00ea 1CD0     		beq	.L464
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7205              		.loc 1 3452 0 is_stmt 0 discriminator 1
 7206 00ec 16F0020F 		tst	r6, #2
 7207 00f0 19D0     		beq	.L464
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount > 0U)
 7208              		.loc 1 3458 0 is_stmt 1
 7209 00f2 638D     		ldrh	r3, [r4, #42]
 7210 00f4 9BB2     		uxth	r3, r3
 7211 00f6 6BB1     		cbz	r3, .L469
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 7212              		.loc 1 3461 0
 7213 00f8 2268     		ldr	r2, [r4]
 7214              	.LVL636:
 7215 00fa 636A     		ldr	r3, [r4, #36]
 7216 00fc 591C     		adds	r1, r3, #1
 7217              	.LVL637:
 7218 00fe 6162     		str	r1, [r4, #36]
 7219 0100 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7220 0102 9362     		str	r3, [r2, #40]
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount--;
 7221              		.loc 1 3462 0
 7222 0104 638D     		ldrh	r3, [r4, #42]
 7223 0106 013B     		subs	r3, r3, #1
 7224 0108 9BB2     		uxth	r3, r3
 7225 010a 6385     		strh	r3, [r4, #42]	@ movhi
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferSize--;
 7226              		.loc 1 3463 0
 7227 010c 238D     		ldrh	r3, [r4, #40]
 7228 010e 013B     		subs	r3, r3, #1
 7229 0110 2385     		strh	r3, [r4, #40]	@ movhi
 7230 0112 08E0     		b	.L464
ARM GAS  /tmp/cccVlT9k.s 			page 233


 7231              	.LVL638:
 7232              	.L469:
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
 7233              		.loc 1 3467 0
 7234 0114 E36A     		ldr	r3, [r4, #44]
 7235 0116 B3F1807F 		cmp	r3, #16777216
 7236 011a 01D0     		beq	.L470
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if((hi2c->XferOptions == I2C_NEXT_FRAME) || (hi2c->XferOptions == I2C_FIRST_FRAME))
 7237              		.loc 1 3467 0 is_stmt 0 discriminator 1
 7238 011c E36A     		ldr	r3, [r4, #44]
 7239 011e 13B9     		cbnz	r3, .L464
 7240              	.L470:
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITSlaveSequentialCplt(hi2c);
 7241              		.loc 1 3471 0 is_stmt 1
 7242 0120 2046     		mov	r0, r4
 7243              	.LVL639:
 7244 0122 FFF7FEFF 		bl	I2C_ITSlaveSequentialCplt
 7245              	.LVL640:
 7246              	.L464:
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7247              		.loc 1 3477 0
 7248 0126 15F0200F 		tst	r5, #32
 7249 012a 06D0     		beq	.L471
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7250              		.loc 1 3477 0 is_stmt 0 discriminator 1
 7251 012c 16F0200F 		tst	r6, #32
 7252 0130 03D0     		beq	.L471
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
 7253              		.loc 1 3480 0 is_stmt 1
 7254 0132 2046     		mov	r0, r4
 7255 0134 2946     		mov	r1, r5
 7256 0136 FFF7FEFF 		bl	I2C_ITSlaveCplt
 7257              	.LVL641:
 7258              	.L471:
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 7259              		.loc 1 3484 0
 7260 013a 0020     		movs	r0, #0
 7261 013c 84F84000 		strb	r0, [r4, #64]
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 7262              		.loc 1 3486 0
 7263 0140 70BD     		pop	{r4, r5, r6, pc}
 7264              	.LVL642:
 7265              	.L472:
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7266              		.loc 1 3387 0
 7267 0142 0220     		movs	r0, #2
 7268              	.LVL643:
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 7269              		.loc 1 3487 0
 7270 0144 70BD     		pop	{r4, r5, r6, pc}
 7271              		.cfi_endproc
 7272              	.LFE169:
 7274 0146 00BF     		.section	.text.I2C_Slave_ISR_DMA,"ax",%progbits
 7275              		.align	2
 7276              		.thumb
 7277              		.thumb_func
 7279              	I2C_Slave_ISR_DMA:
ARM GAS  /tmp/cccVlT9k.s 			page 234


 7280              	.LFB171:
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 7281              		.loc 1 3587 0
 7282              		.cfi_startproc
 7283              		@ args = 0, pretend = 0, frame = 0
 7284              		@ frame_needed = 0, uses_anonymous_args = 0
 7285              	.LVL644:
 7286 0000 10B5     		push	{r4, lr}
 7287              	.LCFI67:
 7288              		.cfi_def_cfa_offset 8
 7289              		.cfi_offset 4, -8
 7290              		.cfi_offset 14, -4
 7291 0002 0446     		mov	r4, r0
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7292              		.loc 1 3589 0
 7293 0004 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7294 0008 012B     		cmp	r3, #1
 7295 000a 40D0     		beq	.L481
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7296              		.loc 1 3589 0 is_stmt 0 discriminator 2
 7297 000c 0123     		movs	r3, #1
 7298 000e 80F84030 		strb	r3, [r0, #64]
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7299              		.loc 1 3591 0 is_stmt 1 discriminator 2
 7300 0012 11F0100F 		tst	r1, #16
 7301 0016 23D0     		beq	.L475
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7302              		.loc 1 3591 0 is_stmt 0 discriminator 1
 7303 0018 12F0100F 		tst	r2, #16
 7304 001c 20D0     		beq	.L475
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 7305              		.loc 1 3597 0 is_stmt 1
 7306 001e 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 7307 0022 DBB2     		uxtb	r3, r3
 7308 0024 212B     		cmp	r3, #33
 7309 0026 07D1     		bne	.L476
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 7310              		.loc 1 3597 0 is_stmt 0 discriminator 1
 7311 0028 836B     		ldr	r3, [r0, #56]
 7312 002a 1B68     		ldr	r3, [r3]
 7313 002c 5B68     		ldr	r3, [r3, #4]
 7314 002e D3F10103 		rsbs	r3, r3, #1
 7315 0032 38BF     		it	cc
 7316 0034 0023     		movcc	r3, #0
 7317 0036 06E0     		b	.L477
 7318              	.L476:
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 7319              		.loc 1 3597 0 discriminator 2
 7320 0038 C36B     		ldr	r3, [r0, #60]
 7321 003a 1B68     		ldr	r3, [r3]
 7322 003c 5B68     		ldr	r3, [r3, #4]
 7323 003e D3F10103 		rsbs	r3, r3, #1
 7324 0042 38BF     		it	cc
 7325 0044 0023     		movcc	r3, #0
 7326              	.L477:
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(I2C_GET_DMA_REMAIN_DATA(hi2c) == 0U)
 7327              		.loc 1 3597 0 discriminator 3
ARM GAS  /tmp/cccVlT9k.s 			page 235


 7328 0046 1BB1     		cbz	r3, .L478
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7329              		.loc 1 3600 0 is_stmt 1
 7330 0048 2368     		ldr	r3, [r4]
 7331 004a 1022     		movs	r2, #16
 7332              	.LVL645:
 7333 004c DA61     		str	r2, [r3, #28]
 7334 004e 1AE0     		b	.L479
 7335              	.LVL646:
 7336              	.L478:
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7337              		.loc 1 3606 0
 7338 0050 2368     		ldr	r3, [r4]
 7339 0052 1022     		movs	r2, #16
 7340              	.LVL647:
 7341 0054 DA61     		str	r2, [r3, #28]
3609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7342              		.loc 1 3609 0
 7343 0056 636C     		ldr	r3, [r4, #68]
 7344 0058 43F00403 		orr	r3, r3, #4
 7345 005c 6364     		str	r3, [r4, #68]
 7346 005e 12E0     		b	.L479
 7347              	.LVL648:
 7348              	.L475:
3612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 7349              		.loc 1 3612 0
 7350 0060 11F0080F 		tst	r1, #8
 7351 0064 06D0     		beq	.L480
3612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_ADDR) != RESET) && ((ITSources & I2C_IT_ADDRI) != RESET))
 7352              		.loc 1 3612 0 is_stmt 0 discriminator 1
 7353 0066 12F0080F 		tst	r2, #8
 7354 006a 03D0     		beq	.L480
3615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ADDR);
 7355              		.loc 1 3615 0 is_stmt 1
 7356 006c 2368     		ldr	r3, [r4]
 7357 006e 0822     		movs	r2, #8
 7358              	.LVL649:
 7359 0070 DA61     		str	r2, [r3, #28]
 7360 0072 08E0     		b	.L479
 7361              	.LVL650:
 7362              	.L480:
3617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7363              		.loc 1 3617 0
 7364 0074 11F0200F 		tst	r1, #32
 7365 0078 05D0     		beq	.L479
3617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7366              		.loc 1 3617 0 is_stmt 0 discriminator 1
 7367 007a 12F0200F 		tst	r2, #32
 7368 007e 02D0     		beq	.L479
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITSlaveCplt(hi2c, ITFlags);
 7369              		.loc 1 3620 0 is_stmt 1
 7370 0080 2046     		mov	r0, r4
 7371              	.LVL651:
 7372 0082 FFF7FEFF 		bl	I2C_ITSlaveCplt
 7373              	.LVL652:
 7374              	.L479:
3624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 236


 7375              		.loc 1 3624 0
 7376 0086 0020     		movs	r0, #0
 7377 0088 84F84000 		strb	r0, [r4, #64]
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 7378              		.loc 1 3626 0
 7379 008c 10BD     		pop	{r4, pc}
 7380              	.LVL653:
 7381              	.L481:
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7382              		.loc 1 3589 0
 7383 008e 0220     		movs	r0, #2
 7384              	.LVL654:
3627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 7385              		.loc 1 3627 0
 7386 0090 10BD     		pop	{r4, pc}
 7387              		.cfi_endproc
 7388              	.LFE171:
 7390 0092 00BF     		.section	.text.I2C_ITMasterCplt,"ax",%progbits
 7391              		.align	2
 7392              		.thumb
 7393              		.thumb_func
 7395              	I2C_ITMasterCplt:
 7396              	.LFB177:
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 7397              		.loc 1 3942 0
 7398              		.cfi_startproc
 7399              		@ args = 0, pretend = 0, frame = 0
 7400              		@ frame_needed = 0, uses_anonymous_args = 0
 7401              	.LVL655:
 7402 0000 10B5     		push	{r4, lr}
 7403              	.LCFI68:
 7404              		.cfi_def_cfa_offset 8
 7405              		.cfi_offset 4, -8
 7406              		.cfi_offset 14, -4
 7407 0002 0446     		mov	r4, r0
3944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 7408              		.loc 1 3944 0
 7409 0004 0368     		ldr	r3, [r0]
 7410 0006 2022     		movs	r2, #32
 7411 0008 DA61     		str	r2, [r3, #28]
3947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_RESET_CR2(hi2c);
 7412              		.loc 1 3947 0
 7413 000a 0368     		ldr	r3, [r0]
 7414 000c 5A68     		ldr	r2, [r3, #4]
 7415 000e 22F0FF72 		bic	r2, r2, #33423360
 7416 0012 22F48B32 		bic	r2, r2, #71168
 7417 0016 22F4FF72 		bic	r2, r2, #510
 7418 001a 22F00102 		bic	r2, r2, #1
 7419 001e 5A60     		str	r2, [r3, #4]
3950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->PreviousState = I2C_STATE_NONE;
 7420              		.loc 1 3950 0
 7421 0020 0023     		movs	r3, #0
 7422 0022 0363     		str	r3, [r0, #48]
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferISR       = NULL;
 7423              		.loc 1 3951 0
 7424 0024 4363     		str	r3, [r0, #52]
3952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->XferOptions   = I2C_NO_OPTION_FRAME;
ARM GAS  /tmp/cccVlT9k.s 			page 237


 7425              		.loc 1 3952 0
 7426 0026 A3F58033 		sub	r3, r3, #65536
 7427 002a C362     		str	r3, [r0, #44]
3954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((ITFlags & I2C_FLAG_AF) != RESET)
 7428              		.loc 1 3954 0
 7429 002c 11F0100F 		tst	r1, #16
 7430 0030 06D0     		beq	.L483
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7431              		.loc 1 3957 0
 7432 0032 0368     		ldr	r3, [r0]
 7433 0034 1022     		movs	r2, #16
 7434 0036 DA61     		str	r2, [r3, #28]
3960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7435              		.loc 1 3960 0
 7436 0038 436C     		ldr	r3, [r0, #68]
 7437 003a 43F00403 		orr	r3, r3, #4
 7438 003e 4364     		str	r3, [r0, #68]
 7439              	.L483:
3964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Flush_TXDR(hi2c);
 7440              		.loc 1 3964 0
 7441 0040 2046     		mov	r0, r4
 7442              	.LVL656:
 7443 0042 FFF7FEFF 		bl	I2C_Flush_TXDR
 7444              	.LVL657:
3967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_Disable_IRQ(hi2c, I2C_XFER_TX_IT| I2C_XFER_RX_IT);
 7445              		.loc 1 3967 0
 7446 0046 2046     		mov	r0, r4
 7447 0048 0321     		movs	r1, #3
 7448 004a FFF7FEFF 		bl	I2C_Disable_IRQ
 7449              	.LVL658:
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
 7450              		.loc 1 3970 0
 7451 004e 636C     		ldr	r3, [r4, #68]
 7452 0050 23B9     		cbnz	r3, .L484
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->ErrorCode != HAL_I2C_ERROR_NONE) || (hi2c->State == HAL_I2C_STATE_ABORT))
 7453              		.loc 1 3970 0 is_stmt 0 discriminator 1
 7454 0052 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7455 0056 DBB2     		uxtb	r3, r3
 7456 0058 602B     		cmp	r3, #96
 7457 005a 04D1     		bne	.L485
 7458              	.L484:
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 7459              		.loc 1 3973 0 is_stmt 1
 7460 005c 616C     		ldr	r1, [r4, #68]
 7461 005e 2046     		mov	r0, r4
 7462 0060 FFF7FEFF 		bl	I2C_ITError
 7463              	.LVL659:
 7464 0064 10BD     		pop	{r4, pc}
 7465              	.LVL660:
 7466              	.L485:
3976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_TX)
 7467              		.loc 1 3976 0
 7468 0066 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7469 006a DBB2     		uxtb	r3, r3
 7470 006c 212B     		cmp	r3, #33
 7471 006e 19D1     		bne	.L487
3978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
ARM GAS  /tmp/cccVlT9k.s 			page 238


 7472              		.loc 1 3978 0
 7473 0070 2023     		movs	r3, #32
 7474 0072 84F84130 		strb	r3, [r4, #65]
3980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
 7475              		.loc 1 3980 0
 7476 0076 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 7477 007a DBB2     		uxtb	r3, r3
 7478 007c 402B     		cmp	r3, #64
 7479 007e 08D1     		bne	.L488
3982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 7480              		.loc 1 3982 0
 7481 0080 0023     		movs	r3, #0
 7482 0082 84F84230 		strb	r3, [r4, #66]
3985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 7483              		.loc 1 3985 0
 7484 0086 84F84030 		strb	r3, [r4, #64]
3988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MemTxCpltCallback(hi2c);
 7485              		.loc 1 3988 0
 7486 008a 2046     		mov	r0, r4
 7487 008c FFF7FEFF 		bl	HAL_I2C_MemTxCpltCallback
 7488              	.LVL661:
 7489 0090 10BD     		pop	{r4, pc}
 7490              	.LVL662:
 7491              	.L488:
3992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 7492              		.loc 1 3992 0
 7493 0092 0023     		movs	r3, #0
 7494 0094 84F84230 		strb	r3, [r4, #66]
3995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 7495              		.loc 1 3995 0
 7496 0098 84F84030 		strb	r3, [r4, #64]
3998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MasterTxCpltCallback(hi2c);
 7497              		.loc 1 3998 0
 7498 009c 2046     		mov	r0, r4
 7499 009e FFF7FEFF 		bl	HAL_I2C_MasterTxCpltCallback
 7500              	.LVL663:
 7501 00a2 10BD     		pop	{r4, pc}
 7502              	.LVL664:
 7503              	.L487:
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
 7504              		.loc 1 4002 0
 7505 00a4 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7506 00a8 DBB2     		uxtb	r3, r3
 7507 00aa 222B     		cmp	r3, #34
 7508 00ac 18D1     		bne	.L482
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 7509              		.loc 1 4004 0
 7510 00ae 2023     		movs	r3, #32
 7511 00b0 84F84130 		strb	r3, [r4, #65]
4006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if (hi2c->Mode == HAL_I2C_MODE_MEM)
 7512              		.loc 1 4006 0
 7513 00b4 94F84230 		ldrb	r3, [r4, #66]	@ zero_extendqisi2
 7514 00b8 DBB2     		uxtb	r3, r3
 7515 00ba 402B     		cmp	r3, #64
 7516 00bc 08D1     		bne	.L489
4008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 7517              		.loc 1 4008 0
ARM GAS  /tmp/cccVlT9k.s 			page 239


 7518 00be 0023     		movs	r3, #0
 7519 00c0 84F84230 		strb	r3, [r4, #66]
4011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 7520              		.loc 1 4011 0
 7521 00c4 84F84030 		strb	r3, [r4, #64]
4013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MemRxCpltCallback(hi2c);
 7522              		.loc 1 4013 0
 7523 00c8 2046     		mov	r0, r4
 7524 00ca FFF7FEFF 		bl	HAL_I2C_MemRxCpltCallback
 7525              	.LVL665:
 7526 00ce 10BD     		pop	{r4, pc}
 7527              	.LVL666:
 7528              	.L489:
4017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->Mode = HAL_I2C_MODE_NONE;
 7529              		.loc 1 4017 0
 7530 00d0 0023     		movs	r3, #0
 7531 00d2 84F84230 		strb	r3, [r4, #66]
4020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       __HAL_UNLOCK(hi2c);
 7532              		.loc 1 4020 0
 7533 00d6 84F84030 		strb	r3, [r4, #64]
4022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       HAL_I2C_MasterRxCpltCallback(hi2c);
 7534              		.loc 1 4022 0
 7535 00da 2046     		mov	r0, r4
 7536 00dc FFF7FEFF 		bl	HAL_I2C_MasterRxCpltCallback
 7537              	.LVL667:
 7538              	.L482:
 7539 00e0 10BD     		pop	{r4, pc}
 7540              		.cfi_endproc
 7541              	.LFE177:
 7543 00e2 00BF     		.section	.text.I2C_Master_ISR_IT,"ax",%progbits
 7544              		.align	2
 7545              		.thumb
 7546              		.thumb_func
 7548              	I2C_Master_ISR_IT:
 7549              	.LFB168:
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 7550              		.loc 1 3264 0
 7551              		.cfi_startproc
 7552              		@ args = 0, pretend = 0, frame = 0
 7553              		@ frame_needed = 0, uses_anonymous_args = 0
 7554              	.LVL668:
 7555 0000 70B5     		push	{r4, r5, r6, lr}
 7556              	.LCFI69:
 7557              		.cfi_def_cfa_offset 16
 7558              		.cfi_offset 4, -16
 7559              		.cfi_offset 5, -12
 7560              		.cfi_offset 6, -8
 7561              		.cfi_offset 14, -4
 7562 0002 82B0     		sub	sp, sp, #8
 7563              	.LCFI70:
 7564              		.cfi_def_cfa_offset 24
 7565 0004 0446     		mov	r4, r0
 7566 0006 0D46     		mov	r5, r1
 7567 0008 1646     		mov	r6, r2
 7568              	.LVL669:
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7569              		.loc 1 3268 0
ARM GAS  /tmp/cccVlT9k.s 			page 240


 7570 000a 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7571 000e 012B     		cmp	r3, #1
 7572 0010 00F0AC80 		beq	.L504
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7573              		.loc 1 3268 0 is_stmt 0 discriminator 2
 7574 0014 0123     		movs	r3, #1
 7575 0016 80F84030 		strb	r3, [r0, #64]
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7576              		.loc 1 3270 0 is_stmt 1 discriminator 2
 7577 001a 11F0100F 		tst	r1, #16
 7578 001e 0CD0     		beq	.L492
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7579              		.loc 1 3270 0 is_stmt 0 discriminator 1
 7580 0020 12F0100F 		tst	r2, #16
 7581 0024 09D0     		beq	.L492
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7582              		.loc 1 3273 0 is_stmt 1
 7583 0026 0368     		ldr	r3, [r0]
 7584 0028 1022     		movs	r2, #16
 7585              	.LVL670:
 7586 002a DA61     		str	r2, [r3, #28]
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7587              		.loc 1 3278 0
 7588 002c 436C     		ldr	r3, [r0, #68]
 7589 002e 43F00403 		orr	r3, r3, #4
 7590 0032 4364     		str	r3, [r0, #68]
3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 7591              		.loc 1 3281 0
 7592 0034 FFF7FEFF 		bl	I2C_Flush_TXDR
 7593              	.LVL671:
 7594 0038 8AE0     		b	.L493
 7595              	.LVL672:
 7596              	.L492:
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 7597              		.loc 1 3283 0
 7598 003a 15F0040F 		tst	r5, #4
 7599 003e 10D0     		beq	.L494
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_RXNE) != RESET) && ((ITSources & I2C_IT_RXI) != RESET))
 7600              		.loc 1 3283 0 is_stmt 0 discriminator 1
 7601 0040 16F0040F 		tst	r6, #4
 7602 0044 0DD0     		beq	.L494
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     (*hi2c->pBuffPtr++) = hi2c->Instance->RXDR;
 7603              		.loc 1 3286 0 is_stmt 1
 7604 0046 636A     		ldr	r3, [r4, #36]
 7605 0048 5A1C     		adds	r2, r3, #1
 7606              	.LVL673:
 7607 004a 6262     		str	r2, [r4, #36]
 7608 004c 2268     		ldr	r2, [r4]
 7609 004e 526A     		ldr	r2, [r2, #36]
 7610 0050 1A70     		strb	r2, [r3]
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize--;
 7611              		.loc 1 3287 0
 7612 0052 238D     		ldrh	r3, [r4, #40]
 7613 0054 013B     		subs	r3, r3, #1
 7614 0056 2385     		strh	r3, [r4, #40]	@ movhi
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount--;
 7615              		.loc 1 3288 0
ARM GAS  /tmp/cccVlT9k.s 			page 241


 7616 0058 638D     		ldrh	r3, [r4, #42]
 7617 005a 013B     		subs	r3, r3, #1
 7618 005c 9BB2     		uxth	r3, r3
 7619 005e 6385     		strh	r3, [r4, #42]	@ movhi
 7620 0060 76E0     		b	.L493
 7621              	.LVL674:
 7622              	.L494:
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7623              		.loc 1 3290 0
 7624 0062 15F0020F 		tst	r5, #2
 7625 0066 10D0     		beq	.L495
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TXIS) != RESET) && ((ITSources & I2C_IT_TXI) != RESET))
 7626              		.loc 1 3290 0 is_stmt 0 discriminator 1
 7627 0068 16F0020F 		tst	r6, #2
 7628 006c 0DD0     		beq	.L495
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->Instance->TXDR = (*hi2c->pBuffPtr++);
 7629              		.loc 1 3293 0 is_stmt 1
 7630 006e 2268     		ldr	r2, [r4]
 7631              	.LVL675:
 7632 0070 636A     		ldr	r3, [r4, #36]
 7633 0072 591C     		adds	r1, r3, #1
 7634              	.LVL676:
 7635 0074 6162     		str	r1, [r4, #36]
 7636 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7637 0078 9362     		str	r3, [r2, #40]
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferSize--;
 7638              		.loc 1 3294 0
 7639 007a 238D     		ldrh	r3, [r4, #40]
 7640 007c 013B     		subs	r3, r3, #1
 7641 007e 2385     		strh	r3, [r4, #40]	@ movhi
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->XferCount--;	
 7642              		.loc 1 3295 0
 7643 0080 638D     		ldrh	r3, [r4, #42]
 7644 0082 013B     		subs	r3, r3, #1
 7645 0084 9BB2     		uxth	r3, r3
 7646 0086 6385     		strh	r3, [r4, #42]	@ movhi
 7647 0088 62E0     		b	.L493
 7648              	.LVL677:
 7649              	.L495:
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7650              		.loc 1 3297 0
 7651 008a 15F0800F 		tst	r5, #128
 7652 008e 40D0     		beq	.L496
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7653              		.loc 1 3297 0 is_stmt 0 discriminator 1
 7654 0090 16F0400F 		tst	r6, #64
 7655 0094 3DD0     		beq	.L496
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 7656              		.loc 1 3299 0 is_stmt 1
 7657 0096 238D     		ldrh	r3, [r4, #40]
 7658 0098 6BBB     		cbnz	r3, .L497
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if((hi2c->XferSize == 0U) && (hi2c->XferCount != 0U))
 7659              		.loc 1 3299 0 is_stmt 0 discriminator 1
 7660 009a 638D     		ldrh	r3, [r4, #42]
 7661 009c 9BB2     		uxth	r3, r3
 7662 009e 53B3     		cbz	r3, .L497
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
ARM GAS  /tmp/cccVlT9k.s 			page 242


 7663              		.loc 1 3301 0 is_stmt 1
 7664 00a0 2368     		ldr	r3, [r4]
 7665 00a2 5B68     		ldr	r3, [r3, #4]
 7666 00a4 C3F30901 		ubfx	r1, r3, #0, #10
 7667              	.LVL678:
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
 7668              		.loc 1 3303 0
 7669 00a8 638D     		ldrh	r3, [r4, #42]
 7670 00aa 9BB2     		uxth	r3, r3
 7671 00ac FF2B     		cmp	r3, #255
 7672 00ae 09D9     		bls	.L498
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
 7673              		.loc 1 3305 0
 7674 00b0 FF22     		movs	r2, #255
 7675              	.LVL679:
 7676 00b2 2285     		strh	r2, [r4, #40]	@ movhi
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 7677              		.loc 1 3306 0
 7678 00b4 0023     		movs	r3, #0
 7679 00b6 0093     		str	r3, [sp]
 7680 00b8 2046     		mov	r0, r4
 7681              	.LVL680:
 7682 00ba 4FF08073 		mov	r3, #16777216
 7683 00be FFF7FEFF 		bl	I2C_TransferConfig
 7684              	.LVL681:
 7685 00c2 45E0     		b	.L493
 7686              	.LVL682:
 7687              	.L498:
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
 7688              		.loc 1 3310 0
 7689 00c4 638D     		ldrh	r3, [r4, #42]
 7690 00c6 2385     		strh	r3, [r4, #40]	@ movhi
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferOptions != I2C_NO_OPTION_FRAME)
 7691              		.loc 1 3311 0
 7692 00c8 E36A     		ldr	r3, [r4, #44]
 7693 00ca 13F5803F 		cmn	r3, #65536
 7694 00ce 08D0     		beq	.L499
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, hi2c->XferOptions, I2C_NO_STARTSTOP)
 7695              		.loc 1 3313 0
 7696 00d0 E36A     		ldr	r3, [r4, #44]
 7697 00d2 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 7698              	.LVL683:
 7699 00d6 0020     		movs	r0, #0
 7700              	.LVL684:
 7701 00d8 0090     		str	r0, [sp]
 7702 00da 2046     		mov	r0, r4
 7703 00dc FFF7FEFF 		bl	I2C_TransferConfig
 7704              	.LVL685:
 7705 00e0 36E0     		b	.L493
 7706              	.LVL686:
 7707              	.L499:
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 7708              		.loc 1 3317 0
 7709 00e2 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 7710              	.LVL687:
 7711 00e6 0023     		movs	r3, #0
 7712 00e8 0093     		str	r3, [sp]
ARM GAS  /tmp/cccVlT9k.s 			page 243


 7713 00ea 2046     		mov	r0, r4
 7714              	.LVL688:
 7715 00ec 4FF00073 		mov	r3, #33554432
 7716 00f0 FFF7FEFF 		bl	I2C_TransferConfig
 7717              	.LVL689:
 7718 00f4 2CE0     		b	.L493
 7719              	.LVL690:
 7720              	.L497:
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
 7721              		.loc 1 3324 0
 7722 00f6 2368     		ldr	r3, [r4]
 7723 00f8 5B68     		ldr	r3, [r3, #4]
 7724 00fa 13F0007F 		tst	r3, #33554432
 7725 00fe 03D1     		bne	.L500
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITMasterSequentialCplt(hi2c);
 7726              		.loc 1 3327 0
 7727 0100 2046     		mov	r0, r4
 7728              	.LVL691:
 7729 0102 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
 7730              	.LVL692:
 7731 0106 23E0     		b	.L493
 7732              	.LVL693:
 7733              	.L500:
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 7734              		.loc 1 3333 0
 7735 0108 2046     		mov	r0, r4
 7736              	.LVL694:
 7737 010a 4021     		movs	r1, #64
 7738              	.LVL695:
 7739 010c FFF7FEFF 		bl	I2C_ITError
 7740              	.LVL696:
 7741 0110 1EE0     		b	.L493
 7742              	.LVL697:
 7743              	.L496:
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7744              		.loc 1 3337 0
 7745 0112 15F0400F 		tst	r5, #64
 7746 0116 1BD0     		beq	.L493
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TC) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7747              		.loc 1 3337 0 is_stmt 0 discriminator 1
 7748 0118 16F0400F 		tst	r6, #64
 7749 011c 18D0     		beq	.L493
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount == 0U)
 7750              		.loc 1 3339 0 is_stmt 1
 7751 011e 638D     		ldrh	r3, [r4, #42]
 7752 0120 9BB2     		uxth	r3, r3
 7753 0122 8BB9     		cbnz	r3, .L501
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(I2C_GET_STOP_MODE(hi2c) != I2C_AUTOEND_MODE)
 7754              		.loc 1 3341 0
 7755 0124 2368     		ldr	r3, [r4]
 7756 0126 5A68     		ldr	r2, [r3, #4]
 7757              	.LVL698:
 7758 0128 12F0007F 		tst	r2, #33554432
 7759 012c 10D1     		bne	.L493
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         if(hi2c->XferOptions == I2C_NO_OPTION_FRAME)
 7760              		.loc 1 3344 0
 7761 012e E26A     		ldr	r2, [r4, #44]
ARM GAS  /tmp/cccVlT9k.s 			page 244


 7762 0130 12F5803F 		cmn	r2, #65536
 7763 0134 04D1     		bne	.L502
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           hi2c->Instance->CR2 |= I2C_CR2_STOP;
 7764              		.loc 1 3347 0
 7765 0136 5A68     		ldr	r2, [r3, #4]
 7766 0138 42F48042 		orr	r2, r2, #16384
 7767 013c 5A60     		str	r2, [r3, #4]
 7768 013e 07E0     		b	.L493
 7769              	.L502:
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****           I2C_ITMasterSequentialCplt(hi2c);
 7770              		.loc 1 3352 0
 7771 0140 2046     		mov	r0, r4
 7772              	.LVL699:
 7773 0142 FFF7FEFF 		bl	I2C_ITMasterSequentialCplt
 7774              	.LVL700:
 7775 0146 03E0     		b	.L493
 7776              	.LVL701:
 7777              	.L501:
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 7778              		.loc 1 3360 0
 7779 0148 2046     		mov	r0, r4
 7780              	.LVL702:
 7781 014a 4021     		movs	r1, #64
 7782              	.LVL703:
 7783 014c FFF7FEFF 		bl	I2C_ITError
 7784              	.LVL704:
 7785              	.L493:
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7786              		.loc 1 3364 0
 7787 0150 15F0200F 		tst	r5, #32
 7788 0154 06D0     		beq	.L503
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7789              		.loc 1 3364 0 is_stmt 0 discriminator 1
 7790 0156 16F0200F 		tst	r6, #32
 7791 015a 03D0     		beq	.L503
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
 7792              		.loc 1 3367 0 is_stmt 1
 7793 015c 2046     		mov	r0, r4
 7794 015e 2946     		mov	r1, r5
 7795 0160 FFF7FEFF 		bl	I2C_ITMasterCplt
 7796              	.LVL705:
 7797              	.L503:
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 7798              		.loc 1 3371 0
 7799 0164 0020     		movs	r0, #0
 7800 0166 84F84000 		strb	r0, [r4, #64]
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 7801              		.loc 1 3373 0
 7802 016a 00E0     		b	.L491
 7803              	.LVL706:
 7804              	.L504:
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7805              		.loc 1 3268 0
 7806 016c 0220     		movs	r0, #2
 7807              	.LVL707:
 7808              	.L491:
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
ARM GAS  /tmp/cccVlT9k.s 			page 245


 7809              		.loc 1 3374 0
 7810 016e 02B0     		add	sp, sp, #8
 7811              		@ sp needed
 7812 0170 70BD     		pop	{r4, r5, r6, pc}
 7813              		.cfi_endproc
 7814              	.LFE168:
 7816 0172 00BF     		.section	.text.I2C_Master_ISR_DMA,"ax",%progbits
 7817              		.align	2
 7818              		.thumb
 7819              		.thumb_func
 7821              	I2C_Master_ISR_DMA:
 7822              	.LFB170:
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 7823              		.loc 1 3498 0
 7824              		.cfi_startproc
 7825              		@ args = 0, pretend = 0, frame = 0
 7826              		@ frame_needed = 0, uses_anonymous_args = 0
 7827              	.LVL708:
 7828 0000 10B5     		push	{r4, lr}
 7829              	.LCFI71:
 7830              		.cfi_def_cfa_offset 8
 7831              		.cfi_offset 4, -8
 7832              		.cfi_offset 14, -4
 7833 0002 82B0     		sub	sp, sp, #8
 7834              	.LCFI72:
 7835              		.cfi_def_cfa_offset 16
 7836 0004 0446     		mov	r4, r0
 7837              	.LVL709:
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7838              		.loc 1 3503 0
 7839 0006 90F84030 		ldrb	r3, [r0, #64]	@ zero_extendqisi2
 7840 000a 012B     		cmp	r3, #1
 7841 000c 65D0     		beq	.L514
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7842              		.loc 1 3503 0 is_stmt 0 discriminator 2
 7843 000e 0123     		movs	r3, #1
 7844 0010 80F84030 		strb	r3, [r0, #64]
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7845              		.loc 1 3505 0 is_stmt 1 discriminator 2
 7846 0014 11F0100F 		tst	r1, #16
 7847 0018 10D0     		beq	.L507
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((ITFlags & I2C_FLAG_AF) != RESET) && ((ITSources & I2C_IT_NACKI) != RESET))
 7848              		.loc 1 3505 0 is_stmt 0 discriminator 1
 7849 001a 12F0100F 		tst	r2, #16
 7850 001e 0DD0     		beq	.L507
3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 7851              		.loc 1 3508 0 is_stmt 1
 7852 0020 0368     		ldr	r3, [r0]
 7853 0022 1022     		movs	r2, #16
 7854              	.LVL710:
 7855 0024 DA61     		str	r2, [r3, #28]
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_AF;
 7856              		.loc 1 3511 0
 7857 0026 436C     		ldr	r3, [r0, #68]
 7858 0028 43F00403 		orr	r3, r3, #4
 7859 002c 4364     		str	r3, [r0, #68]
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Enable_IRQ(hi2c, I2C_XFER_CPLT_IT);
ARM GAS  /tmp/cccVlT9k.s 			page 246


 7860              		.loc 1 3516 0
 7861 002e 1221     		movs	r1, #18
 7862              	.LVL711:
 7863 0030 FFF7FEFF 		bl	I2C_Enable_IRQ
 7864              	.LVL712:
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_Flush_TXDR(hi2c);
 7865              		.loc 1 3519 0
 7866 0034 2046     		mov	r0, r4
 7867 0036 FFF7FEFF 		bl	I2C_Flush_TXDR
 7868              	.LVL713:
 7869 003a 4AE0     		b	.L508
 7870              	.LVL714:
 7871              	.L507:
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7872              		.loc 1 3521 0
 7873 003c 11F0800F 		tst	r1, #128
 7874 0040 3ED0     		beq	.L509
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_TCR) != RESET) && ((ITSources & I2C_IT_TCI) != RESET))
 7875              		.loc 1 3521 0 is_stmt 0 discriminator 1
 7876 0042 12F0400F 		tst	r2, #64
 7877 0046 3BD0     		beq	.L509
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_DISABLE_IT(hi2c, I2C_IT_TCI);
 7878              		.loc 1 3524 0 is_stmt 1
 7879 0048 2368     		ldr	r3, [r4]
 7880 004a 1A68     		ldr	r2, [r3]
 7881              	.LVL715:
 7882 004c 22F04002 		bic	r2, r2, #64
 7883 0050 1A60     		str	r2, [r3]
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     if(hi2c->XferCount != 0U)
 7884              		.loc 1 3526 0
 7885 0052 638D     		ldrh	r3, [r4, #42]
 7886 0054 9BB2     		uxth	r3, r3
 7887 0056 002B     		cmp	r3, #0
 7888 0058 2DD0     		beq	.L510
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       devaddress = (hi2c->Instance->CR2 & I2C_CR2_SADD);
 7889              		.loc 1 3529 0
 7890 005a 2368     		ldr	r3, [r4]
 7891 005c 5968     		ldr	r1, [r3, #4]
 7892              	.LVL716:
 7893 005e C1F30901 		ubfx	r1, r1, #0, #10
 7894              	.LVL717:
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->XferCount > MAX_NBYTE_SIZE)
 7895              		.loc 1 3532 0
 7896 0062 638D     		ldrh	r3, [r4, #42]
 7897 0064 9BB2     		uxth	r3, r3
 7898 0066 FF2B     		cmp	r3, #255
 7899 0068 04D9     		bls	.L511
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = MAX_NBYTE_SIZE;
 7900              		.loc 1 3534 0
 7901 006a FF23     		movs	r3, #255
 7902 006c 2385     		strh	r3, [r4, #40]	@ movhi
 7903              	.LVL718:
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         xfermode = I2C_RELOAD_MODE;
 7904              		.loc 1 3535 0
 7905 006e 4FF08073 		mov	r3, #16777216
 7906 0072 03E0     		b	.L512
 7907              	.LVL719:
ARM GAS  /tmp/cccVlT9k.s 			page 247


 7908              	.L511:
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->XferSize = hi2c->XferCount;
 7909              		.loc 1 3539 0
 7910 0074 638D     		ldrh	r3, [r4, #42]
 7911 0076 2385     		strh	r3, [r4, #40]	@ movhi
 7912              	.LVL720:
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         xfermode = I2C_AUTOEND_MODE;
 7913              		.loc 1 3540 0
 7914 0078 4FF00073 		mov	r3, #33554432
 7915              	.LVL721:
 7916              	.L512:
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_TransferConfig(hi2c, devaddress, hi2c->XferSize, xfermode, I2C_NO_STARTSTOP);
 7917              		.loc 1 3544 0
 7918 007c 94F82820 		ldrb	r2, [r4, #40]	@ zero_extendqisi2
 7919 0080 0020     		movs	r0, #0
 7920              	.LVL722:
 7921 0082 0090     		str	r0, [sp]
 7922 0084 2046     		mov	r0, r4
 7923 0086 FFF7FEFF 		bl	I2C_TransferConfig
 7924              	.LVL723:
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       hi2c->XferCount -= hi2c->XferSize;
 7925              		.loc 1 3547 0
 7926 008a 628D     		ldrh	r2, [r4, #42]
 7927 008c 238D     		ldrh	r3, [r4, #40]
 7928 008e D31A     		subs	r3, r2, r3
 7929 0090 9BB2     		uxth	r3, r3
 7930 0092 6385     		strh	r3, [r4, #42]	@ movhi
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       if(hi2c->State == HAL_I2C_STATE_BUSY_RX)
 7931              		.loc 1 3550 0
 7932 0094 94F84130 		ldrb	r3, [r4, #65]	@ zero_extendqisi2
 7933 0098 DBB2     		uxtb	r3, r3
 7934 009a 222B     		cmp	r3, #34
 7935 009c 05D1     		bne	.L513
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_RXDMAEN;
 7936              		.loc 1 3552 0
 7937 009e 2368     		ldr	r3, [r4]
 7938 00a0 1A68     		ldr	r2, [r3]
 7939 00a2 42F40042 		orr	r2, r2, #32768
 7940 00a6 1A60     		str	r2, [r3]
 7941 00a8 13E0     		b	.L508
 7942              	.L513:
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****         hi2c->Instance->CR1 |= I2C_CR1_TXDMAEN;
 7943              		.loc 1 3556 0
 7944 00aa 2368     		ldr	r3, [r4]
 7945 00ac 1A68     		ldr	r2, [r3]
 7946 00ae 42F48042 		orr	r2, r2, #16384
 7947 00b2 1A60     		str	r2, [r3]
 7948 00b4 0DE0     		b	.L508
 7949              	.LVL724:
 7950              	.L510:
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****       I2C_ITError(hi2c, HAL_I2C_ERROR_SIZE);
 7951              		.loc 1 3563 0
 7952 00b6 2046     		mov	r0, r4
 7953              	.LVL725:
 7954 00b8 4021     		movs	r1, #64
 7955              	.LVL726:
 7956 00ba FFF7FEFF 		bl	I2C_ITError
ARM GAS  /tmp/cccVlT9k.s 			page 248


 7957              	.LVL727:
 7958 00be 08E0     		b	.L508
 7959              	.LVL728:
 7960              	.L509:
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7961              		.loc 1 3566 0
 7962 00c0 11F0200F 		tst	r1, #32
 7963 00c4 05D0     		beq	.L508
3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   else if(((ITFlags & I2C_FLAG_STOPF) != RESET) && ((ITSources & I2C_IT_STOPI) != RESET))
 7964              		.loc 1 3566 0 is_stmt 0 discriminator 1
 7965 00c6 12F0200F 		tst	r2, #32
 7966 00ca 02D0     		beq	.L508
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITMasterCplt(hi2c, ITFlags);
 7967              		.loc 1 3569 0 is_stmt 1
 7968 00cc 2046     		mov	r0, r4
 7969              	.LVL729:
 7970 00ce FFF7FEFF 		bl	I2C_ITMasterCplt
 7971              	.LVL730:
 7972              	.L508:
3573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_UNLOCK(hi2c);
 7973              		.loc 1 3573 0
 7974 00d2 0020     		movs	r0, #0
 7975 00d4 84F84000 		strb	r0, [r4, #64]
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return HAL_OK;
 7976              		.loc 1 3575 0
 7977 00d8 00E0     		b	.L506
 7978              	.LVL731:
 7979              	.L514:
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   __HAL_LOCK(hi2c);
 7980              		.loc 1 3503 0
 7981 00da 0220     		movs	r0, #2
 7982              	.LVL732:
 7983              	.L506:
3576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 7984              		.loc 1 3576 0
 7985 00dc 02B0     		add	sp, sp, #8
 7986              		@ sp needed
 7987 00de 10BD     		pop	{r4, pc}
 7988              		.cfi_endproc
 7989              	.LFE170:
 7991              		.section	.text.I2C_DMAError,"ax",%progbits
 7992              		.align	2
 7993              		.thumb
 7994              		.thumb_func
 7996              	I2C_DMAError:
 7997              	.LFB186:
4421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 7998              		.loc 1 4421 0
 7999              		.cfi_startproc
 8000              		@ args = 0, pretend = 0, frame = 0
 8001              		@ frame_needed = 0, uses_anonymous_args = 0
 8002              	.LVL733:
 8003 0000 08B5     		push	{r3, lr}
 8004              	.LCFI73:
 8005              		.cfi_def_cfa_offset 8
 8006              		.cfi_offset 3, -8
 8007              		.cfi_offset 14, -4
ARM GAS  /tmp/cccVlT9k.s 			page 249


4422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8008              		.loc 1 4422 0
 8009 0002 406A     		ldr	r0, [r0, #36]
 8010              	.LVL734:
4425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 8011              		.loc 1 4425 0
 8012 0004 0368     		ldr	r3, [r0]
 8013 0006 5A68     		ldr	r2, [r3, #4]
 8014 0008 42F40042 		orr	r2, r2, #32768
 8015 000c 5A60     		str	r2, [r3, #4]
4428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_ITError(hi2c, HAL_I2C_ERROR_DMA);
 8016              		.loc 1 4428 0
 8017 000e 1021     		movs	r1, #16
 8018 0010 FFF7FEFF 		bl	I2C_ITError
 8019              	.LVL735:
 8020 0014 08BD     		pop	{r3, pc}
 8021              		.cfi_endproc
 8022              	.LFE186:
 8024 0016 00BF     		.section	.text.HAL_I2C_ER_IRQHandler,"ax",%progbits
 8025              		.align	2
 8026              		.global	HAL_I2C_ER_IRQHandler
 8027              		.thumb
 8028              		.thumb_func
 8030              	HAL_I2C_ER_IRQHandler:
 8031              	.LFB154:
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 8032              		.loc 1 2989 0
 8033              		.cfi_startproc
 8034              		@ args = 0, pretend = 0, frame = 0
 8035              		@ frame_needed = 0, uses_anonymous_args = 0
 8036              	.LVL736:
 8037 0000 10B5     		push	{r4, lr}
 8038              	.LCFI74:
 8039              		.cfi_def_cfa_offset 8
 8040              		.cfi_offset 4, -8
 8041              		.cfi_offset 14, -4
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itflags   = READ_REG(hi2c->Instance->ISR);
 8042              		.loc 1 2990 0
 8043 0002 0268     		ldr	r2, [r0]
 8044 0004 9369     		ldr	r3, [r2, #24]
 8045              	.LVL737:
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   uint32_t itsources = READ_REG(hi2c->Instance->CR1);
 8046              		.loc 1 2991 0
 8047 0006 1168     		ldr	r1, [r2]
 8048              	.LVL738:
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8049              		.loc 1 2994 0
 8050 0008 13F4807F 		tst	r3, #256
 8051 000c 09D0     		beq	.L517
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_BERR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8052              		.loc 1 2994 0 is_stmt 0 discriminator 1
 8053 000e 11F0800F 		tst	r1, #128
 8054 0012 06D0     		beq	.L517
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_BERR;
 8055              		.loc 1 2996 0 is_stmt 1
 8056 0014 446C     		ldr	r4, [r0, #68]
 8057 0016 44F00104 		orr	r4, r4, #1
ARM GAS  /tmp/cccVlT9k.s 			page 250


 8058 001a 4464     		str	r4, [r0, #68]
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8059              		.loc 1 2999 0
 8060 001c 4FF48074 		mov	r4, #256
 8061 0020 D461     		str	r4, [r2, #28]
 8062              	.L517:
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8063              		.loc 1 3003 0
 8064 0022 13F4806F 		tst	r3, #1024
 8065 0026 0AD0     		beq	.L518
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_OVR) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8066              		.loc 1 3003 0 is_stmt 0 discriminator 1
 8067 0028 11F0800F 		tst	r1, #128
 8068 002c 07D0     		beq	.L518
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_OVR;
 8069              		.loc 1 3005 0 is_stmt 1
 8070 002e 426C     		ldr	r2, [r0, #68]
 8071 0030 42F00802 		orr	r2, r2, #8
 8072 0034 4264     		str	r2, [r0, #68]
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 8073              		.loc 1 3008 0
 8074 0036 0268     		ldr	r2, [r0]
 8075 0038 4FF48064 		mov	r4, #1024
 8076 003c D461     		str	r4, [r2, #28]
 8077              	.L518:
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8078              		.loc 1 3012 0
 8079 003e 13F4007F 		tst	r3, #512
 8080 0042 0AD0     		beq	.L519
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(((itflags & I2C_FLAG_ARLO) != RESET) && ((itsources & I2C_IT_ERRI) != RESET))
 8081              		.loc 1 3012 0 is_stmt 0 discriminator 1
 8082 0044 11F0800F 		tst	r1, #128
 8083 0048 07D0     		beq	.L519
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->ErrorCode |= HAL_I2C_ERROR_ARLO;
 8084              		.loc 1 3014 0 is_stmt 1
 8085 004a 436C     		ldr	r3, [r0, #68]
 8086              	.LVL739:
 8087 004c 43F00203 		orr	r3, r3, #2
 8088 0050 4364     		str	r3, [r0, #68]
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8089              		.loc 1 3017 0
 8090 0052 0368     		ldr	r3, [r0]
 8091 0054 4FF40072 		mov	r2, #512
 8092 0058 DA61     		str	r2, [r3, #28]
 8093              	.L519:
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if((hi2c->ErrorCode & (HAL_I2C_ERROR_BERR | HAL_I2C_ERROR_OVR | HAL_I2C_ERROR_ARLO)) !=  HAL_I2C_
 8094              		.loc 1 3021 0
 8095 005a 436C     		ldr	r3, [r0, #68]
 8096 005c 13F00B0F 		tst	r3, #11
 8097 0060 02D0     		beq	.L516
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     I2C_ITError(hi2c, hi2c->ErrorCode);
 8098              		.loc 1 3023 0
 8099 0062 416C     		ldr	r1, [r0, #68]
 8100              	.LVL740:
 8101 0064 FFF7FEFF 		bl	I2C_ITError
 8102              	.LVL741:
 8103              	.L516:
ARM GAS  /tmp/cccVlT9k.s 			page 251


 8104 0068 10BD     		pop	{r4, pc}
 8105              		.cfi_endproc
 8106              	.LFE154:
 8108 006a 00BF     		.section	.text.I2C_DMAAbort,"ax",%progbits
 8109              		.align	2
 8110              		.thumb
 8111              		.thumb_func
 8113              	I2C_DMAAbort:
 8114              	.LFB187:
4438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 8115              		.loc 1 4438 0
 8116              		.cfi_startproc
 8117              		@ args = 0, pretend = 0, frame = 0
 8118              		@ frame_needed = 0, uses_anonymous_args = 0
 8119              	.LVL742:
 8120 0000 08B5     		push	{r3, lr}
 8121              	.LCFI75:
 8122              		.cfi_def_cfa_offset 8
 8123              		.cfi_offset 3, -8
 8124              		.cfi_offset 14, -4
4439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   I2C_HandleTypeDef* hi2c = ( I2C_HandleTypeDef* )((DMA_HandleTypeDef* )hdma)->Parent;
 8125              		.loc 1 4439 0
 8126 0002 406A     		ldr	r0, [r0, #36]
 8127              	.LVL743:
4442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->Instance->CR2 |= I2C_CR2_NACK;
 8128              		.loc 1 4442 0
 8129 0004 0368     		ldr	r3, [r0]
 8130 0006 5A68     		ldr	r2, [r3, #4]
 8131 0008 42F40042 		orr	r2, r2, #32768
 8132 000c 5A60     		str	r2, [r3, #4]
4445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->hdmatx->XferAbortCallback = NULL;
 8133              		.loc 1 4445 0
 8134 000e 826B     		ldr	r2, [r0, #56]
 8135 0010 0023     		movs	r3, #0
 8136 0012 5363     		str	r3, [r2, #52]
4446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   hi2c->hdmarx->XferAbortCallback = NULL;
 8137              		.loc 1 4446 0
 8138 0014 C26B     		ldr	r2, [r0, #60]
 8139 0016 5363     		str	r3, [r2, #52]
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   if(hi2c->State == HAL_I2C_STATE_ABORT)
 8140              		.loc 1 4449 0
 8141 0018 90F84130 		ldrb	r3, [r0, #65]	@ zero_extendqisi2
 8142 001c DBB2     		uxtb	r3, r3
 8143 001e 602B     		cmp	r3, #96
 8144 0020 05D1     		bne	.L522
4451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     hi2c->State = HAL_I2C_STATE_READY;
 8145              		.loc 1 4451 0
 8146 0022 2023     		movs	r3, #32
 8147 0024 80F84130 		strb	r3, [r0, #65]
4454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_AbortCpltCallback(hi2c);
 8148              		.loc 1 4454 0
 8149 0028 FFF7FEFF 		bl	HAL_I2C_AbortCpltCallback
 8150              	.LVL744:
 8151 002c 08BD     		pop	{r3, pc}
 8152              	.LVL745:
 8153              	.L522:
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****     HAL_I2C_ErrorCallback(hi2c);
ARM GAS  /tmp/cccVlT9k.s 			page 252


 8154              		.loc 1 4459 0
 8155 002e FFF7FEFF 		bl	HAL_I2C_ErrorCallback
 8156              	.LVL746:
 8157 0032 08BD     		pop	{r3, pc}
 8158              		.cfi_endproc
 8159              	.LFE187:
 8161              		.section	.text.HAL_I2C_GetState,"ax",%progbits
 8162              		.align	2
 8163              		.global	HAL_I2C_GetState
 8164              		.thumb
 8165              		.thumb_func
 8167              	HAL_I2C_GetState:
 8168              	.LFB165:
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 8169              		.loc 1 3216 0
 8170              		.cfi_startproc
 8171              		@ args = 0, pretend = 0, frame = 0
 8172              		@ frame_needed = 0, uses_anonymous_args = 0
 8173              		@ link register save eliminated.
 8174              	.LVL747:
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return hi2c->State;
 8175              		.loc 1 3218 0
 8176 0000 90F84100 		ldrb	r0, [r0, #65]	@ zero_extendqisi2
 8177              	.LVL748:
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 8178              		.loc 1 3219 0
 8179 0004 7047     		bx	lr
 8180              		.cfi_endproc
 8181              	.LFE165:
 8183 0006 00BF     		.section	.text.HAL_I2C_GetMode,"ax",%progbits
 8184              		.align	2
 8185              		.global	HAL_I2C_GetMode
 8186              		.thumb
 8187              		.thumb_func
 8189              	HAL_I2C_GetMode:
 8190              	.LFB166:
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 8191              		.loc 1 3228 0
 8192              		.cfi_startproc
 8193              		@ args = 0, pretend = 0, frame = 0
 8194              		@ frame_needed = 0, uses_anonymous_args = 0
 8195              		@ link register save eliminated.
 8196              	.LVL749:
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return hi2c->Mode;
 8197              		.loc 1 3229 0
 8198 0000 90F84200 		ldrb	r0, [r0, #66]	@ zero_extendqisi2
 8199              	.LVL750:
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 8200              		.loc 1 3230 0
 8201 0004 7047     		bx	lr
 8202              		.cfi_endproc
 8203              	.LFE166:
 8205 0006 00BF     		.section	.text.HAL_I2C_GetError,"ax",%progbits
 8206              		.align	2
 8207              		.global	HAL_I2C_GetError
 8208              		.thumb
 8209              		.thumb_func
ARM GAS  /tmp/cccVlT9k.s 			page 253


 8211              	HAL_I2C_GetError:
 8212              	.LFB167:
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** {
 8213              		.loc 1 3239 0
 8214              		.cfi_startproc
 8215              		@ args = 0, pretend = 0, frame = 0
 8216              		@ frame_needed = 0, uses_anonymous_args = 0
 8217              		@ link register save eliminated.
 8218              	.LVL751:
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c ****   return hi2c->ErrorCode;
 8219              		.loc 1 3240 0
 8220 0000 406C     		ldr	r0, [r0, #68]
 8221              	.LVL752:
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c **** }
 8222              		.loc 1 3241 0
 8223 0002 7047     		bx	lr
 8224              		.cfi_endproc
 8225              	.LFE167:
 8227              		.text
 8228              	.Letext0:
 8229              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 8230              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 8231              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 8232              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 8233              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 8234              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 8235              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_i2c.h"
 8236              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 8237              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/cccVlT9k.s 			page 254


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_i2c.c
     /tmp/cccVlT9k.s:21     .text.I2C_Flush_TXDR:00000000 $t
     /tmp/cccVlT9k.s:25     .text.I2C_Flush_TXDR:00000000 I2C_Flush_TXDR
     /tmp/cccVlT9k.s:58     .text.I2C_DMASlaveTransmitCplt:00000000 $t
     /tmp/cccVlT9k.s:62     .text.I2C_DMASlaveTransmitCplt:00000000 I2C_DMASlaveTransmitCplt
     /tmp/cccVlT9k.s:75     .text.I2C_DMASlaveReceiveCplt:00000000 $t
     /tmp/cccVlT9k.s:79     .text.I2C_DMASlaveReceiveCplt:00000000 I2C_DMASlaveReceiveCplt
     /tmp/cccVlT9k.s:92     .text.I2C_TransferConfig:00000000 $t
     /tmp/cccVlT9k.s:96     .text.I2C_TransferConfig:00000000 I2C_TransferConfig
     /tmp/cccVlT9k.s:143    .text.I2C_Enable_IRQ:00000000 $t
     /tmp/cccVlT9k.s:147    .text.I2C_Enable_IRQ:00000000 I2C_Enable_IRQ
     /tmp/cccVlT9k.s:244    .text.I2C_Enable_IRQ:00000074 $d
     /tmp/cccVlT9k.s:7821   .text.I2C_Master_ISR_DMA:00000000 I2C_Master_ISR_DMA
     /tmp/cccVlT9k.s:7279   .text.I2C_Slave_ISR_DMA:00000000 I2C_Slave_ISR_DMA
     /tmp/cccVlT9k.s:250    .text.I2C_Disable_IRQ:00000000 $t
     /tmp/cccVlT9k.s:254    .text.I2C_Disable_IRQ:00000000 I2C_Disable_IRQ
     /tmp/cccVlT9k.s:359    .text.I2C_IsAcknowledgeFailed:00000000 $t
     /tmp/cccVlT9k.s:363    .text.I2C_IsAcknowledgeFailed:00000000 I2C_IsAcknowledgeFailed
     /tmp/cccVlT9k.s:460    .text.I2C_WaitOnTXISFlagUntilTimeout:00000000 $t
     /tmp/cccVlT9k.s:464    .text.I2C_WaitOnTXISFlagUntilTimeout:00000000 I2C_WaitOnTXISFlagUntilTimeout
     /tmp/cccVlT9k.s:539    .text.I2C_WaitOnFlagUntilTimeout:00000000 $t
     /tmp/cccVlT9k.s:543    .text.I2C_WaitOnFlagUntilTimeout:00000000 I2C_WaitOnFlagUntilTimeout
     /tmp/cccVlT9k.s:611    .text.I2C_RequestMemoryWrite:00000000 $t
     /tmp/cccVlT9k.s:615    .text.I2C_RequestMemoryWrite:00000000 I2C_RequestMemoryWrite
     /tmp/cccVlT9k.s:726    .text.I2C_RequestMemoryRead:00000000 $t
     /tmp/cccVlT9k.s:730    .text.I2C_RequestMemoryRead:00000000 I2C_RequestMemoryRead
     /tmp/cccVlT9k.s:841    .text.I2C_WaitOnSTOPFlagUntilTimeout:00000000 $t
     /tmp/cccVlT9k.s:845    .text.I2C_WaitOnSTOPFlagUntilTimeout:00000000 I2C_WaitOnSTOPFlagUntilTimeout
     /tmp/cccVlT9k.s:917    .text.I2C_WaitOnRXNEFlagUntilTimeout:00000000 $t
     /tmp/cccVlT9k.s:921    .text.I2C_WaitOnRXNEFlagUntilTimeout:00000000 I2C_WaitOnRXNEFlagUntilTimeout
     /tmp/cccVlT9k.s:1022   .text.I2C_DMAMasterTransmitCplt:00000000 $t
     /tmp/cccVlT9k.s:1026   .text.I2C_DMAMasterTransmitCplt:00000000 I2C_DMAMasterTransmitCplt
     /tmp/cccVlT9k.s:1096   .text.I2C_DMAMasterReceiveCplt:00000000 $t
     /tmp/cccVlT9k.s:1100   .text.I2C_DMAMasterReceiveCplt:00000000 I2C_DMAMasterReceiveCplt
     /tmp/cccVlT9k.s:1170   .text.HAL_I2C_MspInit:00000000 $t
     /tmp/cccVlT9k.s:1175   .text.HAL_I2C_MspInit:00000000 HAL_I2C_MspInit
     /tmp/cccVlT9k.s:1188   .text.HAL_I2C_Init:00000000 $t
     /tmp/cccVlT9k.s:1193   .text.HAL_I2C_Init:00000000 HAL_I2C_Init
     /tmp/cccVlT9k.s:1318   .text.HAL_I2C_MspDeInit:00000000 $t
     /tmp/cccVlT9k.s:1323   .text.HAL_I2C_MspDeInit:00000000 HAL_I2C_MspDeInit
     /tmp/cccVlT9k.s:1336   .text.HAL_I2C_DeInit:00000000 $t
     /tmp/cccVlT9k.s:1341   .text.HAL_I2C_DeInit:00000000 HAL_I2C_DeInit
     /tmp/cccVlT9k.s:1392   .text.HAL_I2C_Master_Transmit:00000000 $t
     /tmp/cccVlT9k.s:1397   .text.HAL_I2C_Master_Transmit:00000000 HAL_I2C_Master_Transmit
     /tmp/cccVlT9k.s:1670   .text.HAL_I2C_Master_Receive:00000000 $t
     /tmp/cccVlT9k.s:1675   .text.HAL_I2C_Master_Receive:00000000 HAL_I2C_Master_Receive
     /tmp/cccVlT9k.s:1948   .text.HAL_I2C_Slave_Transmit:00000000 $t
     /tmp/cccVlT9k.s:1953   .text.HAL_I2C_Slave_Transmit:00000000 HAL_I2C_Slave_Transmit
     /tmp/cccVlT9k.s:2225   .text.HAL_I2C_Slave_Receive:00000000 $t
     /tmp/cccVlT9k.s:2230   .text.HAL_I2C_Slave_Receive:00000000 HAL_I2C_Slave_Receive
     /tmp/cccVlT9k.s:2493   .text.HAL_I2C_Master_Transmit_IT:00000000 $t
     /tmp/cccVlT9k.s:2498   .text.HAL_I2C_Master_Transmit_IT:00000000 HAL_I2C_Master_Transmit_IT
     /tmp/cccVlT9k.s:2619   .text.HAL_I2C_Master_Transmit_IT:00000090 $d
     /tmp/cccVlT9k.s:7548   .text.I2C_Master_ISR_IT:00000000 I2C_Master_ISR_IT
     /tmp/cccVlT9k.s:2625   .text.HAL_I2C_Master_Receive_IT:00000000 $t
     /tmp/cccVlT9k.s:2630   .text.HAL_I2C_Master_Receive_IT:00000000 HAL_I2C_Master_Receive_IT
ARM GAS  /tmp/cccVlT9k.s 			page 255


     /tmp/cccVlT9k.s:2751   .text.HAL_I2C_Master_Receive_IT:00000090 $d
     /tmp/cccVlT9k.s:2757   .text.HAL_I2C_Slave_Transmit_IT:00000000 $t
     /tmp/cccVlT9k.s:2762   .text.HAL_I2C_Slave_Transmit_IT:00000000 HAL_I2C_Slave_Transmit_IT
     /tmp/cccVlT9k.s:2841   .text.HAL_I2C_Slave_Transmit_IT:0000005c $d
     /tmp/cccVlT9k.s:7035   .text.I2C_Slave_ISR_IT:00000000 I2C_Slave_ISR_IT
     /tmp/cccVlT9k.s:2847   .text.HAL_I2C_Slave_Receive_IT:00000000 $t
     /tmp/cccVlT9k.s:2852   .text.HAL_I2C_Slave_Receive_IT:00000000 HAL_I2C_Slave_Receive_IT
     /tmp/cccVlT9k.s:2931   .text.HAL_I2C_Slave_Receive_IT:0000005c $d
     /tmp/cccVlT9k.s:2937   .text.HAL_I2C_Master_Transmit_DMA:00000000 $t
     /tmp/cccVlT9k.s:2942   .text.HAL_I2C_Master_Transmit_DMA:00000000 HAL_I2C_Master_Transmit_DMA
     /tmp/cccVlT9k.s:3132   .text.HAL_I2C_Master_Transmit_DMA:000000fc $d
     /tmp/cccVlT9k.s:7996   .text.I2C_DMAError:00000000 I2C_DMAError
     /tmp/cccVlT9k.s:3141   .text.HAL_I2C_Master_Receive_DMA:00000000 $t
     /tmp/cccVlT9k.s:3146   .text.HAL_I2C_Master_Receive_DMA:00000000 HAL_I2C_Master_Receive_DMA
     /tmp/cccVlT9k.s:3334   .text.HAL_I2C_Master_Receive_DMA:000000f8 $d
     /tmp/cccVlT9k.s:3343   .text.HAL_I2C_Slave_Transmit_DMA:00000000 $t
     /tmp/cccVlT9k.s:3348   .text.HAL_I2C_Slave_Transmit_DMA:00000000 HAL_I2C_Slave_Transmit_DMA
     /tmp/cccVlT9k.s:3474   .text.HAL_I2C_Slave_Transmit_DMA:00000098 $d
     /tmp/cccVlT9k.s:3482   .text.HAL_I2C_Slave_Receive_DMA:00000000 $t
     /tmp/cccVlT9k.s:3487   .text.HAL_I2C_Slave_Receive_DMA:00000000 HAL_I2C_Slave_Receive_DMA
     /tmp/cccVlT9k.s:3616   .text.HAL_I2C_Slave_Receive_DMA:0000009c $d
     /tmp/cccVlT9k.s:3624   .text.HAL_I2C_Mem_Write:00000000 $t
     /tmp/cccVlT9k.s:3629   .text.HAL_I2C_Mem_Write:00000000 HAL_I2C_Mem_Write
     /tmp/cccVlT9k.s:3945   .text.HAL_I2C_Mem_Read:00000000 $t
     /tmp/cccVlT9k.s:3950   .text.HAL_I2C_Mem_Read:00000000 HAL_I2C_Mem_Read
     /tmp/cccVlT9k.s:4261   .text.HAL_I2C_Mem_Write_IT:00000000 $t
     /tmp/cccVlT9k.s:4266   .text.HAL_I2C_Mem_Write_IT:00000000 HAL_I2C_Mem_Write_IT
     /tmp/cccVlT9k.s:4443   .text.HAL_I2C_Mem_Write_IT:000000e4 $d
     /tmp/cccVlT9k.s:4449   .text.HAL_I2C_Mem_Read_IT:00000000 $t
     /tmp/cccVlT9k.s:4454   .text.HAL_I2C_Mem_Read_IT:00000000 HAL_I2C_Mem_Read_IT
     /tmp/cccVlT9k.s:4632   .text.HAL_I2C_Mem_Read_IT:000000e8 $d
     /tmp/cccVlT9k.s:4638   .text.HAL_I2C_Mem_Write_DMA:00000000 $t
     /tmp/cccVlT9k.s:4643   .text.HAL_I2C_Mem_Write_DMA:00000000 HAL_I2C_Mem_Write_DMA
     /tmp/cccVlT9k.s:4853   .text.HAL_I2C_Mem_Write_DMA:0000011c $d
     /tmp/cccVlT9k.s:4861   .text.HAL_I2C_Mem_Read_DMA:00000000 $t
     /tmp/cccVlT9k.s:4866   .text.HAL_I2C_Mem_Read_DMA:00000000 HAL_I2C_Mem_Read_DMA
     /tmp/cccVlT9k.s:5077   .text.HAL_I2C_Mem_Read_DMA:00000120 $d
     /tmp/cccVlT9k.s:5085   .text.HAL_I2C_IsDeviceReady:00000000 $t
     /tmp/cccVlT9k.s:5090   .text.HAL_I2C_IsDeviceReady:00000000 HAL_I2C_IsDeviceReady
     /tmp/cccVlT9k.s:5326   .text.HAL_I2C_Master_Sequential_Transmit_IT:00000000 $t
     /tmp/cccVlT9k.s:5331   .text.HAL_I2C_Master_Sequential_Transmit_IT:00000000 HAL_I2C_Master_Sequential_Transmit_IT
     /tmp/cccVlT9k.s:5454   .text.HAL_I2C_Master_Sequential_Transmit_IT:00000088 $d
     /tmp/cccVlT9k.s:5459   .text.HAL_I2C_Master_Sequential_Receive_IT:00000000 $t
     /tmp/cccVlT9k.s:5464   .text.HAL_I2C_Master_Sequential_Receive_IT:00000000 HAL_I2C_Master_Sequential_Receive_IT
     /tmp/cccVlT9k.s:5587   .text.HAL_I2C_Master_Sequential_Receive_IT:00000088 $d
     /tmp/cccVlT9k.s:5592   .text.HAL_I2C_Slave_Sequential_Transmit_IT:00000000 $t
     /tmp/cccVlT9k.s:5597   .text.HAL_I2C_Slave_Sequential_Transmit_IT:00000000 HAL_I2C_Slave_Sequential_Transmit_IT
     /tmp/cccVlT9k.s:5724   .text.HAL_I2C_Slave_Sequential_Transmit_IT:000000a0 $d
     /tmp/cccVlT9k.s:5729   .text.HAL_I2C_Slave_Sequential_Receive_IT:00000000 $t
     /tmp/cccVlT9k.s:5734   .text.HAL_I2C_Slave_Sequential_Receive_IT:00000000 HAL_I2C_Slave_Sequential_Receive_IT
     /tmp/cccVlT9k.s:5861   .text.HAL_I2C_Slave_Sequential_Receive_IT:000000a0 $d
     /tmp/cccVlT9k.s:5866   .text.HAL_I2C_EnableListen_IT:00000000 $t
     /tmp/cccVlT9k.s:5871   .text.HAL_I2C_EnableListen_IT:00000000 HAL_I2C_EnableListen_IT
     /tmp/cccVlT9k.s:5911   .text.HAL_I2C_EnableListen_IT:00000024 $d
     /tmp/cccVlT9k.s:5916   .text.HAL_I2C_DisableListen_IT:00000000 $t
     /tmp/cccVlT9k.s:5921   .text.HAL_I2C_DisableListen_IT:00000000 HAL_I2C_DisableListen_IT
     /tmp/cccVlT9k.s:5973   .text.HAL_I2C_Master_Abort_IT:00000000 $t
ARM GAS  /tmp/cccVlT9k.s 			page 256


     /tmp/cccVlT9k.s:5978   .text.HAL_I2C_Master_Abort_IT:00000000 HAL_I2C_Master_Abort_IT
     /tmp/cccVlT9k.s:6062   .text.HAL_I2C_EV_IRQHandler:00000000 $t
     /tmp/cccVlT9k.s:6067   .text.HAL_I2C_EV_IRQHandler:00000000 HAL_I2C_EV_IRQHandler
     /tmp/cccVlT9k.s:6098   .text.HAL_I2C_MasterTxCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6103   .text.HAL_I2C_MasterTxCpltCallback:00000000 HAL_I2C_MasterTxCpltCallback
     /tmp/cccVlT9k.s:6116   .text.HAL_I2C_MasterRxCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6121   .text.HAL_I2C_MasterRxCpltCallback:00000000 HAL_I2C_MasterRxCpltCallback
     /tmp/cccVlT9k.s:6134   .text.I2C_ITMasterSequentialCplt:00000000 $t
     /tmp/cccVlT9k.s:6138   .text.I2C_ITMasterSequentialCplt:00000000 I2C_ITMasterSequentialCplt
     /tmp/cccVlT9k.s:6208   .text.HAL_I2C_SlaveTxCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6213   .text.HAL_I2C_SlaveTxCpltCallback:00000000 HAL_I2C_SlaveTxCpltCallback
     /tmp/cccVlT9k.s:6226   .text.HAL_I2C_SlaveRxCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6231   .text.HAL_I2C_SlaveRxCpltCallback:00000000 HAL_I2C_SlaveRxCpltCallback
     /tmp/cccVlT9k.s:6244   .text.I2C_ITSlaveSequentialCplt:00000000 $t
     /tmp/cccVlT9k.s:6248   .text.I2C_ITSlaveSequentialCplt:00000000 I2C_ITSlaveSequentialCplt
     /tmp/cccVlT9k.s:6318   .text.HAL_I2C_AddrCallback:00000000 $t
     /tmp/cccVlT9k.s:6323   .text.HAL_I2C_AddrCallback:00000000 HAL_I2C_AddrCallback
     /tmp/cccVlT9k.s:6336   .text.I2C_ITAddrCplt:00000000 $t
     /tmp/cccVlT9k.s:6340   .text.I2C_ITAddrCplt:00000000 I2C_ITAddrCplt
     /tmp/cccVlT9k.s:6471   .text.HAL_I2C_ListenCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6476   .text.HAL_I2C_ListenCpltCallback:00000000 HAL_I2C_ListenCpltCallback
     /tmp/cccVlT9k.s:6489   .text.I2C_ITListenCplt:00000000 $t
     /tmp/cccVlT9k.s:6493   .text.I2C_ITListenCplt:00000000 I2C_ITListenCplt
     /tmp/cccVlT9k.s:6569   .text.I2C_ITListenCplt:00000060 $d
     /tmp/cccVlT9k.s:6574   .text.HAL_I2C_MemTxCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6579   .text.HAL_I2C_MemTxCpltCallback:00000000 HAL_I2C_MemTxCpltCallback
     /tmp/cccVlT9k.s:6592   .text.HAL_I2C_MemRxCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6597   .text.HAL_I2C_MemRxCpltCallback:00000000 HAL_I2C_MemRxCpltCallback
     /tmp/cccVlT9k.s:6610   .text.HAL_I2C_ErrorCallback:00000000 $t
     /tmp/cccVlT9k.s:6615   .text.HAL_I2C_ErrorCallback:00000000 HAL_I2C_ErrorCallback
     /tmp/cccVlT9k.s:6628   .text.HAL_I2C_AbortCpltCallback:00000000 $t
     /tmp/cccVlT9k.s:6633   .text.HAL_I2C_AbortCpltCallback:00000000 HAL_I2C_AbortCpltCallback
     /tmp/cccVlT9k.s:6646   .text.I2C_ITError:00000000 $t
     /tmp/cccVlT9k.s:6650   .text.I2C_ITError:00000000 I2C_ITError
     /tmp/cccVlT9k.s:6821   .text.I2C_ITError:000000f0 $d
     /tmp/cccVlT9k.s:8113   .text.I2C_DMAAbort:00000000 I2C_DMAAbort
     /tmp/cccVlT9k.s:6828   .text.I2C_ITSlaveCplt:00000000 $t
     /tmp/cccVlT9k.s:6832   .text.I2C_ITSlaveCplt:00000000 I2C_ITSlaveCplt
     /tmp/cccVlT9k.s:7026   .text.I2C_ITSlaveCplt:00000120 $d
     /tmp/cccVlT9k.s:7031   .text.I2C_Slave_ISR_IT:00000000 $t
     /tmp/cccVlT9k.s:7275   .text.I2C_Slave_ISR_DMA:00000000 $t
     /tmp/cccVlT9k.s:7391   .text.I2C_ITMasterCplt:00000000 $t
     /tmp/cccVlT9k.s:7395   .text.I2C_ITMasterCplt:00000000 I2C_ITMasterCplt
     /tmp/cccVlT9k.s:7544   .text.I2C_Master_ISR_IT:00000000 $t
     /tmp/cccVlT9k.s:7817   .text.I2C_Master_ISR_DMA:00000000 $t
     /tmp/cccVlT9k.s:7992   .text.I2C_DMAError:00000000 $t
     /tmp/cccVlT9k.s:8025   .text.HAL_I2C_ER_IRQHandler:00000000 $t
     /tmp/cccVlT9k.s:8030   .text.HAL_I2C_ER_IRQHandler:00000000 HAL_I2C_ER_IRQHandler
     /tmp/cccVlT9k.s:8109   .text.I2C_DMAAbort:00000000 $t
     /tmp/cccVlT9k.s:8162   .text.HAL_I2C_GetState:00000000 $t
     /tmp/cccVlT9k.s:8167   .text.HAL_I2C_GetState:00000000 HAL_I2C_GetState
     /tmp/cccVlT9k.s:8184   .text.HAL_I2C_GetMode:00000000 $t
     /tmp/cccVlT9k.s:8189   .text.HAL_I2C_GetMode:00000000 HAL_I2C_GetMode
     /tmp/cccVlT9k.s:8206   .text.HAL_I2C_GetError:00000000 $t
     /tmp/cccVlT9k.s:8211   .text.HAL_I2C_GetError:00000000 HAL_I2C_GetError
                     .debug_frame:00000010 $d

ARM GAS  /tmp/cccVlT9k.s 			page 257


UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort_IT
