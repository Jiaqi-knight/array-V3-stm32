ARM GAS  /tmp/ccWQyto6.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 3
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 1
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f3xx_hal_hrtim.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HRTIM_MasterBase_Config,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	HRTIM_MasterBase_Config:
  26              	.LFB229:
  27              		.file 1 "Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c"
   1:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
   2:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   ******************************************************************************
   3:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @file    stm32f3xx_hal_hrtim.c
   4:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @author  MCD Application Team
   5:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @version V1.4.0
   6:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @date    16-December-2016
   7:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief   TIM HAL module driver.
   8:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          This file provides firmware functions to manage the following 
   9:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          functionalities of the High Resolution Timer (HRTIM) peripheral:
  10:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM Initialization
  11:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + DLL Calibration Start
  12:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Timer Time Base Unit Configuration
  13:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Time Base Start/Stop
  14:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Time Base Start/Stop Interrupt
  15:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Time Base Start/Stop DMA Request
  16:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Output Compare/PWM Channel Configuration
  17:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Output Compare/PWM Channel Start/Stop Interrupt
  18:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Output Compare/PWM Channel Start/Stop DMA Request
  19:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Input Capture Channel Configuration
  20:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Input Capture Channel Start/Stop Interrupt
  21:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple Input Capture Channel Start/Stop DMA Request
  22:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple One Pulse Channel Configuration
  23:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Simple One Pulse Channel Start/Stop Interrupt
  24:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM External Synchronization Configuration
  25:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM Burst Mode Controller Configuration
  26:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM Burst Mode Controller Enabling
  27:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM External Events Conditioning Configuration
  28:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM Faults Conditioning Configuration
  29:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM Faults Enabling
  30:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + HRTIM ADC trigger Configuration
  31:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Timer Configuration
ARM GAS  /tmp/ccWQyto6.s 			page 2


  32:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Event Filtering Configuration
  33:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Dead Time Insertion Configuration
  34:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Chopper Mode Configuration
  35:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Compare Unit Configuration
  36:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Capture Unit Configuration
  37:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Output Configuration
  38:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Counter Start/Stop
  39:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Counter Start/Stop Interrupt
  40:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Counter Start/Stop DMA Request
  41:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Output Enabling
  42:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Output Level Set/Get
  43:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Output State Get
  44:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Burst DMA Operation Configuration
  45:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Burst DMA Operation Start
  46:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Timer Counter Software Reset
  47:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Capture Software Trigger 
  48:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Burst Mode Controller Software Trigger
  49:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Timer Pre-loadable Registers Update Enabling
  50:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Timer Pre-loadable Registers Software Update
  51:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Timer Delayed Protection Status Get
  52:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Timer Burst Status Get
  53:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Waveform Timer Push-Pull Status Get
  54:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           + Peripheral State Get
  55:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   @verbatim
  56:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** ==============================================================================
  57:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                       ##### Simple mode v.s. waveform mode #####
  58:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** ==============================================================================
  59:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   [..] The HRTIM HAL API is split into 2 categories:
  60:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     (#)Simple functions: these functions allow for using a HRTIM timer as a  
  61:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        general purpose timer with high resolution capabilities.
  62:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        HRTIM simple modes are managed through the set of functions named
  63:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        HAL_HRTIM_Simple<Function>. These functions are similar in name and usage 
  64:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        to the one defined for the TIM peripheral. When a HRTIM timer operates in 
  65:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        simple mode, only a very limited set of HRTIM features are used.
  66:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        Following simple modes are proposed:
  67:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          (++)Output compare mode,
  68:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          (++)PWM output mode,
  69:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          (++)Input capture mode,
  70:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          (++)One pulse mode.
  71:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     (#)Waveform functions: These functions allow taking advantage of the HRTIM 
  72:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        flexibility to produce numerous types of control signal. When a HRTIM timer 
  73:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        operates in waveform mode, all the HRTIM features are accessible without 
  74:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        any restriction.  HRTIM waveform modes are managed through the set of
  75:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        functions named HAL_HRTIM_Waveform<Function>
  76:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                       ##### How to use this driver #####
  77:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** ==============================================================================
  78:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]
  79:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#)Initialize the HRTIM low level resources by implementing the
  80:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         HAL_HRTIM_MspInit() function:
  81:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)Enable the HRTIM clock source using __HRTIMx_CLK_ENABLE() 
  82:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)Connect HRTIM pins to MCU I/Os
  83:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++) Enable the clock for the HRTIM GPIOs using the following
  84:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   function: __HAL_RCC_GPIOx_CLK_ENABLE()   
  85:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++) Configure these GPIO pins in Alternate Function mode using
  86:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_GPIO_Init()
  87:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)When using DMA to control data transfer (e.g HAL_HRTIM_SimpleBaseStart_DMA())
  88:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++)Enable the DMAx interface clock using __DMAx_CLK_ENABLE()
ARM GAS  /tmp/ccWQyto6.s 			page 3


  89:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++)Initialize the DMA handle
  90:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++)Associate the initialized DMA handle to the appropriate DMA 
  91:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  handle of the HRTIM handle using  __HAL_LINKDMA()
  92:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++)Initialize the DMA channel using HAL_DMA_Init()
  93:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++)Configure the priority and enable the NVIC for the transfer
  94:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  complete interrupt on the DMA channel using HAL_NVIC_SetPriority()
  95:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  and HAL_NVIC_EnableIRQ()
  96:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)In case of using interrupt mode (e.g HAL_HRTIM_SimpleBaseStart_IT())
  97:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             (+++)Configure the priority and enable the NVIC for the concerned
  98:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  HRTIM interrupt using HAL_NVIC_SetPriority() and HAL_NVIC_EnableIRQ()
  99:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     (#)Initialize the HRTIM HAL using HAL_HRTIM_Init(). The HRTIM configuration 
 101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        structure (field of the HRTIM handle) specifies which global interrupt of
 102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        whole HRTIM must be enabled (Burst mode period, System fault, Faults).
 103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        It also contains the HRTIM external synchronization configuration. HRTIM
 104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        can act as a master (generating a synchronization signal) or as a slave
 105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        (waiting for a trigger to be synchronized).
 106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     (#)Start the high resolution unit using HAL_HRTIM_DLLCalibrationStart(). DLL
 108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        calibration is executed periodically and compensate for potential voltage
 109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        and temperature drifts. DLL calibration period is specified by the 
 110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        CalibrationRate argument.	
 111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     (#)HRTIM timers cannot be used until the high resolution unit is ready. This 
 113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        can be checked using HAL_HRTIM_PollForDLLCalibration(): this function returns
 114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        HAL_OK if DLL calibration is completed or HAL_TIMEOUT if the DLL calibration
 115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        is still going on when timeout given as argument expires. DLL calibration  
 116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        can also be started in interrupt mode using HAL_HRTIM_DLLCalibrationStart_IT(). 
 117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        In that case an interrupt is generated when the DLL calibration is completed.
 118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        Note that as DLL calibration is executed on a periodic basis an interrupt 
 119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        will be generated at the end of every DLL calibration operation
 120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (worst case: one interrupt every 14  micro seconds !).
 121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Configure HRTIM resources shared by all HRTIM timers
 123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)Burst Mode Controller:
 124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)HAL_HRTIM_BurstModeConfig(): configures the HRTIM burst mode
 125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      controller: operating mode (continuous or one-shot mode), clock
 126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      (source, prescaler) , trigger(s), period, idle duration.
 127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)External Events Conditionning:
 128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)HAL_HRTIM_EventConfig(): configures the conditioning of an
 129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      external event channel: source, polarity, edge-sensitivity.
 130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      External event can be used as triggers (timer reset, input
 131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      capture, burst mode, ADC triggers, delayed protection)
 132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      They can also be used to set or reset timer outputs. Up to
 133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      10 event channels are available.
 134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)HAL_HRTIM_EventPrescalerConfig(): configures the external
 135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      event sampling clock (used for digital filtering).
 136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)Fault Conditionning:
 137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)HAL_HRTIM_FaultConfig(): configures the conditioning of a
 138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      fault channel: source, polarity, edge-sensitivity.  Fault
 139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      channels are used to disable the outputs in case of an
 140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      abnormal operation. Up to 5 fault channels are available.
 141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)HAL_HRTIM_FaultPrescalerConfig(): configures the fault
 142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      sampling clock (used for digital filtering).
 143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)HAL_HRTIM_FaultModeCtl(): Enables or disables fault input(s)
 144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      circuitry. By default all fault inputs are disabled.
 145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)ADC trigger:
ARM GAS  /tmp/ccWQyto6.s 			page 4


 146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)HAL_HRTIM_ADCTriggerConfig(): configures the source triggering
 147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      the update of the ADC trigger register and the ADC trigger.
 148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      4 independent triggers are available to start both the regular
 149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      and the injected sequencers of the 2 ADCs
 150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Configure HRTIM timer time base using HAL_HRTIM_TimeBaseConfig(). This
 152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          function must be called whatever the HRTIM timer operating mode is
 153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          (simple v.s. waveform). It  configures mainly:
 154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)The HRTIM  timer counter operating mode (continuous v.s. one shot)
 155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)The HRTIM  timer clock prescaler
 156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)The HRTIM  timer period 
 157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (##)The HRTIM  timer repetition counter
 158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      *** If the HRTIM timer operates in simple mode ***
 160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      ===================================================
 161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      [..]    
 162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Start or Stop simple timers
 163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)Simple time base: HAL_HRTIM_SimpleBaseStart(),HAL_HRTIM_SimpleBaseStop(),
 164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleBaseStart_IT(),HAL_HRTIM_SimpleBaseStop_IT(), 
 165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleBaseStart_DMA(),HAL_HRTIM_SimpleBaseStop_DMA().
 166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)Simple output compare: HAL_HRTIM_SimpleOCChannelConfig(),
 167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleOCStart(),HAL_HRTIM_SimpleOCStop(),
 168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleOCStart_IT(),HAL_HRTIM_SimpleOCStop_IT(),
 169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleOCStart_DMA(),HAL_HRTIM_SimpleOCStop_DMA(),
 170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)Simple PWM output: HAL_HRTIM_SimplePWMChannelConfig(),
 171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimplePWMStart(),HAL_HRTIM_SimplePWMStop(),
 172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimplePWMStart_IT(),HAL_HRTIM_SimplePWMStop_IT(),
 173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimplePWMStart_DMA(),HAL_HRTIM_SimplePWMStop_DMA(),
 174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)Simple input capture: HAL_HRTIM_SimpleCaptureChannelConfig(),
 175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleCaptureStart(),HAL_HRTIM_SimpleCaptureStop(),
 176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleCaptureStart_IT(),HAL_HRTIM_SimpleCaptureStop_IT(),
 177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleCaptureStart_DMA(),HAL_HRTIM_SimpleCaptureStop_DMA().
 178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)Simple one pulse: HAL_HRTIM_SimpleOnePulseChannelConfig(),
 179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleOnePulseStart(),HAL_HRTIM_SimpleOnePulseStop(),
 180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HAL_HRTIM_SimpleOnePulseStart_IT(),HAL_HRTIM_SimpleOnePulseStop_It().
 181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      *** If the HRTIM timer operates in waveform mode ***
 183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      ====================================================
 184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      [..]    
 185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Completes waveform timer configuration
 186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformTimerConfig(): configuration of a HRTIM timer 
 187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 			      operating in wave form mode mainly consists in:
 188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Enabling the HRTIM timer interrupts and DMA requests.
 189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Enabling the half mode for the HRTIM timer.
 190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Defining how the HRTIM timer reacts to external synchronization input.
 191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Enabling the push-pull mode for the HRTIM timer.
 192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Enabling the fault channels for the HRTIM timer.
 193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Enabling the dead-time insertion for the HRTIM timer.
 194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Setting the delayed protection mode for the HRTIM timer (source and outputs 
 195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 				     on which the delayed protection are applied).
 196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Specifying the HRTIM timer update and reset triggers.
 197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Specifying the HRTIM timer registers update policy (e.g. pre-load enabling).
 198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_TimerEventFilteringConfig(): configures external 
 199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   event blanking and windowing circuitry of a HRTIM timer:
 200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Blanking:  to mask external events during a defined  time period a defined tim
 201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 				(+++)Windowing, to enable external events only during a defined time period
 202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_DeadTimeConfig(): configures the dead-time insertion
ARM GAS  /tmp/ccWQyto6.s 			page 5


 203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   unit for a HRTIM timer. Allows to generate a couple of
 204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   complementary signals from a single reference waveform, 
 205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   with programmable delays between active state.
 206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_ChopperModeConfig(): configures the parameters of
 207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   the high-frequency carrier signal added on top of the timing
 208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   unit output. Chopper mode can be enabled or disabled for each
 209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    timer output separately (see  HAL_HRTIM_WaveformOutputConfig()).
 210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_BurstDMAConfig(): configures the burst DMA burst 
 211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   controller. Allows having multiple HRTIM registers updated
 212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   with a single DMA request. The burst DMA operation is started
 213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   by calling HAL_HRTIM_BurstDMATransfer().
 214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformCompareConfig():configures the compare unit
 215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   of a HRTIM timer. This operation consists in setting the
 216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   compare value and possibly specifying the auto delayed mode
 217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   for compare units 2 and 4 (allows to have compare events
 218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   generated relatively to capture events). Note that when auto
 219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   delayed mode is needed, the capture unit associated to the
 220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   compare unit must be configured separately.
 221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformCaptureConfig(): configures the capture unit
 222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   of a HRTIM timer. This operation consists in specifying the
 223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   source(s)  triggering the capture (timer register update event,
 224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   external event, timer output set/reset event, other HRTIM
 225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   timer related events). 
 226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformOutputConfig(): configuration of a HRTIM timer
 227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   output mainly consists in: 
 228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Setting the output polarity (active high or active low),
 229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Defining the set/reset crossbar for the output, 
 230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                 (+++)Specifying the fault level (active or inactive) in IDLE and FAULT states.,
 231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 				
 232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Set waveform timer output(s) level
 233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformSetOutputLevel(): forces the output to its
 234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   active or inactive level. For example, when deadtime insertion 
 235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   is enabled it is necessary to force the output level by software
 236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   to have the outputs in a complementary state as soon as the RUN mode is entered.
 237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 					 
 238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Enable or Disable waveform timer output(s)
 239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformOutputStart(),HAL_HRTIM_WaveformOutputStop().
 240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 			  
 241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Start or Stop waveform HRTIM timer(s). 
 242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformCounterStart(),HAL_HRTIM_WaveformCounterStop(),
 243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformCounterStart_IT(),HAL_HRTIM_WaveformCounterStop_IT(),
 244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformCounterStart()_DMA,HAL_HRTIM_WaveformCounterStop_DMA(),
 245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Burst mode controller enabling:
 246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_BurstModeCtl(): activates or de-activates the 
 247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   burst mode controller.
 248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Some HRTIM operations can be triggered by software:
 250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_BurstModeSoftwareTrigger(): calling this function 
 251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   trigs the burst operation.
 252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_SoftwareCapture(): calling this function trigs the 
 253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   capture of the HRTIM timer counter.
 254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_SoftwareUpdate(): calling this function trigs the 
 255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   update of the pre-loadable registers of the HRTIM timer
 256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_SoftwareReset():calling this function resets the 
 257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   HRTIM timer counter.
 258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Some functions can be used any time to retrieve HRTIM timer related 
ARM GAS  /tmp/ccWQyto6.s 			page 6


 260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             information
 261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_GetCapturedValue(): returns actual value of the
 262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   capture register of the designated capture unit.
 263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformGetOutputLevel(): returns actual level
 264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  (ACTIVE/INACTIVE) of the designated timer output.
 265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_WaveformGetOutputState():returns actual state
 266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  (IDLE/RUN/FAULT) of the designated timer output.
 267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_GetDelayedProtectionStatus():returns actual level 
 268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  (ACTIVE/INACTIVE) of the designated output when the delayed
 269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   protection was triggered.
 270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_GetBurstStatus(): returns the actual status
 271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  (ACTIVE/INACTIVE) of the burst mode controller.
 272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	          (++)HAL_HRTIM_GetCurrentPushPullStatus(): when the push-pull mode
 273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  is enabled for the HRTIM timer (see HAL_HRTIM_WaveformTimerConfig()),
 274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  the push-pull status indicates on which output the signal is currently 
 275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  active (e.g signal applied on output 1 and output 2 forced
 276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  inactive or vice versa). 
 277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	         (++)HAL_HRTIM_GetIdlePushPullStatus(): when the push-pull mode
 278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  is enabled for the HRTIM timer (see HAL_HRTIM_WaveformTimerConfig()),
 279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  the idle push-pull status indicates during which period the
 280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  delayed protection request occurred (e.g. protection occurred
 281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  when the output 1 was active and output 2 forced inactive or
 282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  vice versa).
 283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      (#) Some functions can be used any time to retrieve actual HRTIM status
 285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	         (++)HAL_HRTIM_GetState(): returns actual HRTIM instance HAL state.
 286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   @endverbatim
 288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   ******************************************************************************
 290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @attention
 291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *
 292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *
 294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * Redistribution and use in source and binary forms, with or without modification,
 295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * are permitted provided that the following conditions are met:
 296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *      this list of conditions and the following disclaimer.
 298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *      this list of conditions and the following disclaimer in the documentation
 300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *      and/or other materials provided with the distribution.
 301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *      may be used to endorse or promote products derived from this software
 303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *      without specific prior written permission.
 304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *
 305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *
 316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   ******************************************************************************  
ARM GAS  /tmp/ccWQyto6.s 			page 7


 317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /* Includes ------------------------------------------------------------------*/
 320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** #include "stm32f3xx_hal.h"
 321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @addtogroup STM32F3xx_HAL_Driver
 323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** #ifdef HAL_HRTIM_MODULE_ENABLED
 327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** #if defined(STM32F334x8)
 329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM HRTIM
 331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief HRTIM HAL module driver
 332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /* Private typedef -----------------------------------------------------------*/
 336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /* Private define ------------------------------------------------------------*/
 337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Private_Defines HRTIM Private Define
 338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** #define HRTIM_FLTR_FLTxEN (HRTIM_FLTR_FLT1EN |\
 341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                            HRTIM_FLTR_FLT2EN |\
 342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                            HRTIM_FLTR_FLT3EN |\
 343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                            HRTIM_FLTR_FLT4EN | \
 344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                            HRTIM_FLTR_FLT5EN)
 345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** #define HRTIM_TIMCR_TIMUPDATETRIGGER (HRTIM_TIMUPDATETRIGGER_MASTER  |\
 347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       HRTIM_TIMUPDATETRIGGER_TIMER_A |\
 348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       HRTIM_TIMUPDATETRIGGER_TIMER_B |\
 349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       HRTIM_TIMUPDATETRIGGER_TIMER_C |\
 350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       HRTIM_TIMUPDATETRIGGER_TIMER_D |\
 351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       HRTIM_TIMUPDATETRIGGER_TIMER_E)
 352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
 354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /* Private macro -------------------------------------------------------------*/
 357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /* Private variables ---------------------------------------------------------*/
 358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Private_Variables HRTIM Private Variables
 359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static uint32_t TimerIdxToTimerId[] = 
 362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIMERID_TIMER_A,
 364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIMERID_TIMER_B,
 365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIMERID_TIMER_C,
 366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIMERID_TIMER_D,
 367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIMERID_TIMER_E,
 368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIMERID_MASTER,
 369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** };
 370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
 372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 8


 374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /* Private function prototypes -----------------------------------------------*/
 375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Private_Functions HRTIM Private Functions
 376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_MasterBase_Config(HRTIM_HandleTypeDef * hhrtim, 
 379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     HRTIM_TimeBaseCfgTypeDef * pTimeBaseCfg);
 380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_TimingUnitBase_Config(HRTIM_HandleTypeDef * hhrtim, 
 382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         uint32_t TimerIdx,
 383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         HRTIM_TimeBaseCfgTypeDef * pTimeBaseCfg);
 384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_MasterWaveform_Config(HRTIM_HandleTypeDef * hhrtim, 
 386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         HRTIM_TimerCfgTypeDef * pTimerCfg);
 387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_TimingUnitWaveform_Config(HRTIM_HandleTypeDef * hhrtim, 
 389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t TimerIdx, 
 390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             HRTIM_TimerCfgTypeDef * pTimerCfg);
 391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_CompareUnitConfig(HRTIM_HandleTypeDef * hhrtim,
 393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t TimerIdx,
 394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t CompareUnit,
 395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     HRTIM_CompareCfgTypeDef * pCompareCfg);
 396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_CaptureUnitConfig(HRTIM_HandleTypeDef * hhrtim,
 398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t TimerIdx,
 399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t CaptureUnit,
 400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t Event);
 401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_OutputConfig(HRTIM_HandleTypeDef * hhrtim,
 403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                 uint32_t TimerIdx,
 404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                 uint32_t Output,
 405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                 HRTIM_OutputCfgTypeDef * pOutputCfg);
 406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_EventConfig(HRTIM_HandleTypeDef * hhrtim,
 408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                               uint32_t Event,
 409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                               HRTIM_EventCfgTypeDef * pEventCfg);
 410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_TIM_ResetConfig(HRTIM_HandleTypeDef * hhrtim,
 412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                   uint32_t TimerIdx,
 413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                   uint32_t Event);  
 414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static uint32_t HRTIM_GetITFromOCMode(HRTIM_HandleTypeDef * hhrtim,
 416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       uint32_t TimerIdx,
 417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       uint32_t OCChannel);
 418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static uint32_t HRTIM_GetDMAFromOCMode(HRTIM_HandleTypeDef * hhrtim,
 420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                        uint32_t TimerIdx,
 421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                        uint32_t OCChannel);
 422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static DMA_HandleTypeDef * HRTIM_GetDMAHandleFromTimerIdx(HRTIM_HandleTypeDef * hhrtim,
 424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                           uint32_t TimerIdx);
 425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static uint32_t GetTimerIdxFromDMAHandle(DMA_HandleTypeDef *hdma);
 427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_ForceRegistersUpdate(HRTIM_HandleTypeDef * hhrtim,
 429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       uint32_t TimerIdx);
 430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 9


 431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_HRTIM_ISR(HRTIM_HandleTypeDef * hhrtim);
 432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_Master_ISR(HRTIM_HandleTypeDef * hhrtim);
 434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_Timer_ISR(HRTIM_HandleTypeDef * hhrtim,
 436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                        uint32_t TimerIdx);
 437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_DMAMasterCplt(DMA_HandleTypeDef *hdma);
 439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_DMATimerxCplt(DMA_HandleTypeDef *hdma);
 441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_DMAError(DMA_HandleTypeDef *hdma);
 443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_BurstDMACplt(DMA_HandleTypeDef *hdma);
 445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
 447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /* Exported functions ---------------------------------------------------------*/
 450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions HRTIM Exported Functions
 451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group1 Initialization and de-initialization functions  
 455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    Initialization and Configuration functions 
 456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
 457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
 458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### Initialization and Time Base Configuration functions #####
 459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
 460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions allowing to:
 461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Initialize a HRTIM instance 
 462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) De-initialize a HRTIM instance 
 463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Initialize the HRTIM MSP 
 464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) De-initialize the HRTIM MSP 
 465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start the high-resolution unit (start DLL calibration) 
 466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Check that the high resolution unit is ready (DLL calibration done) 
 467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure the time base unit of a HRTIM timer 
 468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
 470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Initializes a HRTIM instance 
 475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_Init(HRTIM_HandleTypeDef * hhrtim)
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint8_t timer_idx;
 481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_mcr;
 482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the HRTIM handle allocation */
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim == NULL)
 485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     return HAL_ERROR;
 487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
ARM GAS  /tmp/ccWQyto6.s 			page 10


 488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
 490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_ALL_INSTANCE(hhrtim->Instance));
 491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_IT(hhrtim->Init.HRTIMInterruptResquests)); 
 492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
 493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the HRTIM state */
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Initialize the DMA handles */
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaMaster = (DMA_HandleTypeDef *)NULL;    
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerA = (DMA_HandleTypeDef *)NULL;     
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerB = (DMA_HandleTypeDef *)NULL;  
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerC = (DMA_HandleTypeDef *)NULL;  
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerD = (DMA_HandleTypeDef *)NULL;  
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerE = (DMA_HandleTypeDef *)NULL;  
 503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* HRTIM output synchronization configuration (if required) */
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Init.SyncOptions & HRTIM_SYNCOPTION_MASTER) != RESET)
 506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Check parameters */
 508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_SYNCOUTPUTSOURCE(hhrtim->Init.SyncOutputSource));
 509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_SYNCOUTPUTPOLARITY(hhrtim->Init.SyncOutputPolarity));
 510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
 511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* The synchronization output initialization procedure must be done prior 
 512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        to the configuration of the MCU outputs (done within HAL_HRTIM_MspInit)
 513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     */
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (hhrtim->Instance == HRTIM1)
 515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
 516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the HRTIM peripheral clock */
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_RCC_HRTIM1_CLK_ENABLE();
 518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
 519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr = hhrtim->Instance->sMasterRegs.MCR;
 521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
 522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Set the event to be sent on the synchronization output */
 523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr &= ~(HRTIM_MCR_SYNC_SRC);
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr |= (hhrtim->Init.SyncOutputSource & HRTIM_MCR_SYNC_SRC);
 525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
 526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Set the polarity of the synchronization output */
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr &= ~(HRTIM_MCR_SYNC_OUT);
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr |= (hhrtim->Init.SyncOutputPolarity & HRTIM_MCR_SYNC_OUT);
 529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
 530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Update the HRTIM registers */  
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->Instance->sMasterRegs.MCR = hrtim_mcr;    
 532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_HRTIM_MspInit(hhrtim);
 536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* HRTIM input synchronization configuration (if required) */
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Init.SyncOptions & HRTIM_SYNCOPTION_SLAVE) != RESET)
 539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Check parameters */
 541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_SYNCINPUTSOURCE(hhrtim->Init.SyncInputSource));
 542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr = hhrtim->Instance->sMasterRegs.MCR;
 544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 11


 545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Set the synchronization input source */
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr &= ~(HRTIM_MCR_SYNC_IN);
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr |= (hhrtim->Init.SyncInputSource & HRTIM_MCR_SYNC_IN);
 548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
 549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Update the HRTIM registers */  
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->Instance->sMasterRegs.MCR = hrtim_mcr;    
 551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Initialize the HRTIM state*/
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Initialize the lock status of the HRTIM HAL API */
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);
 558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Tnitialize timer related parameters */ 
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
 561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx <= HRTIM_TIMERINDEX_MASTER ; 
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
 563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].CaptureTrigger1 = HRTIM_CAPTURETRIGGER_NONE;
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].CaptureTrigger2 = HRTIM_CAPTURETRIGGER_NONE;
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].InterruptRequests = HRTIM_IT_NONE;
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].DMARequests = HRTIM_IT_NONE;
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].DMASrcAddress = 0U;
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].DMASize = 0U;
 570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  De-initializes a HRTIM instance 
 577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_DeInit (HRTIM_HandleTypeDef * hhrtim)
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the HRTIM handle allocation */
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim == NULL)
 584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     return HAL_ERROR;
 586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
 589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_ALL_INSTANCE(hhrtim->Instance));
 590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the HRTIM state */
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* DeInit the low level hardware */
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_HRTIM_MspDeInit(hhrtim);
 596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 12


 602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  MSP initialization for a HRTIM instance
 604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
 606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_MspInit(HRTIM_HandleTypeDef * hhrtim)
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
 610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
 611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****            the HAL_HRTIM_MspInit could be implemented in the user file
 614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
 615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  MSP de-initialization for a for a HRTIM instance
 619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
 621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_MspDeInit(HRTIM_HandleTypeDef * hhrtim)
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
 625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
 626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE: This function should not be modified, when the callback is needed,
 628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****            the HAL_HRTIM_MspDeInit could be implemented in the user file
 629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
 630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the DLL calibration
 634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CalibrationRate: DLL calibration period
 636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
 637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_SINGLE_CALIBRATION: One shot DLL calibration
 638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_7300: Periodic DLL calibration. T=7.3 ms
 639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_910: Periodic DLL calibration. T=910 us
 640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_114: Periodic DLL calibration. T=114 us
 641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_14: Periodic DLL calibration. T=14 us
 642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function locks the HRTIM instance. HRTIM instance is unlocked 
 644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       within the HAL_HRTIM_PollForDLLCalibration function, just before 
 645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       exiting the function.
 646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_DLLCalibrationStart(HRTIM_HandleTypeDef * hhrtim,
 648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t CalibrationRate)
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_dllcr;
 651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
 653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CALIBRATIONRATE(CalibrationRate));
 654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
ARM GAS  /tmp/ccWQyto6.s 			page 13


 659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure DLL Calibration */
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dllcr = hhrtim->Instance->sCommonRegs.DLLCR;
 662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CalibrationRate == HRTIM_SINGLE_CALIBRATION)
 664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* One shot DLL calibration */
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALEN);
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= HRTIM_DLLCR_CAL;    
 668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
 670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Periodic DLL calibration */
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALRTE | HRTIM_DLLCR_CAL);
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= (CalibrationRate | HRTIM_DLLCR_CALEN);
 674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update HRTIM register */
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.DLLCR = hrtim_dllcr;
 678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the DLL calibration.
 684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         DLL ready interrupt is enabled
 685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CalibrationRate: DLL calibration period
 687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
 688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_SINGLE_CALIBRATION: One shot DLL calibration
 689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_7300: Periodic DLL calibration. T=7.3 ms
 690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_910: Periodic DLL calibration. T=910 us
 691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_114: Periodic DLL calibration. T=114 us
 692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CALIBRATIONRATE_14: Periodic DLL calibration. T=14 us
 693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function locks the HRTIM instance. HRTIM instance is unlocked 
 695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       within the IRQ processing function when processing the DLL ready 
 696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       interrupt.
 697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note If this function is called for periodic calibration, the DLLRDY 
 698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       interrupt is generated every time the calibration completes which
 699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       will significantly increases the overall interrupt rate.
 700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_DLLCalibrationStart_IT(HRTIM_HandleTypeDef * hhrtim,
 702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                    uint32_t CalibrationRate)
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_dllcr;
 705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
 707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CALIBRATIONRATE(CalibrationRate));
 708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable DLL Ready interrupt flag */
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE_IT(hhrtim, HRTIM_IT_DLLRDY);
ARM GAS  /tmp/ccWQyto6.s 			page 14


 716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure DLL Calibration */
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dllcr = hhrtim->Instance->sCommonRegs.DLLCR;
 719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CalibrationRate == HRTIM_SINGLE_CALIBRATION)
 721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* One shot DLL calibration */
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALEN);
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= HRTIM_DLLCR_CAL;    
 725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
 727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Periodic DLL calibration */
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALRTE | HRTIM_DLLCR_CAL);
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= (CalibrationRate | HRTIM_DLLCR_CALEN);
 731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                
 733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update HRTIM register */
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.DLLCR = hrtim_dllcr;
 735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Polls the DLL calibration ready flag and returns when the flag is
 741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         set (DLL calibration completed) or upon timeout expiration
 742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timeout: Timeout duration in millisecond
 744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status 
 745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_PollForDLLCalibration(HRTIM_HandleTypeDef * hhrtim,
 747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t Timeout)
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t tickstart=0U;
 750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   tickstart = HAL_GetTick();  
 752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      
 753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check End of conversion flag */
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   while(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_IT_DLLRDY) == RESET)
 755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (Timeout != HAL_MAX_DELAY)
 757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->State = HAL_HRTIM_STATE_ERROR;
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         return HAL_TIMEOUT;
 762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
 763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
 764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set HRTIM State */  
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
 769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process unlocked */
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim); 
 771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
ARM GAS  /tmp/ccWQyto6.s 			page 15


 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the time base unit of a timer 
 777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
 779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
 780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER for master timer
 781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
 782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
 783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
 784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
 785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
 786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pTimeBaseCfg: pointer to the time base configuration structure
 787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called prior starting the timer 
 788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note   The time-base unit initialization parameters specify:
 789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           The timer counter operating mode (continuous, one shot),
 790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           The timer clock prescaler,
 791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           The timer period ,
 792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *           The timer repetition counter.
 793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_TimeBaseConfig(HRTIM_HandleTypeDef *hhrtim,
 796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t TimerIdx,
 797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            HRTIM_TimeBaseCfgTypeDef * pTimeBaseCfg)
 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
 800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
 801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_PRESCALERRATIO(pTimeBaseCfg->PrescalerRatio)); 
 802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_MODE(pTimeBaseCfg->Mode)); 
 803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
 809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the HRTIM state */
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Configure master timer time base unit */
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_MasterBase_Config(hhrtim, pTimeBaseCfg);
 816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
 818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Configure timing unit time base unit */
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_TimingUnitBase_Config(hhrtim, TimerIdx, pTimeBaseCfg);
 821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
 823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set HRTIM state */
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
ARM GAS  /tmp/ccWQyto6.s 			page 16


 830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
 831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group2 Simple time base mode functions  
 834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    Simple time base mode functions.
 835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
 836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
 837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### Simple time base mode functions #####
 838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
 839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions allowing to:
 840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple time base 
 841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple time base 
 842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple time base and enable interrupt 
 843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple time base and disable interrupt 
 844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple time base and enable DMA transfer 
 845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple time base and disable DMA transfer 
 846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       -@-  When a HRTIM timer operates in simple time base mode, the timer
 847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	       counter counts from 0 to the period value.
 848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
 850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
 851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the counter of a timer operating in simple time base mode.
 855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index.
 857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
 858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
 859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
 860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
 861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
 862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
 863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
 864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleBaseStart(HRTIM_HandleTypeDef * hhrtim,
 867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t TimerIdx)
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {  
 869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
 870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
 871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
 882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
ARM GAS  /tmp/ccWQyto6.s 			page 17


 887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the counter of a timer operating in simple time base mode.
 890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index.
 892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
 893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
 894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
 895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
 896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
 897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
 898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
 899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleBaseStop(HRTIM_HandleTypeDef * hhrtim,
 902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t TimerIdx)
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
 905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
 906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
 917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the counter of a timer operating in simple time base mode
 925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Timer repetition interrupt is enabled).
 926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index.
 928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
 929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
 930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
 931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
 932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
 933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
 934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
 935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleBaseStart_IT(HRTIM_HandleTypeDef * hhrtim,
 938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
 941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
 942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
ARM GAS  /tmp/ccWQyto6.s 			page 18


 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the repetition interrupt */
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_ENABLE_IT(hhrtim, HRTIM_MASTER_IT_MREP);
 952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
 954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_REP);
 956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
 963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
 970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the counter of a timer operating in simple time base mode
 971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Timer repetition interrupt is disabled).
 972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
 973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index.
 974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
 975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
 976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
 977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
 978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
 979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
 980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
 981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
 982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
 983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleBaseStop_IT(HRTIM_HandleTypeDef * hhrtim,
 984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t TimerIdx)
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
 987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
 988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
 989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
 994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the repetition interrupt */
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_IT(hhrtim, HRTIM_MASTER_IT_MREP);
 998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
1000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
ARM GAS  /tmp/ccWQyto6.s 			page 19


1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_REP);
1002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
1009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
1011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the counter of a timer operating in simple time base mode
1017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Timer repetition DMA request is enabled).
1018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index.
1020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_TIMERINDEX_MASTER  for master timer
1022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  SrcAddr: DMA transfer source address
1028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  DestAddr: DMA transfer destination address
1029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Length: The length of data items (data size) to be transferred
1030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                     from source to destination
1031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleBaseStart_DMA(HRTIM_HandleTypeDef * hhrtim,
1033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                uint32_t TimerIdx,
1034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                uint32_t SrcAddr,
1035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                uint32_t DestAddr,
1036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                uint32_t Length)
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
1039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
1041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
1042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
1044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
1046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
1048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
1050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
1052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     else
1054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
1056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
ARM GAS  /tmp/ccWQyto6.s 			page 20


1058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
1064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA transfer completed callback */
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
1067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hdma->XferCpltCallback = HRTIM_DMAMasterCplt;
1069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
1071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
1073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA error callback */
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
1077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the DMA channel */
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
1080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer repetition DMA request */
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
1083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_ENABLE_DMA(hhrtim, HRTIM_MASTER_DMA_MREP);
1085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
1087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_REP);
1089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
1098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the counter of a timer operating in simple time base mode
1104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Timer repetition DMA request is disabled).
1105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index.
1107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
1109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
ARM GAS  /tmp/ccWQyto6.s 			page 21


1115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleBaseStop_DMA(HRTIM_HandleTypeDef * hhrtim,
1117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
1120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
1122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
1123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
1128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Disable the DMA */
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_DMA_Abort(hhrtim->hdmaMaster);
1131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Disable the timer repetition DMA request */
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_DMA(hhrtim, HRTIM_MASTER_DMA_MREP);
1134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
1136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Get the timer DMA handler */
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
1139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Disable the DMA */
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_DMA_Abort(hdma);
1142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Disable the timer repetition DMA request */
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_REP);
1145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
1154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
1160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group3 Simple output compare mode functions  
1163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    Simple output compare functions
1164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
1165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
1166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### Simple output compare functions #####
1167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
1168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions allowing to:
1169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure simple output channel 
1170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple output compare 
1171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple output compare 
ARM GAS  /tmp/ccWQyto6.s 			page 22


1172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple output compare and enable interrupt 
1173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple output compare and disable interrupt 
1174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple output compare and enable DMA transfer 
1175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple output compare and disable DMA transfer 
1176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        -@- When a HRTIM timer operates in simple output compare mode
1177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****            the output level is set to a programmable value when a match 
1178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****            is found between the compare register and the counter.
1179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****            Compare unit 1 is automatically associated to output 1
1180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****            Compare unit 2 is automatically associated to output 2
1181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
1182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
1183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures an output in simple output compare mode 
1187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
1196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2 
1207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pSimpleOCChannelCfg: pointer to the simple output compare output configuration structur
1208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note When the timer operates in simple output compare mode:
1209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 1 is implicitly controlled by the compare unit 1
1210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 2 is implicitly controlled by the compare unit 2
1211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       Output Set/Reset crossbar is set according to the selected output compare mode:
1212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Toggle: SETxyR = RSTxyR = CMPy
1213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Active: SETxyR = CMPy, RSTxyR = 0
1214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Inactive: SETxy =0, RSTxy = CMPy
1215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOCChannelConfig(HRTIM_HandleTypeDef * hhrtim,
1218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t TimerIdx,
1219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t OCChannel,
1220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  HRTIM_SimpleOCChannelCfgTypeDef* pSimpleOCChannelC
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CompareUnit = 0xFFFFFFFFU;
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareCfgTypeDef CompareCfg = {0};
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputCfgTypeDef OutputCfg = {0};
1225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
1227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OCChannel));
1228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_BASICOCMODE(pSimpleOCChannelCfg->Mode));
ARM GAS  /tmp/ccWQyto6.s 			page 23


1229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTPOLARITY(pSimpleOCChannelCfg->Polarity));
1230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTIDLELEVEL(pSimpleOCChannelCfg->IdleLevel));
1231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
1233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
1235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set HRTIM state */
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
1239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timer compare unit */  
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OCChannel)
1242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
1244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
1245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
1246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
1247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
1248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_1;
1250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
1253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
1254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
1255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
1256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
1257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_2;
1259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
1262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.CompareValue = pSimpleOCChannelCfg->Pulse;
1266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
1267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedTimeout = 0U;
1268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareUnitConfig(hhrtim,
1270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           TimerIdx,
1271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           CompareUnit,
1272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           &CompareCfg);
1273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timer output */
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.Polarity = pSimpleOCChannelCfg->Polarity;
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleLevel = pSimpleOCChannelCfg->IdleLevel;
1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
1281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (pSimpleOCChannelCfg->Mode)
1283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_BASICOCMODE_TOGGLE:
1285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
ARM GAS  /tmp/ccWQyto6.s 			page 24


1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (CompareUnit == HRTIM_COMPAREUNIT_1)
1287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
1289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
1290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
1291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
1293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       OutputCfg.ResetSource = OutputCfg.SetSource;
1295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_BASICOCMODE_ACTIVE:
1298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (CompareUnit == HRTIM_COMPAREUNIT_1)
1300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
1302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
1303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
1304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
1306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       OutputCfg.ResetSource = HRTIM_OUTPUTRESET_NONE;
1308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_BASICOCMODE_INACTIVE:
1311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (CompareUnit == HRTIM_COMPAREUNIT_1)
1313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.ResetSource = HRTIM_OUTPUTRESET_TIMCMP1;
1315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
1316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
1317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.ResetSource = HRTIM_OUTPUTRESET_TIMCMP2;
1319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       OutputCfg.SetSource = HRTIM_OUTPUTSET_NONE;
1321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
1324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
1328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      TimerIdx,
1329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      OCChannel,
1330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      &OutputCfg);  
1331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set HRTIM state */
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
1334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the output compare signal generation on the designed timer output 
1340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
ARM GAS  /tmp/ccWQyto6.s 			page 25


1343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
1349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOCStart(HRTIM_HandleTypeDef * hhrtim,
1363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          uint32_t TimerIdx,
1364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          uint32_t OCChannel)
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
1367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OCChannel));
1368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
1373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer output */
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OCChannel;
1376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
1382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
1384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the output compare signal generation on the designed timer output 
1390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
1399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
ARM GAS  /tmp/ccWQyto6.s 			page 26


1400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOCStop(HRTIM_HandleTypeDef * hhrtim,
1413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         uint32_t TimerIdx,
1414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         uint32_t OCChannel)
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
1417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OCChannel));
1418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
1423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OCChannel;
1426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
1432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
1434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the output compare signal generation on the designed timer output
1440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Interrupt is enabled (see note note below)).
1441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
1450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
ARM GAS  /tmp/ccWQyto6.s 			page 27


1457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note Interrupt enabling depends on the chosen output compare mode
1462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          Output toggle: compare match interrupt is enabled
1463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          Output set active:  output set interrupt is enabled
1464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          Output set inactive:  output reset interrupt is enabled
1465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOCStart_IT(HRTIM_HandleTypeDef * hhrtim,
1468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t TimerIdx,
1469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t OCChannel)
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t interrupt;
1472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
1474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OCChannel));
1475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
1480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the interrupt to enable (depends on the output compare mode) */
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   interrupt = HRTIM_GetITFromOCMode(hhrtim, TimerIdx, OCChannel);
1483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer output */
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OCChannel;
1486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer interrupt (depends on the output compare mode) */
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, interrupt);
1489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
1495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
1497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the output compare signal generation on the designed timer output
1503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Interrupt is disabled).
1504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
1513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
ARM GAS  /tmp/ccWQyto6.s 			page 28


1514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOCStop_IT(HRTIM_HandleTypeDef * hhrtim,
1527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t TimerIdx,
1528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t OCChannel)
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t interrupt;
1531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
1533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OCChannel));
1534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
1539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OCChannel;
1542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the interrupt to disable (depends on the output compare mode) */
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   interrupt = HRTIM_GetITFromOCMode(hhrtim, TimerIdx, OCChannel);
1545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer interrupt */
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, interrupt);
1548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
1554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
1556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the output compare signal generation on the designed timer output
1562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (DMA request is enabled (see note below)).
1563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
ARM GAS  /tmp/ccWQyto6.s 			page 29


1571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
1572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  SrcAddr: DMA transfer source address
1584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  DestAddr: DMA transfer destination address
1585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Length: The length of data items (data size) to be transferred
1586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                     from source to destination
1587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note  DMA request enabling depends on the chosen output compare mode
1588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          Output toggle: compare match DMA request is enabled
1589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          Output set active:  output set DMA request is enabled
1590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *          Output set inactive:  output reset DMA request is enabled 
1591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOCStart_DMA(HRTIM_HandleTypeDef * hhrtim,
1594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t TimerIdx,
1595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t OCChannel,
1596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t SrcAddr,
1597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t DestAddr,
1598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t Length)
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
1601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t dma_request;
1602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
1604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OCChannel));
1605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
1607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
1609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
1611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
1613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
1615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     else
1617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
1619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
1625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Enable the timer output */
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OCChannel;
1627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 30


1628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the DMA request to enable */
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   dma_request = HRTIM_GetDMAFromOCMode(hhrtim, TimerIdx, OCChannel);
1630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
1633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA error callback */
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
1636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA transfer completed callback */
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
1639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the DMA channel */
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
1642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer DMA request */
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, dma_request);
1645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
1653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the output compare signal generation on the designed timer output
1659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (DMA request is disabled).
1660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
1669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOCStop_DMA(HRTIM_HandleTypeDef * hhrtim,
1683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t TimerIdx,
1684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t OCChannel)
ARM GAS  /tmp/ccWQyto6.s 			page 31


1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
1687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t dma_request;
1688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
1689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
1690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OCChannel));
1691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
1696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OCChannel;
1699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
1702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the DMA */
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Abort(hdma);
1705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the DMA request to disable */
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   dma_request = HRTIM_GetDMAFromOCMode(hhrtim, TimerIdx, OCChannel);
1708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer DMA request */
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, dma_request);
1711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
1719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
1725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group4 Simple PWM output mode functions  
1728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    Simple PWM output functions
1729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
1730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
1731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### Simple PWM output functions #####
1732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
1733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions allowing to:
1734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure simple PWM output channel 
1735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple PWM output 
1736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple PWM output 
1737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple PWM output and enable interrupt 
1738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple PWM output and disable interrupt 
1739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple PWM output and enable DMA transfer 
1740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple PWM output and disable DMA transfer 
1741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	  -@- When a HRTIM timer operates in simple PWM output mode 
ARM GAS  /tmp/ccWQyto6.s 			page 32


1742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           the output level is set to a programmable value when a match is
1743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           found between the compare register and the counter and reset when
1744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           the timer period is reached. Duty cycle is determined by the 
1745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           comparison value.
1746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           Compare unit 1 is automatically associated to output 1
1747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           Compare unit 2 is automatically associated to output 2
1748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
1749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
1750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures an output in simple PWM mode 
1754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  PWMChannel: Timer output
1763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2 
1774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pSimplePWMChannelCfg: pointer to the simple PWM output configuration structure
1775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note When the timer operates in simple PWM output mode:
1776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 1 is implicitly controlled by the compare unit 1
1777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 2 is implicitly controlled by the compare unit 2
1778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       Output Set/Reset crossbar is set as follows:
1779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 1: SETx1R = CMP1, RSTx1R = PER
1780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 2: SETx2R = CMP2, RST2R = PER
1781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note When Simple PWM mode is used the registers preload mechanism is 
1782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       enabled (otherwise the behavior is not guaranteed).
1783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimplePWMChannelConfig(HRTIM_HandleTypeDef * hhrtim,
1786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t TimerIdx,
1787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t PWMChannel,
1788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   HRTIM_SimplePWMChannelCfgTypeDef* pSimplePWMChann
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CompareUnit = 0xFFFFFFFFU;
1791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareCfgTypeDef CompareCfg;
1792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputCfgTypeDef OutputCfg;
1793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_timcr;
1794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
1796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, PWMChannel));
1797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTPOLARITY(pSimplePWMChannelCfg->Polarity));
1798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTIDLELEVEL(pSimplePWMChannelCfg->IdleLevel));
ARM GAS  /tmp/ccWQyto6.s 			page 33


1799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
1801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
1803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);  hhrtim->State = HAL_HRTIM_STATE_BUSY;
1807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timer compare unit */  
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
1810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
1812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
1813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
1814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
1815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
1816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_1;
1818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
1821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
1822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
1823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
1824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
1825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_2;
1827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
1830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
1831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.CompareValue = pSimplePWMChannelCfg->Pulse;
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedTimeout = 0U;
1836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareUnitConfig(hhrtim,
1838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           TimerIdx,
1839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           CompareUnit,
1840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           &CompareCfg);
1841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timer output */
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.Polarity = pSimplePWMChannelCfg->Polarity;
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleLevel = pSimplePWMChannelCfg->IdleLevel;
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
1849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CompareUnit == HRTIM_COMPAREUNIT_1)
1851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
1853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
1855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
ARM GAS  /tmp/ccWQyto6.s 			page 34


1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
1857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ResetSource = HRTIM_OUTPUTSET_TIMPER;
1859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
1861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      TimerIdx,
1862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      PWMChannel,
1863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      &OutputCfg);
1864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the registers preload mechanism */
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr   = hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR;
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= HRTIM_TIMCR_PREEN;
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR  = hrtim_timcr;  
1869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
1871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
1874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the PWM output signal generation on the designed timer output
1880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  PWMChannel: Timer output
1889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimplePWMStart(HRTIM_HandleTypeDef * hhrtim,
1903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t TimerIdx,
1904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t PWMChannel)
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
1907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, PWMChannel));
1908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
ARM GAS  /tmp/ccWQyto6.s 			page 35


1913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer output */
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= PWMChannel;
1916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
1922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
1924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the PWM output signal generation on the designed timer output
1930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  PWMChannel: Timer output
1939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
1949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
1950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
1951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
1952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimplePWMStop(HRTIM_HandleTypeDef * hhrtim,
1953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          uint32_t TimerIdx,
1954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          uint32_t PWMChannel)
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
1956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
1957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, PWMChannel));
1958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
1961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
1963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= PWMChannel;
1966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
1967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
1969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 36


1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
1971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
1972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
1974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
1977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
1978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
1979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the PWM output signal generation on the designed timer output
1980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (The compare interrupt is enabled).
1981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
1982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
1983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
1984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
1985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
1986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
1987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
1988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
1989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  PWMChannel: Timer output
1990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
1991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
1992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
1993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
1994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
1995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
1996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
1997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
1998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
1999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
2000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
2001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimplePWMStart_IT(HRTIM_HandleTypeDef * hhrtim,
2004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t TimerIdx,
2005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t PWMChannel)
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
2008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, PWMChannel));
2009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
2014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer output */
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= PWMChannel;
2017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer interrupt (depends on the PWM output) */
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
2020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
2022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
2023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
2024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
2025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
2026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
ARM GAS  /tmp/ccWQyto6.s 			page 37


2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
2028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
2031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
2032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
2033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
2034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
2035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
2037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the PWM output signal generation on the designed timer output
2056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (The compare interrupt is disabled).
2057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  PWMChannel: Timer output
2066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
2067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
2068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
2069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
2070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
2071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
2072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
2073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
2074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
2075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
2076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
2077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimplePWMStop_IT(HRTIM_HandleTypeDef * hhrtim,
2080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t TimerIdx,
2081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t PWMChannel)
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
ARM GAS  /tmp/ccWQyto6.s 			page 38


2084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, PWMChannel));
2085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
2090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= PWMChannel;
2093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer interrupt (depends on the PWM output) */
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
2096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
2098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
2099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
2100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
2101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
2102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
2104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
2107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
2108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
2109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
2110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
2111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
2113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the PWM output signal generation on the designed timer output
2132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (The compare DMA request is enabled).
2133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
ARM GAS  /tmp/ccWQyto6.s 			page 39


2141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  PWMChannel: Timer output
2142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
2143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
2144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
2145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
2146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
2147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
2148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
2149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
2150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
2151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
2152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
2153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  SrcAddr: DMA transfer source address
2154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  DestAddr: DMA transfer destination address
2155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Length: The length of data items (data size) to be transferred
2156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                     from source to destination
2157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimplePWMStart_DMA(HRTIM_HandleTypeDef * hhrtim,
2160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx,
2161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t PWMChannel,
2162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t SrcAddr,
2163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t DestAddr,
2164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t Length)
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
2167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
2169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, PWMChannel));
2170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
2172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
2174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
2176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
2178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
2180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     else
2182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
2184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer output */
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= PWMChannel;
2192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
2195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA error callback */
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
ARM GAS  /tmp/ccWQyto6.s 			page 40


2198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA transfer completed callback */
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
2201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the DMA channel */
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
2204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer DMA request */
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
2207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
2209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
2210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
2211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
2212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
2213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP1);      
2215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
2218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
2219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
2220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
2221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
2222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP2);      
2224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    
2230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
2237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the PWM output signal generation on the designed timer output
2243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (The compare DMA request is disabled).
2244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  PWMChannel: Timer output
2253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
2254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
ARM GAS  /tmp/ccWQyto6.s 			page 41


2255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
2256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
2257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
2258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
2259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
2260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
2261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
2262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
2263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
2264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimplePWMStop_DMA(HRTIM_HandleTypeDef * hhrtim,
2267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t TimerIdx,
2268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t PWMChannel)
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
2271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
2273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, PWMChannel));
2274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
2279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= PWMChannel;
2282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
2285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the DMA */
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Abort(hdma);
2288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer DMA request */
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
2291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
2293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
2294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
2295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
2296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
2297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP1);
2299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
2302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
2303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
2304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
2305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
2306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP2);
2308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 42


2312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
2327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group5 Simple input capture functions  
2330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    Simple input capture functions
2331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
2332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
2333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### Simple input capture functions #####
2334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
2335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions allowing to:
2336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure simple input capture channel
2337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple input capture 
2338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple input capture 
2339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple input capture and enable interrupt 
2340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple input capture and disable interrupt 
2341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start simple input capture and enable DMA transfer 
2342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop simple input capture and disable DMA transfer 
2343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       -@- When a HRTIM timer operates in simple input capture mode 
2344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           the Capture Register (HRTIM_CPT1/2xR) is used to latch the
2345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          value of the timer counter counter after a transition detected 
2346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          on a given external event input.
2347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
2348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
2349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures a simple capture 
2353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureChannel: Capture unit
2362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
2363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
2364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
2365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pSimpleCaptureChannelCfg: pointer to the simple capture configuration structure
2366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note When the timer operates in simple capture mode the capture is trigerred
2367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       by the designated external event and GPIO input is implicitly used as event source.
2368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       The cature can be triggered by a rising edge, a falling edge or both
ARM GAS  /tmp/ccWQyto6.s 			page 43


2369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       edges on event channel.
2370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleCaptureChannelConfig(HRTIM_HandleTypeDef * hhrtim,
2373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                       uint32_t TimerIdx,
2374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                       uint32_t CaptureChannel,
2375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                       HRTIM_SimpleCaptureChannelCfgTypeDef* pSimple
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventCfgTypeDef EventCfg;
2378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
2380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
2381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureChannel));
2382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENT(pSimpleCaptureChannelCfg->Event));
2383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTPOLARITY(pSimpleCaptureChannelCfg->EventSensitivity,
2384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       pSimpleCaptureChannelCfg->EventPolarity));
2385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTSENSITIVITY(pSimpleCaptureChannelCfg->EventSensitivity));
2386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTFILTER(pSimpleCaptureChannelCfg->Event, 
2387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     pSimpleCaptureChannelCfg->EventFilter));
2388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
2390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
2392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure external event channel */
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.FastMode = HRTIM_EVENTFASTMODE_DISABLE;
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Filter = pSimpleCaptureChannelCfg->EventFilter;
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Polarity = pSimpleCaptureChannelCfg->EventPolarity;
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Sensitivity = pSimpleCaptureChannelCfg->EventSensitivity;
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Source = HRTIM_EVENTSRC_1;
2405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventConfig(hhrtim,
2407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                     pSimpleCaptureChannelCfg->Event,
2408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                     &EventCfg);
2409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Memorize capture trigger (will be configured when the capture is started */  
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CaptureUnitConfig(hhrtim,
2412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           TimerIdx,
2413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           CaptureChannel,
2414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           pSimpleCaptureChannelCfg->Event);
2415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
2417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
2420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables a simple capture on the designed capture unit
ARM GAS  /tmp/ccWQyto6.s 			page 44


2426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureChannel: Timer output
2435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
2436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
2437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
2438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note  The external event triggering the capture is available for all timing 
2440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *        units. It can be used directly and is active as soon as the timing 
2441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *        unit counter is enabled.
2442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleCaptureStart(HRTIM_HandleTypeDef * hhrtim,
2444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx,
2445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t CaptureChannel)
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
2448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
2449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureChannel));
2450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the capture unit trigger */
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
2458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
2460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
2462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
2465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
2467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
ARM GAS  /tmp/ccWQyto6.s 			page 45


2483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Disables a simple capture on the designed capture unit 
2486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureChannel: Timer output
2495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
2496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
2497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
2498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleCaptureStop(HRTIM_HandleTypeDef * hhrtim,
2501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t TimerIdx,
2502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t CaptureChannel)
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
2505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
2506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureChannel));
2507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the capture unit trigger */
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
2515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
2517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = HRTIM_CAPTURETRIGGER_NONE;
2519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
2522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = HRTIM_CAPTURETRIGGER_NONE;
2524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR == HRTIM_CAPTURETRIGGER_NONE))
2533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
ARM GAS  /tmp/ccWQyto6.s 			page 46


2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables a simple capture on the designed capture unit
2547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Capture interrupt is enabled).
2548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureChannel: Timer output
2557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
2558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
2559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
2560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleCaptureStart_IT(HRTIM_HandleTypeDef * hhrtim,
2563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t TimerIdx,
2564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t CaptureChannel)
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
2567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
2568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureChannel));
2569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the capture unit trigger */
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
2577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
2579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
2581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
2582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the capture unit 1 interrupt */
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1);
2584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
2587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
2589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
2590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the capture unit 2 interrupt */
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2);
2592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
ARM GAS  /tmp/ccWQyto6.s 			page 47


2597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Disables a simple capture on the designed capture unit
2611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Capture interrupt is disabled).
2612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureChannel: Timer output
2621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
2622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
2623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
2624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleCaptureStop_IT(HRTIM_HandleTypeDef * hhrtim,
2627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t TimerIdx,
2628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t CaptureChannel)
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
2631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
2632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureChannel));
2633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the capture unit trigger */
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
2641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
2643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = HRTIM_CAPTURETRIGGER_NONE;
2645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
2646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Disable the capture unit 1 interrupt */
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1);
2648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
2651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = HRTIM_CAPTURETRIGGER_NONE;
2653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 48


2654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Disable the capture unit 2 interrupt */
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2);
2656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR == HRTIM_CAPTURETRIGGER_NONE))
2665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables a simple capture on the designed capture unit
2679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Capture DMA request is enabled).
2680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureChannel: Timer output
2689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
2690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
2691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
2692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  SrcAddr: DMA transfer source address
2693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  DestAddr: DMA transfer destination address
2694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Length: The length of data items (data size) to be transferred
2695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                     from source to destination
2696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleCaptureStart_DMA(HRTIM_HandleTypeDef * hhrtim,
2699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t TimerIdx,
2700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t CaptureChannel,
2701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t SrcAddr,
2702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t DestAddr,
2703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t Length)
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
2706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
2708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
2709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureChannel));
2710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 49


2711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
2718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA error callback */
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
2721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA transfer completed callback */
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
2724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the DMA channel */
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
2727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
2729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
2731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the capture unit trigger */
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
2734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT1);      
2736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
2739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the capture unit trigger */
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
2742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
2743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the timer DMA request */
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT2);      
2745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    default:
2748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  }
2750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Disables a simple capture on the designed capture unit
2764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (Capture DMA request is disabled).
2765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
ARM GAS  /tmp/ccWQyto6.s 			page 50


2768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureChannel: Timer output
2774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
2775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
2776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
2777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleCaptureStop_DMA(HRTIM_HandleTypeDef * hhrtim,
2780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t TimerIdx,
2781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t CaptureChannel)
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
2784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
2786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
2787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureChannel));
2788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
2794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
2796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the DMA */
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Abort(hdma);
2799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
2801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
2803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Reset the capture unit trigger */
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = HRTIM_CAPTURETRIGGER_NONE;
2806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
2807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Disable the capture unit 1 DMA request */
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT1);
2809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
2812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Reset the capture unit trigger */
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = HRTIM_CAPTURETRIGGER_NONE;
2815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
2816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Disable the capture unit 2 DMA request */
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT2);
2818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
ARM GAS  /tmp/ccWQyto6.s 			page 51


2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR == HRTIM_CAPTURETRIGGER_NONE))
2827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
2829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
2832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
2833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
2835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
2838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
2841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group6 Simple one pulse functions  
2844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    Simple one pulse functions
2845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
2846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
2847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### Simple one pulse functions #####
2848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
2849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions allowing to:
2850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure one pulse channel 
2851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start one pulse generation 
2852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop one pulse generation 
2853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start one pulse generation and enable interrupt 
2854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop one pulse generation and disable interrupt 
2855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       -@- When a HRTIM timer operates in simple one pulse mode 
2856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           the timer counter is started in response to transition detected 
2857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           on a given external event input to generate a pulse with a 
2858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           programmable length after a programmable delay.
2859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
2860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
2861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
2864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures an output simple one pulse mode 
2865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
2866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
2867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
2868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
2869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
2870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
2871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
2872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
2873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OnePulseChannel: Timer output
2874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
2875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
2876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
2877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
2878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
2879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
2880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
2881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
ARM GAS  /tmp/ccWQyto6.s 			page 52


2882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
2883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
2884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2 
2885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pSimpleOnePulseChannelCfg: pointer to the simple one pulse output configuration structu
2886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note When the timer operates in simple one pulse mode:
2887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         the timer counter is implicitly started by the reset event,
2888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         the reset of the timer counter is triggered by the designated external event
2889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         GPIO input is implicitly used as event source,
2890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 1 is implicitly controlled by the compare unit 1,
2891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 2 is implicitly controlled by the compare unit 2.
2892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       Output Set/Reset crossbar is set as follows:
2893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 1: SETx1R = CMP1, RSTx1R = PER
2894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Output 2: SETx2R = CMP2, RST2R = PER
2895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
2896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note If HAL_HRTIM_SimpleOnePulseChannelConfig is called for both timer 
2897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       outputs, the reset event related configuration data provided in the 
2898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       second call will override the reset event related configuration data 
2899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       provided in the first call.
2900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
2901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOnePulseChannelConfig(HRTIM_HandleTypeDef * hhrtim,
2902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                        uint32_t TimerIdx,
2903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                        uint32_t OnePulseChannel,
2904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                        HRTIM_SimpleOnePulseChannelCfgTypeDef* pSimp
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CompareUnit = 0xFFFFFFFFU;
2907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareCfgTypeDef CompareCfg;
2908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputCfgTypeDef OutputCfg;
2909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventCfgTypeDef EventCfg;
2910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
2912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OnePulseChannel));
2913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTPOLARITY(pSimpleOnePulseChannelCfg->OutputPolarity));
2914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTIDLELEVEL(pSimpleOnePulseChannelCfg->OutputIdleLevel));
2915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENT(pSimpleOnePulseChannelCfg->Event));
2916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTPOLARITY(pSimpleOnePulseChannelCfg->EventSensitivity,
2917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       pSimpleOnePulseChannelCfg->EventPolarity));
2918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTSENSITIVITY(pSimpleOnePulseChannelCfg->EventSensitivity));
2919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTFILTER(pSimpleOnePulseChannelCfg->Event,
2920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     pSimpleOnePulseChannelCfg->EventFilter));
2921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
2923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
2925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
2929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
2931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
2932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timer compare unit */  
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OnePulseChannel)
2934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
2936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
2937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
2938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
ARM GAS  /tmp/ccWQyto6.s 			page 53


2939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
2940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_1;
2942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
2945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
2946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
2947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
2948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
2949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_2;
2951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
2954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
2955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.CompareValue = pSimpleOnePulseChannelCfg->Pulse;
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedTimeout = 0U;
2960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareUnitConfig(hhrtim,
2962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           TimerIdx,
2963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           CompareUnit,
2964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           &CompareCfg);
2965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timer output */
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.Polarity = pSimpleOnePulseChannelCfg->OutputPolarity;
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleLevel = pSimpleOnePulseChannelCfg->OutputIdleLevel;
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
2973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CompareUnit == HRTIM_COMPAREUNIT_1)
2975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
2977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
2979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
2981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ResetSource = HRTIM_OUTPUTSET_TIMPER;
2983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
2985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      TimerIdx,
2986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      OnePulseChannel,
2987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      &OutputCfg);  
2988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
2989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure external event channel */
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.FastMode = HRTIM_EVENTFASTMODE_DISABLE;
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Filter = pSimpleOnePulseChannelCfg->EventFilter;
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Polarity = pSimpleOnePulseChannelCfg->EventPolarity;
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Sensitivity = pSimpleOnePulseChannelCfg->EventSensitivity;
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Source = HRTIM_EVENTSRC_1;
2995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
ARM GAS  /tmp/ccWQyto6.s 			page 54


2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventConfig(hhrtim,
2997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                     pSimpleOnePulseChannelCfg->Event,
2998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                     &EventCfg);
2999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure the timer reset register */
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIM_ResetConfig(hhrtim,
3002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                         TimerIdx, 
3003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                         pSimpleOnePulseChannelCfg->Event);  
3004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables the simple one pulse signal generation on the designed output 
3015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
3017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
3018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
3019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
3020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
3021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
3022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
3023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OnePulseChannel: Timer output
3024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
3026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
3027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
3028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
3029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
3030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
3031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
3032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
3033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
3034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
3035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOnePulseStart(HRTIM_HandleTypeDef * hhrtim,
3038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t TimerIdx,
3039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t OnePulseChannel)
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
3042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OnePulseChannel));
3043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
3048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer output */
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OnePulseChannel;
3051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
3052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
ARM GAS  /tmp/ccWQyto6.s 			page 55


3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
3054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
3056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
3057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
3059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Disables the simple one pulse signal generation on the designed output 
3065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
3067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
3068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
3069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
3070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
3071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
3072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
3073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OnePulseChannel: Timer output
3074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
3076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
3077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
3078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
3079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
3080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
3081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
3082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
3083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
3084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
3085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOnePulseStop(HRTIM_HandleTypeDef * hhrtim,
3088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx,
3089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t OnePulseChannel)
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
3092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OnePulseChannel));
3093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
3098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OnePulseChannel;
3101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
3104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
3106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
3107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
3109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 56


3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables the simple one pulse signal generation on the designed output
3115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (The compare interrupt is enabled (pulse start)).
3116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
3118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
3119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
3120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
3121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
3122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
3123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
3124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OnePulseChannel: Timer output
3125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
3127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
3128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
3129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
3130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
3131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
3132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
3133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
3134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
3135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
3136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOnePulseStart_IT(HRTIM_HandleTypeDef * hhrtim,
3139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t TimerIdx,
3140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t OnePulseChannel)
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
3143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OnePulseChannel));
3144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
3149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer output */
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OnePulseChannel;
3152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer interrupt (depends on the OnePulse output) */
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OnePulseChannel)
3155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
3157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
3158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
3159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
3160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
3161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
3163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
3166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
ARM GAS  /tmp/ccWQyto6.s 			page 57


3167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
3168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
3169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
3170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
3172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
3175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
3180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
3182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
3183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
3185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Disables the simple one pulse signal generation on the designed output
3191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         (The compare interrupt is disabled).
3192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
3194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
3195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
3196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
3197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
3198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
3199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
3200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OnePulseChannel: Timer output
3201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
3203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
3204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
3205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
3206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
3207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
3208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
3209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
3210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
3211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
3212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SimpleOnePulseStop_IT(HRTIM_HandleTypeDef * hhrtim,
3215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t TimerIdx,
3216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t OnePulseChannel)
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      /* Check the parameters */
3219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, OnePulseChannel));
3220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 58


3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
3225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer output */
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OnePulseChannel;
3228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
3229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer interrupt (depends on the OnePulse output) */
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OnePulseChannel)
3231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
3233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
3234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
3235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
3236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
3237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
3239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
3242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
3243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
3244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
3245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
3246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
3248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
3251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
3256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
3258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
3259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
3261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
3267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group7 Configuration functions  
3270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    HRTIM configuration functions
3271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
3272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
3273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### HRTIM configuration functions #####
3274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
3275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions allowing to configure the HRTIM 
3276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	      resources shared by all the HRTIM timers operating in waveform mode:
3277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure the burst mode controller 
3278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure an external event conditionning 
3279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure the external events sampling clock  
3280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure a fault conditionning 
ARM GAS  /tmp/ccWQyto6.s 			page 59


3281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Enable or disable fault inputs 
3282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure the faults sampling clock  
3283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure an ADC trigger  
3284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
3286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
3287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the burst mode feature of the HRTIM 
3291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pBurstModeCfg: pointer to the burst mode configuration structure
3293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the burst mode 
3295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       controller
3296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_BurstModeConfig(HRTIM_HandleTypeDef * hhrtim,
3298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             HRTIM_BurstModeCfgTypeDef* pBurstModeCfg)
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_bmcr;
3301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_BURSTMODE(pBurstModeCfg->Mode));
3304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_BURSTMODECLOCKSOURCE(pBurstModeCfg->ClockSource));
3305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_HRTIM_BURSTMODEPRESCALER(pBurstModeCfg->Prescaler));
3306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_BURSTMODEPRELOAD(pBurstModeCfg->PreloadEnable));
3307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_BURSTMODETRIGGER(pBurstModeCfg->Trigger));
3308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr = hhrtim->Instance->sCommonRegs.BMCR;
3320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst mode operating mode */
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMOM);
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->Mode;
3324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst mode clock source */
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMCLK);
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->ClockSource;
3328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst mode prescaler */
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMPRSC);
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->Prescaler;
3332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
3333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/disable burst mode registers preload */
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMPREN);
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->PreloadEnable;
3336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
3337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst mode trigger */
ARM GAS  /tmp/ccWQyto6.s 			page 60


3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMTRGR = pBurstModeCfg->Trigger;
3339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst mode compare value */
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCMPR = pBurstModeCfg->IdleDuration;
3342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst mode period */
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMPER = pBurstModeCfg->Period;
3345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */  
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCR = hrtim_bmcr;
3348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the conditioning of an external event
3359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Event: external event to configure
3361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_1: External event 1
3363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_2: External event 2
3364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_3: External event 3
3365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_4: External event 4
3366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_5: External event 5
3367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_6: External event 6
3368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_7: External event 7
3369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_8: External event 8
3370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_9: External event 9
3371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_10: External event 10
3372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pEventCfg: pointer to the event conditioning configuration structure
3373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
3374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_EventConfig(HRTIM_HandleTypeDef * hhrtim,
3377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         uint32_t Event,
3378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         HRTIM_EventCfgTypeDef* pEventCfg)
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTSRC(pEventCfg->Source)); 
3382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTPOLARITY(pEventCfg->Sensitivity, pEventCfg->Polarity)); 
3383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTSENSITIVITY(pEventCfg->Sensitivity)); 
3384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTFASTMODE(Event, pEventCfg->FastMode)); 
3385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTFILTER(Event, pEventCfg->Filter)); 
3386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 61


3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure the event channel */
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventConfig(hhrtim, Event, pEventCfg);
3399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the external event conditioning block prescaler
3410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Prescaler: Prescaler value
3412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENTPRESCALER_DIV1: fEEVS=fHRTIM
3414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENTPRESCALER_DIV2: fEEVS=fHRTIM / 2
3415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENTPRESCALER_DIV4: fEEVS=fHRTIM / 4
3416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENTPRESCALER_DIV8: fEEVS=fHRTIM / 8
3417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
3418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_EventPrescalerConfig(HRTIM_HandleTypeDef * hhrtim,
3421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t Prescaler)
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_eecr3;
3424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENTPRESCALER(Prescaler));
3427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the external event prescaler */
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr3 = hhrtim->Instance->sCommonRegs.EECR3;
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr3 &= ~(HRTIM_EECR3_EEVSD);
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr3 |= Prescaler;
3442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.EECR3 = hrtim_eecr3;
3445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
ARM GAS  /tmp/ccWQyto6.s 			page 62


3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
3454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the conditioning of fault input
3456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Fault: fault input to configure
3458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_1: Fault input 1
3460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_2: Fault input 2
3461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_3: Fault input 3
3462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_4: Fault input 4
3463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_5: Fault input 5
3464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pFaultCfg: pointer to the fault conditioning configuration structure
3465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer and before
3466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       enabling faults inputs
3467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_FaultConfig(HRTIM_HandleTypeDef * hhrtim,
3470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         uint32_t Fault,
3471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                         HRTIM_FaultCfgTypeDef* pFaultCfg)
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_fltinr1;
3474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_fltinr2;
3475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULT(Fault));
3478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULTSOURCE(pFaultCfg->Source));
3479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULTPOLARITY(pFaultCfg->Polarity));
3480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULTFILTER(pFaultCfg->Filter));
3481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULTLOCK(pFaultCfg->Lock));
3482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure fault channel */
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr1 = hhrtim->Instance->sCommonRegs.FLTINR1;
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 = hhrtim->Instance->sCommonRegs.FLTINR2;
3496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Fault)
3498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_FAULT_1:
3500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT1P | HRTIM_FLTINR1_FLT1SRC | HRTIM_FLTINR1_FLT1F | HRTIM_
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Polarity;
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Source;
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Filter;
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Lock;
3506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_FAULT_2:
ARM GAS  /tmp/ccWQyto6.s 			page 63


3509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT2P | HRTIM_FLTINR1_FLT2SRC | HRTIM_FLTINR1_FLT2F | HRTIM_
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Polarity << 8U);
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Source << 8U);
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Filter << 8U);
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Lock << 8U);
3515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_FAULT_3:
3518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT3P | HRTIM_FLTINR1_FLT3SRC | HRTIM_FLTINR1_FLT3F | HRTIM_
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Polarity << 16U);
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Source << 16U);
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Filter << 16U);
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Lock << 16U);
3524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_FAULT_4:
3527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT4P | HRTIM_FLTINR1_FLT4SRC | HRTIM_FLTINR1_FLT4F | HRTIM_
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Polarity << 24U);
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Source << 24U);
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Filter << 24U);
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Lock << 24U);
3533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_FAULT_5:
3536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 &= ~(HRTIM_FLTINR2_FLT5P | HRTIM_FLTINR2_FLT5SRC | HRTIM_FLTINR2_FLT5F | HRTIM_
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Polarity;
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Source;
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Filter;
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Lock;
3542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
3545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR1 = hrtim_fltinr1;
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR2 = hrtim_fltinr2;
3551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the fault conditioning block prescaler
3562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Prescaler: Prescaler value
3564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULTPRESCALER_DIV1: fFLTS=fHRTIM
ARM GAS  /tmp/ccWQyto6.s 			page 64


3566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULTPRESCALER_DIV2: fFLTS=fHRTIM / 2
3567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULTPRESCALER_DIV4: fFLTS=fHRTIM / 4
3568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULTPRESCALER_DIV8: fFLTS=fHRTIM / 8
3569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer and before
3571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       enabling faults inputs
3572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_FaultPrescalerConfig(HRTIM_HandleTypeDef * hhrtim,
3574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t Prescaler)
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_fltinr2;
3577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULTPRESCALER(Prescaler));
3580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the external event prescaler */
3592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 = hhrtim->Instance->sCommonRegs.FLTINR2;
3593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 &= ~(HRTIM_FLTINR2_FLTSD);
3594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 |= Prescaler;
3595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR2 = hrtim_fltinr2;
3598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
3605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
3607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables or disables the HRTIMx Fault mode.
3609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Faults: fault input(s) to enable or disable
3611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
3612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_1: Fault input 1
3613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_2: Fault input 2
3614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_3: Fault input 3
3615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_4: Fault input 4
3616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULT_5: Fault input 5
3617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Enable: Fault(s) enabling
3618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULTMODECTL_ENABLED: Fault(s) enabled
3620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_FAULTMODECTL_DISABLED: Fault(s) disabled
3621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
3622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
ARM GAS  /tmp/ccWQyto6.s 			page 65


3623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** void HAL_HRTIM_FaultModeCtl(HRTIM_HandleTypeDef * hhrtim, 
3624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                         uint32_t Faults, 
3625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                         uint32_t Enable)
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_fltinr1;
3628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_fltinr2;
3629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULT(Faults));
3632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_FAULTMODECTL(Enable));
3633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure fault channel */
3635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr1 = hhrtim->Instance->sCommonRegs.FLTINR1;
3636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 = hhrtim->Instance->sCommonRegs.FLTINR2;
3637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_1) != RESET)
3639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT1E;
3641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= Enable;
3642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_2) != RESET)
3644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT2E;
3646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= (Enable << 8U);
3647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_3) != RESET)
3649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT3E;
3651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= (Enable << 16U);
3652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_4) != RESET)
3654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT4E; 
3656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= (Enable << 24U);
3657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_5) != RESET)
3659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr2 &= ~HRTIM_FLTINR2_FLT5E;
3661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr2 |= Enable;
3662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIMx registers */
3665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR1 = hrtim_fltinr1;
3666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR2 = hrtim_fltinr2;
3667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }      
3668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures both the ADC trigger register update source and the ADC
3671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         trigger source.
3672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  ADCTrigger: ADC trigger to configure
3674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_ADCTRIGGER_1: ADC trigger 1
3676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_ADCTRIGGER_2: ADC trigger 2
3677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_ADCTRIGGER_3: ADC trigger 3
3678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_ADCTRIGGER_4: ADC trigger 4
3679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pADCTriggerCfg: pointer to the ADC trigger configuration structure
ARM GAS  /tmp/ccWQyto6.s 			page 66


3680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
3682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_ADCTriggerConfig(HRTIM_HandleTypeDef * hhrtim,
3684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t ADCTrigger,
3685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              HRTIM_ADCTriggerCfgTypeDef* pADCTriggerCfg)
3686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_cr1;
3688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_ADCTRIGGER(ADCTrigger));
3691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_ADCTRIGGERUPDATE(pADCTriggerCfg->UpdateSource));
3692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the ADC trigger update source */
3704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_cr1 = hhrtim->Instance->sCommonRegs.CR1;
3705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (ADCTrigger)
3707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_ADCTRIGGER_1:
3709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC1USRC);
3711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= (pADCTriggerCfg->UpdateSource & HRTIM_CR1_ADC1USRC);
3712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
3713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the ADC trigger 1 source */
3714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC1R = pADCTriggerCfg->Trigger;
3715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_ADCTRIGGER_2:
3718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC2USRC);
3720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= ((pADCTriggerCfg->UpdateSource << 3U) & HRTIM_CR1_ADC2USRC); 
3721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the ADC trigger 2 source */
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC2R = pADCTriggerCfg->Trigger;
3724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_ADCTRIGGER_3:
3727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC3USRC);
3729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= ((pADCTriggerCfg->UpdateSource << 6U) & HRTIM_CR1_ADC3USRC); 
3730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
3731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the ADC trigger 3 source */
3732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC3R = pADCTriggerCfg->Trigger;
3733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_ADCTRIGGER_4:
3736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
ARM GAS  /tmp/ccWQyto6.s 			page 67


3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC4USRC);
3738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= ((pADCTriggerCfg->UpdateSource << 9U) & HRTIM_CR1_ADC4USRC); 
3739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
3740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the ADC trigger 4 source */
3741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC4R = pADCTriggerCfg->Trigger;
3742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
3745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
3749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR1 = hrtim_cr1;
3750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
3761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group8 Timer waveform configuration and functions
3764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    HRTIM timer configuration and control functions
3765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
3766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
3767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### HRTIM timer configuration and control functions #####
3768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
3769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions used to configure and control a 
3770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 	      HRTIM timer operating in waveform mode:
3771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer general behavior
3772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer event filtering
3773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer deadtime insertion 
3774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer chopper mode  
3775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer burst DMA 
3776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer compare unit
3777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer capture unit 
3778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Configure HRTIM timer output 
3779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Set HRTIM timer output level
3780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Enable HRTIM timer output
3781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Disable HRTIM timer output
3782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start HRTIM timer
3783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop HRTIM timer
3784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start HRTIM timer and enable interrupt 
3785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop HRTIM timer and disable interrupt
3786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start HRTIM timer and enable DMA transfer  
3787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Stop HRTIM timer and disable DMA transfer  
3788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Enable or disable the burst mode controller  
3789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start the burst mode controller (by software)
3790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Trigger a Capture (by software)
3791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Update the HRTIM timer preloadable registers (by software)
3792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Reset the HRTIM timer counter (by software)
3793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Start a burst DMA transfer
ARM GAS  /tmp/ccWQyto6.s 			page 68


3794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Enable timer register update
3795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Disable timer register update
3796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
3798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
3799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the general behavior of a timer operating in waveform mode 
3803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
3805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
3806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
3807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
3808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
3809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
3810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
3811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
3812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pTimerCfg: pointer to the timer configuration structure
3813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note When the timer operates in waveform mode, all the features supported by
3814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       the HRTIM are available without any limitation.
3815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
3817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformTimerConfig(HRTIM_HandleTypeDef * hhrtim,
3819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t TimerIdx,
3820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 HRTIM_TimerCfgTypeDef * pTimerCfg)
3821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
3824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Relevant for all HRTIM timers, including the master */
3826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_HALFMODE(pTimerCfg->HalfModeEnable));
3827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_SYNCSTART(pTimerCfg->StartOnSync));
3828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_SYNCRESET(pTimerCfg->ResetOnSync));
3829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HHRTIM_DACSYNC(pTimerCfg->DACSynchro));
3830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_PRELOAD(pTimerCfg->PreloadEnable));
3831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERBURSTMODE(pTimerCfg->BurstMode));
3832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_UPDATEONREPETITION(pTimerCfg->RepetitionUpdate));
3833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
3845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Check parameters */
3847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_UPDATEGATING_MASTER(pTimerCfg->UpdateGating));
3848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_MASTER_IT(pTimerCfg->InterruptRequests));
3849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_MASTER_DMA(pTimerCfg->DMARequests));
3850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
ARM GAS  /tmp/ccWQyto6.s 			page 69


3851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Configure master timer */
3852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_MasterWaveform_Config(hhrtim, pTimerCfg);
3853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
3855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Check parameters */
3857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_UPDATEGATING_TIM(pTimerCfg->UpdateGating));  
3858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIM_IT(pTimerCfg->InterruptRequests));
3859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIM_DMA(pTimerCfg->DMARequests));
3860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMPUSHPULLMODE(pTimerCfg->PushPull));
3861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMFAULTENABLE(pTimerCfg->FaultEnable));
3862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMFAULTLOCK(pTimerCfg->FaultLock));
3863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMDEADTIMEINSERTION(pTimerCfg->PushPull,
3864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                pTimerCfg->DeadTimeInsertion));
3865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMDELAYEDPROTECTION(pTimerCfg->PushPull,
3866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                pTimerCfg->DelayedProtectionMode));
3867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMUPDATETRIGGER(pTimerCfg->UpdateTrigger)); 
3868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMRESETTRIGGER(pTimerCfg->ResetTrigger));
3869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     assert_param(IS_HRTIM_TIMUPDATEONRESET(pTimerCfg->ResetUpdate));
3870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
3871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Configure timing unit */
3872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_TimingUnitWaveform_Config(hhrtim, TimerIdx, pTimerCfg);
3873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update timer parameters */
3876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].InterruptRequests = pTimerCfg->InterruptRequests;
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMARequests = pTimerCfg->DMARequests;
3878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMASrcAddress = pTimerCfg->DMASrcAddress;
3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMADstAddress = pTimerCfg->DMADstAddress;
3880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMASize = pTimerCfg->DMASize;
3881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Force a software update */
3883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_ForceRegistersUpdate(hhrtim, TimerIdx);
3884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
3886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
3889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
3891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
3892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
3894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the event filtering capabilities of a timer (blanking, windowing) 
3895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
3896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
3897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
3898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
3899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
3900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
3901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
3902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
3903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Event: external event for which timer event filtering must be configured
3904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
3905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_NONE: Reset timer event filtering configuration
3906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_1: External event 1
3907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_2: External event 2
ARM GAS  /tmp/ccWQyto6.s 			page 70


3908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_3: External event 3
3909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_4: External event 4
3910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_5: External event 5
3911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_6: External event 6
3912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_7: External event 7
3913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_8: External event 8
3914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_9: External event 9
3915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_EVENT_10: External event 10
3916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pTimerEventFilteringCfg: pointer to the timer event filtering configuration structure
3917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
3918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
3919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
3920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_TimerEventFilteringConfig(HRTIM_HandleTypeDef * hhrtim,
3921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                       uint32_t TimerIdx,
3922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                       uint32_t Event,
3923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                       HRTIM_TimerEventFilteringCfgTypeDef* pTimerEv
3924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
3925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_eefr;
3926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
3928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
3929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_EVENT(Event));
3930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMEVENTFILTER(pTimerEventFilteringCfg->Filter));
3931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMEVENTLATCH(pTimerEventFilteringCfg->Latch));
3932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
3934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
3936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
3937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
3940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
3941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
3942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
3943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timer event filtering capabilities */
3944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Event)
3945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
3946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_NONE:
3947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = 0U;
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = 0U;
3950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_1:
3953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
3955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE1FLTR | HRTIM_EEFR1_EE1LTCH);
3956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= (pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch);
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
3958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_2:
3961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
3963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE2FLTR | HRTIM_EEFR1_EE2LTCH);
3964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 6U);
ARM GAS  /tmp/ccWQyto6.s 			page 71


3965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
3966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_3:
3969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
3971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE3FLTR | HRTIM_EEFR1_EE3LTCH);
3972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 12U);
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
3974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_4:
3977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
3979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE4FLTR | HRTIM_EEFR1_EE4LTCH);
3980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 18U);
3981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
3982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_5:
3985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
3987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE5FLTR | HRTIM_EEFR1_EE5LTCH);
3988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 24U);
3989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
3990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
3992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_6:
3993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
3994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
3995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE6FLTR | HRTIM_EEFR2_EE6LTCH);
3996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= (pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch);
3997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
3998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
3999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_7:
4001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
4003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE7FLTR | HRTIM_EEFR2_EE7LTCH);
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 6U);
4005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
4006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_8:
4009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
4011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE8FLTR | HRTIM_EEFR2_EE8LTCH);
4012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 12U);
4013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
4014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_9:
4017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
4019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE9FLTR | HRTIM_EEFR2_EE9LTCH);
4020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 18U);
4021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
ARM GAS  /tmp/ccWQyto6.s 			page 72


4022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_10:
4025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
4027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE10FLTR | HRTIM_EEFR2_EE10LTCH);
4028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 24U);
4029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
4030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
4033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
4040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the deadtime insertion feature for a timer 
4046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
4048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
4049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
4050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
4051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
4052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
4053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
4054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pDeadTimeCfg: pointer to the deadtime insertion configuration structure
4055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
4057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_DeadTimeConfig(HRTIM_HandleTypeDef * hhrtim,
4059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t TimerIdx,
4060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            HRTIM_DeadTimeCfgTypeDef* pDeadTimeCfg)
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_dtr;
4063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
4065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
4066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMDEADTIME_PRESCALERRATIO(pDeadTimeCfg->Prescaler));
4067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMDEADTIME_RISINGSIGN(pDeadTimeCfg->RisingSign));
4068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMDEADTIME_RISINGLOCK(pDeadTimeCfg->RisingLock));
4069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMDEADTIME_RISINGSIGNLOCK(pDeadTimeCfg->RisingSignLock));
4070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMDEADTIME_FALLINGSIGN(pDeadTimeCfg->FallingSign));
4071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMDEADTIME_FALLINGLOCK(pDeadTimeCfg->FallingLock));
4072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMDEADTIME_FALLINGSIGNLOCK(pDeadTimeCfg->FallingSignLock));
4073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
4075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
4077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 73


4079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr = hhrtim->Instance->sTimerxRegs[TimerIdx].DTxR;
4085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      
4086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Clear timer deadtime configuration */
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr &= ~(HRTIM_DTR_DTR | HRTIM_DTR_SDTR | HRTIM_DTR_DTPRSC |
4088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  HRTIM_DTR_DTRSLK | HRTIM_DTR_DTRLK | HRTIM_DTR_DTF |
4089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                  HRTIM_DTR_SDTF | HRTIM_DTR_DTFSLK | HRTIM_DTR_DTFLK);
4090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set timer deadtime configuration */
4092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->Prescaler;
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingValue;
4094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingSign;
4095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingSignLock;
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingLock;
4097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= (pDeadTimeCfg->FallingValue << 16U);
4098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->FallingSign;
4099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->FallingSignLock;
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->FallingLock;
4101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
4102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */  
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].DTxR = hrtim_dtr;
4104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
4109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the chopper mode feature for a timer 
4115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
4117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
4118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
4119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
4120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
4121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
4122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
4123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pChopperModeCfg: pointer to the chopper mode configuration structure
4124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before configuring the timer output(s)
4126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_ChopperModeConfig(HRTIM_HandleTypeDef * hhrtim,
4128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx,
4129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               HRTIM_ChopperModeCfgTypeDef* pChopperModeCfg)
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_chpr;
4132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
4134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
4135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CHOPPER_PRESCALERRATIO(pChopperModeCfg->CarrierFreq));
ARM GAS  /tmp/ccWQyto6.s 			page 74


4136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CHOPPER_DUTYCYCLE(pChopperModeCfg->DutyCycle));
4137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CHOPPER_PULSEWIDTH(pChopperModeCfg->StartPulse));
4138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
4140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
4142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr = hhrtim->Instance->sTimerxRegs[TimerIdx].CHPxR;
4150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      
4151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Clear timer chopper mode configuration */
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr &= ~(HRTIM_CHPR_CARFRQ | HRTIM_CHPR_CARDTY | HRTIM_CHPR_STRPW);
4153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set timer choppe mode configuration */
4155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr |= pChopperModeCfg->CarrierFreq;
4156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr |= (pChopperModeCfg->DutyCycle);
4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr |= (pChopperModeCfg->StartPulse);
4158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
4159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */  
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].CHPxR = hrtim_chpr;
4161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
4166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the burst DMA controller for a timer 
4172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
4174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                  This parameter can be one of the following values:
4175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
4176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
4177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
4178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
4179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
4180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
4181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  RegistersToUpdate: registers to be written by DMA
4182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be any combination of the following values:
4183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_CR: HRTIM_MCR or HRTIM_TIMxCR
4184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_ICR: HRTIM_MICR or HRTIM_TIMxICR
4185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_DIER: HRTIM_MDIER or HRTIM_TIMxDIER
4186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_CNT: HRTIM_MCNT or HRTIM_TIMxCNT
4187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_PER: HRTIM_MPER or HRTIM_TIMxPER
4188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_REP: HRTIM_MREP or HRTIM_TIMxREP
4189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_CMP1: HRTIM_MCMP1 or HRTIM_TIMxCMP1
4190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_CMP2: HRTIM_MCMP2 or HRTIM_TIMxCMP2
4191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_CMP3: HRTIM_MCMP3 or HRTIM_TIMxCMP3
4192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_CMP4: HRTIM_MCMP4 or HRTIM_TIMxCMP4
ARM GAS  /tmp/ccWQyto6.s 			page 75


4193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_DTR: HRTIM_TIMxDTR
4194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_SET1R: HRTIM_TIMxSET1R
4195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_RST1R: HRTIM_TIMxRST1R
4196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_SET2R: HRTIM_TIMxSET2R
4197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_RST2R: HRTIM_TIMxRST2R
4198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_EEFR1: HRTIM_TIMxEEFR1
4199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_EEFR2: HRTIM_TIMxEEFR2
4200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_RSTR: HRTIM_TIMxRSTR
4201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_CHPR: HRTIM_TIMxCHPR
4202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_OUTR: HRTIM_TIMxOUTR
4203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTDMA_FLTR: HRTIM_TIMxFLTR
4204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
4206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_BurstDMAConfig(HRTIM_HandleTypeDef * hhrtim,
4208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t TimerIdx,
4209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t RegistersToUpdate)
4210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
4212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_BURSTDMA(TimerIdx, RegistersToUpdate));
4213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
4215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
4217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst DMA timer update register */
4225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (TimerIdx) 
4226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_A:
4228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTAUPR = RegistersToUpdate;
4230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_B:
4233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTBUPR = RegistersToUpdate;
4235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_C:
4238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTCUPR = RegistersToUpdate;
4240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_D:
4243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTDUPR = RegistersToUpdate;
4245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_E:
4248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTEUPR = RegistersToUpdate;
ARM GAS  /tmp/ccWQyto6.s 			page 76


4250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_MASTER:
4253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDMUPR = RegistersToUpdate;
4255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
4258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
4265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the compare unit of a timer operating in waveform mode 
4271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
4273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
4274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
4275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
4276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
4277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
4278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
4279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
4280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CompareUnit: Compare unit to configure
4281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
4282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_COMPAREUNIT_1: Compare unit 1
4283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_COMPAREUNIT_2: Compare unit 2
4284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_COMPAREUNIT_3: Compare unit 3
4285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_COMPAREUNIT_4: Compare unit 4
4286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pCompareCfg: pointer to the compare unit configuration structure
4287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note When auto delayed mode is required for compare unit 2 or compare unit 4, 
4288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       application has to configure separately the capture unit. Capture unit 
4289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       to configure in that case depends on the compare unit auto delayed mode
4290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       is applied to (see below):
4291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Auto delayed on output compare 2: capture unit 1 must be configured
4292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Auto delayed on output compare 4: capture unit 2 must be configured
4293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
4295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCompareConfig(HRTIM_HandleTypeDef * hhrtim,
4297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t TimerIdx,
4298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t CompareUnit,
4299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   HRTIM_CompareCfgTypeDef* pCompareCfg)
4300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
4302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
4303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
4305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
ARM GAS  /tmp/ccWQyto6.s 			page 77


4307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure the compare unit */
4315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
4316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     switch (CompareUnit)
4318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       case HRTIM_COMPAREUNIT_1:
4320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         {
4321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP1R = pCompareCfg->CompareValue;
4322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         }
4323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
4324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       case HRTIM_COMPAREUNIT_2:
4325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         {
4326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP2R = pCompareCfg->CompareValue;
4327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         }
4328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
4329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       case HRTIM_COMPAREUNIT_3:
4330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         {
4331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP3R = pCompareCfg->CompareValue;
4332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         }
4333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
4334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       case HRTIM_COMPAREUNIT_4:
4335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         {
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP4R = pCompareCfg->CompareValue;
4337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         }
4338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
4339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     default:
4340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
4341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
4344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     switch (CompareUnit)
4346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_1:
4348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Set the compare value */
4350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP1xR = pCompareCfg->CompareValue;
4351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
4353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_2:
4354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Check parameters */
4356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         assert_param(IS_HRTIM_COMPAREUNIT_AUTODELAYEDMODE(CompareUnit, pCompareCfg->AutoDelayedMode
4357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         
4358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Set the compare value */
4359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP2xR = pCompareCfg->CompareValue;
4360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         
4361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         if (pCompareCfg->AutoDelayedMode != HRTIM_AUTODELAYEDMODE_REGULAR)
4362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         {
4363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* Configure auto-delayed mode */
ARM GAS  /tmp/ccWQyto6.s 			page 78


4364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* DELCMP2 bitfield must be reset when reprogrammed from one value */
4365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* to the other to reinitialize properly the auto-delayed mechanism */
4366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR &= ~HRTIM_TIMCR_DELCMP2;
4367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR |= pCompareCfg->AutoDelayedMode;
4368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           
4369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* Set the compare value for timeout compare unit (if any) */
4370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP1)
4371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           {
4372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP1xR = pCompareCfg->AutoDelayedTimeout;
4373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           }
4374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           else if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP3)
4375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           {
4376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP3xR = pCompareCfg->AutoDelayedTimeout;
4377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           }
4378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         }
4379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
4381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_3:
4382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Set the compare value */
4384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP3xR = pCompareCfg->CompareValue;
4385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
4387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_4:
4388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Check parameters */
4390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         assert_param(IS_HRTIM_COMPAREUNIT_AUTODELAYEDMODE(CompareUnit, pCompareCfg->AutoDelayedMode
4391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         
4392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Set the compare value */
4393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP4xR = pCompareCfg->CompareValue;
4394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         
4395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         if (pCompareCfg->AutoDelayedMode != HRTIM_AUTODELAYEDMODE_REGULAR)
4396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         {
4397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* Configure auto-delayed mode */
4398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* DELCMP4 bitfield must be reset when reprogrammed from one value */
4399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* to the other to reinitialize properly the auto-delayed mechanism */
4400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR &= ~HRTIM_TIMCR_DELCMP4;
4401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR |= (pCompareCfg->AutoDelayedMode << 2U);
4402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           
4403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           /* Set the compare value for timeout compare unit (if any) */
4404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP1)
4405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           {
4406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP1xR = pCompareCfg->AutoDelayedTimeout;
4407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           }
4408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           else if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP3)
4409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           {
4410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP3xR = pCompareCfg->AutoDelayedTimeout;
4411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           }
4412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         }
4413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
4415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     default:
4416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
4417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 79


4421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
4423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the capture unit of a timer operating in waveform mode 
4429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
4431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
4432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
4433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
4434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
4435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
4436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
4437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureUnit: Capture unit to configure
4438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
4439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
4440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
4441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pCaptureCfg: pointer to the compare unit configuration structure
4442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before starting the timer
4444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCaptureConfig(HRTIM_HandleTypeDef * hhrtim,
4446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t TimerIdx,
4447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   uint32_t CaptureUnit,
4448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                   HRTIM_CaptureCfgTypeDef* pCaptureCfg)
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
4451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_CAPTURETRIGGER(TimerIdx, pCaptureCfg->Trigger));
4452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
4454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
4456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure the capture unit */
4464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureUnit)
4465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
4467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = pCaptureCfg->Trigger;
4469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
4472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = pCaptureCfg->Trigger;
4474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
4477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 80


4478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
4484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the output of a timer operating in waveform mode 
4490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
4492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
4493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
4494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
4495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
4496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
4497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
4498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Output: Timer output
4499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
4500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
4501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
4502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
4503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
4504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
4505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
4506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
4507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
4508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
4509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2 
4510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pOutputCfg: pointer to the timer output configuration structure
4511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called before configuring the timer and after 
4513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       configuring the deadtime insertion feature (if required).
4514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformOutputConfig(HRTIM_HandleTypeDef * hhrtim,
4516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t TimerIdx,
4517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t Output,
4518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 HRTIM_OutputCfgTypeDef * pOutputCfg)
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
4521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, Output));
4522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTPOLARITY(pOutputCfg->Polarity));
4523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTIDLELEVEL(pOutputCfg->IdleLevel));
4524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTIDLEMODE(pOutputCfg->IdleMode));
4525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTFAULTLEVEL(pOutputCfg->FaultLevel));
4526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTCHOPPERMODE(pOutputCfg->ChopperModeEnable));
4527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTBURSTMODEENTRY(pOutputCfg->BurstModeEntryDelayed));
4528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
4530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
4532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
ARM GAS  /tmp/ccWQyto6.s 			page 81


4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure the timer output */
4540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
4541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      TimerIdx,
4542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      Output,
4543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      pOutputCfg);  
4544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
4549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Forces the timer output to its active or inactive state 
4555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
4557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
4558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
4559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
4560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
4561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
4562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
4563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Output: Timer output
4564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
4565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
4566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
4567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
4568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
4569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
4570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
4571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
4572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
4573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
4574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
4575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param OutputLevel: indicates whether the output is forced to its active or inactive level
4576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
4577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUTLEVEL_ACTIVE: output is forced to its active level
4578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUTLEVEL_INACTIVE: output is forced to its inactive level
4579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The 'software set/reset trigger' bit in the output set/reset registers 
4581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       is automatically reset by hardware
4582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformSetOutputLevel(HRTIM_HandleTypeDef * hhrtim,
4584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                    uint32_t TimerIdx,
4585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                    uint32_t Output,
4586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                    uint32_t OutputLevel)
4587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
4589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, Output));
4590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUTLEVEL(OutputLevel));
4591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 82


4592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
4593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
4595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Force timer output level */
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
4604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
4606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
4607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
4608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
4609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
4610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (OutputLevel == HRTIM_OUTPUTLEVEL_ACTIVE)
4612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Force output to its active state */
4614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].SETx1R |= HRTIM_SET1R_SST;
4615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
4617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Force output to its inactive state */
4619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx1R |= HRTIM_RST1R_SRT;
4620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
4624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
4625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
4626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
4627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
4628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (OutputLevel == HRTIM_OUTPUTLEVEL_ACTIVE)
4630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Force output to its active state */
4632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].SETx2R |= HRTIM_SET2R_SST;
4633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
4635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
4636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Force output to its inactive state */
4637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx2R |= HRTIM_RST2R_SRT;
4638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
4639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
4642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
4643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
4646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
ARM GAS  /tmp/ccWQyto6.s 			page 83


4649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
4651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables the generation of the waveform signal on the designated output(s)
4655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Outputs can be combined (ORed) to allow for simultaneous output enabling.
4656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OutputsToStart: Timer output(s) to enable
4658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be any combination of the following values:
4659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
4660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
4661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
4662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
4663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
4664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
4665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
4666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
4667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
4668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
4669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformOutputStart(HRTIM_HandleTypeDef * hhrtim,
4672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t OutputsToStart)
4673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
4675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUT(OutputsToStart));
4676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
4681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the HRTIM outputs */
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= (OutputsToStart);
4684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
4686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
4687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
4689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
4691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Disables the generation of the waveform signal on the designated output(s)
4695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Outputs can be combined (ORed) to allow for simultaneous output disabling.
4696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OutputsToStop: Timer output(s) to disable
4698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be any combination of the following values:
4699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
4700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
4701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
4702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
4703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
4704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
4705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
ARM GAS  /tmp/ccWQyto6.s 			page 84


4706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
4707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
4708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
4709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformOutputStop(HRTIM_HandleTypeDef * hhrtim,
4712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                uint32_t OutputsToStop)
4713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
4715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_OUTPUT(OutputsToStop));
4716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
4721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the HRTIM outputs */
4723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= (OutputsToStop);
4724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
4726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
4727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
4729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
4731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the counter of the designated timer(s) operating in waveform mode
4735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Timers can be combined (ORed) to allow for simultaneous counter start.
4736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer counter(s) to start
4738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
4739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_MASTER 
4740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_TIMER_A 
4741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_TIMER_B 
4742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_TIMER_C 
4743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_TIMER_D 
4744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_TIMER_E 
4745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCounterStart(HRTIM_HandleTypeDef * hhrtim,
4748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                  uint32_t Timers)
4749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
4751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERID(Timers));
4752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
4757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable timer(s) counter */
4759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR |= (Timers);
4760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
4762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
ARM GAS  /tmp/ccWQyto6.s 			page 85


4763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
4765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
4767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the counter of the designated timer(s) operating in waveform mode
4771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Timers can be combined (ORed) to allow for simultaneous counter stop.
4772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer counter(s) to stop
4774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
4775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_MASTER 
4776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_A 
4777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_B 
4778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_C 
4779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_D 
4780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_E 
4781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The counter of a timer is stopped only if all timer outputs are disabled   
4783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCounterStop(HRTIM_HandleTypeDef * hhrtim,
4785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                 uint32_t Timers)
4786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
4788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERID(Timers));
4789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
4794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable timer(s) counter */
4796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR &= ~(Timers);
4797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
4799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
4800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
4802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
4804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the counter of the designated timer(s) operating in waveform mode
4808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Timers can be combined (ORed) to allow for simultaneous counter start.
4809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer counter(s) to start
4811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
4812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_MASTER 
4813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_A 
4814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_B 
4815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_C 
4816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_D 
4817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_E 
4818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note HRTIM interrupts (e.g. faults interrupts) and interrupts related
4819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       to the timers to start are enabled within this function. 
ARM GAS  /tmp/ccWQyto6.s 			page 86


4820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       Interrupts to enable are selected through HAL_HRTIM_WaveformTimerConfig
4821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       function.
4822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCounterStart_IT(HRTIM_HandleTypeDef * hhrtim,
4825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                     uint32_t Timers)
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint8_t timer_idx;
4828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
4830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERID(Timers));
4831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable HRTIM interrupts (if required) */
4838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE_IT(hhrtim, hhrtim->Init.HRTIMInterruptResquests);
4839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable master timer related interrupts (if required) */
4841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Timers & HRTIM_TIMERID_MASTER) != RESET)
4842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_ENABLE_IT(hhrtim, 
4844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                  hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].InterruptRequests);
4845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable timing unit related interrupts (if required) */
4848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
4849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx < HRTIM_TIMERINDEX_MASTER ; 
4850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
4851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((Timers & TimerIdxToTimerId[timer_idx]) != RESET)
4853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, 
4855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                   timer_idx, 
4856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                   hhrtim->TimerParam[timer_idx].InterruptRequests);
4857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable timer(s) counter */
4861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR |= (Timers);
4862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
4864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
4865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
4866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
4867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;}
4869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the counter of the designated timer(s) operating in waveform mode
4872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Timers can be combined (ORed) to allow for simultaneous counter stop.
4873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer counter(s) to stop
4875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
4876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_MASTER 
ARM GAS  /tmp/ccWQyto6.s 			page 87


4877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_A 
4878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_B 
4879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_C 
4880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_D 
4881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_E 
4882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The counter of a timer is stopped only if all timer outputs are disabled
4884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note All enabled timer related interrupts are disabled.
4885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCounterStop_IT(HRTIM_HandleTypeDef * hhrtim,
4887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                    uint32_t Timers)
4888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* ++ WA */
4890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __IO uint32_t delai = (uint32_t)(0x17FU);
4891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* -- WA */
4892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint8_t timer_idx;
4894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
4896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERID(Timers));
4897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
4902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable HRTIM interrupts (if required) */
4904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE_IT(hhrtim, hhrtim->Init.HRTIMInterruptResquests);
4905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable master timer related interrupts (if required) */
4907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Timers & HRTIM_TIMERID_MASTER) != RESET)
4908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Interrupts enable flag must be cleared one by one */
4910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_IT(hhrtim, hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].InterruptRequ
4911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable timing unit related interrupts (if required) */
4914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
4915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx < HRTIM_TIMERINDEX_MASTER ; 
4916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
4917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((Timers & TimerIdxToTimerId[timer_idx]) != RESET)
4919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
4920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, timer_idx, hhrtim->TimerParam[timer_idx].InterruptReques
4921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
4922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* ++ WA */
4925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   do { delai--; } while (delai != 0U);
4926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* -- WA */
4927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable timer(s) counter */
4929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR &= ~(Timers);
4930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
4932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
ARM GAS  /tmp/ccWQyto6.s 			page 88


4934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
4935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
4937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
4938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
4940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts the counter of the designated timer(s) operating in waveform mode
4941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Timers can be combined (ORed) to allow for simultaneous counter start.
4942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
4943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer counter(s) to start
4944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
4945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   HRTIM_TIMERID_MASTER 
4946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_A 
4947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_B 
4948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_C 
4949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_D 
4950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_E 
4951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
4952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function enables the dma request(s) mentionned in the timer
4953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       configuration data structure for every timers to start.
4954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The source memory address, the destination memory address and the
4955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       size of each DMA transfer are specified at timer configuration time
4956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       (see HAL_HRTIM_WaveformTimerConfig)
4957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
4958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCounterStart_DMA(HRTIM_HandleTypeDef * hhrtim,
4959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                      uint32_t Timers)
4960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
4961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint8_t timer_idx;
4962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
4963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
4965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERID(Timers));
4966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
4968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
4970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
4972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
4973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
4975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
4976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (((Timers & HRTIM_TIMERID_MASTER) != RESET) &&
4978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMARequests != 0U))
4979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
4980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the DMA error callback */
4981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->hdmaMaster->XferErrorCallback = HRTIM_DMAError ;
4982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
4983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the DMA transfer completed callback */
4984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->hdmaMaster->XferCpltCallback = HRTIM_DMAMasterCplt;
4985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
4986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the DMA channel */
4987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_DMA_Start_IT(hhrtim->hdmaMaster,
4988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                        hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMASrcAddress,
4989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                        hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMADstAddress,
4990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                        hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMASize);
ARM GAS  /tmp/ccWQyto6.s 			page 89


4991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
4992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the timer DMA request */
4993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_ENABLE_DMA(hhrtim, 
4994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                    hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMARequests);
4995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
4996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
4997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
4998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx < HRTIM_TIMERINDEX_MASTER ; 
4999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
5000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
5002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          (hhrtim->TimerParam[timer_idx].DMARequests != 0U))
5003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Get the timer DMA handler */
5005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, timer_idx);
5006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the DMA error callback */
5008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma->XferErrorCallback = HRTIM_DMAError ;
5009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
5010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the DMA transfer completed callback */
5011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
5012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
5013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the DMA channel */
5014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_DMA_Start_IT(hdma,
5015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                        hhrtim->TimerParam[timer_idx].DMASrcAddress,
5016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                        hhrtim->TimerParam[timer_idx].DMADstAddress,
5017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                        hhrtim->TimerParam[timer_idx].DMASize);
5018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
5019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Enable the timer DMA request */
5020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, 
5021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                    timer_idx,
5022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                    hhrtim->TimerParam[timer_idx].DMARequests); 
5023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the timer counter */
5027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, Timers);
5028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
5030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
5033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
5035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Stops the counter of the designated timer(s) operating in waveform mode
5039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         Timers can be combined (ORed) to allow for simultaneous counter stop.
5040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer counter(s) to stop
5042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
5043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_MASTER 
5044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_A 
5045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_B 
5046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_C 
5047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_D 
ARM GAS  /tmp/ccWQyto6.s 			page 90


5048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERID_E 
5049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note  The counter of a timer is stopped only if all timer outputs are disabled
5051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note  All enabled timer related DMA requests are disabled.
5052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_WaveformCounterStop_DMA(HRTIM_HandleTypeDef * hhrtim,
5054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                     uint32_t Timers)
5055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint8_t timer_idx;
5057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
5058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
5060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERID(Timers));
5061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
5063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (((Timers & HRTIM_TIMERID_MASTER) != RESET) &&
5065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMARequests != 0U))
5066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   { 
5067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Disable the DMA */
5068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_DMA_Abort(hhrtim->hdmaMaster);
5069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
5070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Disable the DMA request(s) */
5071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_DMA(hhrtim,
5072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                    hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMARequests);
5073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
5076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx < HRTIM_TIMERINDEX_MASTER ; 
5077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
5078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
5080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (hhrtim->TimerParam[timer_idx].DMARequests != 0U))
5081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Get the timer DMA handler */
5083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, timer_idx);
5084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Disable the DMA */
5086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_DMA_Abort(hdma);
5087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
5088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Disable the DMA request(s) */
5089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim,
5090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     timer_idx,
5091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     hhrtim->TimerParam[timer_idx].DMARequests);      
5092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Disable the timer counter */
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
5097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
5099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
5100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
5101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables or disables the HRTIM burst mode controller.
ARM GAS  /tmp/ccWQyto6.s 			page 91


5105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Enable: Burst mode controller enabling
5107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
5108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTMODECTL_ENABLED: Burst mode enabled
5109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_BURSTMODECTL_DISABLED: Burst mode disabled
5110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note This function must be called after starting the timer(s)
5112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_BurstModeCtl(HRTIM_HandleTypeDef * hhrtim,
5114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          uint32_t Enable)
5115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_bmcr;
5117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_BURSTMODECTL(Enable));
5120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
5122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
5124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
5130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the burst mode controller */
5132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr = hhrtim->Instance->sCommonRegs.BMCR;
5133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BME);
5134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= Enable;
5135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
5137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCR = hrtim_bmcr;
5138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
5140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
5143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
5145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Triggers the burst mode operation.
5149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_BurstModeSoftwareTrigger(HRTIM_HandleTypeDef *hhrtim)
5153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
5155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
5157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 92


5162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
5163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Software trigger of the burst mode controller */
5165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMTRGR |= HRTIM_BMTRGR_SW;
5166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
5168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
5171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Triggers a software capture on the designed capture unit
5177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
5185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureUnit: Capture unit to trig
5186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
5187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
5188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
5189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The 'software capture' bit in the capure configuration register is
5191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       automatically reset by hardware
5192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SoftwareCapture(HRTIM_HandleTypeDef * hhrtim,
5194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t TimerIdx,
5195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t CaptureUnit)
5196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
5199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureUnit));
5200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
5202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
5204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
5210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Force a software capture on concerned capture unit */
5212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureUnit)
5213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
5215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR |= HRTIM_CPT1CR_SWCPT;
5217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 93


5219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
5220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR |= HRTIM_CPT2CR_SWCPT;
5222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
5225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
5229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
5232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
5234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Triggers the update of the registers of one or several timers
5238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: timers concerned with the software register update
5240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
5241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_MASTER 
5242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_A 
5243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_B 
5244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_C 
5245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_D 
5246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_E 
5247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The 'software update' bits in the HRTIM conrol register 2 register are
5249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       automatically reset by hardware
5250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SoftwareUpdate(HRTIM_HandleTypeDef * hhrtim,
5252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                            uint32_t Timers)
5253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERUPDATE(Timers));
5256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
5258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
5260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
5266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Force timer(s) registers update */
5268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR2 |= Timers;
5269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
5271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
5274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
ARM GAS  /tmp/ccWQyto6.s 			page 94


5276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Triggers the reset of one or several timers
5280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: timers concerned with the software counter reset
5282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
5283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERRESET_MASTER 
5284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERRESET_TIMER_A 
5285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERRESET_TIMER_B 
5286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERRESET_TIMER_C 
5287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERRESET_TIMER_D 
5288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERRESET_TIMER_E 
5289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The 'software reset' bits in the HRTIM conrol register 2  are
5291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       automatically reset by hardware
5292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_SoftwareReset(HRTIM_HandleTypeDef * hhrtim,
5294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t Timers)
5295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERRESET(Timers));
5298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
5300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
5302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
5308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Force timer(s) registers reset */
5310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR2 = Timers;
5311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
5313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
5316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
5318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Starts a burst DMA operation to update HRTIM control registers content
5322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
5326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
5331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  BurstBufferAddress: address of the buffer the HRTIM control registers
5332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                             content will be updated from.
ARM GAS  /tmp/ccWQyto6.s 			page 95


5333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  BurstBufferLength: size (in WORDS) of the burst buffer.
5334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note The TimerIdx parameter determines the dma channel to be used by the  
5336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       DMA burst controller (see below)
5337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       HRTIM_TIMERINDEX_MASTER: DMA channel 2 is used by the DMA burst controller
5338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       HRTIM_TIMERINDEX_TIMER_A: DMA channel 3 is used by the DMA burst controller
5339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       HRTIM_TIMERINDEX_TIMER_B: DMA channel 4 is used by the DMA burst controller
5340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       HRTIM_TIMERINDEX_TIMER_C: DMA channel 5 is used by the DMA burst controller
5341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       HRTIM_TIMERINDEX_TIMER_D: DMA channel 6 is used by the DMA burst controller
5342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *       HRTIM_TIMERINDEX_TIMER_E: DMA channel 7 is used by the DMA burst controller
5343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_BurstDMATransfer(HRTIM_HandleTypeDef *hhrtim,
5345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t TimerIdx,
5346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t BurstBufferAddress,
5347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t BurstBufferLength)
5348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma;
5350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check the parameters */
5352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERINDEX(TimerIdx));
5353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
5355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
5357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
5359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((BurstBufferAddress == 0U ) || (BurstBufferLength == 0U)) 
5361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
5363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     else
5365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
5367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Get the timer DMA handler */
5374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
5375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA transfer completed callback */
5377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_BurstDMACplt;
5378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the DMA error callback */
5380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
5381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable the DMA channel */
5383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, 
5384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    BurstBufferAddress, 
5385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    (uint32_t)&(hhrtim->Instance->sCommonRegs.BDMADR),
5386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    BurstBufferLength);
5387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
5389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 96


5390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
5392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
5394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Enables the transfer from preload to active registers for one
5398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         or several timing units (including master timer).
5399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer(s) concerned by the register preload enabling command
5401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
5402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_MASTER 
5403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_A 
5404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_B 
5405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_C 
5406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_D 
5407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_E 
5408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_UpdateEnable(HRTIM_HandleTypeDef *hhrtim,
5411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t Timers)
5412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
5414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERUPDATE(Timers));
5415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
5420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable timer(s) registers update */
5422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR1 &= ~(Timers);
5423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
5425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
5426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
5428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
5430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Disables the transfer from preload to active registers for one
5434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         or several timing units (including master timer).
5435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Timers: Timer(s) concerned by the register preload disabling command
5437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any combination of the following values:
5438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_MASTER 
5439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_A 
5440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_B 
5441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_C 
5442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_D 
5443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERUPDATE_E 
5444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL status
5445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_StatusTypeDef HAL_HRTIM_UpdateDisable(HRTIM_HandleTypeDef *hhrtim,
ARM GAS  /tmp/ccWQyto6.s 			page 97


5447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t Timers)
5448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
5450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMERUPDATE(Timers));
5451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Locked */
5453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
5454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
5456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable timer(s) registers update */
5458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR1 |= (Timers);
5459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
5461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                   
5462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Process Unlocked */
5463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
5464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
5466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
5470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group9 Peripheral state functions
5473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief    Peripheral State functions 
5474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim    
5475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
5476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****               ##### Peripheral State functions #####
5477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
5478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]  This section provides functions used to get HRTIM or HRTIM timer 
5479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           specific information:
5480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get HRTIM HAL state 
5481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get captured value 
5482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get HRTIM timer output level 
5483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get HRTIM timer output state 
5484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get delayed protection status  
5485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get burst status 
5486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get current push-pull status  
5487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+) Get idle push-pull status  
5488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
5490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
5491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  return the HRTIM HAL state
5495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval HAL state
5497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** HAL_HRTIM_StateTypeDef HAL_HRTIM_GetState(HRTIM_HandleTypeDef* hhrtim)
5499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Return ADC state */
5501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return hhrtim->State;
5502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
ARM GAS  /tmp/ccWQyto6.s 			page 98


5504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Returns actual value of the capture register of the designated capture unit 
5506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
5514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureUnit: Capture unit to trig
5515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values: 
5516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_1: Capture unit 1
5517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_CAPTUREUNIT_2: Capture unit 2
5518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Captured value
5519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** uint32_t HAL_HRTIM_GetCapturedValue(HRTIM_HandleTypeDef * hhrtim,
5521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t TimerIdx,
5522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t CaptureUnit)
5523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t captured_value = 0U;
5525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
5528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_CAPTUREUNIT(CaptureUnit));
5529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Read captured value */
5531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureUnit)
5532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
5534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       captured_value = hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xR;
5536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
5539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       captured_value = hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xR;
5541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
5544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return captured_value; 
5548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Returns actual level (active or inactive) of the designated output 
5552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
5560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Output: Timer output
ARM GAS  /tmp/ccWQyto6.s 			page 99


5561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
5562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
5563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
5564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
5565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
5566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
5567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
5568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
5569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
5570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
5571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
5572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Output level
5573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @note Returned output level is taken before the output stage (chopper, 
5574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *        polarity).
5575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** uint32_t HAL_HRTIM_WaveformGetOutputLevel(HRTIM_HandleTypeDef * hhrtim,
5577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t TimerIdx,
5578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t Output)
5579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t output_level = HRTIM_OUTPUTLEVEL_INACTIVE;
5581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, Output));
5584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Read the output level */
5586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
5587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
5589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
5590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
5591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
5592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
5593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O1CPY) != RESET)
5595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_ACTIVE;
5597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
5598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
5599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_INACTIVE;
5601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
5602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
5605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
5606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
5607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
5608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
5609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O2CPY) != RESET)
5611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_ACTIVE;
5613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
5614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
5615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_INACTIVE;
5617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
ARM GAS  /tmp/ccWQyto6.s 			page 100


5618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
5621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return output_level; 
5625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Returns actual state (RUN, IDLE, FAULT) of the designated output 
5629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
5637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Output: Timer output
5638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
5639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
5640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
5641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
5642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
5643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
5644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
5645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
5646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
5647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
5648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
5649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Output state
5650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** uint32_t HAL_HRTIM_WaveformGetOutputState(HRTIM_HandleTypeDef * hhrtim,
5652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t TimerIdx,
5653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                           uint32_t Output)
5654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t output_bit = 0U;
5656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t output_state = HRTIM_OUTPUTSTATE_IDLE;
5657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, Output));
5660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set output state according to output control status and output disable status */
5662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
5663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
5665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TA1OEN;
5667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
5670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TA2OEN;
5672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
ARM GAS  /tmp/ccWQyto6.s 			page 101


5675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TB1OEN;
5677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
5680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TB2OEN;
5682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
5685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TC1OEN;
5687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
5690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TC2OEN;
5692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
5695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TD1OEN;
5697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
5700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TD2OEN;
5702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
5705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TE1OEN;
5707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
5710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TE2OEN;
5712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
5715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sCommonRegs.OENR & output_bit) != RESET)
5719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Output is enabled: output in RUN state (whatever ouput disable status is)*/
5721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     output_state = HRTIM_OUTPUTSTATE_RUN;
5722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
5724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((hhrtim->Instance->sCommonRegs.ODSR & output_bit) != RESET)
5726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Output is disabled: output in FAULT state */
5728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_state = HRTIM_OUTPUTSTATE_FAULT;
5729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     else
5731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
ARM GAS  /tmp/ccWQyto6.s 			page 102


5732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Output is disabled: output in IDLE state */
5733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_state = HRTIM_OUTPUTSTATE_IDLE;
5734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return(output_state);  
5738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Returns the level (active or inactive) of the designated output 
5742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         when the delayed protection was triggered.
5743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
5751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Output: Timer output
5752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
5753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
5754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
5755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
5756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
5757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
5758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
5759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
5760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
5761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer E - Output 1
5762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer E - Output 2
5763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Delayed protection status 
5764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** uint32_t HAL_HRTIM_GetDelayedProtectionStatus(HRTIM_HandleTypeDef * hhrtim,
5766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx,
5767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t Output)
5768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;
5770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Check parameters */
5772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMER_OUTPUT(TimerIdx, Output));
5773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Read the delayed protection status */
5775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
5776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
5778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
5779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
5780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
5781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
5782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O1STAT) != RESET)
5784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Output 1 was active when the delayed idle protection was triggered */
5786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_ACTIVE;
5787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
5788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
ARM GAS  /tmp/ccWQyto6.s 			page 103


5789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Output 1 was inactive when the delayed idle protection was triggered */
5791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;
5792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
5793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
5796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
5797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
5798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
5799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
5800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
5801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O2STAT) != RESET)
5802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Output 2 was active when the delayed idle protection was triggered */
5804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_ACTIVE;
5805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
5806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else
5807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
5808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* Output 2 was inactive when the delayed idle protection was triggered */
5809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;
5810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
5811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
5812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
5814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
5815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return delayed_protection_status;
5818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Returns the actual status (active or inactive) of the burst mode controller 
5822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Burst mode controller status 
5824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** uint32_t HAL_HRTIM_GetBurstStatus(HRTIM_HandleTypeDef * hhrtim)
5826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t burst_mode_status;
5828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Read burst mode status */
5830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   burst_mode_status = (hhrtim->Instance->sCommonRegs.BMCR & HRTIM_BMCR_BMSTAT);
5831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return burst_mode_status; 
5833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Indicates on which output the signal is currently active (when the
5837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         push pull mode is enabled).
5838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
ARM GAS  /tmp/ccWQyto6.s 			page 104


5846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Burst mode controller status 
5847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** uint32_t HAL_HRTIM_GetCurrentPushPullStatus(HRTIM_HandleTypeDef * hhrtim,
5849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                             uint32_t TimerIdx)
5850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t current_pushpull_status;
5852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
5854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
5855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Read current push pull status */
5857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   current_pushpull_status = (hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_CPPSTAT
5858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return current_pushpull_status; 
5860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Indicates on which output the signal was applied, in push-pull mode,
5865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             balanced fault mode or delayed idle mode, when the protection was triggered.
5866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
5869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
5870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
5871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
5872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
5873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
5874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Idle Push Pull Status 
5875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** uint32_t HAL_HRTIM_GetIdlePushPullStatus(HRTIM_HandleTypeDef * hhrtim,
5877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          uint32_t TimerIdx)
5878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t idle_pushpull_status;
5880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    /* Check the parameters */
5882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   assert_param(IS_HRTIM_TIMING_UNIT(TimerIdx));
5883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Read current push pull status */
5885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   idle_pushpull_status = (hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_IPPSTAT);
5886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return idle_pushpull_status; 
5888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
5892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @defgroup HRTIM_Exported_Functions_Group10 Interrupts handling
5895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *  @brief  Functions called when HRTIM generates an interrupt
5896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *          7 interrupts can be generated by the master timer:
5897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Master timer registers update
5898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Synchronization event received
5899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Master timer repetition event
5900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Master Compare 1 to 4 event
5901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *          14 interrupts can be generated by each timing unit:
5902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Delayed protection triggered
ARM GAS  /tmp/ccWQyto6.s 			page 105


5903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Counter reset or roll-over event
5904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Output 1 and output 2 reset (transition active to inactive)
5905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Output 1 and output 2 set (transition inactive to active)
5906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Capture 1 and 2 events
5907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Timing unit registers update
5908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Repetition event
5909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Compare 1 to 4 event
5910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *          8 global interrupts are generated for the whole HRTIM:
5911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - System fault and Fault 1 to 5 (regardless of the timing unit attribution)
5912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - DLL calibration done
5913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  *            - Burst mode period completed
5914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @verbatim   
5915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================
5916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                       ##### HRTIM interrupts handling #####
5917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  ===============================================================================  
5918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     [..]
5919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     This subsection provides a set of functions allowing to manage the HRTIM  
5920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     interrupts:
5921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  HRTIM interrupt handler
5922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when Fault1 interrupt occurs
5923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when Fault2 interrupt occurs
5924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when Fault3 interrupt occurs
5925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when Fault4 interrupt occurs
5926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when Fault5 interrupt occurs
5927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when system Fault interrupt occurs
5928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when DLL ready interrupt occurs
5929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when burst mode period interrupt occurs
5930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when synchronization input interrupt occurs
5931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer register update interrupt occurs
5932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer repetition interrupt occurs
5933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a compare 1 match interrupt occurs
5934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a compare 2 match interrupt occurs
5935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a compare 3 match interrupt occurs
5936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a compare 4 match interrupt occurs
5937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a capture 1 interrupt occurs
5938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a capture 2 interrupt occurs
5939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a delayed protection interrupt occurs
5940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer counter reset interrupt occurs
5941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer output 1 set interrupt occurs
5942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer output 1 reset interrupt occurs
5943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer output 2 set interrupt occurs
5944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer output 2 reset interrupt occurs
5945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called when a timer output 2 reset interrupt occurs
5946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (+)  Callback function called upon completion of a burst DMA transfer
5947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** @endverbatim
5949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
5950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  This function handles HRTIM interrupt request.
5954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
5956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be any value of @ref HRTIM_Timer_Index
5957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
5958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** void HAL_HRTIM_IRQHandler(HRTIM_HandleTypeDef * hhrtim,
ARM GAS  /tmp/ccWQyto6.s 			page 106


5960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                           uint32_t TimerIdx)
5961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* HRTIM interrupts handling */
5963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_COMMON)
5964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_HRTIM_ISR(hhrtim);
5966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
5968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Master related interrupts handling */
5970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HRTIM_Master_ISR(hhrtim);
5971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
5973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
5974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Timing unit related interrupts handling */
5975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_Timer_ISR(hhrtim, TimerIdx);
5976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
5977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
5978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a fault 1 interrupt occured
5982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  * @retval None
5983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
5984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
5985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Fault1Callback(HRTIM_HandleTypeDef * hhrtim)
5986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
5987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
5988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
5989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
5991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Fault1Callback could be implenetd in the user file
5992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
5993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
5994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
5995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
5996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a fault 2 interrupt occured
5997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
5998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
5999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Fault2Callback(HRTIM_HandleTypeDef * hhrtim)
6001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Fault2Callback could be implenetd in the user file
6007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a fault 3 interrupt occured
6012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle 
6013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Fault3Callback(HRTIM_HandleTypeDef * hhrtim)
6016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
ARM GAS  /tmp/ccWQyto6.s 			page 107


6017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Fault3Callback could be implenetd in the user file
6022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a fault 4 interrupt occured
6027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle 
6028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Fault4Callback(HRTIM_HandleTypeDef * hhrtim)
6031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Fault4Callback could be implenetd in the user file
6037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a fault 5 interrupt occured
6042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Fault5Callback(HRTIM_HandleTypeDef * hhrtim)
6046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Fault5Callback could be implenetd in the user file
6052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a system fault interrupt occured
6057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_SystemFaultCallback(HRTIM_HandleTypeDef * hhrtim)
6061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_SystemFaultCallback could be implenetd in the user file
6067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the DLL calibration is completed
6072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
ARM GAS  /tmp/ccWQyto6.s 			page 108


6074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_DLLCalbrationReadyCallback(HRTIM_HandleTypeDef * hhrtim)
6076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_DLLCalbrationCallback could be implenetd in the user file
6082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the end of the burst mode period is reached
6087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_BurstModePeriodCallback(HRTIM_HandleTypeDef * hhrtim)
6091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_BurstModeCallback could be implenetd in the user file
6097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a synchronization input event is received
6102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_SynchronizationEventCallback(HRTIM_HandleTypeDef * hhrtim)
6106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Master_SynchronizationEventCallback could be implenetd in the user file
6112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when timer registers are updated
6117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
6121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_RegistersUpdateCallback(HRTIM_HandleTypeDef * hhrtim,
6129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
ARM GAS  /tmp/ccWQyto6.s 			page 109


6131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Master_RegistersUpdateCallback could be implenetd in the user file
6137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when timer repetition period has elapsed
6142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
6146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_RepetitionEventCallback(HRTIM_HandleTypeDef * hhrtim,
6154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Master_RepetitionEventCallback could be implenetd in the user file
6162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer counter matches the value
6167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         programmed in the compare 1 register
6168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
6172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Compare1EventCallback(HRTIM_HandleTypeDef * hhrtim,
6180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Master_Compare1EventCallback could be implenetd in the user file
ARM GAS  /tmp/ccWQyto6.s 			page 110


6188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer counter matches the value
6193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         programmed in the compare 2 register
6194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
6199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Compare2EventCallback(HRTIM_HandleTypeDef * hhrtim,
6206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Master_Compare2EventCallback could be implenetd in the user file
6214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer counter matches the value
6219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         programmed in the compare 3 register
6220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
6224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Compare3EventCallback(HRTIM_HandleTypeDef * hhrtim,
6232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Master_Compare3EventCallback could be implenetd in the user file
6240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer counter matches the value
ARM GAS  /tmp/ccWQyto6.s 			page 111


6245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         programmed in the compare 4 register.
6246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
6250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Compare4EventCallback(HRTIM_HandleTypeDef * hhrtim,
6258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Master_Compare4EventCallback could be implenetd in the user file
6266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer x capture 1 event occurs
6271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Capture1EventCallback(HRTIM_HandleTypeDef * hhrtim,
6282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_Capture1EventCallback could be implenetd in the user file
6290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer x capture 2 event occurs
6295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
ARM GAS  /tmp/ccWQyto6.s 			page 112


6302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Capture2EventCallback(HRTIM_HandleTypeDef * hhrtim,
6306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_Capture2EventCallback could be implenetd in the user file
6314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the delayed idle or balanced idle mode is 
6319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         entered.
6320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_DelayedProtectionCallback(HRTIM_HandleTypeDef * hhrtim,
6331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_DelayedProtectionCallback could be implenetd in the user file
6339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer x counter reset/roll-over
6344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         event occurs.
6345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_CounterResetCallback(HRTIM_HandleTypeDef * hhrtim,
6356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
ARM GAS  /tmp/ccWQyto6.s 			page 113


6359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_CounterResetCallback could be implenetd in the user file
6364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer x output 1 is set
6369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Output1SetCallback(HRTIM_HandleTypeDef * hhrtim,
6380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_Output1SetCallback could be implenetd in the user file
6388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer x output 1 is reset
6393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Output1ResetCallback(HRTIM_HandleTypeDef * hhrtim,
6404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_Output1ResetCallback could be implenetd in the user file
6412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
ARM GAS  /tmp/ccWQyto6.s 			page 114


6416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer x output 2 is set
6417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Output2SetCallback(HRTIM_HandleTypeDef * hhrtim,
6428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_Output2SetCallback could be implenetd in the user file
6436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when the timer x output 2 is reset
6441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
6448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  * @retval None
6450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_Output2ResetCallback(HRTIM_HandleTypeDef * hhrtim,
6452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                               uint32_t TimerIdx)
6453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_Timer_Output2ResetCallback could be implenetd in the user file
6460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a DMA burst transfer is completed
6465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle  
6466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
6468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_MASTER  for master timer
6469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
6470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
6471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
6472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
ARM GAS  /tmp/ccWQyto6.s 			page 115


6473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
6474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_BurstDMATransferCallback(HRTIM_HandleTypeDef * hhrtim,
6477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                uint32_t TimerIdx)
6478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(TimerIdx);
6482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_BurstDMATransferCallback could be implenetd in the user file
6485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Callback function invoked when a DMA error occurs
6490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** __weak void HAL_HRTIM_ErrorCallback(HRTIM_HandleTypeDef *hhrtim)
6494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
6495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Prevent unused argument(s) compilation warning */
6496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   UNUSED(hhrtim);
6497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* NOTE : This function should not be modified, when the callback is needed,
6499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             the HAL_HRTIM_ErrorCallback could be implenetd in the user file
6500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****    */ 
6501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
6505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @}
6509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /** @addtogroup HRTIM_Private_Functions HRTIM Private Functions
6512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @{
6513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the master timer time base
6517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pTimeBaseCfg: pointer to the time base configuration structure
6519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void  HRTIM_MasterBase_Config(HRTIM_HandleTypeDef * hhrtim, 
6522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                      HRTIM_TimeBaseCfgTypeDef * pTimeBaseCfg)
6523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
  28              		.loc 1 6523 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
ARM GAS  /tmp/ccWQyto6.s 			page 116


  34 0000 10B4     		push	{r4}
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 4
  37              		.cfi_offset 4, -4
6524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_mcr;
6525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure master timer */
6527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr = hhrtim->Instance->sMasterRegs.MCR;
  38              		.loc 1 6527 0
  39 0002 0368     		ldr	r3, [r0]
  40 0004 1C68     		ldr	r4, [r3]
  41              	.LVL1:
6528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the prescaler ratio */
6530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= (uint32_t) ~(HRTIM_MCR_CK_PSC);
  42              		.loc 1 6530 0
  43 0006 24F00704 		bic	r4, r4, #7
  44              	.LVL2:
6531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= (uint32_t)pTimeBaseCfg->PrescalerRatio;
  45              		.loc 1 6531 0
  46 000a 8A68     		ldr	r2, [r1, #8]
  47 000c 2243     		orrs	r2, r2, r4
  48              	.LVL3:
6532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the operating mode */
6534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= (uint32_t) ~(HRTIM_MCR_CONT | HRTIM_MCR_RETRIG);
  49              		.loc 1 6534 0
  50 000e 22F01804 		bic	r4, r2, #24
  51              	.LVL4:
6535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= (uint32_t)pTimeBaseCfg->Mode;
  52              		.loc 1 6535 0
  53 0012 CA68     		ldr	r2, [r1, #12]
  54 0014 2243     		orrs	r2, r2, r4
  55              	.LVL5:
6536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
6538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR  = hrtim_mcr;
  56              		.loc 1 6538 0
  57 0016 1A60     		str	r2, [r3]
6539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MPER = pTimeBaseCfg->Period;
  58              		.loc 1 6539 0
  59 0018 0368     		ldr	r3, [r0]
  60 001a 0A68     		ldr	r2, [r1]
  61              	.LVL6:
  62 001c 5A61     		str	r2, [r3, #20]
6540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MREP = pTimeBaseCfg->RepetitionCounter;
  63              		.loc 1 6540 0
  64 001e 0368     		ldr	r3, [r0]
  65 0020 4A68     		ldr	r2, [r1, #4]
  66 0022 9A61     		str	r2, [r3, #24]
6541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
  67              		.loc 1 6541 0
  68 0024 5DF8044B 		ldr	r4, [sp], #4
  69 0028 7047     		bx	lr
  70              		.cfi_endproc
  71              	.LFE229:
  73 002a 00BF     		.section	.text.HRTIM_TimingUnitBase_Config,"ax",%progbits
ARM GAS  /tmp/ccWQyto6.s 			page 117


  74              		.align	2
  75              		.thumb
  76              		.thumb_func
  78              	HRTIM_TimingUnitBase_Config:
  79              	.LFB230:
6542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures timing unit (timer A to timer E) time base
6545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pTimeBaseCfg: pointer to the time base configuration structure
6548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void  HRTIM_TimingUnitBase_Config(HRTIM_HandleTypeDef * hhrtim,
6551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          uint32_t TimerIdx ,
6552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          HRTIM_TimeBaseCfgTypeDef * pTimeBaseCfg)
6553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
  80              		.loc 1 6553 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 0, uses_anonymous_args = 0
  84              		@ link register save eliminated.
  85              	.LVL7:
  86 0000 70B4     		push	{r4, r5, r6}
  87              	.LCFI1:
  88              		.cfi_def_cfa_offset 12
  89              		.cfi_offset 4, -12
  90              		.cfi_offset 5, -8
  91              		.cfi_offset 6, -4
6554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_timcr;
6555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure master timing unit */
6557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr = hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR;
  92              		.loc 1 6557 0
  93 0002 0468     		ldr	r4, [r0]
  94 0004 4B1C     		adds	r3, r1, #1
  95 0006 DB01     		lsls	r3, r3, #7
  96 0008 E658     		ldr	r6, [r4, r3]
  97              	.LVL8:
6558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
6559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the prescaler ratio */
6560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= (uint32_t) ~(HRTIM_TIMCR_CK_PSC);
  98              		.loc 1 6560 0
  99 000a 26F00706 		bic	r6, r6, #7
 100              	.LVL9:
6561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= (uint32_t)pTimeBaseCfg->PrescalerRatio;
 101              		.loc 1 6561 0
 102 000e 9568     		ldr	r5, [r2, #8]
 103 0010 3543     		orrs	r5, r5, r6
 104              	.LVL10:
6562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the operating mode */
6564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= (uint32_t) ~(HRTIM_TIMCR_CONT | HRTIM_TIMCR_RETRIG);
 105              		.loc 1 6564 0
 106 0012 25F01806 		bic	r6, r5, #24
 107              	.LVL11:
6565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= (uint32_t)pTimeBaseCfg->Mode;
ARM GAS  /tmp/ccWQyto6.s 			page 118


 108              		.loc 1 6565 0
 109 0016 D568     		ldr	r5, [r2, #12]
 110 0018 3543     		orrs	r5, r5, r6
 111              	.LVL12:
6566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
6568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR  = hrtim_timcr;
 112              		.loc 1 6568 0
 113 001a E550     		str	r5, [r4, r3]
6569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].PERxR = pTimeBaseCfg->Period;
 114              		.loc 1 6569 0
 115 001c 0468     		ldr	r4, [r0]
 116 001e 1368     		ldr	r3, [r2]
 117 0020 C901     		lsls	r1, r1, #7
 118              	.LVL13:
 119 0022 0C44     		add	r4, r4, r1
 120 0024 C4F89430 		str	r3, [r4, #148]
6570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].REPxR = pTimeBaseCfg->RepetitionCounter;
 121              		.loc 1 6570 0
 122 0028 0068     		ldr	r0, [r0]
 123              	.LVL14:
 124 002a 5368     		ldr	r3, [r2, #4]
 125 002c 0144     		add	r1, r1, r0
 126 002e C1F89830 		str	r3, [r1, #152]
6571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 127              		.loc 1 6571 0
 128 0032 70BC     		pop	{r4, r5, r6}
 129              	.LVL15:
 130 0034 7047     		bx	lr
 131              		.cfi_endproc
 132              	.LFE230:
 134 0036 00BF     		.section	.text.HRTIM_MasterWaveform_Config,"ax",%progbits
 135              		.align	2
 136              		.thumb
 137              		.thumb_func
 139              	HRTIM_MasterWaveform_Config:
 140              	.LFB231:
6572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the master timer in waveform mode
6575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pTimerCfg: pointer to the timer configuration data structure
6577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void  HRTIM_MasterWaveform_Config(HRTIM_HandleTypeDef * hhrtim, 
6580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                          HRTIM_TimerCfgTypeDef * pTimerCfg)
6581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 141              		.loc 1 6581 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 0, uses_anonymous_args = 0
 145              		@ link register save eliminated.
 146              	.LVL16:
 147 0000 30B4     		push	{r4, r5}
 148              	.LCFI2:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 4, -8
ARM GAS  /tmp/ccWQyto6.s 			page 119


 151              		.cfi_offset 5, -4
6582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_mcr;
6583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_bmcr;
6584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure master timer */
6586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr = hhrtim->Instance->sMasterRegs.MCR;
 152              		.loc 1 6586 0
 153 0002 0368     		ldr	r3, [r0]
 154 0004 1D68     		ldr	r5, [r3]
 155              	.LVL17:
6587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr = hhrtim->Instance->sCommonRegs.BMCR;
 156              		.loc 1 6587 0
 157 0006 D3F8A043 		ldr	r4, [r3, #928]
 158              	.LVL18:
6588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the half mode */
6590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= ~(HRTIM_MCR_HALF);
 159              		.loc 1 6590 0
 160 000a 25F02005 		bic	r5, r5, #32
 161              	.LVL19:
6591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= pTimerCfg->HalfModeEnable;
 162              		.loc 1 6591 0
 163 000e 4A69     		ldr	r2, [r1, #20]
 164 0010 2A43     		orrs	r2, r2, r5
 165              	.LVL20:
6592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the timer start upon synchronization event reception */
6594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= ~(HRTIM_MCR_SYNCSTRTM);
 166              		.loc 1 6594 0
 167 0012 22F40065 		bic	r5, r2, #2048
 168              	.LVL21:
6595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= pTimerCfg->StartOnSync;
 169              		.loc 1 6595 0
 170 0016 8A69     		ldr	r2, [r1, #24]
 171 0018 2A43     		orrs	r2, r2, r5
 172              	.LVL22:
6596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
6597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the timer reset upon synchronization event reception */
6598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= ~(HRTIM_MCR_SYNCRSTM);
 173              		.loc 1 6598 0
 174 001a 22F48065 		bic	r5, r2, #1024
 175              	.LVL23:
6599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= pTimerCfg->ResetOnSync;
 176              		.loc 1 6599 0
 177 001e CA69     		ldr	r2, [r1, #28]
 178 0020 2A43     		orrs	r2, r2, r5
 179              	.LVL24:
6600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the DAC synchronization event generation */
6602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= ~(HRTIM_MCR_DACSYNC);
 180              		.loc 1 6602 0
 181 0022 22F0C065 		bic	r5, r2, #100663296
 182              	.LVL25:
6603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= pTimerCfg->DACSynchro;
 183              		.loc 1 6603 0
 184 0026 0A6A     		ldr	r2, [r1, #32]
 185 0028 2A43     		orrs	r2, r2, r5
ARM GAS  /tmp/ccWQyto6.s 			page 120


 186              	.LVL26:
6604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable preload meachanism for timer registers */
6606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= ~(HRTIM_MCR_PREEN);
 187              		.loc 1 6606 0
 188 002a 22F00065 		bic	r5, r2, #134217728
 189              	.LVL27:
6607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= pTimerCfg->PreloadEnable;
 190              		.loc 1 6607 0
 191 002e 4A6A     		ldr	r2, [r1, #36]
 192 0030 2A43     		orrs	r2, r2, r5
 193              	.LVL28:
6608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Master timer registers update handling */
6610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= ~(HRTIM_MCR_BRSTDMA);
 194              		.loc 1 6610 0
 195 0032 22F04045 		bic	r5, r2, #-1073741824
 196              	.LVL29:
6611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= (pTimerCfg->UpdateGating << 2U);
 197              		.loc 1 6611 0
 198 0036 8A6A     		ldr	r2, [r1, #40]
 199 0038 45EA8202 		orr	r2, r5, r2, lsl #2
 200              	.LVL30:
6612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable registers update on repetition */
6614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr &= ~(HRTIM_MCR_MREPU);
 201              		.loc 1 6614 0
 202 003c 22F00055 		bic	r5, r2, #536870912
 203              	.LVL31:
6615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_mcr |= pTimerCfg->RepetitionUpdate;
 204              		.loc 1 6615 0
 205 0040 0A6B     		ldr	r2, [r1, #48]
 206 0042 2A43     		orrs	r2, r2, r5
 207              	.LVL32:
6616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the timer burst mode */
6618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_MTBM);
 208              		.loc 1 6618 0
 209 0044 24F48034 		bic	r4, r4, #65536
 210              	.LVL33:
6619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pTimerCfg->BurstMode;
 211              		.loc 1 6619 0
 212 0048 C96A     		ldr	r1, [r1, #44]
 213              	.LVL34:
 214 004a 2143     		orrs	r1, r1, r4
 215              	.LVL35:
6620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
6622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR  = hrtim_mcr;
 216              		.loc 1 6622 0
 217 004c 1A60     		str	r2, [r3]
6623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCR = hrtim_bmcr;
 218              		.loc 1 6623 0
 219 004e 0368     		ldr	r3, [r0]
 220 0050 C3F8A013 		str	r1, [r3, #928]
6624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 221              		.loc 1 6624 0
ARM GAS  /tmp/ccWQyto6.s 			page 121


 222 0054 30BC     		pop	{r4, r5}
 223 0056 7047     		bx	lr
 224              		.cfi_endproc
 225              	.LFE231:
 227              		.section	.text.HRTIM_TimingUnitWaveform_Config,"ax",%progbits
 228              		.align	2
 229              		.thumb
 230              		.thumb_func
 232              	HRTIM_TimingUnitWaveform_Config:
 233              	.LFB232:
6625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures timing unit (timer A to timer E) in waveform mode 
6628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pTimerCfg: pointer to the timer configuration data structure
6631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void  HRTIM_TimingUnitWaveform_Config(HRTIM_HandleTypeDef * hhrtim, 
6634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              uint32_t TimerIdx, 
6635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                              HRTIM_TimerCfgTypeDef * pTimerCfg)
6636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 234              		.loc 1 6636 0
 235              		.cfi_startproc
 236              		@ args = 0, pretend = 0, frame = 0
 237              		@ frame_needed = 0, uses_anonymous_args = 0
 238              		@ link register save eliminated.
 239              	.LVL36:
 240 0000 2DE9F003 		push	{r4, r5, r6, r7, r8, r9}
 241              	.LCFI3:
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 4, -24
 244              		.cfi_offset 5, -20
 245              		.cfi_offset 6, -16
 246              		.cfi_offset 7, -12
 247              		.cfi_offset 8, -8
 248              		.cfi_offset 9, -4
6637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_timcr;
6638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_timfltr;
6639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_timoutr;
6640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_timrstr;
6641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_bmcr;
6642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* UPDGAT bitfield must be reset before programming a new value */
6644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR &= ~(HRTIM_TIMCR_UPDGAT);
 249              		.loc 1 6644 0
 250 0004 0368     		ldr	r3, [r0]
 251 0006 4C1C     		adds	r4, r1, #1
 252 0008 E401     		lsls	r4, r4, #7
 253 000a 1D59     		ldr	r5, [r3, r4]
 254 000c 25F07045 		bic	r5, r5, #-268435456
 255 0010 1D51     		str	r5, [r3, r4]
6645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure timing unit (Timer A to Timer E) */
6647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr   = hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR;
 256              		.loc 1 6647 0
 257 0012 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccWQyto6.s 			page 122


 258 0014 1F59     		ldr	r7, [r3, r4]
 259              	.LVL37:
6648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timfltr = hhrtim->Instance->sTimerxRegs[TimerIdx].FLTxR;
 260              		.loc 1 6648 0
 261 0016 03EBC116 		add	r6, r3, r1, lsl #7
 262 001a D6F8E890 		ldr	r9, [r6, #232]
 263              	.LVL38:
6649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timoutr = hhrtim->Instance->sTimerxRegs[TimerIdx].OUTxR;
 264              		.loc 1 6649 0
 265 001e D6F8E440 		ldr	r4, [r6, #228]
 266              	.LVL39:
6650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timrstr = hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR;
 267              		.loc 1 6650 0
 268 0022 D036     		adds	r6, r6, #208
 269 0024 7668     		ldr	r6, [r6, #4]
6651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr    = hhrtim->Instance->sCommonRegs.BMCR;
 270              		.loc 1 6651 0
 271 0026 D3F8A063 		ldr	r6, [r3, #928]
 272              	.LVL40:
6652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the half mode */
6654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_HALF);
 273              		.loc 1 6654 0
 274 002a 27F0200C 		bic	ip, r7, #32
 275              	.LVL41:
6655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->HalfModeEnable;
 276              		.loc 1 6655 0
 277 002e 5769     		ldr	r7, [r2, #20]
 278 0030 47EA0C07 		orr	r7, r7, ip
 279              	.LVL42:
6656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the timer start upon synchronization event reception */
6658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_SYNCSTRT);
 280              		.loc 1 6658 0
 281 0034 27F4006C 		bic	ip, r7, #2048
 282              	.LVL43:
6659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->StartOnSync;
 283              		.loc 1 6659 0
 284 0038 9769     		ldr	r7, [r2, #24]
 285 003a 47EA0C07 		orr	r7, r7, ip
 286              	.LVL44:
6660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****  
6661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the timer reset upon synchronization event reception */
6662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_SYNCRST);
 287              		.loc 1 6662 0
 288 003e 27F4806C 		bic	ip, r7, #1024
 289              	.LVL45:
6663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->ResetOnSync;
 290              		.loc 1 6663 0
 291 0042 D769     		ldr	r7, [r2, #28]
 292 0044 47EA0C07 		orr	r7, r7, ip
 293              	.LVL46:
6664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the DAC synchronization event generation */
6666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_DACSYNC);
 294              		.loc 1 6666 0
 295 0048 27F0C06C 		bic	ip, r7, #100663296
ARM GAS  /tmp/ccWQyto6.s 			page 123


 296              	.LVL47:
6667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->DACSynchro;
 297              		.loc 1 6667 0
 298 004c 176A     		ldr	r7, [r2, #32]
 299 004e 47EA0C07 		orr	r7, r7, ip
 300              	.LVL48:
6668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable preload meachanism for timer registers */
6670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_PREEN);
 301              		.loc 1 6670 0
 302 0052 27F0006C 		bic	ip, r7, #134217728
 303              	.LVL49:
6671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->PreloadEnable;
 304              		.loc 1 6671 0
 305 0056 576A     		ldr	r7, [r2, #36]
 306 0058 47EA0C07 		orr	r7, r7, ip
 307              	.LVL50:
6672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timing unit registers update handling */
6674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_UPDGAT);
 308              		.loc 1 6674 0
 309 005c 27F0704C 		bic	ip, r7, #-268435456
 310              	.LVL51:
6675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->UpdateGating;
 311              		.loc 1 6675 0
 312 0060 976A     		ldr	r7, [r2, #40]
 313 0062 47EA0C07 		orr	r7, r7, ip
 314              	.LVL52:
6676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable registers update on repetition */
6678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_TREPU);
 315              		.loc 1 6678 0
 316 0066 27F4003C 		bic	ip, r7, #131072
 317              	.LVL53:
6679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (pTimerCfg->RepetitionUpdate == HRTIM_UPDATEONREPETITION_ENABLED)
 318              		.loc 1 6679 0
 319 006a 176B     		ldr	r7, [r2, #48]
 320 006c B7F1005F 		cmp	r7, #536870912
 321 0070 01D1     		bne	.L5
6680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_timcr |= HRTIM_TIMCR_TREPU;
 322              		.loc 1 6681 0
 323 0072 4CF4003C 		orr	ip, ip, #131072
 324              	.LVL54:
 325              	.L5:
6682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the push-pull mode */
6685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_PSHPLL);
 326              		.loc 1 6685 0
 327 0076 2CF0400C 		bic	ip, ip, #64
 328              	.LVL55:
6686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->PushPull;
 329              		.loc 1 6686 0
 330 007a 576B     		ldr	r7, [r2, #52]
 331 007c 47EA0C0C 		orr	ip, r7, ip
 332              	.LVL56:
ARM GAS  /tmp/ccWQyto6.s 			page 124


6687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable registers update on timer counter reset */
6689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_TRSTU);
 333              		.loc 1 6689 0
 334 0080 2CF4802C 		bic	ip, ip, #262144
 335              	.LVL57:
6690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->ResetUpdate;
 336              		.loc 1 6690 0
 337 0084 156D     		ldr	r5, [r2, #80]
 338 0086 45EA0C0C 		orr	ip, r5, ip
 339              	.LVL58:
6691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the timer update trigger */
6693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr &= ~(HRTIM_TIMCR_TIMUPDATETRIGGER);
 340              		.loc 1 6693 0
 341 008a 2CF0FC7C 		bic	ip, ip, #33030144
 342              	.LVL59:
6694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= pTimerCfg->UpdateTrigger;
 343              		.loc 1 6694 0
 344 008e 956C     		ldr	r5, [r2, #72]
 345 0090 45EA0C0C 		orr	ip, r5, ip
 346              	.LVL60:
6695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable the fault channel at timer level */
6698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timfltr &= ~(HRTIM_FLTR_FLTxEN);
6699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timfltr |= (pTimerCfg->FaultEnable & HRTIM_FLTR_FLTxEN);
 347              		.loc 1 6699 0
 348 0094 956B     		ldr	r5, [r2, #56]
 349 0096 05F01F08 		and	r8, r5, #31
 350 009a 29F00045 		bic	r5, r9, #-2147483648
 351 009e 25F01F05 		bic	r5, r5, #31
 352              	.LVL61:
6700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Lock/Unlock fault sources at timer level */
6702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timfltr &= ~(HRTIM_FLTR_FLTLCK);
 353              		.loc 1 6702 0
 354 00a2 45EA0808 		orr	r8, r5, r8
 355              	.LVL62:
6703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timfltr |= pTimerCfg->FaultLock;
 356              		.loc 1 6703 0
 357 00a6 D56B     		ldr	r5, [r2, #60]
 358 00a8 45EA0808 		orr	r8, r5, r8
 359              	.LVL63:
6704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* The deadtime cannot be used simultaneously with the push-pull mode */
6706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (pTimerCfg->PushPull == HRTIM_TIMPUSHPULLMODE_DISABLED)
 360              		.loc 1 6706 0
 361 00ac 1FB9     		cbnz	r7, .L6
6707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Enable/Disable dead time insertion at timer level */
6709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_timoutr &= ~(HRTIM_OUTR_DTEN);
 362              		.loc 1 6709 0
 363 00ae 24F48074 		bic	r4, r4, #256
 364              	.LVL64:
6710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_timoutr |= pTimerCfg->DeadTimeInsertion;
 365              		.loc 1 6710 0
ARM GAS  /tmp/ccWQyto6.s 			page 125


 366 00b2 156C     		ldr	r5, [r2, #64]
 367 00b4 2C43     		orrs	r4, r4, r5
 368              	.LVL65:
 369              	.L6:
6711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Enable/Disable delayed protection at timer level
6714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      Delayed Idle is available whatever the timer operating mode (regular, push-pull)
6715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      Balanced Idle is only available in push-pull mode
6716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (   ((pTimerCfg->DelayedProtectionMode != HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_BALANCED_EEV6)
 370              		.loc 1 6717 0
 371 00b6 556C     		ldr	r5, [r2, #68]
 372 00b8 B5F5606F 		cmp	r5, #3584
 373 00bc 02D0     		beq	.L7
6718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        && (pTimerCfg->DelayedProtectionMode != HRTIM_TIMER_A_B_C_DELAYEDPROTECTION_BALANCED_EEV7))
 374              		.loc 1 6718 0
 375 00be B5F5F05F 		cmp	r5, #7680
 376 00c2 01D1     		bne	.L8
 377              	.L7:
6719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        || (pTimerCfg->PushPull == HRTIM_TIMPUSHPULLMODE_ENABLED))
 378              		.loc 1 6719 0
 379 00c4 402F     		cmp	r7, #64
 380 00c6 02D1     		bne	.L9
 381              	.L8:
6720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_timoutr &= ~(HRTIM_OUTR_DLYPRT| HRTIM_OUTR_DLYPRTEN);
 382              		.loc 1 6721 0
 383 00c8 24F4F054 		bic	r4, r4, #7680
 384              	.LVL66:
6722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_timoutr |= pTimerCfg->DelayedProtectionMode;
 385              		.loc 1 6722 0
 386 00cc 2C43     		orrs	r4, r4, r5
 387              	.LVL67:
 388              	.L9:
6723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     
6725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the timer counter reset trigger */
6726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timrstr = pTimerCfg->ResetTrigger;
 389              		.loc 1 6726 0
 390 00ce D56C     		ldr	r5, [r2, #76]
 391              	.LVL68:
6727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the timer burst mode */
6729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (TimerIdx)
 392              		.loc 1 6729 0
 393 00d0 0429     		cmp	r1, #4
 394 00d2 21D8     		bhi	.L10
 395 00d4 DFE801F0 		tbb	[pc, r1]
 396              	.L12:
 397 00d8 03       		.byte	(.L11-.L12)/2
 398 00d9 09       		.byte	(.L13-.L12)/2
 399 00da 0F       		.byte	(.L14-.L12)/2
 400 00db 15       		.byte	(.L15-.L12)/2
 401 00dc 1B       		.byte	(.L16-.L12)/2
 402 00dd 00       		.p2align 1
 403              	.L11:
ARM GAS  /tmp/ccWQyto6.s 			page 126


6730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_A:
6732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr &= ~(HRTIM_BMCR_TABM);
 404              		.loc 1 6733 0
 405 00de 26F40036 		bic	r6, r6, #131072
 406              	.LVL69:
6734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr |= ( pTimerCfg->BurstMode << 1U);
 407              		.loc 1 6734 0
 408 00e2 D26A     		ldr	r2, [r2, #44]
 409              	.LVL70:
 410 00e4 46EA4206 		orr	r6, r6, r2, lsl #1
 411              	.LVL71:
6735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 412              		.loc 1 6736 0
 413 00e8 16E0     		b	.L10
 414              	.LVL72:
 415              	.L13:
6737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_B:
6738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr &= ~(HRTIM_BMCR_TBBM);
 416              		.loc 1 6739 0
 417 00ea 26F48026 		bic	r6, r6, #262144
 418              	.LVL73:
6740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr |= ( pTimerCfg->BurstMode << 2U);
 419              		.loc 1 6740 0
 420 00ee D26A     		ldr	r2, [r2, #44]
 421              	.LVL74:
 422 00f0 46EA8206 		orr	r6, r6, r2, lsl #2
 423              	.LVL75:
6741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 424              		.loc 1 6742 0
 425 00f4 10E0     		b	.L10
 426              	.LVL76:
 427              	.L14:
6743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_C:
6744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr &= ~(HRTIM_BMCR_TCBM);
 428              		.loc 1 6745 0
 429 00f6 26F40026 		bic	r6, r6, #524288
 430              	.LVL77:
6746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr |= ( pTimerCfg->BurstMode << 3U);
 431              		.loc 1 6746 0
 432 00fa D26A     		ldr	r2, [r2, #44]
 433              	.LVL78:
 434 00fc 46EAC206 		orr	r6, r6, r2, lsl #3
 435              	.LVL79:
6747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 436              		.loc 1 6748 0
 437 0100 0AE0     		b	.L10
 438              	.LVL80:
 439              	.L15:
6749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_D:
6750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
ARM GAS  /tmp/ccWQyto6.s 			page 127


6751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr &= ~(HRTIM_BMCR_TDBM);
 440              		.loc 1 6751 0
 441 0102 26F48016 		bic	r6, r6, #1048576
 442              	.LVL81:
6752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr |= ( pTimerCfg->BurstMode << 4U);
 443              		.loc 1 6752 0
 444 0106 D26A     		ldr	r2, [r2, #44]
 445              	.LVL82:
 446 0108 46EA0216 		orr	r6, r6, r2, lsl #4
 447              	.LVL83:
6753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 448              		.loc 1 6754 0
 449 010c 04E0     		b	.L10
 450              	.LVL84:
 451              	.L16:
6755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_E:
6756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr &= ~(HRTIM_BMCR_TEBM);
 452              		.loc 1 6757 0
 453 010e 26F40016 		bic	r6, r6, #2097152
 454              	.LVL85:
6758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_bmcr |= ( pTimerCfg->BurstMode << 5U);
 455              		.loc 1 6758 0
 456 0112 D26A     		ldr	r2, [r2, #44]
 457              	.LVL86:
 458 0114 46EA4216 		orr	r6, r6, r2, lsl #5
 459              	.LVL87:
 460              	.L10:
6759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
6761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
6762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
6763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update the HRTIM registers */
6766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR  = hrtim_timcr;
 461              		.loc 1 6766 0
 462 0118 4A1C     		adds	r2, r1, #1
 463 011a D201     		lsls	r2, r2, #7
 464 011c 43F802C0 		str	ip, [r3, r2]
6767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].FLTxR = hrtim_timfltr;
 465              		.loc 1 6767 0
 466 0120 0368     		ldr	r3, [r0]
 467 0122 C901     		lsls	r1, r1, #7
 468              	.LVL88:
 469 0124 0B44     		add	r3, r3, r1
 470 0126 C3F8E880 		str	r8, [r3, #232]
6768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].OUTxR = hrtim_timoutr;
 471              		.loc 1 6768 0
 472 012a 0368     		ldr	r3, [r0]
 473 012c 0B44     		add	r3, r3, r1
 474 012e C3F8E440 		str	r4, [r3, #228]
6769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = hrtim_timrstr;  
 475              		.loc 1 6769 0
 476 0132 0368     		ldr	r3, [r0]
 477 0134 1944     		add	r1, r1, r3
ARM GAS  /tmp/ccWQyto6.s 			page 128


 478 0136 C1F8D450 		str	r5, [r1, #212]
6770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCR = hrtim_bmcr;
 479              		.loc 1 6770 0
 480 013a 0368     		ldr	r3, [r0]
 481 013c C3F8A063 		str	r6, [r3, #928]
6771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 482              		.loc 1 6771 0
 483 0140 BDE8F003 		pop	{r4, r5, r6, r7, r8, r9}
 484              	.LVL89:
 485 0144 7047     		bx	lr
 486              		.cfi_endproc
 487              	.LFE232:
 489 0146 00BF     		.section	.text.HRTIM_CompareUnitConfig,"ax",%progbits
 490              		.align	2
 491              		.thumb
 492              		.thumb_func
 494              	HRTIM_CompareUnitConfig:
 495              	.LFB233:
6772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures a compare unit 
6775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CompareUnit: Compare unit identifier
6778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pCompareCfg: pointer to the compare unit configuration data structure
6779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void  HRTIM_CompareUnitConfig(HRTIM_HandleTypeDef * hhrtim,
6782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                      uint32_t TimerIdx,
6783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                      uint32_t CompareUnit,
6784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                      HRTIM_CompareCfgTypeDef * pCompareCfg)
6785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 496              		.loc 1 6785 0
 497              		.cfi_startproc
 498              		@ args = 0, pretend = 0, frame = 0
 499              		@ frame_needed = 0, uses_anonymous_args = 0
 500              		@ link register save eliminated.
 501              	.LVL90:
 502 0000 10B4     		push	{r4}
 503              	.LCFI4:
 504              		.cfi_def_cfa_offset 4
 505              		.cfi_offset 4, -4
6786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 506              		.loc 1 6786 0
 507 0002 0529     		cmp	r1, #5
 508 0004 18D1     		bne	.L18
6787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Configure the compare unit of the master timer */
6789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     switch (CompareUnit)
 509              		.loc 1 6789 0
 510 0006 013A     		subs	r2, r2, #1
 511              	.LVL91:
 512 0008 072A     		cmp	r2, #7
 513 000a 39D8     		bhi	.L17
 514 000c DFE802F0 		tbb	[pc, r2]
 515              	.LVL92:
 516              	.L21:
ARM GAS  /tmp/ccWQyto6.s 			page 129


 517 0010 04       		.byte	(.L20-.L21)/2
 518 0011 08       		.byte	(.L22-.L21)/2
 519 0012 38       		.byte	(.L17-.L21)/2
 520 0013 0C       		.byte	(.L23-.L21)/2
 521 0014 38       		.byte	(.L17-.L21)/2
 522 0015 38       		.byte	(.L17-.L21)/2
 523 0016 38       		.byte	(.L17-.L21)/2
 524 0017 10       		.byte	(.L24-.L21)/2
 525              		.p2align 1
 526              	.L20:
6790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_1:
6792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP1R = pCompareCfg->CompareValue;
 527              		.loc 1 6793 0
 528 0018 0268     		ldr	r2, [r0]
 529              	.LVL93:
 530 001a 1B68     		ldr	r3, [r3]
 531              	.LVL94:
 532 001c D361     		str	r3, [r2, #28]
6794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 533              		.loc 1 6795 0
 534 001e 2FE0     		b	.L17
 535              	.LVL95:
 536              	.L22:
6796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_2:
6797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP2R = pCompareCfg->CompareValue;
 537              		.loc 1 6798 0
 538 0020 0268     		ldr	r2, [r0]
 539 0022 1B68     		ldr	r3, [r3]
 540              	.LVL96:
 541 0024 5362     		str	r3, [r2, #36]
6799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 542              		.loc 1 6800 0
 543 0026 2BE0     		b	.L17
 544              	.LVL97:
 545              	.L23:
6801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_3:
6802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP3R = pCompareCfg->CompareValue;
 546              		.loc 1 6803 0
 547 0028 0268     		ldr	r2, [r0]
 548 002a 1B68     		ldr	r3, [r3]
 549              	.LVL98:
 550 002c 9362     		str	r3, [r2, #40]
6804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 551              		.loc 1 6805 0
 552 002e 27E0     		b	.L17
 553              	.LVL99:
 554              	.L24:
6806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_4:
6807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP4R = pCompareCfg->CompareValue;
ARM GAS  /tmp/ccWQyto6.s 			page 130


 555              		.loc 1 6808 0
 556 0030 0268     		ldr	r2, [r0]
 557 0032 1B68     		ldr	r3, [r3]
 558              	.LVL100:
 559 0034 D362     		str	r3, [r2, #44]
6809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 560              		.loc 1 6810 0
 561 0036 23E0     		b	.L17
 562              	.LVL101:
 563              	.L18:
6811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     default:
6812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
6813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else
6816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     /* Configure the compare unit of the timing unit */
6818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     switch (CompareUnit)
 564              		.loc 1 6818 0
 565 0038 013A     		subs	r2, r2, #1
 566              	.LVL102:
 567 003a 072A     		cmp	r2, #7
 568 003c 20D8     		bhi	.L17
 569 003e DFE802F0 		tbb	[pc, r2]
 570              	.L26:
 571 0042 04       		.byte	(.L25-.L26)/2
 572 0043 0B       		.byte	(.L27-.L26)/2
 573 0044 1F       		.byte	(.L17-.L26)/2
 574 0045 12       		.byte	(.L28-.L26)/2
 575 0046 1F       		.byte	(.L17-.L26)/2
 576 0047 1F       		.byte	(.L17-.L26)/2
 577 0048 1F       		.byte	(.L17-.L26)/2
 578 0049 19       		.byte	(.L29-.L26)/2
 579              		.p2align 1
 580              	.L25:
6819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_1:
6821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP1xR = pCompareCfg->CompareValue;
 581              		.loc 1 6822 0
 582 004a 0268     		ldr	r2, [r0]
 583              	.LVL103:
 584 004c 1B68     		ldr	r3, [r3]
 585              	.LVL104:
 586 004e 02EBC111 		add	r1, r2, r1, lsl #7
 587              	.LVL105:
 588 0052 C1F89C30 		str	r3, [r1, #156]
6823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 589              		.loc 1 6824 0
 590 0056 13E0     		b	.L17
 591              	.LVL106:
 592              	.L27:
6825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_2:
6826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP2xR = pCompareCfg->CompareValue;
ARM GAS  /tmp/ccWQyto6.s 			page 131


 593              		.loc 1 6827 0
 594 0058 0268     		ldr	r2, [r0]
 595 005a 1B68     		ldr	r3, [r3]
 596              	.LVL107:
 597 005c 02EBC111 		add	r1, r2, r1, lsl #7
 598              	.LVL108:
 599 0060 C1F8A430 		str	r3, [r1, #164]
6828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 600              		.loc 1 6829 0
 601 0064 0CE0     		b	.L17
 602              	.LVL109:
 603              	.L28:
6830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_3:
6831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP3xR = pCompareCfg->CompareValue;
 604              		.loc 1 6832 0
 605 0066 0268     		ldr	r2, [r0]
 606 0068 1B68     		ldr	r3, [r3]
 607              	.LVL110:
 608 006a 02EBC111 		add	r1, r2, r1, lsl #7
 609              	.LVL111:
 610 006e C1F8A830 		str	r3, [r1, #168]
6833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 611              		.loc 1 6834 0
 612 0072 05E0     		b	.L17
 613              	.LVL112:
 614              	.L29:
6835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     case HRTIM_COMPAREUNIT_4:
6836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
6837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP4xR = pCompareCfg->CompareValue;
 615              		.loc 1 6837 0
 616 0074 0268     		ldr	r2, [r0]
 617 0076 1B68     		ldr	r3, [r3]
 618              	.LVL113:
 619 0078 02EBC111 		add	r1, r2, r1, lsl #7
 620              	.LVL114:
 621 007c C1F8AC30 		str	r3, [r1, #172]
 622              	.L17:
6838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
6839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
6840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     default:
6841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
6842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }    
6843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 623              		.loc 1 6844 0
 624 0080 5DF8044B 		ldr	r4, [sp], #4
 625 0084 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE233:
 629 0086 00BF     		.section	.text.HRTIM_CaptureUnitConfig,"ax",%progbits
 630              		.align	2
 631              		.thumb
 632              		.thumb_func
 634              	HRTIM_CaptureUnitConfig:
ARM GAS  /tmp/ccWQyto6.s 			page 132


 635              	.LFB234:
6845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures a capture unit 
6848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  CaptureUnit: Capture unit identifier
6851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Event: Event reference
6852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_CaptureUnitConfig(HRTIM_HandleTypeDef * hhrtim,
6855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t TimerIdx,
6856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t CaptureUnit,
6857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                     uint32_t Event)
6858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 636              		.loc 1 6858 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640              		@ link register save eliminated.
 641              	.LVL115:
6859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CaptureTrigger = 0xFFFFFFFFU;
6860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Event)
 642              		.loc 1 6861 0
 643 0000 102B     		cmp	r3, #16
 644 0002 22D0     		beq	.L32
 645 0004 0AD8     		bhi	.L33
 646 0006 022B     		cmp	r3, #2
 647 0008 19D0     		beq	.L34
 648 000a 02D8     		bhi	.L35
 649 000c 012B     		cmp	r3, #1
 650 000e 2CD0     		beq	.L48
 651 0010 12E0     		b	.L31
 652              	.L35:
 653 0012 042B     		cmp	r3, #4
 654 0014 15D0     		beq	.L37
 655 0016 082B     		cmp	r3, #8
 656 0018 15D0     		beq	.L38
 657 001a 0DE0     		b	.L31
 658              	.L33:
 659 001c 802B     		cmp	r3, #128
 660 001e 1BD0     		beq	.L39
 661 0020 04D8     		bhi	.L40
 662 0022 202B     		cmp	r3, #32
 663 0024 13D0     		beq	.L41
 664 0026 402B     		cmp	r3, #64
 665 0028 13D0     		beq	.L42
 666 002a 05E0     		b	.L31
 667              	.L40:
 668 002c B3F5807F 		cmp	r3, #256
 669 0030 15D0     		beq	.L43
 670 0032 B3F5007F 		cmp	r3, #512
 671 0036 15D0     		beq	.L44
 672              	.L31:
6859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CaptureTrigger = 0xFFFFFFFFU;
 673              		.loc 1 6859 0
ARM GAS  /tmp/ccWQyto6.s 			page 133


 674 0038 4FF0FF33 		mov	r3, #-1
 675              	.LVL116:
 676 003c 16E0     		b	.L36
 677              	.LVL117:
 678              	.L34:
6862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_1:
6864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_1;
6866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
6868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_2:
6869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_2;
 679              		.loc 1 6870 0
 680 003e 0823     		movs	r3, #8
 681              	.LVL118:
6871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 682              		.loc 1 6872 0
 683 0040 14E0     		b	.L36
 684              	.LVL119:
 685              	.L37:
6873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_3:
6874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_3;
 686              		.loc 1 6875 0
 687 0042 1023     		movs	r3, #16
 688              	.LVL120:
6876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 689              		.loc 1 6877 0
 690 0044 12E0     		b	.L36
 691              	.LVL121:
 692              	.L38:
6878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_4:
6879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_4;
 693              		.loc 1 6880 0
 694 0046 2023     		movs	r3, #32
 695              	.LVL122:
6881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 696              		.loc 1 6882 0
 697 0048 10E0     		b	.L36
 698              	.LVL123:
 699              	.L32:
6883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_5:
6884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_5;
 700              		.loc 1 6885 0
 701 004a 4023     		movs	r3, #64
 702              	.LVL124:
6886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 703              		.loc 1 6887 0
 704 004c 0EE0     		b	.L36
ARM GAS  /tmp/ccWQyto6.s 			page 134


 705              	.LVL125:
 706              	.L41:
6888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_6:
6889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_6;
 707              		.loc 1 6890 0
 708 004e 8023     		movs	r3, #128
 709              	.LVL126:
6891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 710              		.loc 1 6892 0
 711 0050 0CE0     		b	.L36
 712              	.LVL127:
 713              	.L42:
6893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_7:
6894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_7;
 714              		.loc 1 6895 0
 715 0052 4FF48073 		mov	r3, #256
 716              	.LVL128:
6896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 717              		.loc 1 6897 0
 718 0056 09E0     		b	.L36
 719              	.LVL129:
 720              	.L39:
6898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_8:
6899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_8;
 721              		.loc 1 6900 0
 722 0058 4FF40073 		mov	r3, #512
 723              	.LVL130:
6901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 724              		.loc 1 6902 0
 725 005c 06E0     		b	.L36
 726              	.LVL131:
 727              	.L43:
6903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_9:
6904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_9;
 728              		.loc 1 6905 0
 729 005e 4FF48063 		mov	r3, #1024
 730              	.LVL132:
6906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 731              		.loc 1 6907 0
 732 0062 03E0     		b	.L36
 733              	.LVL133:
 734              	.L44:
6908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_10:
6909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_10;
 735              		.loc 1 6910 0
 736 0064 4FF40063 		mov	r3, #2048
 737              	.LVL134:
6911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
ARM GAS  /tmp/ccWQyto6.s 			page 135


6912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 738              		.loc 1 6912 0
 739 0068 00E0     		b	.L36
 740              	.LVL135:
 741              	.L48:
6865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CaptureTrigger = HRTIM_CAPTURETRIGGER_EEV_1;
 742              		.loc 1 6865 0
 743 006a 0423     		movs	r3, #4
 744              	.LVL136:
 745              	.L36:
6913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
6914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
6915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureUnit)
 746              		.loc 1 6917 0
 747 006c 012A     		cmp	r2, #1
 748 006e 02D0     		beq	.L46
 749 0070 022A     		cmp	r2, #2
 750 0072 06D0     		beq	.L47
 751 0074 7047     		bx	lr
 752              	.L46:
6918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_1:
6920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->TimerParam[TimerIdx].CaptureTrigger1 = CaptureTrigger;
 753              		.loc 1 6921 0
 754 0076 C1EBC101 		rsb	r1, r1, r1, lsl #3
 755              	.LVL137:
 756 007a 8900     		lsls	r1, r1, #2
 757 007c 0144     		add	r1, r1, r0
 758 007e 8B61     		str	r3, [r1, #24]
6922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 759              		.loc 1 6923 0
 760 0080 7047     		bx	lr
 761              	.LVL138:
 762              	.L47:
6924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_CAPTUREUNIT_2:
6925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->TimerParam[TimerIdx].CaptureTrigger2 = CaptureTrigger;
 763              		.loc 1 6926 0
 764 0082 C1EBC101 		rsb	r1, r1, r1, lsl #3
 765              	.LVL139:
 766 0086 8900     		lsls	r1, r1, #2
 767 0088 0144     		add	r1, r1, r0
 768 008a CB61     		str	r3, [r1, #28]
 769 008c 7047     		bx	lr
 770              		.cfi_endproc
 771              	.LFE234:
 773 008e 00BF     		.section	.text.HRTIM_OutputConfig,"ax",%progbits
 774              		.align	2
 775              		.thumb
 776              		.thumb_func
 778              	HRTIM_OutputConfig:
 779              	.LFB235:
6927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
ARM GAS  /tmp/ccWQyto6.s 			page 136


6928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
6929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
6930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
6931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
6933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
6935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the output of a timing unit 
6936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
6937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
6938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Output: timing unit output identifier
6939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pOutputCfg: pointer to the output configuration data structure
6940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
6941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
6942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void  HRTIM_OutputConfig(HRTIM_HandleTypeDef * hhrtim,
6943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                 uint32_t TimerIdx,
6944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                 uint32_t Output,
6945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                 HRTIM_OutputCfgTypeDef * pOutputCfg)
6946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 780              		.loc 1 6946 0
 781              		.cfi_startproc
 782              		@ args = 0, pretend = 0, frame = 0
 783              		@ frame_needed = 0, uses_anonymous_args = 0
 784              		@ link register save eliminated.
 785              	.LVL140:
 786 0000 F0B4     		push	{r4, r5, r6, r7}
 787              	.LCFI5:
 788              		.cfi_def_cfa_offset 16
 789              		.cfi_offset 4, -16
 790              		.cfi_offset 5, -12
 791              		.cfi_offset 6, -8
 792              		.cfi_offset 7, -4
 793              	.LVL141:
6947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_outr;
6948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_dtr;
6949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t shift = 0xFFFFFFFFU;
6951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr = hhrtim->Instance->sTimerxRegs[TimerIdx].OUTxR;
 794              		.loc 1 6952 0
 795 0002 0568     		ldr	r5, [r0]
 796 0004 05EBC114 		add	r4, r5, r1, lsl #7
 797 0008 D4F8E460 		ldr	r6, [r4, #228]
 798              	.LVL142:
6953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr = hhrtim->Instance->sTimerxRegs[TimerIdx].DTxR;
 799              		.loc 1 6953 0
 800 000c D4F8B870 		ldr	r7, [r4, #184]
 801              	.LVL143:
6954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
 802              		.loc 1 6955 0
 803 0010 102A     		cmp	r2, #16
 804 0012 1AD0     		beq	.L51
 805 0014 0AD8     		bhi	.L52
 806 0016 022A     		cmp	r2, #2
 807 0018 23D0     		beq	.L53
 808 001a 02D8     		bhi	.L54
ARM GAS  /tmp/ccWQyto6.s 			page 137


 809 001c 012A     		cmp	r2, #1
 810 001e 2CD1     		bne	.L57
 811 0020 13E0     		b	.L51
 812              	.L54:
 813 0022 042A     		cmp	r2, #4
 814 0024 11D0     		beq	.L51
 815 0026 082A     		cmp	r2, #8
 816 0028 27D1     		bne	.L57
 817 002a 1AE0     		b	.L53
 818              	.L52:
 819 002c 802A     		cmp	r2, #128
 820 002e 18D0     		beq	.L53
 821 0030 04D8     		bhi	.L55
 822 0032 202A     		cmp	r2, #32
 823 0034 15D0     		beq	.L53
 824 0036 402A     		cmp	r2, #64
 825 0038 1FD1     		bne	.L57
 826 003a 06E0     		b	.L51
 827              	.L55:
 828 003c B2F5807F 		cmp	r2, #256
 829 0040 03D0     		beq	.L51
 830 0042 B2F5007F 		cmp	r2, #512
 831 0046 18D1     		bne	.L57
 832 0048 0BE0     		b	.L53
 833              	.L51:
6956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
6957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
6958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
6959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
6960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
6961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
6962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the output set/reset crossbar */
6964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].SETx1R = pOutputCfg->SetSource;
 834              		.loc 1 6964 0
 835 004a 5C68     		ldr	r4, [r3, #4]
 836 004c CA01     		lsls	r2, r1, #7
 837              	.LVL144:
 838 004e 1544     		add	r5, r5, r2
 839 0050 C5F8BC40 		str	r4, [r5, #188]
6965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx1R = pOutputCfg->ResetSource;
 840              		.loc 1 6965 0
 841 0054 0568     		ldr	r5, [r0]
 842 0056 9C68     		ldr	r4, [r3, #8]
 843 0058 2A44     		add	r2, r2, r5
 844 005a C2F8C040 		str	r4, [r2, #192]
 845              	.LVL145:
6966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
6967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       shift = 0U;
 846              		.loc 1 6967 0
 847 005e 0022     		movs	r2, #0
6968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 848              		.loc 1 6969 0
 849 0060 0DE0     		b	.L50
 850              	.LVL146:
 851              	.L53:
ARM GAS  /tmp/ccWQyto6.s 			page 138


6970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
6971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
6972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
6973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
6974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
6975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
6976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set the output set/reset crossbar */
6977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].SETx2R = pOutputCfg->SetSource;
 852              		.loc 1 6977 0
 853 0062 5C68     		ldr	r4, [r3, #4]
 854 0064 CA01     		lsls	r2, r1, #7
 855              	.LVL147:
 856 0066 1544     		add	r5, r5, r2
 857 0068 C5F8C440 		str	r4, [r5, #196]
6978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx2R = pOutputCfg->ResetSource;
 858              		.loc 1 6978 0
 859 006c 0568     		ldr	r5, [r0]
 860 006e 9C68     		ldr	r4, [r3, #8]
 861 0070 2A44     		add	r2, r2, r5
 862 0072 C2F8C840 		str	r4, [r2, #200]
 863              	.LVL148:
6979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
6980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       shift = 16U;
 864              		.loc 1 6980 0
 865 0076 1022     		movs	r2, #16
6981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
6982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 866              		.loc 1 6982 0
 867 0078 01E0     		b	.L50
 868              	.LVL149:
 869              	.L57:
6950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t shift = 0xFFFFFFFFU;
 870              		.loc 1 6950 0
 871 007a 4FF0FF32 		mov	r2, #-1
 872              	.LVL150:
 873              	.L50:
6983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
6984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
6985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
6986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Clear output config */
6988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr &= ~((HRTIM_OUTR_POL1 |
6989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    HRTIM_OUTR_IDLM1 |
6990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    HRTIM_OUTR_IDLES1|
6991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    HRTIM_OUTR_FAULT1|
6992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    HRTIM_OUTR_CHP1 |
6993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    HRTIM_OUTR_DIDL1)  << shift);
 874              		.loc 1 6993 0
 875 007e 9446     		mov	ip, r2
 876 0080 FE25     		movs	r5, #254
 877 0082 9540     		lsls	r5, r5, r2
6988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr &= ~((HRTIM_OUTR_POL1 |
 878              		.loc 1 6988 0
 879 0084 26EA0506 		bic	r6, r6, r5
 880              	.LVL151:
6994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the polarity */
ARM GAS  /tmp/ccWQyto6.s 			page 139


6996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr |= (pOutputCfg->Polarity << shift);
 881              		.loc 1 6996 0
 882 0088 1D68     		ldr	r5, [r3]
 883 008a 9540     		lsls	r5, r5, r2
 884 008c 2E43     		orrs	r6, r6, r5
 885              	.LVL152:
6997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
6998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the IDLE mode */
6999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr |= (pOutputCfg->IdleMode << shift);
 886              		.loc 1 6999 0
 887 008e DC68     		ldr	r4, [r3, #12]
 888 0090 9440     		lsls	r4, r4, r2
 889 0092 2643     		orrs	r6, r6, r4
 890              	.LVL153:
7000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the IDLE state */
7002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr |= (pOutputCfg->IdleLevel << shift);
 891              		.loc 1 7002 0
 892 0094 1C69     		ldr	r4, [r3, #16]
 893 0096 04FA02F5 		lsl	r5, r4, r2
 894 009a 2E43     		orrs	r6, r6, r5
 895              	.LVL154:
7003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the FAULT state */
7005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr |= (pOutputCfg->FaultLevel << shift);
 896              		.loc 1 7005 0
 897 009c 5D69     		ldr	r5, [r3, #20]
 898 009e 9540     		lsls	r5, r5, r2
 899 00a0 2E43     		orrs	r6, r6, r5
 900              	.LVL155:
7006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the chopper mode */
7008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_outr |= (pOutputCfg->ChopperModeEnable << shift);
 901              		.loc 1 7008 0
 902 00a2 9D69     		ldr	r5, [r3, #24]
 903 00a4 05FA02F2 		lsl	r2, r5, r2
 904              	.LVL156:
 905 00a8 3243     		orrs	r2, r2, r6
 906              	.LVL157:
7009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Set the burst mode entry mode : deadtime insertion when entering the idle
7011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      state during a burst mode operation is allowed only under the following
7012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      conditions:
7013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      - the outputs is active during the burst mode (IDLES=1U)
7014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      - positive deadtimes (SDTR/SDTF set to 0U)
7015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((pOutputCfg->IdleLevel == HRTIM_OUTPUTIDLELEVEL_ACTIVE) && 
 907              		.loc 1 7016 0
 908 00aa 082C     		cmp	r4, #8
 909 00ac 07D1     		bne	.L56
7017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       ((hrtim_dtr & HRTIM_DTR_SDTR) == RESET) &&
 910              		.loc 1 7017 0
 911 00ae 17F0022F 		tst	r7, #33554944
 912 00b2 04D1     		bne	.L56
7018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       ((hrtim_dtr & HRTIM_DTR_SDTF) == RESET))
7019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_outr |= (pOutputCfg->BurstModeEntryDelayed << shift);
ARM GAS  /tmp/ccWQyto6.s 			page 140


 913              		.loc 1 7020 0
 914 00b4 DB69     		ldr	r3, [r3, #28]
 915              	.LVL158:
 916 00b6 03FA0CFC 		lsl	ip, r3, ip
 917              	.LVL159:
 918 00ba 42EA0C02 		orr	r2, r2, ip
 919              	.LVL160:
 920              	.L56:
7021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Update HRTIM register */
7024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].OUTxR = hrtim_outr;
 921              		.loc 1 7024 0
 922 00be 0368     		ldr	r3, [r0]
 923 00c0 03EBC111 		add	r1, r3, r1, lsl #7
 924              	.LVL161:
 925 00c4 C1F8E420 		str	r2, [r1, #228]
7025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 926              		.loc 1 7025 0
 927 00c8 F0BC     		pop	{r4, r5, r6, r7}
 928              	.LVL162:
 929 00ca 7047     		bx	lr
 930              		.cfi_endproc
 931              	.LFE235:
 933              		.section	.text.HRTIM_EventConfig,"ax",%progbits
 934              		.align	2
 935              		.thumb
 936              		.thumb_func
 938              	HRTIM_EventConfig:
 939              	.LFB236:
7026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures an external event channel 
7029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
7030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Event: Event channel identifier
7031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  pEventCfg: pointer to the event channel configuration data structure
7032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
7033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_EventConfig(HRTIM_HandleTypeDef * hhrtim,
7035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                               uint32_t Event,
7036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                               HRTIM_EventCfgTypeDef *pEventCfg)
7037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 940              		.loc 1 7037 0
 941              		.cfi_startproc
 942              		@ args = 0, pretend = 0, frame = 0
 943              		@ frame_needed = 0, uses_anonymous_args = 0
 944              		@ link register save eliminated.
 945              	.LVL163:
 946 0000 70B4     		push	{r4, r5, r6}
 947              	.LCFI6:
 948              		.cfi_def_cfa_offset 12
 949              		.cfi_offset 4, -12
 950              		.cfi_offset 5, -8
 951              		.cfi_offset 6, -4
7038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_eecr1;
7039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_eecr2;
7040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_eecr3;
ARM GAS  /tmp/ccWQyto6.s 			page 141


7041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Configure external event channel */
7043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr1 = hhrtim->Instance->sCommonRegs.EECR1;
 952              		.loc 1 7043 0
 953 0002 0368     		ldr	r3, [r0]
 954 0004 D3F8B063 		ldr	r6, [r3, #944]
 955              	.LVL164:
7044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr2 = hhrtim->Instance->sCommonRegs.EECR2;
 956              		.loc 1 7044 0
 957 0008 D3F8B453 		ldr	r5, [r3, #948]
 958              	.LVL165:
7045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr3 = hhrtim->Instance->sCommonRegs.EECR3;
 959              		.loc 1 7045 0
 960 000c D3F8B843 		ldr	r4, [r3, #952]
 961              	.LVL166:
7046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Event)
 962              		.loc 1 7047 0
 963 0010 1029     		cmp	r1, #16
 964 0012 72D0     		beq	.L60
 965 0014 0AD8     		bhi	.L61
 966 0016 0229     		cmp	r1, #2
 967 0018 2DD0     		beq	.L62
 968 001a 02D8     		bhi	.L63
 969 001c 0129     		cmp	r1, #1
 970 001e 18D0     		beq	.L64
 971 0020 F4E0     		b	.L58
 972              	.L63:
 973 0022 0429     		cmp	r1, #4
 974 0024 3DD0     		beq	.L65
 975 0026 0829     		cmp	r1, #8
 976 0028 51D0     		beq	.L66
 977 002a EFE0     		b	.L58
 978              	.L61:
 979 002c 8029     		cmp	r1, #128
 980 002e 00F0A680 		beq	.L67
 981 0032 05D8     		bhi	.L68
 982 0034 2029     		cmp	r1, #32
 983 0036 76D0     		beq	.L69
 984 0038 4029     		cmp	r1, #64
 985 003a 00F08880 		beq	.L70
 986 003e E5E0     		b	.L58
 987              	.L68:
 988 0040 B1F5807F 		cmp	r1, #256
 989 0044 00F0B380 		beq	.L71
 990 0048 B1F5007F 		cmp	r1, #512
 991 004c 00F0C780 		beq	.L72
 992 0050 DCE0     		b	.L58
 993              	.L64:
7048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_1:
7050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 &= ~(HRTIM_EECR1_EE1SRC | HRTIM_EECR1_EE1POL | HRTIM_EECR1_EE1SNS | HRTIM_EECR1_E
 994              		.loc 1 7051 0
 995 0052 26F03F06 		bic	r6, r6, #63
 996              	.LVL167:
7052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= pEventCfg->Source;
ARM GAS  /tmp/ccWQyto6.s 			page 142


 997              		.loc 1 7052 0
 998 0056 1168     		ldr	r1, [r2]
 999              	.LVL168:
 1000 0058 3143     		orrs	r1, r1, r6
 1001              	.LVL169:
7053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Polarity & HRTIM_EECR1_EE1POL);
 1002              		.loc 1 7053 0
 1003 005a 5468     		ldr	r4, [r2, #4]
 1004              	.LVL170:
 1005 005c 04F00404 		and	r4, r4, #4
 1006 0060 2143     		orrs	r1, r1, r4
 1007              	.LVL171:
7054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= pEventCfg->Sensitivity;
 1008              		.loc 1 7054 0
 1009 0062 9468     		ldr	r4, [r2, #8]
 1010 0064 2143     		orrs	r1, r1, r4
 1011              	.LVL172:
7055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (all bitfields but EE1FAST bit) */
7056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1012              		.loc 1 7056 0
 1013 0066 C3F8B013 		str	r1, [r3, #944]
7057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (EE1FAST bit) */
7058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= pEventCfg->FastMode;
 1014              		.loc 1 7058 0
 1015 006a 1369     		ldr	r3, [r2, #16]
 1016 006c 1943     		orrs	r1, r1, r3
 1017              	.LVL173:
7059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1018              		.loc 1 7059 0
 1019 006e 0368     		ldr	r3, [r0]
 1020 0070 C3F8B013 		str	r1, [r3, #944]
7060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1021              		.loc 1 7061 0
 1022 0074 CAE0     		b	.L58
 1023              	.LVL174:
 1024              	.L62:
7062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_2:
7063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 &= ~(HRTIM_EECR1_EE2SRC | HRTIM_EECR1_EE2POL | HRTIM_EECR1_EE2SNS | HRTIM_EECR1_E
 1025              		.loc 1 7064 0
 1026 0076 26F47C66 		bic	r6, r6, #4032
 1027              	.LVL175:
7065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Source << 6U);
 1028              		.loc 1 7065 0
 1029 007a 1168     		ldr	r1, [r2]
 1030              	.LVL176:
 1031 007c 46EA8111 		orr	r1, r6, r1, lsl #6
 1032              	.LVL177:
7066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= ((pEventCfg->Polarity << 6U) & (HRTIM_EECR1_EE2POL));
 1033              		.loc 1 7066 0
 1034 0080 5468     		ldr	r4, [r2, #4]
 1035              	.LVL178:
 1036 0082 A401     		lsls	r4, r4, #6
 1037 0084 04F48074 		and	r4, r4, #256
 1038 0088 2143     		orrs	r1, r1, r4
 1039              	.LVL179:
ARM GAS  /tmp/ccWQyto6.s 			page 143


7067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Sensitivity << 6U);
 1040              		.loc 1 7067 0
 1041 008a 9468     		ldr	r4, [r2, #8]
 1042 008c 41EA8411 		orr	r1, r1, r4, lsl #6
 1043              	.LVL180:
7068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (all bitfields but EE2FAST bit) */
7069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1044              		.loc 1 7069 0
 1045 0090 C3F8B013 		str	r1, [r3, #944]
7070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (EE2FAST bit) */
7071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->FastMode << 6U);
 1046              		.loc 1 7071 0
 1047 0094 1369     		ldr	r3, [r2, #16]
 1048 0096 41EA8311 		orr	r1, r1, r3, lsl #6
 1049              	.LVL181:
7072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1050              		.loc 1 7072 0
 1051 009a 0368     		ldr	r3, [r0]
 1052 009c C3F8B013 		str	r1, [r3, #944]
7073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1053              		.loc 1 7074 0
 1054 00a0 B4E0     		b	.L58
 1055              	.LVL182:
 1056              	.L65:
7075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_3:
7076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 &= ~(HRTIM_EECR1_EE3SRC | HRTIM_EECR1_EE3POL | HRTIM_EECR1_EE3SNS | HRTIM_EECR1_E
 1057              		.loc 1 7077 0
 1058 00a2 26F47C36 		bic	r6, r6, #258048
 1059              	.LVL183:
7078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Source << 12U);
 1060              		.loc 1 7078 0
 1061 00a6 1168     		ldr	r1, [r2]
 1062              	.LVL184:
 1063 00a8 46EA0131 		orr	r1, r6, r1, lsl #12
 1064              	.LVL185:
7079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= ((pEventCfg->Polarity << 12U) & (HRTIM_EECR1_EE3POL));
 1065              		.loc 1 7079 0
 1066 00ac 5468     		ldr	r4, [r2, #4]
 1067              	.LVL186:
 1068 00ae 2403     		lsls	r4, r4, #12
 1069 00b0 04F48044 		and	r4, r4, #16384
 1070 00b4 2143     		orrs	r1, r1, r4
 1071              	.LVL187:
7080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Sensitivity << 12U);
 1072              		.loc 1 7080 0
 1073 00b6 9468     		ldr	r4, [r2, #8]
 1074 00b8 41EA0431 		orr	r1, r1, r4, lsl #12
 1075              	.LVL188:
7081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (all bitfields but EE3FAST bit) */
7082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1076              		.loc 1 7082 0
 1077 00bc C3F8B013 		str	r1, [r3, #944]
7083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (EE3FAST bit) */
7084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->FastMode << 12U);
 1078              		.loc 1 7084 0
ARM GAS  /tmp/ccWQyto6.s 			page 144


 1079 00c0 1369     		ldr	r3, [r2, #16]
 1080 00c2 41EA0331 		orr	r1, r1, r3, lsl #12
 1081              	.LVL189:
7085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1082              		.loc 1 7085 0
 1083 00c6 0368     		ldr	r3, [r0]
 1084 00c8 C3F8B013 		str	r1, [r3, #944]
7086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1085              		.loc 1 7087 0
 1086 00cc 9EE0     		b	.L58
 1087              	.LVL190:
 1088              	.L66:
7088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_4:
7089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 &= ~(HRTIM_EECR1_EE4SRC | HRTIM_EECR1_EE4POL | HRTIM_EECR1_EE4SNS | HRTIM_EECR1_E
 1089              		.loc 1 7090 0
 1090 00ce 26F47C06 		bic	r6, r6, #16515072
 1091              	.LVL191:
7091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Source << 18U);
 1092              		.loc 1 7091 0
 1093 00d2 1168     		ldr	r1, [r2]
 1094              	.LVL192:
 1095 00d4 46EA8141 		orr	r1, r6, r1, lsl #18
 1096              	.LVL193:
7092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= ((pEventCfg->Polarity << 18U) & (HRTIM_EECR1_EE4POL));
 1097              		.loc 1 7092 0
 1098 00d8 5468     		ldr	r4, [r2, #4]
 1099              	.LVL194:
 1100 00da A404     		lsls	r4, r4, #18
 1101 00dc 04F48014 		and	r4, r4, #1048576
 1102 00e0 2143     		orrs	r1, r1, r4
 1103              	.LVL195:
7093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Sensitivity << 18U);
 1104              		.loc 1 7093 0
 1105 00e2 9468     		ldr	r4, [r2, #8]
 1106 00e4 41EA8441 		orr	r1, r1, r4, lsl #18
 1107              	.LVL196:
7094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (all bitfields but EE4FAST bit) */
7095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1108              		.loc 1 7095 0
 1109 00e8 C3F8B013 		str	r1, [r3, #944]
7096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (EE4FAST bit) */
7097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->FastMode << 18U);
 1110              		.loc 1 7097 0
 1111 00ec 1369     		ldr	r3, [r2, #16]
 1112 00ee 41EA8341 		orr	r1, r1, r3, lsl #18
 1113              	.LVL197:
7098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1114              		.loc 1 7098 0
 1115 00f2 0368     		ldr	r3, [r0]
 1116 00f4 C3F8B013 		str	r1, [r3, #944]
7099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1117              		.loc 1 7100 0
 1118 00f8 88E0     		b	.L58
 1119              	.LVL198:
ARM GAS  /tmp/ccWQyto6.s 			page 145


 1120              	.L60:
7101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_5:
7102:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 &= ~(HRTIM_EECR1_EE5SRC | HRTIM_EECR1_EE5POL | HRTIM_EECR1_EE5SNS | HRTIM_EECR1_E
 1121              		.loc 1 7103 0
 1122 00fa 26F07C56 		bic	r6, r6, #1056964608
 1123              	.LVL199:
7104:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Source << 24U);
 1124              		.loc 1 7104 0
 1125 00fe 1168     		ldr	r1, [r2]
 1126              	.LVL200:
 1127 0100 46EA0161 		orr	r1, r6, r1, lsl #24
 1128              	.LVL201:
7105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= ((pEventCfg->Polarity << 24U) & (HRTIM_EECR1_EE5POL));
 1129              		.loc 1 7105 0
 1130 0104 5468     		ldr	r4, [r2, #4]
 1131              	.LVL202:
 1132 0106 2406     		lsls	r4, r4, #24
 1133 0108 04F08064 		and	r4, r4, #67108864
 1134 010c 2143     		orrs	r1, r1, r4
 1135              	.LVL203:
7106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->Sensitivity << 24U);
 1136              		.loc 1 7106 0
 1137 010e 9468     		ldr	r4, [r2, #8]
 1138 0110 41EA0461 		orr	r1, r1, r4, lsl #24
 1139              	.LVL204:
7107:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (all bitfields but EE5FAST bit) */
7108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1140              		.loc 1 7108 0
 1141 0114 C3F8B013 		str	r1, [r3, #944]
7109:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers (EE5FAST bit) */
7110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr1 |= (pEventCfg->FastMode << 24U);
 1142              		.loc 1 7110 0
 1143 0118 1369     		ldr	r3, [r2, #16]
 1144 011a 41EA0361 		orr	r1, r1, r3, lsl #24
 1145              	.LVL205:
7111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR1 = hrtim_eecr1;
 1146              		.loc 1 7111 0
 1147 011e 0368     		ldr	r3, [r0]
 1148 0120 C3F8B013 		str	r1, [r3, #944]
7112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7113:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1149              		.loc 1 7113 0
 1150 0124 72E0     		b	.L58
 1151              	.LVL206:
 1152              	.L69:
7114:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_6:
7115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7116:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 &= ~(HRTIM_EECR2_EE6SRC | HRTIM_EECR2_EE6POL | HRTIM_EECR2_EE6SNS);
 1153              		.loc 1 7116 0
 1154 0126 25F01F05 		bic	r5, r5, #31
 1155              	.LVL207:
7117:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= pEventCfg->Source;
 1156              		.loc 1 7117 0
 1157 012a 1168     		ldr	r1, [r2]
 1158              	.LVL208:
 1159 012c 2943     		orrs	r1, r1, r5
ARM GAS  /tmp/ccWQyto6.s 			page 146


 1160              	.LVL209:
7118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Polarity & HRTIM_EECR2_EE6POL);
 1161              		.loc 1 7118 0
 1162 012e 5668     		ldr	r6, [r2, #4]
 1163              	.LVL210:
 1164 0130 06F00406 		and	r6, r6, #4
 1165 0134 0E43     		orrs	r6, r6, r1
 1166              	.LVL211:
7119:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= pEventCfg->Sensitivity;
 1167              		.loc 1 7119 0
 1168 0136 9168     		ldr	r1, [r2, #8]
 1169 0138 3143     		orrs	r1, r1, r6
 1170              	.LVL212:
7120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 &= ~(HRTIM_EECR3_EE6F);
 1171              		.loc 1 7120 0
 1172 013a 24F00F04 		bic	r4, r4, #15
 1173              	.LVL213:
7121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 |= pEventCfg->Filter;
 1174              		.loc 1 7121 0
 1175 013e D268     		ldr	r2, [r2, #12]
 1176              	.LVL214:
 1177 0140 1443     		orrs	r4, r4, r2
 1178              	.LVL215:
7122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers */
7123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR2 = hrtim_eecr2;
 1179              		.loc 1 7123 0
 1180 0142 C3F8B413 		str	r1, [r3, #948]
7124:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR3 = hrtim_eecr3;
 1181              		.loc 1 7124 0
 1182 0146 0368     		ldr	r3, [r0]
 1183 0148 C3F8B843 		str	r4, [r3, #952]
7125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7126:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1184              		.loc 1 7126 0
 1185 014c 5EE0     		b	.L58
 1186              	.LVL216:
 1187              	.L70:
7127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_7:
7128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 &= ~(HRTIM_EECR2_EE7SRC | HRTIM_EECR2_EE7POL | HRTIM_EECR2_EE7SNS);
 1188              		.loc 1 7129 0
 1189 014e 25F4F865 		bic	r5, r5, #1984
 1190              	.LVL217:
7130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Source << 6U);
 1191              		.loc 1 7130 0
 1192 0152 1168     		ldr	r1, [r2]
 1193              	.LVL218:
 1194 0154 45EA8111 		orr	r1, r5, r1, lsl #6
 1195              	.LVL219:
7131:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= ((pEventCfg->Polarity << 6U) & (HRTIM_EECR2_EE7POL));
 1196              		.loc 1 7131 0
 1197 0158 5668     		ldr	r6, [r2, #4]
 1198              	.LVL220:
 1199 015a B501     		lsls	r5, r6, #6
 1200 015c 05F48075 		and	r5, r5, #256
 1201 0160 0D43     		orrs	r5, r5, r1
 1202              	.LVL221:
ARM GAS  /tmp/ccWQyto6.s 			page 147


7132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Sensitivity << 6U);
 1203              		.loc 1 7132 0
 1204 0162 9168     		ldr	r1, [r2, #8]
 1205 0164 45EA8111 		orr	r1, r5, r1, lsl #6
 1206              	.LVL222:
7133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 &= ~(HRTIM_EECR3_EE7F);
 1207              		.loc 1 7133 0
 1208 0168 24F47074 		bic	r4, r4, #960
 1209              	.LVL223:
7134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 |= (pEventCfg->Filter << 6U);
 1210              		.loc 1 7134 0
 1211 016c D268     		ldr	r2, [r2, #12]
 1212              	.LVL224:
 1213 016e 44EA8214 		orr	r4, r4, r2, lsl #6
 1214              	.LVL225:
7135:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers */
7136:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR2 = hrtim_eecr2;
 1215              		.loc 1 7136 0
 1216 0172 C3F8B413 		str	r1, [r3, #948]
7137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR3 = hrtim_eecr3;
 1217              		.loc 1 7137 0
 1218 0176 0368     		ldr	r3, [r0]
 1219 0178 C3F8B843 		str	r4, [r3, #952]
7138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1220              		.loc 1 7139 0
 1221 017c 46E0     		b	.L58
 1222              	.LVL226:
 1223              	.L67:
7140:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_8:
7141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 &= ~(HRTIM_EECR2_EE8SRC | HRTIM_EECR2_EE8POL | HRTIM_EECR2_EE8SNS);
 1224              		.loc 1 7142 0
 1225 017e 25F4F835 		bic	r5, r5, #126976
 1226              	.LVL227:
7143:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Source << 12U);
 1227              		.loc 1 7143 0
 1228 0182 1168     		ldr	r1, [r2]
 1229              	.LVL228:
 1230 0184 45EA0131 		orr	r1, r5, r1, lsl #12
 1231              	.LVL229:
7144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= ((pEventCfg->Polarity << 12U) & (HRTIM_EECR2_EE8POL));
 1232              		.loc 1 7144 0
 1233 0188 5668     		ldr	r6, [r2, #4]
 1234              	.LVL230:
 1235 018a 3503     		lsls	r5, r6, #12
 1236 018c 05F48045 		and	r5, r5, #16384
 1237 0190 0D43     		orrs	r5, r5, r1
 1238              	.LVL231:
7145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Sensitivity << 12U);
 1239              		.loc 1 7145 0
 1240 0192 9168     		ldr	r1, [r2, #8]
 1241 0194 45EA0131 		orr	r1, r5, r1, lsl #12
 1242              	.LVL232:
7146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 &= ~(HRTIM_EECR3_EE8F);
 1243              		.loc 1 7146 0
 1244 0198 24F47044 		bic	r4, r4, #61440
ARM GAS  /tmp/ccWQyto6.s 			page 148


 1245              	.LVL233:
7147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 |= (pEventCfg->Filter << 12U);
 1246              		.loc 1 7147 0
 1247 019c D268     		ldr	r2, [r2, #12]
 1248              	.LVL234:
 1249 019e 44EA0234 		orr	r4, r4, r2, lsl #12
 1250              	.LVL235:
7148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers */
7149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR2 = hrtim_eecr2;
 1251              		.loc 1 7149 0
 1252 01a2 C3F8B413 		str	r1, [r3, #948]
7150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR3 = hrtim_eecr3;
 1253              		.loc 1 7150 0
 1254 01a6 0368     		ldr	r3, [r0]
 1255 01a8 C3F8B843 		str	r4, [r3, #952]
7151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1256              		.loc 1 7152 0
 1257 01ac 2EE0     		b	.L58
 1258              	.LVL236:
 1259              	.L71:
7153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_9:
7154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 &= ~(HRTIM_EECR2_EE9SRC | HRTIM_EECR2_EE9POL | HRTIM_EECR2_EE9SNS);
 1260              		.loc 1 7155 0
 1261 01ae 25F4F805 		bic	r5, r5, #8126464
 1262              	.LVL237:
7156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Source << 18U);
 1263              		.loc 1 7156 0
 1264 01b2 1168     		ldr	r1, [r2]
 1265              	.LVL238:
 1266 01b4 45EA8141 		orr	r1, r5, r1, lsl #18
 1267              	.LVL239:
7157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= ((pEventCfg->Polarity << 18U) & (HRTIM_EECR2_EE9POL));
 1268              		.loc 1 7157 0
 1269 01b8 5668     		ldr	r6, [r2, #4]
 1270              	.LVL240:
 1271 01ba B504     		lsls	r5, r6, #18
 1272 01bc 05F48015 		and	r5, r5, #1048576
 1273 01c0 0D43     		orrs	r5, r5, r1
 1274              	.LVL241:
7158:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Sensitivity << 18U);
 1275              		.loc 1 7158 0
 1276 01c2 9168     		ldr	r1, [r2, #8]
 1277 01c4 45EA8141 		orr	r1, r5, r1, lsl #18
 1278              	.LVL242:
7159:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 &= ~(HRTIM_EECR3_EE9F);
 1279              		.loc 1 7159 0
 1280 01c8 24F47014 		bic	r4, r4, #3932160
 1281              	.LVL243:
7160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 |= (pEventCfg->Filter << 18U);
 1282              		.loc 1 7160 0
 1283 01cc D268     		ldr	r2, [r2, #12]
 1284              	.LVL244:
 1285 01ce 44EA8244 		orr	r4, r4, r2, lsl #18
 1286              	.LVL245:
7161:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers */
ARM GAS  /tmp/ccWQyto6.s 			page 149


7162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR2 = hrtim_eecr2;
 1287              		.loc 1 7162 0
 1288 01d2 C3F8B413 		str	r1, [r3, #948]
7163:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR3 = hrtim_eecr3;
 1289              		.loc 1 7163 0
 1290 01d6 0368     		ldr	r3, [r0]
 1291 01d8 C3F8B843 		str	r4, [r3, #952]
7164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1292              		.loc 1 7165 0
 1293 01dc 16E0     		b	.L58
 1294              	.LVL246:
 1295              	.L72:
7166:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_10:
7167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 &= ~(HRTIM_EECR2_EE10SRC | HRTIM_EECR2_EE10POL | HRTIM_EECR2_EE10SNS);
 1296              		.loc 1 7168 0
 1297 01de 25F0F855 		bic	r5, r5, #520093696
 1298              	.LVL247:
7169:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Source << 24U);
 1299              		.loc 1 7169 0
 1300 01e2 1168     		ldr	r1, [r2]
 1301              	.LVL248:
 1302 01e4 45EA0161 		orr	r1, r5, r1, lsl #24
 1303              	.LVL249:
7170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= ((pEventCfg->Polarity << 24U) & (HRTIM_EECR2_EE10POL));
 1304              		.loc 1 7170 0
 1305 01e8 5668     		ldr	r6, [r2, #4]
 1306              	.LVL250:
 1307 01ea 3506     		lsls	r5, r6, #24
 1308 01ec 05F08065 		and	r5, r5, #67108864
 1309 01f0 0D43     		orrs	r5, r5, r1
 1310              	.LVL251:
7171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr2 |= (pEventCfg->Sensitivity << 24U);
 1311              		.loc 1 7171 0
 1312 01f2 9168     		ldr	r1, [r2, #8]
 1313 01f4 45EA0161 		orr	r1, r5, r1, lsl #24
 1314              	.LVL252:
7172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 &= ~(HRTIM_EECR3_EE10F);
 1315              		.loc 1 7172 0
 1316 01f8 24F07064 		bic	r4, r4, #251658240
 1317              	.LVL253:
7173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eecr3 |= (pEventCfg->Filter << 24U);
 1318              		.loc 1 7173 0
 1319 01fc D268     		ldr	r2, [r2, #12]
 1320              	.LVL254:
 1321 01fe 44EA0264 		orr	r4, r4, r2, lsl #24
 1322              	.LVL255:
7174:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Update the HRTIM registers */
7175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR2 = hrtim_eecr2;
 1323              		.loc 1 7175 0
 1324 0202 C3F8B413 		str	r1, [r3, #948]
7176:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.EECR3 = hrtim_eecr3;
 1325              		.loc 1 7176 0
 1326 0206 0368     		ldr	r3, [r0]
 1327 0208 C3F8B843 		str	r4, [r3, #952]
 1328              	.LVL256:
ARM GAS  /tmp/ccWQyto6.s 			page 150


 1329              	.L58:
7177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7178:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
7180:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7182:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 1330              		.loc 1 7182 0
 1331 020c 70BC     		pop	{r4, r5, r6}
 1332 020e 7047     		bx	lr
 1333              		.cfi_endproc
 1334              	.LFE236:
 1336              		.section	.text.HRTIM_TIM_ResetConfig,"ax",%progbits
 1337              		.align	2
 1338              		.thumb
 1339              		.thumb_func
 1341              	HRTIM_TIM_ResetConfig:
 1342              	.LFB237:
7183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7185:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Configures the timer counter reset 
7186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
7187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
7188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  Event: Event channel identifier
7189:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
7190:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_TIM_ResetConfig(HRTIM_HandleTypeDef * hhrtim,
7192:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                   uint32_t TimerIdx,
7193:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                   uint32_t Event)
7194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 1343              		.loc 1 7194 0
 1344              		.cfi_startproc
 1345              		@ args = 0, pretend = 0, frame = 0
 1346              		@ frame_needed = 0, uses_anonymous_args = 0
 1347              		@ link register save eliminated.
 1348              	.LVL257:
7195:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Event)
 1349              		.loc 1 7195 0
 1350 0000 102A     		cmp	r2, #16
 1351 0002 3AD0     		beq	.L75
 1352 0004 0AD8     		bhi	.L76
 1353 0006 022A     		cmp	r2, #2
 1354 0008 1FD0     		beq	.L77
 1355 000a 02D8     		bhi	.L78
 1356 000c 012A     		cmp	r2, #1
 1357 000e 14D0     		beq	.L79
 1358 0010 7047     		bx	lr
 1359              	.L78:
 1360 0012 042A     		cmp	r2, #4
 1361 0014 21D0     		beq	.L80
 1362 0016 082A     		cmp	r2, #8
 1363 0018 27D0     		beq	.L81
 1364 001a 7047     		bx	lr
 1365              	.L76:
 1366 001c 802A     		cmp	r2, #128
 1367 001e 44D0     		beq	.L82
 1368 0020 04D8     		bhi	.L83
ARM GAS  /tmp/ccWQyto6.s 			page 151


 1369 0022 202A     		cmp	r2, #32
 1370 0024 31D0     		beq	.L84
 1371 0026 402A     		cmp	r2, #64
 1372 0028 37D0     		beq	.L85
 1373 002a 7047     		bx	lr
 1374              	.L83:
 1375 002c B2F5807F 		cmp	r2, #256
 1376 0030 43D0     		beq	.L86
 1377 0032 B2F5007F 		cmp	r2, #512
 1378 0036 48D0     		beq	.L87
 1379 0038 7047     		bx	lr
 1380              	.L79:
7196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_1:
7198:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7199:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_1;
 1381              		.loc 1 7199 0
 1382 003a 0368     		ldr	r3, [r0]
 1383 003c 03EBC111 		add	r1, r3, r1, lsl #7
 1384              	.LVL258:
 1385 0040 4FF40073 		mov	r3, #512
 1386 0044 C1F8D430 		str	r3, [r1, #212]
7200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1387              		.loc 1 7201 0
 1388 0048 7047     		bx	lr
 1389              	.LVL259:
 1390              	.L77:
7202:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_2:
7203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7204:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_2;
 1391              		.loc 1 7204 0
 1392 004a 0368     		ldr	r3, [r0]
 1393 004c 03EBC111 		add	r1, r3, r1, lsl #7
 1394              	.LVL260:
 1395 0050 4FF48063 		mov	r3, #1024
 1396 0054 C1F8D430 		str	r3, [r1, #212]
7205:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1397              		.loc 1 7206 0
 1398 0058 7047     		bx	lr
 1399              	.LVL261:
 1400              	.L80:
7207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_3:
7208:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_3;
 1401              		.loc 1 7209 0
 1402 005a 0368     		ldr	r3, [r0]
 1403 005c 03EBC111 		add	r1, r3, r1, lsl #7
 1404              	.LVL262:
 1405 0060 4FF40063 		mov	r3, #2048
 1406 0064 C1F8D430 		str	r3, [r1, #212]
7210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7211:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1407              		.loc 1 7211 0
 1408 0068 7047     		bx	lr
 1409              	.LVL263:
ARM GAS  /tmp/ccWQyto6.s 			page 152


 1410              	.L81:
7212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_4:
7213:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_4;
 1411              		.loc 1 7214 0
 1412 006a 0368     		ldr	r3, [r0]
 1413 006c 03EBC111 		add	r1, r3, r1, lsl #7
 1414              	.LVL264:
 1415 0070 4FF48053 		mov	r3, #4096
 1416 0074 C1F8D430 		str	r3, [r1, #212]
7215:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1417              		.loc 1 7216 0
 1418 0078 7047     		bx	lr
 1419              	.LVL265:
 1420              	.L75:
7217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_5:
7218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7219:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_5;
 1421              		.loc 1 7219 0
 1422 007a 0368     		ldr	r3, [r0]
 1423 007c 03EBC111 		add	r1, r3, r1, lsl #7
 1424              	.LVL266:
 1425 0080 4FF40053 		mov	r3, #8192
 1426 0084 C1F8D430 		str	r3, [r1, #212]
7220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1427              		.loc 1 7221 0
 1428 0088 7047     		bx	lr
 1429              	.LVL267:
 1430              	.L84:
7222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_6:
7223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_6;
 1431              		.loc 1 7224 0
 1432 008a 0368     		ldr	r3, [r0]
 1433 008c 03EBC111 		add	r1, r3, r1, lsl #7
 1434              	.LVL268:
 1435 0090 4FF48043 		mov	r3, #16384
 1436 0094 C1F8D430 		str	r3, [r1, #212]
7225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7226:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1437              		.loc 1 7226 0
 1438 0098 7047     		bx	lr
 1439              	.LVL269:
 1440              	.L85:
7227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_7:
7228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_7;
 1441              		.loc 1 7229 0
 1442 009a 0368     		ldr	r3, [r0]
 1443 009c 03EBC111 		add	r1, r3, r1, lsl #7
 1444              	.LVL270:
 1445 00a0 4FF40043 		mov	r3, #32768
 1446 00a4 C1F8D430 		str	r3, [r1, #212]
7230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 153


 1447              		.loc 1 7231 0
 1448 00a8 7047     		bx	lr
 1449              	.LVL271:
 1450              	.L82:
7232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_8:
7233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_8;
 1451              		.loc 1 7234 0
 1452 00aa 0368     		ldr	r3, [r0]
 1453 00ac 03EBC111 		add	r1, r3, r1, lsl #7
 1454              	.LVL272:
 1455 00b0 4FF48033 		mov	r3, #65536
 1456 00b4 C1F8D430 		str	r3, [r1, #212]
7235:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1457              		.loc 1 7236 0
 1458 00b8 7047     		bx	lr
 1459              	.LVL273:
 1460              	.L86:
7237:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_9:
7238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_9;
 1461              		.loc 1 7239 0
 1462 00ba 0368     		ldr	r3, [r0]
 1463 00bc 03EBC111 		add	r1, r3, r1, lsl #7
 1464              	.LVL274:
 1465 00c0 4FF40033 		mov	r3, #131072
 1466 00c4 C1F8D430 		str	r3, [r1, #212]
7240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1467              		.loc 1 7241 0
 1468 00c8 7047     		bx	lr
 1469              	.LVL275:
 1470              	.L87:
7242:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_EVENT_10:
7243:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].RSTxR = HRTIM_TIMRESETTRIGGER_EEV_10;
 1471              		.loc 1 7244 0
 1472 00ca 0368     		ldr	r3, [r0]
 1473 00cc 03EBC111 		add	r1, r3, r1, lsl #7
 1474              	.LVL276:
 1475 00d0 4FF48023 		mov	r3, #262144
 1476 00d4 C1F8D430 		str	r3, [r1, #212]
 1477 00d8 7047     		bx	lr
 1478              		.cfi_endproc
 1479              	.LFE237:
 1481 00da 00BF     		.section	.text.HRTIM_GetITFromOCMode,"ax",%progbits
 1482              		.align	2
 1483              		.thumb
 1484              		.thumb_func
 1486              	HRTIM_GetITFromOCMode:
 1487              	.LFB238:
7245:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
7248:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
ARM GAS  /tmp/ccWQyto6.s 			page 154


7250:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
7251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7252:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Returns the interrupt to enable or disable according to the
7254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         OC mode.
7255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
7256:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
7257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
7258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
7259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
7260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
7261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
7262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
7263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
7264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
7265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
7266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
7267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
7268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
7269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval Interrupt to enable or disable
7270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7271:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static uint32_t HRTIM_GetITFromOCMode(HRTIM_HandleTypeDef * hhrtim,
7272:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       uint32_t TimerIdx,
7273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                       uint32_t OCChannel)
7274:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 1488              		.loc 1 7274 0
 1489              		.cfi_startproc
 1490              		@ args = 0, pretend = 0, frame = 0
 1491              		@ frame_needed = 0, uses_anonymous_args = 0
 1492              		@ link register save eliminated.
 1493              	.LVL277:
7275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_set;
7276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_reset;
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t interrupt = 0U;
7278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OCChannel)
 1494              		.loc 1 7279 0
 1495 0000 102A     		cmp	r2, #16
 1496 0002 1AD0     		beq	.L90
 1497 0004 0AD8     		bhi	.L91
 1498 0006 022A     		cmp	r2, #2
 1499 0008 2CD0     		beq	.L92
 1500 000a 02D8     		bhi	.L93
 1501 000c 012A     		cmp	r2, #1
 1502 000e 3ED1     		bne	.L99
 1503 0010 13E0     		b	.L90
 1504              	.L93:
 1505 0012 042A     		cmp	r2, #4
 1506 0014 11D0     		beq	.L90
 1507 0016 082A     		cmp	r2, #8
 1508 0018 39D1     		bne	.L99
 1509 001a 23E0     		b	.L92
 1510              	.L91:
 1511 001c 802A     		cmp	r2, #128
 1512 001e 21D0     		beq	.L92
 1513 0020 04D8     		bhi	.L94
 1514 0022 202A     		cmp	r2, #32
ARM GAS  /tmp/ccWQyto6.s 			page 155


 1515 0024 1ED0     		beq	.L92
 1516 0026 402A     		cmp	r2, #64
 1517 0028 31D1     		bne	.L99
 1518 002a 06E0     		b	.L90
 1519              	.L94:
 1520 002c B2F5807F 		cmp	r2, #256
 1521 0030 03D0     		beq	.L90
 1522 0032 B2F5007F 		cmp	r2, #512
 1523 0036 2AD1     		bne	.L99
 1524 0038 14E0     		b	.L92
 1525              	.L90:
7280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
7282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
7283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
7284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
7285:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
7286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Retreives actual OC mode and set interrupt accordingly */
7288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_set = hhrtim->Instance->sTimerxRegs[TimerIdx].SETx1R;
 1526              		.loc 1 7288 0
 1527 003a 0368     		ldr	r3, [r0]
 1528 003c 03EBC111 		add	r1, r3, r1, lsl #7
 1529              	.LVL278:
 1530 0040 D1F8BC30 		ldr	r3, [r1, #188]
 1531              	.LVL279:
7289:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_reset = hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx1R;
 1532              		.loc 1 7289 0
 1533 0044 D1F8C020 		ldr	r2, [r1, #192]
 1534              	.LVL280:
7290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7291:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1) &&
 1535              		.loc 1 7291 0
 1536 0048 13F00801 		ands	r1, r3, #8
 1537 004c 02D0     		beq	.L95
 1538              		.loc 1 7291 0 is_stmt 0 discriminator 1
 1539 004e 12F0080F 		tst	r2, #8
 1540 0052 1ED1     		bne	.L100
 1541              	.L95:
7292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1))
7293:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* OC mode: HRTIM_BASICOCMODE_TOGGLE */
7295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_CMP1;
7296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7297:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1) &&
 1542              		.loc 1 7297 0 is_stmt 1
 1543 0054 01B1     		cbz	r1, .L96
 1544              		.loc 1 7297 0 is_stmt 0 discriminator 1
 1545 0056 F2B1     		cbz	r2, .L101
 1546              	.L96:
7298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                (hrtim_reset  == 0U))
7299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_ACTIVE */
7301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_SET1;
7302:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7303:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if ((hrtim_set == 0U) &&
 1547              		.loc 1 7303 0 is_stmt 1
ARM GAS  /tmp/ccWQyto6.s 			page 156


 1548 0058 03BB     		cbnz	r3, .L102
 1549              		.loc 1 7303 0 is_stmt 0 discriminator 1
 1550 005a 12F0080F 		tst	r2, #8
 1551 005e 1FD1     		bne	.L103
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t interrupt = 0U;
 1552              		.loc 1 7277 0 is_stmt 1
 1553 0060 0020     		movs	r0, #0
 1554              	.LVL281:
 1555 0062 7047     		bx	lr
 1556              	.LVL282:
 1557              	.L92:
7304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1))
7305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_INACTIVE */
7307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_RST1;
7308:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
7312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
7313:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
7314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
7315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
7316:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Retreives actual OC mode and set interrupt accordingly */
7318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_set = hhrtim->Instance->sTimerxRegs[TimerIdx].SETx2R;
 1558              		.loc 1 7318 0
 1559 0064 0368     		ldr	r3, [r0]
 1560 0066 03EBC111 		add	r1, r3, r1, lsl #7
 1561              	.LVL283:
 1562 006a D1F8C430 		ldr	r3, [r1, #196]
 1563              	.LVL284:
7319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_reset = hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx2R;
 1564              		.loc 1 7319 0
 1565 006e D1F8C820 		ldr	r2, [r1, #200]
 1566              	.LVL285:
7320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2) &&
 1567              		.loc 1 7321 0
 1568 0072 13F01001 		ands	r1, r3, #16
 1569 0076 02D0     		beq	.L97
 1570              		.loc 1 7321 0 is_stmt 0 discriminator 1
 1571 0078 12F0100F 		tst	r2, #16
 1572 007c 13D1     		bne	.L104
 1573              	.L97:
7322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2))
7323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7324:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* OC mode: HRTIM_BASICOCMODE_TOGGLE */
7325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_CMP2;
7326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2) &&
 1574              		.loc 1 7327 0 is_stmt 1
 1575 007e 01B1     		cbz	r1, .L98
 1576              		.loc 1 7327 0 is_stmt 0 discriminator 1
 1577 0080 9AB1     		cbz	r2, .L105
 1578              	.L98:
7328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                (hrtim_reset  == 0U))
ARM GAS  /tmp/ccWQyto6.s 			page 157


7329:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_ACTIVE */
7331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_SET2;
7332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if ((hrtim_set == 0U) &&
 1579              		.loc 1 7333 0 is_stmt 1
 1580 0082 ABB9     		cbnz	r3, .L106
 1581              		.loc 1 7333 0 is_stmt 0 discriminator 1
 1582 0084 12F0100F 		tst	r2, #16
 1583 0088 14D1     		bne	.L107
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t interrupt = 0U;
 1584              		.loc 1 7277 0 is_stmt 1
 1585 008a 0020     		movs	r0, #0
 1586              	.LVL286:
 1587 008c 7047     		bx	lr
 1588              	.LVL287:
 1589              	.L99:
 1590 008e 0020     		movs	r0, #0
 1591              	.LVL288:
 1592 0090 7047     		bx	lr
 1593              	.LVL289:
 1594              	.L100:
7295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_CMP1;
 1595              		.loc 1 7295 0
 1596 0092 0120     		movs	r0, #1
 1597              	.LVL290:
 1598 0094 7047     		bx	lr
 1599              	.LVL291:
 1600              	.L101:
7301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_SET1;
 1601              		.loc 1 7301 0
 1602 0096 4FF40070 		mov	r0, #512
 1603              	.LVL292:
 1604 009a 7047     		bx	lr
 1605              	.LVL293:
 1606              	.L102:
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t interrupt = 0U;
 1607              		.loc 1 7277 0
 1608 009c 0020     		movs	r0, #0
 1609              	.LVL294:
 1610 009e 7047     		bx	lr
 1611              	.LVL295:
 1612              	.L103:
7307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_RST1;
 1613              		.loc 1 7307 0
 1614 00a0 4FF48060 		mov	r0, #1024
 1615              	.LVL296:
 1616 00a4 7047     		bx	lr
 1617              	.LVL297:
 1618              	.L104:
7325:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_CMP2;
 1619              		.loc 1 7325 0
 1620 00a6 0220     		movs	r0, #2
 1621              	.LVL298:
 1622 00a8 7047     		bx	lr
 1623              	.LVL299:
 1624              	.L105:
ARM GAS  /tmp/ccWQyto6.s 			page 158


7331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_SET2;
 1625              		.loc 1 7331 0
 1626 00aa 4FF40060 		mov	r0, #2048
 1627              	.LVL300:
 1628 00ae 7047     		bx	lr
 1629              	.LVL301:
 1630              	.L106:
7277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t interrupt = 0U;
 1631              		.loc 1 7277 0
 1632 00b0 0020     		movs	r0, #0
 1633              	.LVL302:
 1634 00b2 7047     		bx	lr
 1635              	.LVL303:
 1636              	.L107:
7334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2))
7335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_INACTIVE */
7337:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         interrupt = HRTIM_TIM_IT_RST2;
 1637              		.loc 1 7337 0
 1638 00b4 4FF48050 		mov	r0, #4096
 1639              	.LVL304:
7338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7339:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7340:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
7342:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7343:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return interrupt;
7346:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 1640              		.loc 1 7346 0
 1641 00b8 7047     		bx	lr
 1642              		.cfi_endproc
 1643              	.LFE238:
 1645 00ba 00BF     		.section	.text.HRTIM_GetDMAFromOCMode,"ax",%progbits
 1646              		.align	2
 1647              		.thumb
 1648              		.thumb_func
 1650              	HRTIM_GetDMAFromOCMode:
 1651              	.LFB239:
7347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Returns the DMA request to enable or disable according to the
7350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         OC mode.
7351:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
7352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
7353:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  OCChannel: Timer output
7354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    This parameter can be one of the following values:
7355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA1: Timer A - Output 1
7356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TA2: Timer A - Output 2
7357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB1: Timer B - Output 1
7358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TB2: Timer B - Output 2
7359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC1: Timer C - Output 1
7360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TC2: Timer C - Output 2
7361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD1: Timer D - Output 1
7362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TD2: Timer D - Output 2
7363:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE1: Timer E - Output 1
ARM GAS  /tmp/ccWQyto6.s 			page 159


7364:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                    @arg HRTIM_OUTPUT_TE2: Timer E - Output 2
7365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval DMA request to enable or disable
7366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static uint32_t HRTIM_GetDMAFromOCMode(HRTIM_HandleTypeDef * hhrtim,
7368:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                        uint32_t TimerIdx,
7369:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                        uint32_t OCChannel)
7370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 1652              		.loc 1 7370 0
 1653              		.cfi_startproc
 1654              		@ args = 0, pretend = 0, frame = 0
 1655              		@ frame_needed = 0, uses_anonymous_args = 0
 1656              		@ link register save eliminated.
 1657              	.LVL305:
7371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_set;
7372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t hrtim_reset;
7373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t dma_request = 0U;
7374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OCChannel)
 1658              		.loc 1 7375 0
 1659 0000 102A     		cmp	r2, #16
 1660 0002 1AD0     		beq	.L110
 1661 0004 0AD8     		bhi	.L111
 1662 0006 022A     		cmp	r2, #2
 1663 0008 2CD0     		beq	.L112
 1664 000a 02D8     		bhi	.L113
 1665 000c 012A     		cmp	r2, #1
 1666 000e 3ED1     		bne	.L119
 1667 0010 13E0     		b	.L110
 1668              	.L113:
 1669 0012 042A     		cmp	r2, #4
 1670 0014 11D0     		beq	.L110
 1671 0016 082A     		cmp	r2, #8
 1672 0018 39D1     		bne	.L119
 1673 001a 23E0     		b	.L112
 1674              	.L111:
 1675 001c 802A     		cmp	r2, #128
 1676 001e 21D0     		beq	.L112
 1677 0020 04D8     		bhi	.L114
 1678 0022 202A     		cmp	r2, #32
 1679 0024 1ED0     		beq	.L112
 1680 0026 402A     		cmp	r2, #64
 1681 0028 31D1     		bne	.L119
 1682 002a 06E0     		b	.L110
 1683              	.L114:
 1684 002c B2F5807F 		cmp	r2, #256
 1685 0030 03D0     		beq	.L110
 1686 0032 B2F5007F 		cmp	r2, #512
 1687 0036 2AD1     		bne	.L119
 1688 0038 14E0     		b	.L112
 1689              	.L110:
7376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA1:
7378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB1:
7379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC1:
7380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD1:
7381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE1:
7382:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
ARM GAS  /tmp/ccWQyto6.s 			page 160


7383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Retreives actual OC mode and set dma_request accordingly */
7384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_set = hhrtim->Instance->sTimerxRegs[TimerIdx].SETx1R;
 1690              		.loc 1 7384 0
 1691 003a 0368     		ldr	r3, [r0]
 1692 003c 03EBC111 		add	r1, r3, r1, lsl #7
 1693              	.LVL306:
 1694 0040 D1F8BC30 		ldr	r3, [r1, #188]
 1695              	.LVL307:
7385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_reset = hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx1R;
 1696              		.loc 1 7385 0
 1697 0044 D1F8C020 		ldr	r2, [r1, #192]
 1698              	.LVL308:
7386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1) &&
 1699              		.loc 1 7387 0
 1700 0048 13F00801 		ands	r1, r3, #8
 1701 004c 02D0     		beq	.L115
 1702              		.loc 1 7387 0 is_stmt 0 discriminator 1
 1703 004e 12F0080F 		tst	r2, #8
 1704 0052 1ED1     		bne	.L120
 1705              	.L115:
7388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1))
7389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7390:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* OC mode: HRTIM_BASICOCMODE_TOGGLE */
7391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_CMP1;
7392:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1) &&
 1706              		.loc 1 7393 0 is_stmt 1
 1707 0054 01B1     		cbz	r1, .L116
 1708              		.loc 1 7393 0 is_stmt 0 discriminator 1
 1709 0056 FAB1     		cbz	r2, .L121
 1710              	.L116:
7394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                (hrtim_reset  == 0U))
7395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7396:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_ACTIVE */
7397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_SET1;
7398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7399:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if ((hrtim_set == 0U) &&
 1711              		.loc 1 7399 0 is_stmt 1
 1712 0058 0BBB     		cbnz	r3, .L122
 1713              		.loc 1 7399 0 is_stmt 0 discriminator 1
 1714 005a 12F0080F 		tst	r2, #8
 1715 005e 20D1     		bne	.L123
7373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t dma_request = 0U;
 1716              		.loc 1 7373 0 is_stmt 1
 1717 0060 0020     		movs	r0, #0
 1718              	.LVL309:
 1719 0062 7047     		bx	lr
 1720              	.LVL310:
 1721              	.L112:
7400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP1) == HRTIM_OUTPUTSET_TIMCMP1))
7401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_INACTIVE */
7403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_RST1;
7404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 161


7407:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TA2:
7408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TB2:
7409:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TC2:
7410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TD2:
7411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_OUTPUT_TE2:
7412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7413:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Retreives actual OC mode and set dma_request accordingly */
7414:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_set = hhrtim->Instance->sTimerxRegs[TimerIdx].SETx2R;
 1722              		.loc 1 7414 0
 1723 0064 0368     		ldr	r3, [r0]
 1724 0066 03EBC111 		add	r1, r3, r1, lsl #7
 1725              	.LVL311:
 1726 006a D1F8C430 		ldr	r3, [r1, #196]
 1727              	.LVL312:
7415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_reset = hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx2R;
 1728              		.loc 1 7415 0
 1729 006e D1F8C820 		ldr	r2, [r1, #200]
 1730              	.LVL313:
7416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2) &&
 1731              		.loc 1 7417 0
 1732 0072 13F01001 		ands	r1, r3, #16
 1733 0076 02D0     		beq	.L117
 1734              		.loc 1 7417 0 is_stmt 0 discriminator 1
 1735 0078 12F0100F 		tst	r2, #16
 1736 007c 14D1     		bne	.L124
 1737              	.L117:
7418:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2))
7419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         /* OC mode: HRTIM_BASICOCMODE_TOGGLE */
7421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_CMP2;
7422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7423:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if (((hrtim_set & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2) &&
 1738              		.loc 1 7423 0 is_stmt 1
 1739 007e 01B1     		cbz	r1, .L118
 1740              		.loc 1 7423 0 is_stmt 0 discriminator 1
 1741 0080 AAB1     		cbz	r2, .L125
 1742              	.L118:
7424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                (hrtim_reset  == 0U))
7425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7426:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_ACTIVE */
7427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_SET2;
7428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       else if ((hrtim_set == 0U) &&
 1743              		.loc 1 7429 0 is_stmt 1
 1744 0082 BBB9     		cbnz	r3, .L126
 1745              		.loc 1 7429 0 is_stmt 0 discriminator 1
 1746 0084 12F0100F 		tst	r2, #16
 1747 0088 16D1     		bne	.L127
7373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t dma_request = 0U;
 1748              		.loc 1 7373 0 is_stmt 1
 1749 008a 0020     		movs	r0, #0
 1750              	.LVL314:
 1751 008c 7047     		bx	lr
 1752              	.LVL315:
 1753              	.L119:
 1754 008e 0020     		movs	r0, #0
ARM GAS  /tmp/ccWQyto6.s 			page 162


 1755              	.LVL316:
 1756 0090 7047     		bx	lr
 1757              	.LVL317:
 1758              	.L120:
7391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_CMP1;
 1759              		.loc 1 7391 0
 1760 0092 4FF48030 		mov	r0, #65536
 1761              	.LVL318:
 1762 0096 7047     		bx	lr
 1763              	.LVL319:
 1764              	.L121:
7397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_SET1;
 1765              		.loc 1 7397 0
 1766 0098 4FF00070 		mov	r0, #33554432
 1767              	.LVL320:
 1768 009c 7047     		bx	lr
 1769              	.LVL321:
 1770              	.L122:
7373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t dma_request = 0U;
 1771              		.loc 1 7373 0
 1772 009e 0020     		movs	r0, #0
 1773              	.LVL322:
 1774 00a0 7047     		bx	lr
 1775              	.LVL323:
 1776              	.L123:
7403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_RST1;
 1777              		.loc 1 7403 0
 1778 00a2 4FF08060 		mov	r0, #67108864
 1779              	.LVL324:
 1780 00a6 7047     		bx	lr
 1781              	.LVL325:
 1782              	.L124:
7421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_CMP2;
 1783              		.loc 1 7421 0
 1784 00a8 4FF40030 		mov	r0, #131072
 1785              	.LVL326:
 1786 00ac 7047     		bx	lr
 1787              	.LVL327:
 1788              	.L125:
7427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_SET2;
 1789              		.loc 1 7427 0
 1790 00ae 4FF00060 		mov	r0, #134217728
 1791              	.LVL328:
 1792 00b2 7047     		bx	lr
 1793              	.LVL329:
 1794              	.L126:
7373:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t dma_request = 0U;
 1795              		.loc 1 7373 0
 1796 00b4 0020     		movs	r0, #0
 1797              	.LVL330:
 1798 00b6 7047     		bx	lr
 1799              	.LVL331:
 1800              	.L127:
7430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                ((hrtim_reset & HRTIM_OUTPUTSET_TIMCMP2) == HRTIM_OUTPUTSET_TIMCMP2))
7431:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       {
7432:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          /* OC mode: HRTIM_BASICOCMODE_INACTIVE */
7433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         dma_request = HRTIM_TIM_DMA_RST2;
ARM GAS  /tmp/ccWQyto6.s 			page 163


 1801              		.loc 1 7433 0
 1802 00b8 4FF08050 		mov	r0, #268435456
 1803              	.LVL332:
7434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       }
7435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7437:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
7438:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return dma_request;
7442:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 1804              		.loc 1 7442 0
 1805 00bc 7047     		bx	lr
 1806              		.cfi_endproc
 1807              	.LFE239:
 1809 00be 00BF     		.section	.text.HRTIM_GetDMAHandleFromTimerIdx,"ax",%progbits
 1810              		.align	2
 1811              		.thumb
 1812              		.thumb_func
 1814              	HRTIM_GetDMAHandleFromTimerIdx:
 1815              	.LFB240:
7443:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static DMA_HandleTypeDef * HRTIM_GetDMAHandleFromTimerIdx(HRTIM_HandleTypeDef * hhrtim,
7445:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                                           uint32_t TimerIdx)
7446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 1816              		.loc 1 7446 0
 1817              		.cfi_startproc
 1818              		@ args = 0, pretend = 0, frame = 0
 1819              		@ frame_needed = 0, uses_anonymous_args = 0
 1820              		@ link register save eliminated.
 1821              	.LVL333:
7447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma = (DMA_HandleTypeDef *)NULL;
7448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (TimerIdx)
 1822              		.loc 1 7449 0
 1823 0000 0529     		cmp	r1, #5
 1824 0002 16D8     		bhi	.L137
 1825 0004 DFE801F0 		tbb	[pc, r1]
 1826              	.L131:
 1827 0008 06       		.byte	(.L130-.L131)/2
 1828 0009 09       		.byte	(.L132-.L131)/2
 1829 000a 0C       		.byte	(.L133-.L131)/2
 1830 000b 0F       		.byte	(.L134-.L131)/2
 1831 000c 12       		.byte	(.L135-.L131)/2
 1832 000d 03       		.byte	(.L136-.L131)/2
 1833              		.p2align 1
 1834              	.L136:
7450:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_MASTER:
7452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = hhrtim->hdmaMaster;
 1835              		.loc 1 7453 0
 1836 000e D0F8C400 		ldr	r0, [r0, #196]
 1837              	.LVL334:
7454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 164


 1838              		.loc 1 7455 0
 1839 0012 7047     		bx	lr
 1840              	.LVL335:
 1841              	.L130:
7456:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_A:
7457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = hhrtim->hdmaTimerA;
 1842              		.loc 1 7458 0
 1843 0014 D0F8C800 		ldr	r0, [r0, #200]
 1844              	.LVL336:
7459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1845              		.loc 1 7460 0
 1846 0018 7047     		bx	lr
 1847              	.LVL337:
 1848              	.L132:
7461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_B:
7462:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = hhrtim->hdmaTimerB;
 1849              		.loc 1 7463 0
 1850 001a D0F8CC00 		ldr	r0, [r0, #204]
 1851              	.LVL338:
7464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1852              		.loc 1 7465 0
 1853 001e 7047     		bx	lr
 1854              	.LVL339:
 1855              	.L133:
7466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_C:
7467:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = hhrtim->hdmaTimerC;
 1856              		.loc 1 7468 0
 1857 0020 D0F8D000 		ldr	r0, [r0, #208]
 1858              	.LVL340:
7469:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1859              		.loc 1 7470 0
 1860 0024 7047     		bx	lr
 1861              	.LVL341:
 1862              	.L134:
7471:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_D:
7472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = hhrtim->hdmaTimerD;
 1863              		.loc 1 7473 0
 1864 0026 D0F8D400 		ldr	r0, [r0, #212]
 1865              	.LVL342:
7474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7475:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1866              		.loc 1 7475 0
 1867 002a 7047     		bx	lr
 1868              	.LVL343:
 1869              	.L135:
7476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_E:
7477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = hhrtim->hdmaTimerE;
 1870              		.loc 1 7478 0
 1871 002c D0F8D800 		ldr	r0, [r0, #216]
ARM GAS  /tmp/ccWQyto6.s 			page 165


 1872              	.LVL344:
7479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 1873              		.loc 1 7480 0
 1874 0030 7047     		bx	lr
 1875              	.LVL345:
 1876              	.L137:
7447:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   DMA_HandleTypeDef * hdma = (DMA_HandleTypeDef *)NULL;
 1877              		.loc 1 7447 0
 1878 0032 0020     		movs	r0, #0
 1879              	.LVL346:
7481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
7482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return hdma;
7486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 1880              		.loc 1 7486 0
 1881 0034 7047     		bx	lr
 1882              		.cfi_endproc
 1883              	.LFE240:
 1885 0036 00BF     		.section	.text.GetTimerIdxFromDMAHandle,"ax",%progbits
 1886              		.align	2
 1887              		.thumb
 1888              		.thumb_func
 1890              	GetTimerIdxFromDMAHandle:
 1891              	.LFB241:
7487:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static uint32_t GetTimerIdxFromDMAHandle(DMA_HandleTypeDef *hdma)
7489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 1892              		.loc 1 7489 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 0
 1895              		@ frame_needed = 0, uses_anonymous_args = 0
 1896              		@ link register save eliminated.
 1897              	.LVL347:
7490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t timed_idx = 0xFFFFFFFFU;
7491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7492:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (hdma->Instance ==  DMA1_Channel2)
 1898              		.loc 1 7492 0
 1899 0000 0368     		ldr	r3, [r0]
 1900 0002 104A     		ldr	r2, .L146
 1901 0004 9342     		cmp	r3, r2
 1902 0006 11D0     		beq	.L140
7493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_MASTER;
7495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if (hdma->Instance ==  DMA1_Channel3)
 1903              		.loc 1 7496 0
 1904 0008 1432     		adds	r2, r2, #20
 1905 000a 9342     		cmp	r3, r2
 1906 000c 10D0     		beq	.L141
7497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_A;
7499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if (hdma->Instance ==  DMA1_Channel4)
 1907              		.loc 1 7500 0
ARM GAS  /tmp/ccWQyto6.s 			page 166


 1908 000e 1432     		adds	r2, r2, #20
 1909 0010 9342     		cmp	r3, r2
 1910 0012 0FD0     		beq	.L142
7501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_B;
7503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if (hdma->Instance ==  DMA1_Channel5)
 1911              		.loc 1 7504 0
 1912 0014 1432     		adds	r2, r2, #20
 1913 0016 9342     		cmp	r3, r2
 1914 0018 0ED0     		beq	.L143
7505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_C;
7507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7508:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if (hdma->Instance ==  DMA1_Channel6)
 1915              		.loc 1 7508 0
 1916 001a 1432     		adds	r2, r2, #20
 1917 001c 9342     		cmp	r3, r2
 1918 001e 0DD0     		beq	.L144
7509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_D;
7511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if (hdma->Instance ==  DMA1_Channel7)
 1919              		.loc 1 7512 0
 1920 0020 1432     		adds	r2, r2, #20
 1921 0022 9342     		cmp	r3, r2
 1922 0024 0CD0     		beq	.L145
7490:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t timed_idx = 0xFFFFFFFFU;
 1923              		.loc 1 7490 0
 1924 0026 4FF0FF30 		mov	r0, #-1
 1925              	.LVL348:
 1926 002a 7047     		bx	lr
 1927              	.LVL349:
 1928              	.L140:
7494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_MASTER;
 1929              		.loc 1 7494 0
 1930 002c 0520     		movs	r0, #5
 1931              	.LVL350:
 1932 002e 7047     		bx	lr
 1933              	.LVL351:
 1934              	.L141:
7498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_A;
 1935              		.loc 1 7498 0
 1936 0030 0020     		movs	r0, #0
 1937              	.LVL352:
 1938 0032 7047     		bx	lr
 1939              	.LVL353:
 1940              	.L142:
7502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_B;
 1941              		.loc 1 7502 0
 1942 0034 0120     		movs	r0, #1
 1943              	.LVL354:
 1944 0036 7047     		bx	lr
 1945              	.LVL355:
 1946              	.L143:
7506:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_C;
 1947              		.loc 1 7506 0
ARM GAS  /tmp/ccWQyto6.s 			page 167


 1948 0038 0220     		movs	r0, #2
 1949              	.LVL356:
 1950 003a 7047     		bx	lr
 1951              	.LVL357:
 1952              	.L144:
7510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_D;
 1953              		.loc 1 7510 0
 1954 003c 0320     		movs	r0, #3
 1955              	.LVL358:
 1956 003e 7047     		bx	lr
 1957              	.LVL359:
 1958              	.L145:
7513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     timed_idx = HRTIM_TIMERINDEX_TIMER_E;
 1959              		.loc 1 7514 0
 1960 0040 0420     		movs	r0, #4
 1961              	.LVL360:
7515:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return timed_idx;
7518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 1962              		.loc 1 7518 0
 1963 0042 7047     		bx	lr
 1964              	.L147:
 1965              		.align	2
 1966              	.L146:
 1967 0044 1C000240 		.word	1073872924
 1968              		.cfi_endproc
 1969              	.LFE241:
 1971              		.section	.text.HRTIM_ForceRegistersUpdate,"ax",%progbits
 1972              		.align	2
 1973              		.thumb
 1974              		.thumb_func
 1976              	HRTIM_ForceRegistersUpdate:
 1977              	.LFB242:
7519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Forces an immediate transfer from the preload to the active 
7522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *         registers.
7523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
7524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
7525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
7526:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_ForceRegistersUpdate(HRTIM_HandleTypeDef * hhrtim,
7528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                                        uint32_t TimerIdx)
7529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 1978              		.loc 1 7529 0
 1979              		.cfi_startproc
 1980              		@ args = 0, pretend = 0, frame = 0
 1981              		@ frame_needed = 0, uses_anonymous_args = 0
 1982              		@ link register save eliminated.
 1983              	.LVL361:
7530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (TimerIdx)
 1984              		.loc 1 7530 0
 1985 0000 0529     		cmp	r1, #5
 1986 0002 33D8     		bhi	.L148
 1987 0004 DFE801F0 		tbb	[pc, r1]
ARM GAS  /tmp/ccWQyto6.s 			page 168


 1988              	.L151:
 1989 0008 0B       		.byte	(.L150-.L151)/2
 1990 0009 13       		.byte	(.L152-.L151)/2
 1991 000a 1B       		.byte	(.L153-.L151)/2
 1992 000b 23       		.byte	(.L154-.L151)/2
 1993 000c 2B       		.byte	(.L155-.L151)/2
 1994 000d 03       		.byte	(.L156-.L151)/2
 1995              		.p2align 1
 1996              	.L156:
7531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_MASTER:
7533:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.CR2 |= HRTIM_CR2_MSWU;
 1997              		.loc 1 7534 0
 1998 000e 0368     		ldr	r3, [r0]
 1999 0010 D3F88423 		ldr	r2, [r3, #900]
 2000 0014 42F00102 		orr	r2, r2, #1
 2001 0018 C3F88423 		str	r2, [r3, #900]
7535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 2002              		.loc 1 7536 0
 2003 001c 7047     		bx	lr
 2004              	.L150:
7537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_A:
7538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.CR2 |= HRTIM_CR2_TASWU;
 2005              		.loc 1 7539 0
 2006 001e 0368     		ldr	r3, [r0]
 2007 0020 D3F88423 		ldr	r2, [r3, #900]
 2008 0024 42F00202 		orr	r2, r2, #2
 2009 0028 C3F88423 		str	r2, [r3, #900]
7540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 2010              		.loc 1 7541 0
 2011 002c 7047     		bx	lr
 2012              	.L152:
7542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_B:
7543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.CR2 |= HRTIM_CR2_TBSWU;
 2013              		.loc 1 7544 0
 2014 002e 0368     		ldr	r3, [r0]
 2015 0030 D3F88423 		ldr	r2, [r3, #900]
 2016 0034 42F00402 		orr	r2, r2, #4
 2017 0038 C3F88423 		str	r2, [r3, #900]
7545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 2018              		.loc 1 7546 0
 2019 003c 7047     		bx	lr
 2020              	.L153:
7547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_C:
7548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.CR2 |= HRTIM_CR2_TCSWU;
 2021              		.loc 1 7549 0
 2022 003e 0368     		ldr	r3, [r0]
 2023 0040 D3F88423 		ldr	r2, [r3, #900]
 2024 0044 42F00802 		orr	r2, r2, #8
 2025 0048 C3F88423 		str	r2, [r3, #900]
ARM GAS  /tmp/ccWQyto6.s 			page 169


7550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 2026              		.loc 1 7551 0
 2027 004c 7047     		bx	lr
 2028              	.L154:
7552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_D:
7553:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.CR2 |= HRTIM_CR2_TDSWU;
 2029              		.loc 1 7554 0
 2030 004e 0368     		ldr	r3, [r0]
 2031 0050 D3F88423 		ldr	r2, [r3, #900]
 2032 0054 42F01002 		orr	r2, r2, #16
 2033 0058 C3F88423 		str	r2, [r3, #900]
7555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7556:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 2034              		.loc 1 7556 0
 2035 005c 7047     		bx	lr
 2036              	.L155:
7557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   case HRTIM_TIMERINDEX_TIMER_E:
7558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7559:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.CR2 |= HRTIM_CR2_TESWU;
 2037              		.loc 1 7559 0
 2038 005e 0368     		ldr	r3, [r0]
 2039 0060 D3F88423 		ldr	r2, [r3, #900]
 2040 0064 42F02002 		orr	r2, r2, #32
 2041 0068 C3F88423 		str	r2, [r3, #900]
 2042              	.L148:
 2043 006c 7047     		bx	lr
 2044              		.cfi_endproc
 2045              	.LFE242:
 2047 006e 00BF     		.section	.text.HAL_HRTIM_MspInit,"ax",%progbits
 2048              		.align	2
 2049              		.weak	HAL_HRTIM_MspInit
 2050              		.thumb
 2051              		.thumb_func
 2053              	HAL_HRTIM_MspInit:
 2054              	.LFB125:
 608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2055              		.loc 1 608 0
 2056              		.cfi_startproc
 2057              		@ args = 0, pretend = 0, frame = 0
 2058              		@ frame_needed = 0, uses_anonymous_args = 0
 2059              		@ link register save eliminated.
 2060              	.LVL362:
 2061 0000 7047     		bx	lr
 2062              		.cfi_endproc
 2063              	.LFE125:
 2065 0002 00BF     		.section	.text.HAL_HRTIM_Init,"ax",%progbits
 2066              		.align	2
 2067              		.global	HAL_HRTIM_Init
 2068              		.thumb
 2069              		.thumb_func
 2071              	HAL_HRTIM_Init:
 2072              	.LFB123:
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2073              		.loc 1 479 0
 2074              		.cfi_startproc
ARM GAS  /tmp/ccWQyto6.s 			page 170


 2075              		@ args = 0, pretend = 0, frame = 8
 2076              		@ frame_needed = 0, uses_anonymous_args = 0
 2077              	.LVL363:
 479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2078              		.loc 1 479 0
 2079 0000 30B5     		push	{r4, r5, lr}
 2080              	.LCFI7:
 2081              		.cfi_def_cfa_offset 12
 2082              		.cfi_offset 4, -12
 2083              		.cfi_offset 5, -8
 2084              		.cfi_offset 14, -4
 2085 0002 83B0     		sub	sp, sp, #12
 2086              	.LCFI8:
 2087              		.cfi_def_cfa_offset 24
 484:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim == NULL)
 2088              		.loc 1 484 0
 2089 0004 0446     		mov	r4, r0
 2090 0006 0028     		cmp	r0, #0
 2091 0008 59D0     		beq	.L165
 494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 2092              		.loc 1 494 0
 2093 000a 0223     		movs	r3, #2
 2094 000c 80F8C130 		strb	r3, [r0, #193]
 497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaMaster = (DMA_HandleTypeDef *)NULL;    
 2095              		.loc 1 497 0
 2096 0010 0023     		movs	r3, #0
 2097 0012 C0F8C430 		str	r3, [r0, #196]
 498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerA = (DMA_HandleTypeDef *)NULL;     
 2098              		.loc 1 498 0
 2099 0016 C0F8C830 		str	r3, [r0, #200]
 499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerB = (DMA_HandleTypeDef *)NULL;  
 2100              		.loc 1 499 0
 2101 001a C0F8CC30 		str	r3, [r0, #204]
 500:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerC = (DMA_HandleTypeDef *)NULL;  
 2102              		.loc 1 500 0
 2103 001e C0F8D030 		str	r3, [r0, #208]
 501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerD = (DMA_HandleTypeDef *)NULL;  
 2104              		.loc 1 501 0
 2105 0022 C0F8D430 		str	r3, [r0, #212]
 502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->hdmaTimerE = (DMA_HandleTypeDef *)NULL;  
 2106              		.loc 1 502 0
 2107 0026 C0F8D830 		str	r3, [r0, #216]
 505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Init.SyncOptions & HRTIM_SYNCOPTION_MASTER) != RESET)
 2108              		.loc 1 505 0
 2109 002a 8368     		ldr	r3, [r0, #8]
 2110 002c 13F0010F 		tst	r3, #1
 2111 0030 1AD0     		beq	.L160
 514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (hhrtim->Instance == HRTIM1)
 2112              		.loc 1 514 0
 2113 0032 0368     		ldr	r3, [r0]
 2114 0034 234A     		ldr	r2, .L166
 2115 0036 9342     		cmp	r3, r2
 2116 0038 09D1     		bne	.L161
 2117              	.LBB2:
 517:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_RCC_HRTIM1_CLK_ENABLE();
 2118              		.loc 1 517 0
 2119 003a 234B     		ldr	r3, .L166+4
ARM GAS  /tmp/ccWQyto6.s 			page 171


 2120 003c 9A69     		ldr	r2, [r3, #24]
 2121 003e 42F00052 		orr	r2, r2, #536870912
 2122 0042 9A61     		str	r2, [r3, #24]
 2123 0044 9B69     		ldr	r3, [r3, #24]
 2124 0046 03F00053 		and	r3, r3, #536870912
 2125 004a 0193     		str	r3, [sp, #4]
 2126 004c 019B     		ldr	r3, [sp, #4]
 2127              	.L161:
 2128              	.LBE2:
 520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr = hhrtim->Instance->sMasterRegs.MCR;
 2129              		.loc 1 520 0
 2130 004e 2368     		ldr	r3, [r4]
 2131 0050 1968     		ldr	r1, [r3]
 2132              	.LVL364:
 524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr |= (hhrtim->Init.SyncOutputSource & HRTIM_MCR_SYNC_SRC);
 2133              		.loc 1 524 0
 2134 0052 2269     		ldr	r2, [r4, #16]
 2135 0054 02F44042 		and	r2, r2, #49152
 2136 0058 21F47041 		bic	r1, r1, #61440
 2137              	.LVL365:
 527:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr &= ~(HRTIM_MCR_SYNC_OUT);
 2138              		.loc 1 527 0
 2139 005c 1143     		orrs	r1, r1, r2
 2140              	.LVL366:
 528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr |= (hhrtim->Init.SyncOutputPolarity & HRTIM_MCR_SYNC_OUT);
 2141              		.loc 1 528 0
 2142 005e 6269     		ldr	r2, [r4, #20]
 2143 0060 02F44052 		and	r2, r2, #12288
 2144 0064 0A43     		orrs	r2, r2, r1
 2145              	.LVL367:
 531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->Instance->sMasterRegs.MCR = hrtim_mcr;    
 2146              		.loc 1 531 0
 2147 0066 1A60     		str	r2, [r3]
 2148              	.LVL368:
 2149              	.L160:
 535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_HRTIM_MspInit(hhrtim);
 2150              		.loc 1 535 0
 2151 0068 2046     		mov	r0, r4
 2152              	.LVL369:
 2153 006a FFF7FEFF 		bl	HAL_HRTIM_MspInit
 2154              	.LVL370:
 538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Init.SyncOptions & HRTIM_SYNCOPTION_SLAVE) != RESET)
 2155              		.loc 1 538 0
 2156 006e A368     		ldr	r3, [r4, #8]
 2157 0070 13F0020F 		tst	r3, #2
 2158 0074 08D0     		beq	.L162
 543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr = hhrtim->Instance->sMasterRegs.MCR;
 2159              		.loc 1 543 0
 2160 0076 2368     		ldr	r3, [r4]
 2161 0078 1968     		ldr	r1, [r3]
 2162              	.LVL371:
 546:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr &= ~(HRTIM_MCR_SYNC_IN);
 2163              		.loc 1 546 0
 2164 007a 21F44071 		bic	r1, r1, #768
 2165              	.LVL372:
 547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_mcr |= (hhrtim->Init.SyncInputSource & HRTIM_MCR_SYNC_IN);
 2166              		.loc 1 547 0
ARM GAS  /tmp/ccWQyto6.s 			page 172


 2167 007e E268     		ldr	r2, [r4, #12]
 2168 0080 02F44072 		and	r2, r2, #768
 2169 0084 0A43     		orrs	r2, r2, r1
 2170              	.LVL373:
 550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->Instance->sMasterRegs.MCR = hrtim_mcr;    
 2171              		.loc 1 550 0
 2172 0086 1A60     		str	r2, [r3]
 2173              	.LVL374:
 2174              	.L162:
 554:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 2175              		.loc 1 554 0
 2176 0088 0123     		movs	r3, #1
 2177 008a 84F8C130 		strb	r3, [r4, #193]
 557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);
 2178              		.loc 1 557 0
 2179 008e 0023     		movs	r3, #0
 2180 0090 84F8C030 		strb	r3, [r4, #192]
 2181              	.LVL375:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].CaptureTrigger1 = HRTIM_CAPTURETRIGGER_NONE;
 2182              		.loc 1 564 0
 2183 0094 1A46     		mov	r2, r3
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
 2184              		.loc 1 560 0
 2185 0096 0EE0     		b	.L163
 2186              	.LVL376:
 2187              	.L164:
 564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].CaptureTrigger1 = HRTIM_CAPTURETRIGGER_NONE;
 2188              		.loc 1 564 0
 2189 0098 D800     		lsls	r0, r3, #3
 2190 009a C11A     		subs	r1, r0, r3
 2191 009c 8900     		lsls	r1, r1, #2
 2192 009e 2144     		add	r1, r1, r4
 2193 00a0 8A61     		str	r2, [r1, #24]
 565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].CaptureTrigger2 = HRTIM_CAPTURETRIGGER_NONE;
 2194              		.loc 1 565 0
 2195 00a2 CA61     		str	r2, [r1, #28]
 566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].InterruptRequests = HRTIM_IT_NONE;
 2196              		.loc 1 566 0
 2197 00a4 0A62     		str	r2, [r1, #32]
 567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].DMARequests = HRTIM_IT_NONE;
 2198              		.loc 1 567 0
 2199 00a6 4A62     		str	r2, [r1, #36]
 568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].DMASrcAddress = 0U;
 2200              		.loc 1 568 0
 2201 00a8 8A62     		str	r2, [r1, #40]
 569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hhrtim->TimerParam[timer_idx].DMASize = 0U;
 2202              		.loc 1 569 0
 2203 00aa C11A     		subs	r1, r0, r3
 2204 00ac 8900     		lsls	r1, r1, #2
 2205 00ae 2144     		add	r1, r1, r4
 2206 00b0 0A63     		str	r2, [r1, #48]
 562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
 2207              		.loc 1 562 0
 2208 00b2 0133     		adds	r3, r3, #1
 2209              	.LVL377:
 2210 00b4 DBB2     		uxtb	r3, r3
 2211              	.LVL378:
ARM GAS  /tmp/ccWQyto6.s 			page 173


 2212              	.L163:
 560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
 2213              		.loc 1 560 0 discriminator 1
 2214 00b6 052B     		cmp	r3, #5
 2215 00b8 EED9     		bls	.L164
 572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2216              		.loc 1 572 0
 2217 00ba 0020     		movs	r0, #0
 2218 00bc 00E0     		b	.L159
 2219              	.LVL379:
 2220              	.L165:
 486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     return HAL_ERROR;
 2221              		.loc 1 486 0
 2222 00be 0120     		movs	r0, #1
 2223              	.LVL380:
 2224              	.L159:
 573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2225              		.loc 1 573 0
 2226 00c0 03B0     		add	sp, sp, #12
 2227              		@ sp needed
 2228 00c2 30BD     		pop	{r4, r5, pc}
 2229              	.LVL381:
 2230              	.L167:
 2231              		.align	2
 2232              	.L166:
 2233 00c4 00740140 		.word	1073837056
 2234 00c8 00100240 		.word	1073876992
 2235              		.cfi_endproc
 2236              	.LFE123:
 2238              		.section	.text.HAL_HRTIM_MspDeInit,"ax",%progbits
 2239              		.align	2
 2240              		.weak	HAL_HRTIM_MspDeInit
 2241              		.thumb
 2242              		.thumb_func
 2244              	HAL_HRTIM_MspDeInit:
 2245              	.LFB126:
 623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2246              		.loc 1 623 0
 2247              		.cfi_startproc
 2248              		@ args = 0, pretend = 0, frame = 0
 2249              		@ frame_needed = 0, uses_anonymous_args = 0
 2250              		@ link register save eliminated.
 2251              	.LVL382:
 2252 0000 7047     		bx	lr
 2253              		.cfi_endproc
 2254              	.LFE126:
 2256 0002 00BF     		.section	.text.HAL_HRTIM_DeInit,"ax",%progbits
 2257              		.align	2
 2258              		.global	HAL_HRTIM_DeInit
 2259              		.thumb
 2260              		.thumb_func
 2262              	HAL_HRTIM_DeInit:
 2263              	.LFB124:
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2264              		.loc 1 581 0
 2265              		.cfi_startproc
 2266              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccWQyto6.s 			page 174


 2267              		@ frame_needed = 0, uses_anonymous_args = 0
 2268              	.LVL383:
 581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2269              		.loc 1 581 0
 2270 0000 10B5     		push	{r4, lr}
 2271              	.LCFI9:
 2272              		.cfi_def_cfa_offset 8
 2273              		.cfi_offset 4, -8
 2274              		.cfi_offset 14, -4
 583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim == NULL)
 2275              		.loc 1 583 0
 2276 0002 0446     		mov	r4, r0
 2277 0004 48B1     		cbz	r0, .L171
 592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 2278              		.loc 1 592 0
 2279 0006 0223     		movs	r3, #2
 2280 0008 80F8C130 		strb	r3, [r0, #193]
 595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_HRTIM_MspDeInit(hhrtim);
 2281              		.loc 1 595 0
 2282 000c FFF7FEFF 		bl	HAL_HRTIM_MspDeInit
 2283              	.LVL384:
 597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 2284              		.loc 1 597 0
 2285 0010 0123     		movs	r3, #1
 2286 0012 84F8C130 		strb	r3, [r4, #193]
 599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2287              		.loc 1 599 0
 2288 0016 0020     		movs	r0, #0
 2289 0018 10BD     		pop	{r4, pc}
 2290              	.LVL385:
 2291              	.L171:
 585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     return HAL_ERROR;
 2292              		.loc 1 585 0
 2293 001a 0120     		movs	r0, #1
 2294              	.LVL386:
 600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2295              		.loc 1 600 0
 2296 001c 10BD     		pop	{r4, pc}
 2297              		.cfi_endproc
 2298              	.LFE124:
 2300 001e 00BF     		.section	.text.HAL_HRTIM_DLLCalibrationStart,"ax",%progbits
 2301              		.align	2
 2302              		.global	HAL_HRTIM_DLLCalibrationStart
 2303              		.thumb
 2304              		.thumb_func
 2306              	HAL_HRTIM_DLLCalibrationStart:
 2307              	.LFB127:
 649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2308              		.loc 1 649 0
 2309              		.cfi_startproc
 2310              		@ args = 0, pretend = 0, frame = 0
 2311              		@ frame_needed = 0, uses_anonymous_args = 0
 2312              		@ link register save eliminated.
 2313              	.LVL387:
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2314              		.loc 1 656 0
 2315 0000 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
ARM GAS  /tmp/ccWQyto6.s 			page 175


 2316 0004 012B     		cmp	r3, #1
 2317 0006 19D0     		beq	.L176
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2318              		.loc 1 656 0 is_stmt 0 discriminator 2
 2319 0008 0123     		movs	r3, #1
 2320 000a 80F8C030 		strb	r3, [r0, #192]
 658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 2321              		.loc 1 658 0 is_stmt 1 discriminator 2
 2322 000e 0223     		movs	r3, #2
 2323 0010 80F8C130 		strb	r3, [r0, #193]
 661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dllcr = hhrtim->Instance->sCommonRegs.DLLCR;
 2324              		.loc 1 661 0 discriminator 2
 2325 0014 0368     		ldr	r3, [r0]
 2326 0016 D3F8CC23 		ldr	r2, [r3, #972]
 2327              	.LVL388:
 663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CalibrationRate == HRTIM_SINGLE_CALIBRATION)
 2328              		.loc 1 663 0 discriminator 2
 2329 001a B1F1FF3F 		cmp	r1, #-1
 2330 001e 04D1     		bne	.L174
 666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALEN);
 2331              		.loc 1 666 0
 2332 0020 22F00201 		bic	r1, r2, #2
 2333              	.LVL389:
 667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= HRTIM_DLLCR_CAL;    
 2334              		.loc 1 667 0
 2335 0024 41F00101 		orr	r1, r1, #1
 2336              	.LVL390:
 2337 0028 04E0     		b	.L175
 2338              	.LVL391:
 2339              	.L174:
 672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALRTE | HRTIM_DLLCR_CAL);
 2340              		.loc 1 672 0
 2341 002a 22F00D02 		bic	r2, r2, #13
 2342              	.LVL392:
 673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= (CalibrationRate | HRTIM_DLLCR_CALEN);
 2343              		.loc 1 673 0
 2344 002e 1143     		orrs	r1, r1, r2
 2345              	.LVL393:
 2346 0030 41F00201 		orr	r1, r1, #2
 2347              	.LVL394:
 2348              	.L175:
 677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.DLLCR = hrtim_dllcr;
 2349              		.loc 1 677 0
 2350 0034 C3F8CC13 		str	r1, [r3, #972]
 679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2351              		.loc 1 679 0
 2352 0038 0020     		movs	r0, #0
 2353              	.LVL395:
 2354 003a 7047     		bx	lr
 2355              	.LVL396:
 2356              	.L176:
 656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2357              		.loc 1 656 0
 2358 003c 0220     		movs	r0, #2
 2359              	.LVL397:
 680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2360              		.loc 1 680 0
ARM GAS  /tmp/ccWQyto6.s 			page 176


 2361 003e 7047     		bx	lr
 2362              		.cfi_endproc
 2363              	.LFE127:
 2365              		.section	.text.HAL_HRTIM_DLLCalibrationStart_IT,"ax",%progbits
 2366              		.align	2
 2367              		.global	HAL_HRTIM_DLLCalibrationStart_IT
 2368              		.thumb
 2369              		.thumb_func
 2371              	HAL_HRTIM_DLLCalibrationStart_IT:
 2372              	.LFB128:
 703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2373              		.loc 1 703 0
 2374              		.cfi_startproc
 2375              		@ args = 0, pretend = 0, frame = 0
 2376              		@ frame_needed = 0, uses_anonymous_args = 0
 2377              		@ link register save eliminated.
 2378              	.LVL398:
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2379              		.loc 1 710 0
 2380 0000 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 2381 0004 012B     		cmp	r3, #1
 2382 0006 20D0     		beq	.L181
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2383              		.loc 1 710 0 is_stmt 0 discriminator 2
 2384 0008 0123     		movs	r3, #1
 2385 000a 80F8C030 		strb	r3, [r0, #192]
 712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 2386              		.loc 1 712 0 is_stmt 1 discriminator 2
 2387 000e 0223     		movs	r3, #2
 2388 0010 80F8C130 		strb	r3, [r0, #193]
 715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE_IT(hhrtim, HRTIM_IT_DLLRDY);
 2389              		.loc 1 715 0 discriminator 2
 2390 0014 0368     		ldr	r3, [r0]
 2391 0016 D3F89023 		ldr	r2, [r3, #912]
 2392 001a 42F48032 		orr	r2, r2, #65536
 2393 001e C3F89023 		str	r2, [r3, #912]
 718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dllcr = hhrtim->Instance->sCommonRegs.DLLCR;
 2394              		.loc 1 718 0 discriminator 2
 2395 0022 0368     		ldr	r3, [r0]
 2396 0024 D3F8CC23 		ldr	r2, [r3, #972]
 2397              	.LVL399:
 720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CalibrationRate == HRTIM_SINGLE_CALIBRATION)
 2398              		.loc 1 720 0 discriminator 2
 2399 0028 B1F1FF3F 		cmp	r1, #-1
 2400 002c 04D1     		bne	.L179
 723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALEN);
 2401              		.loc 1 723 0
 2402 002e 22F00201 		bic	r1, r2, #2
 2403              	.LVL400:
 724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= HRTIM_DLLCR_CAL;    
 2404              		.loc 1 724 0
 2405 0032 41F00101 		orr	r1, r1, #1
 2406              	.LVL401:
 2407 0036 04E0     		b	.L180
 2408              	.LVL402:
 2409              	.L179:
 729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr &= ~(HRTIM_DLLCR_CALRTE | HRTIM_DLLCR_CAL);
ARM GAS  /tmp/ccWQyto6.s 			page 177


 2410              		.loc 1 729 0
 2411 0038 22F00D02 		bic	r2, r2, #13
 2412              	.LVL403:
 730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_dllcr |= (CalibrationRate | HRTIM_DLLCR_CALEN);
 2413              		.loc 1 730 0
 2414 003c 1143     		orrs	r1, r1, r2
 2415              	.LVL404:
 2416 003e 41F00201 		orr	r1, r1, #2
 2417              	.LVL405:
 2418              	.L180:
 734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.DLLCR = hrtim_dllcr;
 2419              		.loc 1 734 0
 2420 0042 C3F8CC13 		str	r1, [r3, #972]
 736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2421              		.loc 1 736 0
 2422 0046 0020     		movs	r0, #0
 2423              	.LVL406:
 2424 0048 7047     		bx	lr
 2425              	.LVL407:
 2426              	.L181:
 710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2427              		.loc 1 710 0
 2428 004a 0220     		movs	r0, #2
 2429              	.LVL408:
 737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2430              		.loc 1 737 0
 2431 004c 7047     		bx	lr
 2432              		.cfi_endproc
 2433              	.LFE128:
 2435 004e 00BF     		.section	.text.HAL_HRTIM_PollForDLLCalibration,"ax",%progbits
 2436              		.align	2
 2437              		.global	HAL_HRTIM_PollForDLLCalibration
 2438              		.thumb
 2439              		.thumb_func
 2441              	HAL_HRTIM_PollForDLLCalibration:
 2442              	.LFB129:
 748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2443              		.loc 1 748 0
 2444              		.cfi_startproc
 2445              		@ args = 0, pretend = 0, frame = 0
 2446              		@ frame_needed = 0, uses_anonymous_args = 0
 2447              	.LVL409:
 2448 0000 70B5     		push	{r4, r5, r6, lr}
 2449              	.LCFI10:
 2450              		.cfi_def_cfa_offset 16
 2451              		.cfi_offset 4, -16
 2452              		.cfi_offset 5, -12
 2453              		.cfi_offset 6, -8
 2454              		.cfi_offset 14, -4
 2455 0002 0446     		mov	r4, r0
 2456 0004 0D46     		mov	r5, r1
 2457              	.LVL410:
 751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   tickstart = HAL_GetTick();  
 2458              		.loc 1 751 0
 2459 0006 FFF7FEFF 		bl	HAL_GetTick
 2460              	.LVL411:
 2461 000a 0646     		mov	r6, r0
ARM GAS  /tmp/ccWQyto6.s 			page 178


 2462              	.LVL412:
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   while(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_IT_DLLRDY) == RESET)
 2463              		.loc 1 754 0
 2464 000c 0DE0     		b	.L188
 2465              	.LVL413:
 2466              	.L187:
 756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (Timeout != HAL_MAX_DELAY)
 2467              		.loc 1 756 0
 2468 000e B5F1FF3F 		cmp	r5, #-1
 2469 0012 0AD0     		beq	.L188
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 2470              		.loc 1 758 0
 2471 0014 25B1     		cbz	r5, .L185
 758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if((Timeout == 0U) || ((HAL_GetTick()-tickstart) > Timeout))
 2472              		.loc 1 758 0 is_stmt 0 discriminator 1
 2473 0016 FFF7FEFF 		bl	HAL_GetTick
 2474              	.LVL414:
 2475 001a 801B     		subs	r0, r0, r6
 2476 001c A842     		cmp	r0, r5
 2477 001e 04D9     		bls	.L188
 2478              	.L185:
 760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->State = HAL_HRTIM_STATE_ERROR;
 2479              		.loc 1 760 0 is_stmt 1
 2480 0020 0723     		movs	r3, #7
 2481 0022 84F8C130 		strb	r3, [r4, #193]
 761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         return HAL_TIMEOUT;
 2482              		.loc 1 761 0
 2483 0026 0320     		movs	r0, #3
 2484 0028 70BD     		pop	{r4, r5, r6, pc}
 2485              	.LVL415:
 2486              	.L188:
 754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   while(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_IT_DLLRDY) == RESET)
 2487              		.loc 1 754 0 discriminator 1
 2488 002a 2368     		ldr	r3, [r4]
 2489 002c D3F88833 		ldr	r3, [r3, #904]
 2490 0030 13F4803F 		tst	r3, #65536
 2491 0034 EBD0     		beq	.L187
 767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 2492              		.loc 1 767 0
 2493 0036 0123     		movs	r3, #1
 2494 0038 84F8C130 		strb	r3, [r4, #193]
 770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim); 
 2495              		.loc 1 770 0
 2496 003c 0020     		movs	r0, #0
 2497 003e 84F8C000 		strb	r0, [r4, #192]
 773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2498              		.loc 1 773 0
 2499 0042 70BD     		pop	{r4, r5, r6, pc}
 2500              		.cfi_endproc
 2501              	.LFE129:
 2503              		.section	.text.HAL_HRTIM_TimeBaseConfig,"ax",%progbits
 2504              		.align	2
 2505              		.global	HAL_HRTIM_TimeBaseConfig
 2506              		.thumb
 2507              		.thumb_func
 2509              	HAL_HRTIM_TimeBaseConfig:
 2510              	.LFB130:
ARM GAS  /tmp/ccWQyto6.s 			page 179


 798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2511              		.loc 1 798 0
 2512              		.cfi_startproc
 2513              		@ args = 0, pretend = 0, frame = 0
 2514              		@ frame_needed = 0, uses_anonymous_args = 0
 2515              	.LVL416:
 2516 0000 10B5     		push	{r4, lr}
 2517              	.LCFI11:
 2518              		.cfi_def_cfa_offset 8
 2519              		.cfi_offset 4, -8
 2520              		.cfi_offset 14, -4
 2521 0002 0446     		mov	r4, r0
 804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 2522              		.loc 1 804 0
 2523 0004 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 2524 0008 DBB2     		uxtb	r3, r3
 2525 000a 022B     		cmp	r3, #2
 2526 000c 0FD0     		beq	.L193
 810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 2527              		.loc 1 810 0
 2528 000e 0223     		movs	r3, #2
 2529 0010 80F8C130 		strb	r3, [r0, #193]
 812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 2530              		.loc 1 812 0
 2531 0014 0529     		cmp	r1, #5
 2532 0016 03D1     		bne	.L191
 815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_MasterBase_Config(hhrtim, pTimeBaseCfg);
 2533              		.loc 1 815 0
 2534 0018 1146     		mov	r1, r2
 2535              	.LVL417:
 2536 001a FFF7FEFF 		bl	HRTIM_MasterBase_Config
 2537              	.LVL418:
 2538 001e 01E0     		b	.L192
 2539              	.LVL419:
 2540              	.L191:
 820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_TimingUnitBase_Config(hhrtim, TimerIdx, pTimeBaseCfg);
 2541              		.loc 1 820 0
 2542 0020 FFF7FEFF 		bl	HRTIM_TimingUnitBase_Config
 2543              	.LVL420:
 2544              	.L192:
 824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 2545              		.loc 1 824 0
 2546 0024 0123     		movs	r3, #1
 2547 0026 84F8C130 		strb	r3, [r4, #193]
 826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 2548              		.loc 1 826 0
 2549 002a 0020     		movs	r0, #0
 2550 002c 10BD     		pop	{r4, pc}
 2551              	.LVL421:
 2552              	.L193:
 806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 2553              		.loc 1 806 0
 2554 002e 0220     		movs	r0, #2
 2555              	.LVL422:
 827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2556              		.loc 1 827 0
 2557 0030 10BD     		pop	{r4, pc}
ARM GAS  /tmp/ccWQyto6.s 			page 180


 2558              		.cfi_endproc
 2559              	.LFE130:
 2561 0032 00BF     		.section	.text.HAL_HRTIM_SimpleBaseStart,"ax",%progbits
 2562              		.align	2
 2563              		.global	HAL_HRTIM_SimpleBaseStart
 2564              		.thumb
 2565              		.thumb_func
 2567              	HAL_HRTIM_SimpleBaseStart:
 2568              	.LFB131:
 868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {  
 2569              		.loc 1 868 0
 2570              		.cfi_startproc
 2571              		@ args = 0, pretend = 0, frame = 0
 2572              		@ frame_needed = 0, uses_anonymous_args = 0
 2573              		@ link register save eliminated.
 2574              	.LVL423:
 2575 0000 30B4     		push	{r4, r5}
 2576              	.LCFI12:
 2577              		.cfi_def_cfa_offset 8
 2578              		.cfi_offset 4, -8
 2579              		.cfi_offset 5, -4
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2580              		.loc 1 873 0
 2581 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 2582 0006 012B     		cmp	r3, #1
 2583 0008 13D0     		beq	.L196
 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2584              		.loc 1 873 0 is_stmt 0 discriminator 2
 2585 000a 0123     		movs	r3, #1
 2586 000c 80F8C030 		strb	r3, [r0, #192]
 875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 2587              		.loc 1 875 0 is_stmt 1 discriminator 2
 2588 0010 0222     		movs	r2, #2
 2589 0012 80F8C120 		strb	r2, [r0, #193]
 878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2590              		.loc 1 878 0 discriminator 2
 2591 0016 0268     		ldr	r2, [r0]
 2592 0018 1468     		ldr	r4, [r2]
 2593 001a 074D     		ldr	r5, .L197
 2594 001c 55F82110 		ldr	r1, [r5, r1, lsl #2]
 2595              	.LVL424:
 2596 0020 2143     		orrs	r1, r1, r4
 2597 0022 1160     		str	r1, [r2]
 880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 2598              		.loc 1 880 0 discriminator 2
 2599 0024 80F8C130 		strb	r3, [r0, #193]
 883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 2600              		.loc 1 883 0 discriminator 2
 2601 0028 0023     		movs	r3, #0
 2602 002a 80F8C030 		strb	r3, [r0, #192]
 885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2603              		.loc 1 885 0 discriminator 2
 2604 002e 1846     		mov	r0, r3
 2605              	.LVL425:
 2606 0030 00E0     		b	.L195
 2607              	.LVL426:
 2608              	.L196:
ARM GAS  /tmp/ccWQyto6.s 			page 181


 873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2609              		.loc 1 873 0
 2610 0032 0220     		movs	r0, #2
 2611              	.LVL427:
 2612              	.L195:
 886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2613              		.loc 1 886 0
 2614 0034 30BC     		pop	{r4, r5}
 2615 0036 7047     		bx	lr
 2616              	.L198:
 2617              		.align	2
 2618              	.L197:
 2619 0038 00000000 		.word	.LANCHOR0
 2620              		.cfi_endproc
 2621              	.LFE131:
 2623              		.section	.text.HAL_HRTIM_SimpleBaseStop,"ax",%progbits
 2624              		.align	2
 2625              		.global	HAL_HRTIM_SimpleBaseStop
 2626              		.thumb
 2627              		.thumb_func
 2629              	HAL_HRTIM_SimpleBaseStop:
 2630              	.LFB132:
 903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2631              		.loc 1 903 0
 2632              		.cfi_startproc
 2633              		@ args = 0, pretend = 0, frame = 0
 2634              		@ frame_needed = 0, uses_anonymous_args = 0
 2635              		@ link register save eliminated.
 2636              	.LVL428:
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2637              		.loc 1 908 0
 2638 0000 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 2639 0004 012B     		cmp	r3, #1
 2640 0006 68D0     		beq	.L207
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2641              		.loc 1 908 0 is_stmt 0 discriminator 2
 2642 0008 0123     		movs	r3, #1
 2643 000a 80F8C030 		strb	r3, [r0, #192]
 910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 2644              		.loc 1 910 0 is_stmt 1 discriminator 2
 2645 000e 0223     		movs	r3, #2
 2646 0010 80F8C130 		strb	r3, [r0, #193]
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2647              		.loc 1 913 0 discriminator 2
 2648 0014 324B     		ldr	r3, .L208
 2649 0016 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2650 001a 13F4803F 		tst	r3, #65536
 2651 001e 04D0     		beq	.L201
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2652              		.loc 1 913 0 is_stmt 0 discriminator 1
 2653 0020 0368     		ldr	r3, [r0]
 2654 0022 1A68     		ldr	r2, [r3]
 2655 0024 22F48032 		bic	r2, r2, #65536
 2656 0028 1A60     		str	r2, [r3]
 2657              	.L201:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2658              		.loc 1 913 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 182


 2659 002a 2D4B     		ldr	r3, .L208
 2660 002c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2661 0030 13F4003F 		tst	r3, #131072
 2662 0034 09D0     		beq	.L202
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2663              		.loc 1 913 0 discriminator 1
 2664 0036 0368     		ldr	r3, [r0]
 2665 0038 D3F89423 		ldr	r2, [r3, #916]
 2666 003c 12F0030F 		tst	r2, #3
 2667 0040 03D1     		bne	.L202
 2668 0042 1A68     		ldr	r2, [r3]
 2669 0044 22F40032 		bic	r2, r2, #131072
 2670 0048 1A60     		str	r2, [r3]
 2671              	.L202:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2672              		.loc 1 913 0 discriminator 2
 2673 004a 254B     		ldr	r3, .L208
 2674 004c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2675 0050 13F4802F 		tst	r3, #262144
 2676 0054 09D0     		beq	.L203
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2677              		.loc 1 913 0 discriminator 1
 2678 0056 0368     		ldr	r3, [r0]
 2679 0058 D3F89423 		ldr	r2, [r3, #916]
 2680 005c 12F00C0F 		tst	r2, #12
 2681 0060 03D1     		bne	.L203
 2682 0062 1A68     		ldr	r2, [r3]
 2683 0064 22F48022 		bic	r2, r2, #262144
 2684 0068 1A60     		str	r2, [r3]
 2685              	.L203:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2686              		.loc 1 913 0 discriminator 2
 2687 006a 1D4B     		ldr	r3, .L208
 2688 006c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2689 0070 13F4002F 		tst	r3, #524288
 2690 0074 09D0     		beq	.L204
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2691              		.loc 1 913 0 discriminator 1
 2692 0076 0368     		ldr	r3, [r0]
 2693 0078 D3F89423 		ldr	r2, [r3, #916]
 2694 007c 12F0300F 		tst	r2, #48
 2695 0080 03D1     		bne	.L204
 2696 0082 1A68     		ldr	r2, [r3]
 2697 0084 22F40022 		bic	r2, r2, #524288
 2698 0088 1A60     		str	r2, [r3]
 2699              	.L204:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2700              		.loc 1 913 0 discriminator 2
 2701 008a 154B     		ldr	r3, .L208
 2702 008c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2703 0090 13F4801F 		tst	r3, #1048576
 2704 0094 09D0     		beq	.L205
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2705              		.loc 1 913 0 discriminator 1
 2706 0096 0368     		ldr	r3, [r0]
 2707 0098 D3F89423 		ldr	r2, [r3, #916]
 2708 009c 12F0C00F 		tst	r2, #192
ARM GAS  /tmp/ccWQyto6.s 			page 183


 2709 00a0 03D1     		bne	.L205
 2710 00a2 1A68     		ldr	r2, [r3]
 2711 00a4 22F48012 		bic	r2, r2, #1048576
 2712 00a8 1A60     		str	r2, [r3]
 2713              	.L205:
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2714              		.loc 1 913 0 discriminator 2
 2715 00aa 0D4B     		ldr	r3, .L208
 2716 00ac 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2717 00b0 13F4001F 		tst	r3, #2097152
 2718 00b4 09D0     		beq	.L206
 913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2719              		.loc 1 913 0 discriminator 1
 2720 00b6 0368     		ldr	r3, [r0]
 2721 00b8 D3F89423 		ldr	r2, [r3, #916]
 2722 00bc 12F4407F 		tst	r2, #768
 2723 00c0 03D1     		bne	.L206
 2724 00c2 1A68     		ldr	r2, [r3]
 2725 00c4 22F40012 		bic	r2, r2, #2097152
 2726 00c8 1A60     		str	r2, [r3]
 2727              	.L206:
 915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 2728              		.loc 1 915 0 is_stmt 1
 2729 00ca 0123     		movs	r3, #1
 2730 00cc 80F8C130 		strb	r3, [r0, #193]
 918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 2731              		.loc 1 918 0
 2732 00d0 0023     		movs	r3, #0
 2733 00d2 80F8C030 		strb	r3, [r0, #192]
 920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2734              		.loc 1 920 0
 2735 00d6 1846     		mov	r0, r3
 2736              	.LVL429:
 2737 00d8 7047     		bx	lr
 2738              	.LVL430:
 2739              	.L207:
 908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2740              		.loc 1 908 0
 2741 00da 0220     		movs	r0, #2
 2742              	.LVL431:
 921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2743              		.loc 1 921 0
 2744 00dc 7047     		bx	lr
 2745              	.L209:
 2746 00de 00BF     		.align	2
 2747              	.L208:
 2748 00e0 00000000 		.word	.LANCHOR0
 2749              		.cfi_endproc
 2750              	.LFE132:
 2752              		.section	.text.HAL_HRTIM_SimpleBaseStart_IT,"ax",%progbits
 2753              		.align	2
 2754              		.global	HAL_HRTIM_SimpleBaseStart_IT
 2755              		.thumb
 2756              		.thumb_func
 2758              	HAL_HRTIM_SimpleBaseStart_IT:
 2759              	.LFB133:
 939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
ARM GAS  /tmp/ccWQyto6.s 			page 184


 2760              		.loc 1 939 0
 2761              		.cfi_startproc
 2762              		@ args = 0, pretend = 0, frame = 0
 2763              		@ frame_needed = 0, uses_anonymous_args = 0
 2764              		@ link register save eliminated.
 2765              	.LVL432:
 2766 0000 10B4     		push	{r4}
 2767              	.LCFI13:
 2768              		.cfi_def_cfa_offset 4
 2769              		.cfi_offset 4, -4
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2770              		.loc 1 944 0
 2771 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 2772 0006 012B     		cmp	r3, #1
 2773 0008 25D0     		beq	.L214
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2774              		.loc 1 944 0 is_stmt 0 discriminator 2
 2775 000a 0123     		movs	r3, #1
 2776 000c 80F8C030 		strb	r3, [r0, #192]
 946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 2777              		.loc 1 946 0 is_stmt 1 discriminator 2
 2778 0010 0223     		movs	r3, #2
 2779 0012 80F8C130 		strb	r3, [r0, #193]
 949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 2780              		.loc 1 949 0 discriminator 2
 2781 0016 0529     		cmp	r1, #5
 2782 0018 05D1     		bne	.L212
 951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_ENABLE_IT(hhrtim, HRTIM_MASTER_IT_MREP);
 2783              		.loc 1 951 0
 2784 001a 0368     		ldr	r3, [r0]
 2785 001c DA68     		ldr	r2, [r3, #12]
 2786 001e 42F01002 		orr	r2, r2, #16
 2787 0022 DA60     		str	r2, [r3, #12]
 2788 0024 08E0     		b	.L213
 2789              	.L212:
 955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_REP);
 2790              		.loc 1 955 0
 2791 0026 0368     		ldr	r3, [r0]
 2792 0028 03EBC113 		add	r3, r3, r1, lsl #7
 2793 002c D3F88C20 		ldr	r2, [r3, #140]
 2794 0030 42F01002 		orr	r2, r2, #16
 2795 0034 C3F88C20 		str	r2, [r3, #140]
 2796              	.L213:
 959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2797              		.loc 1 959 0
 2798 0038 0368     		ldr	r3, [r0]
 2799 003a 1C68     		ldr	r4, [r3]
 2800 003c 084A     		ldr	r2, .L215
 2801 003e 52F82120 		ldr	r2, [r2, r1, lsl #2]
 2802 0042 2243     		orrs	r2, r2, r4
 2803 0044 1A60     		str	r2, [r3]
 961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 2804              		.loc 1 961 0
 2805 0046 0123     		movs	r3, #1
 2806 0048 80F8C130 		strb	r3, [r0, #193]
 964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 2807              		.loc 1 964 0
ARM GAS  /tmp/ccWQyto6.s 			page 185


 2808 004c 0023     		movs	r3, #0
 2809 004e 80F8C030 		strb	r3, [r0, #192]
 966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2810              		.loc 1 966 0
 2811 0052 1846     		mov	r0, r3
 2812              	.LVL433:
 2813 0054 00E0     		b	.L211
 2814              	.LVL434:
 2815              	.L214:
 944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2816              		.loc 1 944 0
 2817 0056 0220     		movs	r0, #2
 2818              	.LVL435:
 2819              	.L211:
 967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2820              		.loc 1 967 0
 2821 0058 5DF8044B 		ldr	r4, [sp], #4
 2822 005c 7047     		bx	lr
 2823              	.L216:
 2824 005e 00BF     		.align	2
 2825              	.L215:
 2826 0060 00000000 		.word	.LANCHOR0
 2827              		.cfi_endproc
 2828              	.LFE133:
 2830              		.section	.text.HAL_HRTIM_SimpleBaseStop_IT,"ax",%progbits
 2831              		.align	2
 2832              		.global	HAL_HRTIM_SimpleBaseStop_IT
 2833              		.thumb
 2834              		.thumb_func
 2836              	HAL_HRTIM_SimpleBaseStop_IT:
 2837              	.LFB134:
 985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2838              		.loc 1 985 0
 2839              		.cfi_startproc
 2840              		@ args = 0, pretend = 0, frame = 0
 2841              		@ frame_needed = 0, uses_anonymous_args = 0
 2842              		@ link register save eliminated.
 2843              	.LVL436:
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2844              		.loc 1 990 0
 2845 0000 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 2846 0004 012B     		cmp	r3, #1
 2847 0006 79D0     		beq	.L227
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2848              		.loc 1 990 0 is_stmt 0 discriminator 2
 2849 0008 0123     		movs	r3, #1
 2850 000a 80F8C030 		strb	r3, [r0, #192]
 992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 2851              		.loc 1 992 0 is_stmt 1 discriminator 2
 2852 000e 0223     		movs	r3, #2
 2853 0010 80F8C130 		strb	r3, [r0, #193]
 995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 2854              		.loc 1 995 0 discriminator 2
 2855 0014 0529     		cmp	r1, #5
 2856 0016 05D1     		bne	.L219
 997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_IT(hhrtim, HRTIM_MASTER_IT_MREP);
 2857              		.loc 1 997 0
ARM GAS  /tmp/ccWQyto6.s 			page 186


 2858 0018 0368     		ldr	r3, [r0]
 2859 001a DA68     		ldr	r2, [r3, #12]
 2860 001c 22F01002 		bic	r2, r2, #16
 2861 0020 DA60     		str	r2, [r3, #12]
 2862 0022 08E0     		b	.L220
 2863              	.L219:
1001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_REP);
 2864              		.loc 1 1001 0
 2865 0024 0368     		ldr	r3, [r0]
 2866 0026 03EBC113 		add	r3, r3, r1, lsl #7
 2867 002a D3F88C20 		ldr	r2, [r3, #140]
 2868 002e 22F01002 		bic	r2, r2, #16
 2869 0032 C3F88C20 		str	r2, [r3, #140]
 2870              	.L220:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2871              		.loc 1 1005 0
 2872 0036 324B     		ldr	r3, .L228
 2873 0038 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2874 003c 13F4803F 		tst	r3, #65536
 2875 0040 04D0     		beq	.L221
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2876              		.loc 1 1005 0 is_stmt 0 discriminator 1
 2877 0042 0368     		ldr	r3, [r0]
 2878 0044 1A68     		ldr	r2, [r3]
 2879 0046 22F48032 		bic	r2, r2, #65536
 2880 004a 1A60     		str	r2, [r3]
 2881              	.L221:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2882              		.loc 1 1005 0 discriminator 2
 2883 004c 2C4B     		ldr	r3, .L228
 2884 004e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2885 0052 13F4003F 		tst	r3, #131072
 2886 0056 09D0     		beq	.L222
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2887              		.loc 1 1005 0 discriminator 1
 2888 0058 0368     		ldr	r3, [r0]
 2889 005a D3F89423 		ldr	r2, [r3, #916]
 2890 005e 12F0030F 		tst	r2, #3
 2891 0062 03D1     		bne	.L222
 2892 0064 1A68     		ldr	r2, [r3]
 2893 0066 22F40032 		bic	r2, r2, #131072
 2894 006a 1A60     		str	r2, [r3]
 2895              	.L222:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2896              		.loc 1 1005 0 discriminator 2
 2897 006c 244B     		ldr	r3, .L228
 2898 006e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2899 0072 13F4802F 		tst	r3, #262144
 2900 0076 09D0     		beq	.L223
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2901              		.loc 1 1005 0 discriminator 1
 2902 0078 0368     		ldr	r3, [r0]
 2903 007a D3F89423 		ldr	r2, [r3, #916]
 2904 007e 12F00C0F 		tst	r2, #12
 2905 0082 03D1     		bne	.L223
 2906 0084 1A68     		ldr	r2, [r3]
 2907 0086 22F48022 		bic	r2, r2, #262144
ARM GAS  /tmp/ccWQyto6.s 			page 187


 2908 008a 1A60     		str	r2, [r3]
 2909              	.L223:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2910              		.loc 1 1005 0 discriminator 2
 2911 008c 1C4B     		ldr	r3, .L228
 2912 008e 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2913 0092 13F4002F 		tst	r3, #524288
 2914 0096 09D0     		beq	.L224
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2915              		.loc 1 1005 0 discriminator 1
 2916 0098 0368     		ldr	r3, [r0]
 2917 009a D3F89423 		ldr	r2, [r3, #916]
 2918 009e 12F0300F 		tst	r2, #48
 2919 00a2 03D1     		bne	.L224
 2920 00a4 1A68     		ldr	r2, [r3]
 2921 00a6 22F40022 		bic	r2, r2, #524288
 2922 00aa 1A60     		str	r2, [r3]
 2923              	.L224:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2924              		.loc 1 1005 0 discriminator 2
 2925 00ac 144B     		ldr	r3, .L228
 2926 00ae 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2927 00b2 13F4801F 		tst	r3, #1048576
 2928 00b6 09D0     		beq	.L225
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2929              		.loc 1 1005 0 discriminator 1
 2930 00b8 0368     		ldr	r3, [r0]
 2931 00ba D3F89423 		ldr	r2, [r3, #916]
 2932 00be 12F0C00F 		tst	r2, #192
 2933 00c2 03D1     		bne	.L225
 2934 00c4 1A68     		ldr	r2, [r3]
 2935 00c6 22F48012 		bic	r2, r2, #1048576
 2936 00ca 1A60     		str	r2, [r3]
 2937              	.L225:
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2938              		.loc 1 1005 0 discriminator 2
 2939 00cc 0C4B     		ldr	r3, .L228
 2940 00ce 53F82130 		ldr	r3, [r3, r1, lsl #2]
 2941 00d2 13F4001F 		tst	r3, #2097152
 2942 00d6 09D0     		beq	.L226
1005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 2943              		.loc 1 1005 0 discriminator 1
 2944 00d8 0368     		ldr	r3, [r0]
 2945 00da D3F89423 		ldr	r2, [r3, #916]
 2946 00de 12F4407F 		tst	r2, #768
 2947 00e2 03D1     		bne	.L226
 2948 00e4 1A68     		ldr	r2, [r3]
 2949 00e6 22F40012 		bic	r2, r2, #2097152
 2950 00ea 1A60     		str	r2, [r3]
 2951              	.L226:
1007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 2952              		.loc 1 1007 0 is_stmt 1
 2953 00ec 0123     		movs	r3, #1
 2954 00ee 80F8C130 		strb	r3, [r0, #193]
1010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 2955              		.loc 1 1010 0
 2956 00f2 0023     		movs	r3, #0
ARM GAS  /tmp/ccWQyto6.s 			page 188


 2957 00f4 80F8C030 		strb	r3, [r0, #192]
1012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 2958              		.loc 1 1012 0
 2959 00f8 1846     		mov	r0, r3
 2960              	.LVL437:
 2961 00fa 7047     		bx	lr
 2962              	.LVL438:
 2963              	.L227:
 990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 2964              		.loc 1 990 0
 2965 00fc 0220     		movs	r0, #2
 2966              	.LVL439:
1013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 2967              		.loc 1 1013 0
 2968 00fe 7047     		bx	lr
 2969              	.L229:
 2970              		.align	2
 2971              	.L228:
 2972 0100 00000000 		.word	.LANCHOR0
 2973              		.cfi_endproc
 2974              	.LFE134:
 2976              		.section	.text.HAL_HRTIM_SimpleBaseStart_DMA,"ax",%progbits
 2977              		.align	2
 2978              		.global	HAL_HRTIM_SimpleBaseStart_DMA
 2979              		.thumb
 2980              		.thumb_func
 2982              	HAL_HRTIM_SimpleBaseStart_DMA:
 2983              	.LFB135:
1037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 2984              		.loc 1 1037 0
 2985              		.cfi_startproc
 2986              		@ args = 4, pretend = 0, frame = 0
 2987              		@ frame_needed = 0, uses_anonymous_args = 0
 2988              	.LVL440:
 2989 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2990              	.LCFI14:
 2991              		.cfi_def_cfa_offset 24
 2992              		.cfi_offset 3, -24
 2993              		.cfi_offset 4, -20
 2994              		.cfi_offset 5, -16
 2995              		.cfi_offset 6, -12
 2996              		.cfi_offset 7, -8
 2997              		.cfi_offset 14, -4
 2998 0002 0446     		mov	r4, r0
 2999 0004 0D46     		mov	r5, r1
 3000 0006 1646     		mov	r6, r2
 3001 0008 1F46     		mov	r7, r3
1043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
 3002              		.loc 1 1043 0
 3003 000a 90F8C100 		ldrb	r0, [r0, #193]	@ zero_extendqisi2
 3004              	.LVL441:
 3005 000e C0B2     		uxtb	r0, r0
 3006 0010 0228     		cmp	r0, #2
 3007 0012 46D0     		beq	.L237
1047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
 3008              		.loc 1 1047 0
 3009 0014 94F8C130 		ldrb	r3, [r4, #193]	@ zero_extendqisi2
ARM GAS  /tmp/ccWQyto6.s 			page 189


 3010              	.LVL442:
 3011 0018 DBB2     		uxtb	r3, r3
 3012 001a 012B     		cmp	r3, #1
 3013 001c 09D1     		bne	.L232
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
 3014              		.loc 1 1049 0
 3015 001e 002A     		cmp	r2, #0
 3016 0020 41D0     		beq	.L238
1049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
 3017              		.loc 1 1049 0 is_stmt 0 discriminator 1
 3018 0022 002F     		cmp	r7, #0
 3019 0024 41D0     		beq	.L239
 3020 0026 069B     		ldr	r3, [sp, #24]
 3021 0028 002B     		cmp	r3, #0
 3022 002a 40D0     		beq	.L240
1055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
 3023              		.loc 1 1055 0 is_stmt 1
 3024 002c 0223     		movs	r3, #2
 3025 002e 84F8C130 		strb	r3, [r4, #193]
 3026              	.L232:
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3027              		.loc 1 1060 0
 3028 0032 94F8C030 		ldrb	r3, [r4, #192]	@ zero_extendqisi2
 3029 0036 012B     		cmp	r3, #1
 3030 0038 3BD0     		beq	.L241
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3031              		.loc 1 1060 0 is_stmt 0 discriminator 2
 3032 003a 0123     		movs	r3, #1
 3033 003c 84F8C030 		strb	r3, [r4, #192]
1063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 3034              		.loc 1 1063 0 is_stmt 1 discriminator 2
 3035 0040 2046     		mov	r0, r4
 3036 0042 2946     		mov	r1, r5
 3037              	.LVL443:
 3038 0044 FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 3039              	.LVL444:
1066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 3040              		.loc 1 1066 0 discriminator 2
 3041 0048 052D     		cmp	r5, #5
 3042 004a 02D1     		bne	.L233
1068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hdma->XferCpltCallback = HRTIM_DMAMasterCplt;
 3043              		.loc 1 1068 0
 3044 004c 1A4B     		ldr	r3, .L242
 3045 004e 8362     		str	r3, [r0, #40]
 3046 0050 01E0     		b	.L234
 3047              	.L233:
1072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
 3048              		.loc 1 1072 0
 3049 0052 1A4B     		ldr	r3, .L242+4
 3050 0054 8362     		str	r3, [r0, #40]
 3051              	.L234:
1076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
 3052              		.loc 1 1076 0
 3053 0056 1A4B     		ldr	r3, .L242+8
 3054 0058 0363     		str	r3, [r0, #48]
1079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
 3055              		.loc 1 1079 0
ARM GAS  /tmp/ccWQyto6.s 			page 190


 3056 005a 3146     		mov	r1, r6
 3057 005c 3A46     		mov	r2, r7
 3058 005e 069B     		ldr	r3, [sp, #24]
 3059 0060 FFF7FEFF 		bl	HAL_DMA_Start_IT
 3060              	.LVL445:
1082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 3061              		.loc 1 1082 0
 3062 0064 052D     		cmp	r5, #5
 3063 0066 05D1     		bne	.L235
1084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_ENABLE_DMA(hhrtim, HRTIM_MASTER_DMA_MREP);
 3064              		.loc 1 1084 0
 3065 0068 2368     		ldr	r3, [r4]
 3066 006a DA68     		ldr	r2, [r3, #12]
 3067 006c 42F48012 		orr	r2, r2, #1048576
 3068 0070 DA60     		str	r2, [r3, #12]
 3069 0072 08E0     		b	.L236
 3070              	.L235:
1088:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_REP);
 3071              		.loc 1 1088 0
 3072 0074 2368     		ldr	r3, [r4]
 3073 0076 03EBC513 		add	r3, r3, r5, lsl #7
 3074 007a D3F88C20 		ldr	r2, [r3, #140]
 3075 007e 42F48012 		orr	r2, r2, #1048576
 3076 0082 C3F88C20 		str	r2, [r3, #140]
 3077              	.L236:
1092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3078              		.loc 1 1092 0
 3079 0086 2368     		ldr	r3, [r4]
 3080 0088 1968     		ldr	r1, [r3]
 3081 008a 0E4A     		ldr	r2, .L242+12
 3082 008c 52F82520 		ldr	r2, [r2, r5, lsl #2]
 3083 0090 0A43     		orrs	r2, r2, r1
 3084 0092 1A60     		str	r2, [r3]
1094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 3085              		.loc 1 1094 0
 3086 0094 0123     		movs	r3, #1
 3087 0096 84F8C130 		strb	r3, [r4, #193]
1097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 3088              		.loc 1 1097 0
 3089 009a 0020     		movs	r0, #0
 3090 009c 84F8C000 		strb	r0, [r4, #192]
1099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 3091              		.loc 1 1099 0
 3092 00a0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3093              	.LVL446:
 3094              	.L237:
1045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 3095              		.loc 1 1045 0
 3096 00a2 0220     		movs	r0, #2
 3097 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3098              	.LVL447:
 3099              	.L238:
1051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
 3100              		.loc 1 1051 0
 3101 00a6 0120     		movs	r0, #1
 3102 00a8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3103              	.LVL448:
ARM GAS  /tmp/ccWQyto6.s 			page 191


 3104              	.L239:
 3105 00aa 0120     		movs	r0, #1
 3106 00ac F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3107              	.LVL449:
 3108              	.L240:
 3109 00ae 0120     		movs	r0, #1
 3110 00b0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3111              	.LVL450:
 3112              	.L241:
1060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3113              		.loc 1 1060 0
 3114 00b2 0220     		movs	r0, #2
1100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 3115              		.loc 1 1100 0
 3116 00b4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3117              	.LVL451:
 3118              	.L243:
 3119 00b6 00BF     		.align	2
 3120              	.L242:
 3121 00b8 00000000 		.word	HRTIM_DMAMasterCplt
 3122 00bc 00000000 		.word	HRTIM_DMATimerxCplt
 3123 00c0 00000000 		.word	HRTIM_DMAError
 3124 00c4 00000000 		.word	.LANCHOR0
 3125              		.cfi_endproc
 3126              	.LFE135:
 3128              		.section	.text.HAL_HRTIM_SimpleBaseStop_DMA,"ax",%progbits
 3129              		.align	2
 3130              		.global	HAL_HRTIM_SimpleBaseStop_DMA
 3131              		.thumb
 3132              		.thumb_func
 3134              	HAL_HRTIM_SimpleBaseStop_DMA:
 3135              	.LFB136:
1118:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 3136              		.loc 1 1118 0
 3137              		.cfi_startproc
 3138              		@ args = 0, pretend = 0, frame = 0
 3139              		@ frame_needed = 0, uses_anonymous_args = 0
 3140              	.LVL452:
 3141 0000 38B5     		push	{r3, r4, r5, lr}
 3142              	.LCFI15:
 3143              		.cfi_def_cfa_offset 16
 3144              		.cfi_offset 3, -16
 3145              		.cfi_offset 4, -12
 3146              		.cfi_offset 5, -8
 3147              		.cfi_offset 14, -4
 3148 0002 0446     		mov	r4, r0
 3149 0004 0D46     		mov	r5, r1
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3150              		.loc 1 1125 0
 3151 0006 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 3152 000a 012B     		cmp	r3, #1
 3153 000c 7DD0     		beq	.L254
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3154              		.loc 1 1125 0 is_stmt 0 discriminator 2
 3155 000e 0123     		movs	r3, #1
 3156 0010 80F8C030 		strb	r3, [r0, #192]
1127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
ARM GAS  /tmp/ccWQyto6.s 			page 192


 3157              		.loc 1 1127 0 is_stmt 1 discriminator 2
 3158 0014 0529     		cmp	r1, #5
 3159 0016 09D1     		bne	.L246
1130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_DMA_Abort(hhrtim->hdmaMaster);
 3160              		.loc 1 1130 0
 3161 0018 D0F8C400 		ldr	r0, [r0, #196]
 3162              	.LVL453:
 3163 001c FFF7FEFF 		bl	HAL_DMA_Abort
 3164              	.LVL454:
1133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_DMA(hhrtim, HRTIM_MASTER_DMA_MREP);
 3165              		.loc 1 1133 0
 3166 0020 2368     		ldr	r3, [r4]
 3167 0022 DA68     		ldr	r2, [r3, #12]
 3168 0024 22F48012 		bic	r2, r2, #1048576
 3169 0028 DA60     		str	r2, [r3, #12]
 3170 002a 0CE0     		b	.L247
 3171              	.LVL455:
 3172              	.L246:
1138:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 3173              		.loc 1 1138 0
 3174 002c FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 3175              	.LVL456:
1141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_DMA_Abort(hdma);
 3176              		.loc 1 1141 0
 3177 0030 FFF7FEFF 		bl	HAL_DMA_Abort
 3178              	.LVL457:
1144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_REP);
 3179              		.loc 1 1144 0
 3180 0034 2368     		ldr	r3, [r4]
 3181 0036 03EBC513 		add	r3, r3, r5, lsl #7
 3182 003a D3F88C20 		ldr	r2, [r3, #140]
 3183 003e 22F48012 		bic	r2, r2, #1048576
 3184 0042 C3F88C20 		str	r2, [r3, #140]
 3185              	.L247:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3186              		.loc 1 1148 0
 3187 0046 324B     		ldr	r3, .L255
 3188 0048 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3189 004c 13F4803F 		tst	r3, #65536
 3190 0050 04D0     		beq	.L248
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3191              		.loc 1 1148 0 is_stmt 0 discriminator 1
 3192 0052 2368     		ldr	r3, [r4]
 3193 0054 1A68     		ldr	r2, [r3]
 3194 0056 22F48032 		bic	r2, r2, #65536
 3195 005a 1A60     		str	r2, [r3]
 3196              	.L248:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3197              		.loc 1 1148 0 discriminator 2
 3198 005c 2C4B     		ldr	r3, .L255
 3199 005e 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3200 0062 13F4003F 		tst	r3, #131072
 3201 0066 09D0     		beq	.L249
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3202              		.loc 1 1148 0 discriminator 1
 3203 0068 2368     		ldr	r3, [r4]
 3204 006a D3F89423 		ldr	r2, [r3, #916]
ARM GAS  /tmp/ccWQyto6.s 			page 193


 3205 006e 12F0030F 		tst	r2, #3
 3206 0072 03D1     		bne	.L249
 3207 0074 1A68     		ldr	r2, [r3]
 3208 0076 22F40032 		bic	r2, r2, #131072
 3209 007a 1A60     		str	r2, [r3]
 3210              	.L249:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3211              		.loc 1 1148 0 discriminator 2
 3212 007c 244B     		ldr	r3, .L255
 3213 007e 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3214 0082 13F4802F 		tst	r3, #262144
 3215 0086 09D0     		beq	.L250
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3216              		.loc 1 1148 0 discriminator 1
 3217 0088 2368     		ldr	r3, [r4]
 3218 008a D3F89423 		ldr	r2, [r3, #916]
 3219 008e 12F00C0F 		tst	r2, #12
 3220 0092 03D1     		bne	.L250
 3221 0094 1A68     		ldr	r2, [r3]
 3222 0096 22F48022 		bic	r2, r2, #262144
 3223 009a 1A60     		str	r2, [r3]
 3224              	.L250:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3225              		.loc 1 1148 0 discriminator 2
 3226 009c 1C4B     		ldr	r3, .L255
 3227 009e 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3228 00a2 13F4002F 		tst	r3, #524288
 3229 00a6 09D0     		beq	.L251
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3230              		.loc 1 1148 0 discriminator 1
 3231 00a8 2368     		ldr	r3, [r4]
 3232 00aa D3F89423 		ldr	r2, [r3, #916]
 3233 00ae 12F0300F 		tst	r2, #48
 3234 00b2 03D1     		bne	.L251
 3235 00b4 1A68     		ldr	r2, [r3]
 3236 00b6 22F40022 		bic	r2, r2, #524288
 3237 00ba 1A60     		str	r2, [r3]
 3238              	.L251:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3239              		.loc 1 1148 0 discriminator 2
 3240 00bc 144B     		ldr	r3, .L255
 3241 00be 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3242 00c2 13F4801F 		tst	r3, #1048576
 3243 00c6 09D0     		beq	.L252
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3244              		.loc 1 1148 0 discriminator 1
 3245 00c8 2368     		ldr	r3, [r4]
 3246 00ca D3F89423 		ldr	r2, [r3, #916]
 3247 00ce 12F0C00F 		tst	r2, #192
 3248 00d2 03D1     		bne	.L252
 3249 00d4 1A68     		ldr	r2, [r3]
 3250 00d6 22F48012 		bic	r2, r2, #1048576
 3251 00da 1A60     		str	r2, [r3]
 3252              	.L252:
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3253              		.loc 1 1148 0 discriminator 2
 3254 00dc 0C4B     		ldr	r3, .L255
ARM GAS  /tmp/ccWQyto6.s 			page 194


 3255 00de 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3256 00e2 13F4001F 		tst	r3, #2097152
 3257 00e6 09D0     		beq	.L253
1148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3258              		.loc 1 1148 0 discriminator 1
 3259 00e8 2368     		ldr	r3, [r4]
 3260 00ea D3F89423 		ldr	r2, [r3, #916]
 3261 00ee 12F4407F 		tst	r2, #768
 3262 00f2 03D1     		bne	.L253
 3263 00f4 1A68     		ldr	r2, [r3]
 3264 00f6 22F40012 		bic	r2, r2, #2097152
 3265 00fa 1A60     		str	r2, [r3]
 3266              	.L253:
1150:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 3267              		.loc 1 1150 0 is_stmt 1
 3268 00fc 0123     		movs	r3, #1
 3269 00fe 84F8C130 		strb	r3, [r4, #193]
1153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 3270              		.loc 1 1153 0
 3271 0102 0020     		movs	r0, #0
 3272 0104 84F8C000 		strb	r0, [r4, #192]
1155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 3273              		.loc 1 1155 0
 3274 0108 38BD     		pop	{r3, r4, r5, pc}
 3275              	.LVL458:
 3276              	.L254:
1125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3277              		.loc 1 1125 0
 3278 010a 0220     		movs	r0, #2
 3279              	.LVL459:
1156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 3280              		.loc 1 1156 0
 3281 010c 38BD     		pop	{r3, r4, r5, pc}
 3282              	.LVL460:
 3283              	.L256:
 3284 010e 00BF     		.align	2
 3285              	.L255:
 3286 0110 00000000 		.word	.LANCHOR0
 3287              		.cfi_endproc
 3288              	.LFE136:
 3290              		.section	.text.HAL_HRTIM_SimpleOCChannelConfig,"ax",%progbits
 3291              		.align	2
 3292              		.global	HAL_HRTIM_SimpleOCChannelConfig
 3293              		.thumb
 3294              		.thumb_func
 3296              	HAL_HRTIM_SimpleOCChannelConfig:
 3297              	.LFB137:
1221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 3298              		.loc 1 1221 0
 3299              		.cfi_startproc
 3300              		@ args = 0, pretend = 0, frame = 48
 3301              		@ frame_needed = 0, uses_anonymous_args = 0
 3302              	.LVL461:
 3303 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3304              	.LCFI16:
 3305              		.cfi_def_cfa_offset 24
 3306              		.cfi_offset 4, -24
ARM GAS  /tmp/ccWQyto6.s 			page 195


 3307              		.cfi_offset 5, -20
 3308              		.cfi_offset 6, -16
 3309              		.cfi_offset 7, -12
 3310              		.cfi_offset 8, -8
 3311              		.cfi_offset 14, -4
 3312 0004 8CB0     		sub	sp, sp, #48
 3313              	.LCFI17:
 3314              		.cfi_def_cfa_offset 72
 3315 0006 0646     		mov	r6, r0
 3316 0008 8846     		mov	r8, r1
 3317 000a 1546     		mov	r5, r2
 3318 000c 1F46     		mov	r7, r3
 3319              	.LVL462:
1223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareCfgTypeDef CompareCfg = {0};
 3320              		.loc 1 1223 0
 3321 000e 0024     		movs	r4, #0
 3322 0010 0994     		str	r4, [sp, #36]
 3323 0012 0A94     		str	r4, [sp, #40]
 3324 0014 0B94     		str	r4, [sp, #44]
1224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputCfgTypeDef OutputCfg = {0};
 3325              		.loc 1 1224 0
 3326 0016 0194     		str	r4, [sp, #4]
 3327 0018 0294     		str	r4, [sp, #8]
 3328 001a 0394     		str	r4, [sp, #12]
 3329 001c 0494     		str	r4, [sp, #16]
 3330 001e 0594     		str	r4, [sp, #20]
 3331 0020 0694     		str	r4, [sp, #24]
 3332 0022 0794     		str	r4, [sp, #28]
 3333 0024 0894     		str	r4, [sp, #32]
1232:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 3334              		.loc 1 1232 0
 3335 0026 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 3336              	.LVL463:
 3337 002a DBB2     		uxtb	r3, r3
 3338 002c 022B     		cmp	r3, #2
 3339 002e 65D0     		beq	.L275
1238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 3340              		.loc 1 1238 0
 3341 0030 0223     		movs	r3, #2
 3342 0032 80F8C130 		strb	r3, [r0, #193]
1241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OCChannel)
 3343              		.loc 1 1241 0
 3344 0036 102A     		cmp	r2, #16
 3345 0038 1ED0     		beq	.L276
 3346 003a 0AD8     		bhi	.L261
 3347 003c 9A42     		cmp	r2, r3
 3348 003e 19D0     		beq	.L262
 3349 0040 02D8     		bhi	.L263
 3350 0042 012A     		cmp	r2, #1
 3351 0044 13D1     		bne	.L259
 3352 0046 17E0     		b	.L276
 3353              	.L263:
 3354 0048 042A     		cmp	r2, #4
 3355 004a 15D0     		beq	.L276
 3356 004c 082A     		cmp	r2, #8
 3357 004e 0ED1     		bne	.L259
 3358 0050 10E0     		b	.L262
ARM GAS  /tmp/ccWQyto6.s 			page 196


 3359              	.L261:
 3360 0052 802A     		cmp	r2, #128
 3361 0054 0ED0     		beq	.L262
 3362 0056 04D8     		bhi	.L264
 3363 0058 202A     		cmp	r2, #32
 3364 005a 0BD0     		beq	.L262
 3365 005c 402A     		cmp	r2, #64
 3366 005e 06D1     		bne	.L259
 3367 0060 0AE0     		b	.L276
 3368              	.L264:
 3369 0062 B2F5807F 		cmp	r2, #256
 3370 0066 07D0     		beq	.L276
 3371 0068 B2F5007F 		cmp	r2, #512
 3372 006c 02D0     		beq	.L262
 3373              	.L259:
1222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CompareUnit = 0xFFFFFFFFU;
 3374              		.loc 1 1222 0
 3375 006e 4FF0FF34 		mov	r4, #-1
 3376 0072 02E0     		b	.L260
 3377              	.L262:
 3378              	.LVL464:
1258:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_2;
 3379              		.loc 1 1258 0
 3380 0074 0224     		movs	r4, #2
1260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 3381              		.loc 1 1260 0
 3382 0076 00E0     		b	.L260
 3383              	.LVL465:
 3384              	.L276:
1249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_1;
 3385              		.loc 1 1249 0
 3386 0078 0124     		movs	r4, #1
 3387              	.LVL466:
 3388              	.L260:
1265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.CompareValue = pSimpleOCChannelCfg->Pulse;
 3389              		.loc 1 1265 0
 3390 007a 7A68     		ldr	r2, [r7, #4]
 3391              	.LVL467:
 3392 007c 0CAB     		add	r3, sp, #48
 3393 007e 43F80C2D 		str	r2, [r3, #-12]!
1269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareUnitConfig(hhrtim,
 3394              		.loc 1 1269 0
 3395 0082 3046     		mov	r0, r6
 3396              	.LVL468:
 3397 0084 4146     		mov	r1, r8
 3398              	.LVL469:
 3399 0086 2246     		mov	r2, r4
 3400 0088 FFF7FEFF 		bl	HRTIM_CompareUnitConfig
 3401              	.LVL470:
1275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.Polarity = pSimpleOCChannelCfg->Polarity;
 3402              		.loc 1 1275 0
 3403 008c BB68     		ldr	r3, [r7, #8]
 3404 008e 0193     		str	r3, [sp, #4]
1276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleLevel = pSimpleOCChannelCfg->IdleLevel;
 3405              		.loc 1 1276 0
 3406 0090 FB68     		ldr	r3, [r7, #12]
 3407 0092 0593     		str	r3, [sp, #20]
ARM GAS  /tmp/ccWQyto6.s 			page 197


1277:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
 3408              		.loc 1 1277 0
 3409 0094 0023     		movs	r3, #0
 3410 0096 0693     		str	r3, [sp, #24]
1278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
 3411              		.loc 1 1278 0
 3412 0098 0493     		str	r3, [sp, #16]
1279:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
 3413              		.loc 1 1279 0
 3414 009a 0793     		str	r3, [sp, #28]
1280:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
 3415              		.loc 1 1280 0
 3416 009c 0893     		str	r3, [sp, #32]
1282:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (pSimpleOCChannelCfg->Mode)
 3417              		.loc 1 1282 0
 3418 009e 3B68     		ldr	r3, [r7]
 3419 00a0 022B     		cmp	r3, #2
 3420 00a2 17D0     		beq	.L266
 3421 00a4 032B     		cmp	r3, #3
 3422 00a6 0BD0     		beq	.L267
 3423 00a8 012B     		cmp	r3, #1
 3424 00aa 1CD1     		bne	.L265
1286:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (CompareUnit == HRTIM_COMPAREUNIT_1)
 3425              		.loc 1 1286 0
 3426 00ac 012C     		cmp	r4, #1
 3427 00ae 02D1     		bne	.L269
1288:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
 3428              		.loc 1 1288 0
 3429 00b0 0823     		movs	r3, #8
 3430 00b2 0293     		str	r3, [sp, #8]
 3431 00b4 01E0     		b	.L270
 3432              	.L269:
1292:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
 3433              		.loc 1 1292 0
 3434 00b6 1023     		movs	r3, #16
 3435 00b8 0293     		str	r3, [sp, #8]
 3436              	.L270:
1294:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       OutputCfg.ResetSource = OutputCfg.SetSource;
 3437              		.loc 1 1294 0
 3438 00ba 029B     		ldr	r3, [sp, #8]
 3439 00bc 0393     		str	r3, [sp, #12]
1296:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 3440              		.loc 1 1296 0
 3441 00be 12E0     		b	.L265
 3442              	.L267:
1299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (CompareUnit == HRTIM_COMPAREUNIT_1)
 3443              		.loc 1 1299 0
 3444 00c0 012C     		cmp	r4, #1
 3445 00c2 02D1     		bne	.L271
1301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
 3446              		.loc 1 1301 0
 3447 00c4 0823     		movs	r3, #8
 3448 00c6 0293     		str	r3, [sp, #8]
 3449 00c8 01E0     		b	.L272
 3450              	.L271:
1305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
 3451              		.loc 1 1305 0
ARM GAS  /tmp/ccWQyto6.s 			page 198


 3452 00ca 1023     		movs	r3, #16
 3453 00cc 0293     		str	r3, [sp, #8]
 3454              	.L272:
1307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       OutputCfg.ResetSource = HRTIM_OUTPUTRESET_NONE;
 3455              		.loc 1 1307 0
 3456 00ce 0023     		movs	r3, #0
 3457 00d0 0393     		str	r3, [sp, #12]
1309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 3458              		.loc 1 1309 0
 3459 00d2 08E0     		b	.L265
 3460              	.L266:
1312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (CompareUnit == HRTIM_COMPAREUNIT_1)
 3461              		.loc 1 1312 0
 3462 00d4 012C     		cmp	r4, #1
 3463 00d6 02D1     		bne	.L273
1314:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.ResetSource = HRTIM_OUTPUTRESET_TIMCMP1;
 3464              		.loc 1 1314 0
 3465 00d8 0823     		movs	r3, #8
 3466 00da 0393     		str	r3, [sp, #12]
 3467 00dc 01E0     		b	.L274
 3468              	.L273:
1318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         OutputCfg.ResetSource = HRTIM_OUTPUTRESET_TIMCMP2;
 3469              		.loc 1 1318 0
 3470 00de 1023     		movs	r3, #16
 3471 00e0 0393     		str	r3, [sp, #12]
 3472              	.L274:
1320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       OutputCfg.SetSource = HRTIM_OUTPUTSET_NONE;
 3473              		.loc 1 1320 0
 3474 00e2 0023     		movs	r3, #0
 3475 00e4 0293     		str	r3, [sp, #8]
 3476              	.L265:
1327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
 3477              		.loc 1 1327 0
 3478 00e6 3046     		mov	r0, r6
 3479 00e8 4146     		mov	r1, r8
 3480 00ea 2A46     		mov	r2, r5
 3481 00ec 01AB     		add	r3, sp, #4
 3482 00ee FFF7FEFF 		bl	HRTIM_OutputConfig
 3483              	.LVL471:
1333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 3484              		.loc 1 1333 0
 3485 00f2 0123     		movs	r3, #1
 3486 00f4 86F8C130 		strb	r3, [r6, #193]
1335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 3487              		.loc 1 1335 0
 3488 00f8 0020     		movs	r0, #0
 3489 00fa 00E0     		b	.L258
 3490              	.LVL472:
 3491              	.L275:
1234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 3492              		.loc 1 1234 0
 3493 00fc 0220     		movs	r0, #2
 3494              	.LVL473:
 3495              	.L258:
1336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 3496              		.loc 1 1336 0
 3497 00fe 0CB0     		add	sp, sp, #48
ARM GAS  /tmp/ccWQyto6.s 			page 199


 3498              		@ sp needed
 3499 0100 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3500              		.cfi_endproc
 3501              	.LFE137:
 3503              		.section	.text.HAL_HRTIM_SimpleOCStart,"ax",%progbits
 3504              		.align	2
 3505              		.global	HAL_HRTIM_SimpleOCStart
 3506              		.thumb
 3507              		.thumb_func
 3509              	HAL_HRTIM_SimpleOCStart:
 3510              	.LFB138:
1365:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 3511              		.loc 1 1365 0
 3512              		.cfi_startproc
 3513              		@ args = 0, pretend = 0, frame = 0
 3514              		@ frame_needed = 0, uses_anonymous_args = 0
 3515              		@ link register save eliminated.
 3516              	.LVL474:
 3517 0000 30B4     		push	{r4, r5}
 3518              	.LCFI18:
 3519              		.cfi_def_cfa_offset 8
 3520              		.cfi_offset 4, -8
 3521              		.cfi_offset 5, -4
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3522              		.loc 1 1370 0
 3523 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 3524 0006 012B     		cmp	r3, #1
 3525 0008 19D0     		beq	.L279
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3526              		.loc 1 1370 0 is_stmt 0 discriminator 2
 3527 000a 0123     		movs	r3, #1
 3528 000c 80F8C030 		strb	r3, [r0, #192]
1372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 3529              		.loc 1 1372 0 is_stmt 1 discriminator 2
 3530 0010 0224     		movs	r4, #2
 3531 0012 80F8C140 		strb	r4, [r0, #193]
1375:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OCChannel;
 3532              		.loc 1 1375 0 discriminator 2
 3533 0016 0468     		ldr	r4, [r0]
 3534 0018 D4F89453 		ldr	r5, [r4, #916]
 3535 001c 2A43     		orrs	r2, r2, r5
 3536              	.LVL475:
 3537 001e C4F89423 		str	r2, [r4, #916]
1378:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3538              		.loc 1 1378 0 discriminator 2
 3539 0022 0268     		ldr	r2, [r0]
 3540 0024 1468     		ldr	r4, [r2]
 3541 0026 074D     		ldr	r5, .L280
 3542 0028 55F82110 		ldr	r1, [r5, r1, lsl #2]
 3543              	.LVL476:
 3544 002c 2143     		orrs	r1, r1, r4
 3545 002e 1160     		str	r1, [r2]
1380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 3546              		.loc 1 1380 0 discriminator 2
 3547 0030 80F8C130 		strb	r3, [r0, #193]
1383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 3548              		.loc 1 1383 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 200


 3549 0034 0023     		movs	r3, #0
 3550 0036 80F8C030 		strb	r3, [r0, #192]
1385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 3551              		.loc 1 1385 0 discriminator 2
 3552 003a 1846     		mov	r0, r3
 3553              	.LVL477:
 3554 003c 00E0     		b	.L278
 3555              	.LVL478:
 3556              	.L279:
1370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3557              		.loc 1 1370 0
 3558 003e 0220     		movs	r0, #2
 3559              	.LVL479:
 3560              	.L278:
1386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 3561              		.loc 1 1386 0
 3562 0040 30BC     		pop	{r4, r5}
 3563 0042 7047     		bx	lr
 3564              	.L281:
 3565              		.align	2
 3566              	.L280:
 3567 0044 00000000 		.word	.LANCHOR0
 3568              		.cfi_endproc
 3569              	.LFE138:
 3571              		.section	.text.HAL_HRTIM_SimpleOCStop,"ax",%progbits
 3572              		.align	2
 3573              		.global	HAL_HRTIM_SimpleOCStop
 3574              		.thumb
 3575              		.thumb_func
 3577              	HAL_HRTIM_SimpleOCStop:
 3578              	.LFB139:
1415:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 3579              		.loc 1 1415 0
 3580              		.cfi_startproc
 3581              		@ args = 0, pretend = 0, frame = 0
 3582              		@ frame_needed = 0, uses_anonymous_args = 0
 3583              		@ link register save eliminated.
 3584              	.LVL480:
 3585 0000 10B4     		push	{r4}
 3586              	.LCFI19:
 3587              		.cfi_def_cfa_offset 4
 3588              		.cfi_offset 4, -4
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3589              		.loc 1 1420 0
 3590 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 3591 0006 012B     		cmp	r3, #1
 3592 0008 6ED0     		beq	.L290
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3593              		.loc 1 1420 0 is_stmt 0 discriminator 2
 3594 000a 0123     		movs	r3, #1
 3595 000c 80F8C030 		strb	r3, [r0, #192]
1422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 3596              		.loc 1 1422 0 is_stmt 1 discriminator 2
 3597 0010 0223     		movs	r3, #2
 3598 0012 80F8C130 		strb	r3, [r0, #193]
1425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OCChannel;
 3599              		.loc 1 1425 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 201


 3600 0016 0368     		ldr	r3, [r0]
 3601 0018 D3F89843 		ldr	r4, [r3, #920]
 3602 001c 2243     		orrs	r2, r2, r4
 3603              	.LVL481:
 3604 001e C3F89823 		str	r2, [r3, #920]
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3605              		.loc 1 1428 0 discriminator 2
 3606 0022 334B     		ldr	r3, .L291
 3607 0024 53F82130 		ldr	r3, [r3, r1, lsl #2]
 3608 0028 13F4803F 		tst	r3, #65536
 3609 002c 04D0     		beq	.L284
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3610              		.loc 1 1428 0 is_stmt 0 discriminator 1
 3611 002e 0368     		ldr	r3, [r0]
 3612 0030 1A68     		ldr	r2, [r3]
 3613 0032 22F48032 		bic	r2, r2, #65536
 3614 0036 1A60     		str	r2, [r3]
 3615              	.L284:
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3616              		.loc 1 1428 0 discriminator 2
 3617 0038 2D4B     		ldr	r3, .L291
 3618 003a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 3619 003e 13F4003F 		tst	r3, #131072
 3620 0042 09D0     		beq	.L285
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3621              		.loc 1 1428 0 discriminator 1
 3622 0044 0368     		ldr	r3, [r0]
 3623 0046 D3F89423 		ldr	r2, [r3, #916]
 3624 004a 12F0030F 		tst	r2, #3
 3625 004e 03D1     		bne	.L285
 3626 0050 1A68     		ldr	r2, [r3]
 3627 0052 22F40032 		bic	r2, r2, #131072
 3628 0056 1A60     		str	r2, [r3]
 3629              	.L285:
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3630              		.loc 1 1428 0 discriminator 2
 3631 0058 254B     		ldr	r3, .L291
 3632 005a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 3633 005e 13F4802F 		tst	r3, #262144
 3634 0062 09D0     		beq	.L286
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3635              		.loc 1 1428 0 discriminator 1
 3636 0064 0368     		ldr	r3, [r0]
 3637 0066 D3F89423 		ldr	r2, [r3, #916]
 3638 006a 12F00C0F 		tst	r2, #12
 3639 006e 03D1     		bne	.L286
 3640 0070 1A68     		ldr	r2, [r3]
 3641 0072 22F48022 		bic	r2, r2, #262144
 3642 0076 1A60     		str	r2, [r3]
 3643              	.L286:
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3644              		.loc 1 1428 0 discriminator 2
 3645 0078 1D4B     		ldr	r3, .L291
 3646 007a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 3647 007e 13F4002F 		tst	r3, #524288
 3648 0082 09D0     		beq	.L287
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
ARM GAS  /tmp/ccWQyto6.s 			page 202


 3649              		.loc 1 1428 0 discriminator 1
 3650 0084 0368     		ldr	r3, [r0]
 3651 0086 D3F89423 		ldr	r2, [r3, #916]
 3652 008a 12F0300F 		tst	r2, #48
 3653 008e 03D1     		bne	.L287
 3654 0090 1A68     		ldr	r2, [r3]
 3655 0092 22F40022 		bic	r2, r2, #524288
 3656 0096 1A60     		str	r2, [r3]
 3657              	.L287:
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3658              		.loc 1 1428 0 discriminator 2
 3659 0098 154B     		ldr	r3, .L291
 3660 009a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 3661 009e 13F4801F 		tst	r3, #1048576
 3662 00a2 09D0     		beq	.L288
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3663              		.loc 1 1428 0 discriminator 1
 3664 00a4 0368     		ldr	r3, [r0]
 3665 00a6 D3F89423 		ldr	r2, [r3, #916]
 3666 00aa 12F0C00F 		tst	r2, #192
 3667 00ae 03D1     		bne	.L288
 3668 00b0 1A68     		ldr	r2, [r3]
 3669 00b2 22F48012 		bic	r2, r2, #1048576
 3670 00b6 1A60     		str	r2, [r3]
 3671              	.L288:
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3672              		.loc 1 1428 0 discriminator 2
 3673 00b8 0D4B     		ldr	r3, .L291
 3674 00ba 53F82130 		ldr	r3, [r3, r1, lsl #2]
 3675 00be 13F4001F 		tst	r3, #2097152
 3676 00c2 09D0     		beq	.L289
1428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3677              		.loc 1 1428 0 discriminator 1
 3678 00c4 0368     		ldr	r3, [r0]
 3679 00c6 D3F89423 		ldr	r2, [r3, #916]
 3680 00ca 12F4407F 		tst	r2, #768
 3681 00ce 03D1     		bne	.L289
 3682 00d0 1A68     		ldr	r2, [r3]
 3683 00d2 22F40012 		bic	r2, r2, #2097152
 3684 00d6 1A60     		str	r2, [r3]
 3685              	.L289:
1430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 3686              		.loc 1 1430 0 is_stmt 1
 3687 00d8 0123     		movs	r3, #1
 3688 00da 80F8C130 		strb	r3, [r0, #193]
1433:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 3689              		.loc 1 1433 0
 3690 00de 0023     		movs	r3, #0
 3691 00e0 80F8C030 		strb	r3, [r0, #192]
1435:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 3692              		.loc 1 1435 0
 3693 00e4 1846     		mov	r0, r3
 3694              	.LVL482:
 3695 00e6 00E0     		b	.L283
 3696              	.LVL483:
 3697              	.L290:
1420:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
ARM GAS  /tmp/ccWQyto6.s 			page 203


 3698              		.loc 1 1420 0
 3699 00e8 0220     		movs	r0, #2
 3700              	.LVL484:
 3701              	.L283:
1436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 3702              		.loc 1 1436 0
 3703 00ea 5DF8044B 		ldr	r4, [sp], #4
 3704 00ee 7047     		bx	lr
 3705              	.L292:
 3706              		.align	2
 3707              	.L291:
 3708 00f0 00000000 		.word	.LANCHOR0
 3709              		.cfi_endproc
 3710              	.LFE139:
 3712              		.section	.text.HAL_HRTIM_SimpleOCStart_IT,"ax",%progbits
 3713              		.align	2
 3714              		.global	HAL_HRTIM_SimpleOCStart_IT
 3715              		.thumb
 3716              		.thumb_func
 3718              	HAL_HRTIM_SimpleOCStart_IT:
 3719              	.LFB140:
1470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 3720              		.loc 1 1470 0
 3721              		.cfi_startproc
 3722              		@ args = 0, pretend = 0, frame = 0
 3723              		@ frame_needed = 0, uses_anonymous_args = 0
 3724              	.LVL485:
 3725 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 3726              	.LCFI20:
 3727              		.cfi_def_cfa_offset 24
 3728              		.cfi_offset 3, -24
 3729              		.cfi_offset 4, -20
 3730              		.cfi_offset 5, -16
 3731              		.cfi_offset 6, -12
 3732              		.cfi_offset 7, -8
 3733              		.cfi_offset 14, -4
 3734 0002 0446     		mov	r4, r0
 3735 0004 0D46     		mov	r5, r1
 3736 0006 1646     		mov	r6, r2
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3737              		.loc 1 1477 0
 3738 0008 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 3739 000c 012B     		cmp	r3, #1
 3740 000e 22D0     		beq	.L295
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3741              		.loc 1 1477 0 is_stmt 0 discriminator 2
 3742 0010 0127     		movs	r7, #1
 3743 0012 80F8C070 		strb	r7, [r0, #192]
1479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 3744              		.loc 1 1479 0 is_stmt 1 discriminator 2
 3745 0016 0223     		movs	r3, #2
 3746 0018 80F8C130 		strb	r3, [r0, #193]
1482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   interrupt = HRTIM_GetITFromOCMode(hhrtim, TimerIdx, OCChannel);
 3747              		.loc 1 1482 0 discriminator 2
 3748 001c FFF7FEFF 		bl	HRTIM_GetITFromOCMode
 3749              	.LVL486:
1485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OCChannel;
ARM GAS  /tmp/ccWQyto6.s 			page 204


 3750              		.loc 1 1485 0 discriminator 2
 3751 0020 2368     		ldr	r3, [r4]
 3752 0022 D3F89423 		ldr	r2, [r3, #916]
 3753 0026 1643     		orrs	r6, r6, r2
 3754              	.LVL487:
 3755 0028 C3F89463 		str	r6, [r3, #916]
1488:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, interrupt);
 3756              		.loc 1 1488 0 discriminator 2
 3757 002c 2368     		ldr	r3, [r4]
 3758 002e 03EBC513 		add	r3, r3, r5, lsl #7
 3759 0032 D3F88C20 		ldr	r2, [r3, #140]
 3760 0036 1043     		orrs	r0, r0, r2
 3761              	.LVL488:
 3762 0038 C3F88C00 		str	r0, [r3, #140]
1491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3763              		.loc 1 1491 0 discriminator 2
 3764 003c 2368     		ldr	r3, [r4]
 3765 003e 1968     		ldr	r1, [r3]
 3766 0040 064A     		ldr	r2, .L296
 3767 0042 52F82520 		ldr	r2, [r2, r5, lsl #2]
 3768 0046 0A43     		orrs	r2, r2, r1
 3769 0048 1A60     		str	r2, [r3]
1493:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 3770              		.loc 1 1493 0 discriminator 2
 3771 004a 84F8C170 		strb	r7, [r4, #193]
1496:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 3772              		.loc 1 1496 0 discriminator 2
 3773 004e 0020     		movs	r0, #0
 3774 0050 84F8C000 		strb	r0, [r4, #192]
1498:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 3775              		.loc 1 1498 0 discriminator 2
 3776 0054 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3777              	.LVL489:
 3778              	.L295:
1477:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3779              		.loc 1 1477 0
 3780 0056 0220     		movs	r0, #2
 3781              	.LVL490:
1499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 3782              		.loc 1 1499 0
 3783 0058 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 3784              	.LVL491:
 3785              	.L297:
 3786 005a 00BF     		.align	2
 3787              	.L296:
 3788 005c 00000000 		.word	.LANCHOR0
 3789              		.cfi_endproc
 3790              	.LFE140:
 3792              		.section	.text.HAL_HRTIM_SimpleOCStop_IT,"ax",%progbits
 3793              		.align	2
 3794              		.global	HAL_HRTIM_SimpleOCStop_IT
 3795              		.thumb
 3796              		.thumb_func
 3798              	HAL_HRTIM_SimpleOCStop_IT:
 3799              	.LFB141:
1529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 3800              		.loc 1 1529 0
ARM GAS  /tmp/ccWQyto6.s 			page 205


 3801              		.cfi_startproc
 3802              		@ args = 0, pretend = 0, frame = 0
 3803              		@ frame_needed = 0, uses_anonymous_args = 0
 3804              	.LVL492:
 3805 0000 38B5     		push	{r3, r4, r5, lr}
 3806              	.LCFI21:
 3807              		.cfi_def_cfa_offset 16
 3808              		.cfi_offset 3, -16
 3809              		.cfi_offset 4, -12
 3810              		.cfi_offset 5, -8
 3811              		.cfi_offset 14, -4
 3812 0002 0446     		mov	r4, r0
 3813 0004 0D46     		mov	r5, r1
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3814              		.loc 1 1536 0
 3815 0006 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 3816 000a 012B     		cmp	r3, #1
 3817 000c 79D0     		beq	.L306
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3818              		.loc 1 1536 0 is_stmt 0 discriminator 2
 3819 000e 0123     		movs	r3, #1
 3820 0010 80F8C030 		strb	r3, [r0, #192]
1538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 3821              		.loc 1 1538 0 is_stmt 1 discriminator 2
 3822 0014 0223     		movs	r3, #2
 3823 0016 80F8C130 		strb	r3, [r0, #193]
1541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OCChannel;
 3824              		.loc 1 1541 0 discriminator 2
 3825 001a 0368     		ldr	r3, [r0]
 3826 001c D3F89813 		ldr	r1, [r3, #920]
 3827              	.LVL493:
 3828 0020 1143     		orrs	r1, r1, r2
 3829 0022 C3F89813 		str	r1, [r3, #920]
1544:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   interrupt = HRTIM_GetITFromOCMode(hhrtim, TimerIdx, OCChannel);
 3830              		.loc 1 1544 0 discriminator 2
 3831 0026 2946     		mov	r1, r5
 3832 0028 FFF7FEFF 		bl	HRTIM_GetITFromOCMode
 3833              	.LVL494:
1547:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, interrupt);
 3834              		.loc 1 1547 0 discriminator 2
 3835 002c 2368     		ldr	r3, [r4]
 3836 002e 03EBC513 		add	r3, r3, r5, lsl #7
 3837 0032 D3F88C20 		ldr	r2, [r3, #140]
 3838 0036 22EA0000 		bic	r0, r2, r0
 3839              	.LVL495:
 3840 003a C3F88C00 		str	r0, [r3, #140]
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3841              		.loc 1 1550 0 discriminator 2
 3842 003e 324B     		ldr	r3, .L307
 3843 0040 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3844 0044 13F4803F 		tst	r3, #65536
 3845 0048 04D0     		beq	.L300
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3846              		.loc 1 1550 0 is_stmt 0 discriminator 1
 3847 004a 2368     		ldr	r3, [r4]
 3848 004c 1A68     		ldr	r2, [r3]
 3849 004e 22F48032 		bic	r2, r2, #65536
ARM GAS  /tmp/ccWQyto6.s 			page 206


 3850 0052 1A60     		str	r2, [r3]
 3851              	.L300:
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3852              		.loc 1 1550 0 discriminator 2
 3853 0054 2C4B     		ldr	r3, .L307
 3854 0056 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3855 005a 13F4003F 		tst	r3, #131072
 3856 005e 09D0     		beq	.L301
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3857              		.loc 1 1550 0 discriminator 1
 3858 0060 2368     		ldr	r3, [r4]
 3859 0062 D3F89423 		ldr	r2, [r3, #916]
 3860 0066 12F0030F 		tst	r2, #3
 3861 006a 03D1     		bne	.L301
 3862 006c 1A68     		ldr	r2, [r3]
 3863 006e 22F40032 		bic	r2, r2, #131072
 3864 0072 1A60     		str	r2, [r3]
 3865              	.L301:
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3866              		.loc 1 1550 0 discriminator 2
 3867 0074 244B     		ldr	r3, .L307
 3868 0076 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3869 007a 13F4802F 		tst	r3, #262144
 3870 007e 09D0     		beq	.L302
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3871              		.loc 1 1550 0 discriminator 1
 3872 0080 2368     		ldr	r3, [r4]
 3873 0082 D3F89423 		ldr	r2, [r3, #916]
 3874 0086 12F00C0F 		tst	r2, #12
 3875 008a 03D1     		bne	.L302
 3876 008c 1A68     		ldr	r2, [r3]
 3877 008e 22F48022 		bic	r2, r2, #262144
 3878 0092 1A60     		str	r2, [r3]
 3879              	.L302:
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3880              		.loc 1 1550 0 discriminator 2
 3881 0094 1C4B     		ldr	r3, .L307
 3882 0096 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3883 009a 13F4002F 		tst	r3, #524288
 3884 009e 09D0     		beq	.L303
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3885              		.loc 1 1550 0 discriminator 1
 3886 00a0 2368     		ldr	r3, [r4]
 3887 00a2 D3F89423 		ldr	r2, [r3, #916]
 3888 00a6 12F0300F 		tst	r2, #48
 3889 00aa 03D1     		bne	.L303
 3890 00ac 1A68     		ldr	r2, [r3]
 3891 00ae 22F40022 		bic	r2, r2, #524288
 3892 00b2 1A60     		str	r2, [r3]
 3893              	.L303:
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3894              		.loc 1 1550 0 discriminator 2
 3895 00b4 144B     		ldr	r3, .L307
 3896 00b6 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3897 00ba 13F4801F 		tst	r3, #1048576
 3898 00be 09D0     		beq	.L304
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
ARM GAS  /tmp/ccWQyto6.s 			page 207


 3899              		.loc 1 1550 0 discriminator 1
 3900 00c0 2368     		ldr	r3, [r4]
 3901 00c2 D3F89423 		ldr	r2, [r3, #916]
 3902 00c6 12F0C00F 		tst	r2, #192
 3903 00ca 03D1     		bne	.L304
 3904 00cc 1A68     		ldr	r2, [r3]
 3905 00ce 22F48012 		bic	r2, r2, #1048576
 3906 00d2 1A60     		str	r2, [r3]
 3907              	.L304:
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3908              		.loc 1 1550 0 discriminator 2
 3909 00d4 0C4B     		ldr	r3, .L307
 3910 00d6 53F82530 		ldr	r3, [r3, r5, lsl #2]
 3911 00da 13F4001F 		tst	r3, #2097152
 3912 00de 09D0     		beq	.L305
1550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 3913              		.loc 1 1550 0 discriminator 1
 3914 00e0 2368     		ldr	r3, [r4]
 3915 00e2 D3F89423 		ldr	r2, [r3, #916]
 3916 00e6 12F4407F 		tst	r2, #768
 3917 00ea 03D1     		bne	.L305
 3918 00ec 1A68     		ldr	r2, [r3]
 3919 00ee 22F40012 		bic	r2, r2, #2097152
 3920 00f2 1A60     		str	r2, [r3]
 3921              	.L305:
1552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 3922              		.loc 1 1552 0 is_stmt 1
 3923 00f4 0123     		movs	r3, #1
 3924 00f6 84F8C130 		strb	r3, [r4, #193]
1555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 3925              		.loc 1 1555 0
 3926 00fa 0020     		movs	r0, #0
 3927 00fc 84F8C000 		strb	r0, [r4, #192]
1557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 3928              		.loc 1 1557 0
 3929 0100 38BD     		pop	{r3, r4, r5, pc}
 3930              	.LVL496:
 3931              	.L306:
1536:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3932              		.loc 1 1536 0
 3933 0102 0220     		movs	r0, #2
 3934              	.LVL497:
1558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 3935              		.loc 1 1558 0
 3936 0104 38BD     		pop	{r3, r4, r5, pc}
 3937              	.LVL498:
 3938              	.L308:
 3939 0106 00BF     		.align	2
 3940              	.L307:
 3941 0108 00000000 		.word	.LANCHOR0
 3942              		.cfi_endproc
 3943              	.LFE141:
 3945              		.section	.text.HAL_HRTIM_SimpleOCStart_DMA,"ax",%progbits
 3946              		.align	2
 3947              		.global	HAL_HRTIM_SimpleOCStart_DMA
 3948              		.thumb
 3949              		.thumb_func
ARM GAS  /tmp/ccWQyto6.s 			page 208


 3951              	HAL_HRTIM_SimpleOCStart_DMA:
 3952              	.LFB142:
1599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 3953              		.loc 1 1599 0
 3954              		.cfi_startproc
 3955              		@ args = 8, pretend = 0, frame = 0
 3956              		@ frame_needed = 0, uses_anonymous_args = 0
 3957              	.LVL499:
 3958 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3959              	.LCFI22:
 3960              		.cfi_def_cfa_offset 24
 3961              		.cfi_offset 4, -24
 3962              		.cfi_offset 5, -20
 3963              		.cfi_offset 6, -16
 3964              		.cfi_offset 7, -12
 3965              		.cfi_offset 8, -8
 3966              		.cfi_offset 14, -4
 3967 0004 0446     		mov	r4, r0
 3968 0006 0D46     		mov	r5, r1
 3969 0008 1E46     		mov	r6, r3
1606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
 3970              		.loc 1 1606 0
 3971 000a 90F8C100 		ldrb	r0, [r0, #193]	@ zero_extendqisi2
 3972              	.LVL500:
 3973 000e C0B2     		uxtb	r0, r0
 3974 0010 0228     		cmp	r0, #2
 3975 0012 45D0     		beq	.L312
1610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
 3976              		.loc 1 1610 0
 3977 0014 94F8C130 		ldrb	r3, [r4, #193]	@ zero_extendqisi2
 3978              	.LVL501:
 3979 0018 DBB2     		uxtb	r3, r3
 3980 001a 012B     		cmp	r3, #1
 3981 001c 0AD1     		bne	.L311
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
 3982              		.loc 1 1612 0
 3983 001e 002E     		cmp	r6, #0
 3984 0020 41D0     		beq	.L313
1612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
 3985              		.loc 1 1612 0 is_stmt 0 discriminator 1
 3986 0022 069B     		ldr	r3, [sp, #24]
 3987 0024 002B     		cmp	r3, #0
 3988 0026 41D0     		beq	.L314
 3989 0028 079B     		ldr	r3, [sp, #28]
 3990 002a 002B     		cmp	r3, #0
 3991 002c 41D0     		beq	.L315
1618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
 3992              		.loc 1 1618 0 is_stmt 1
 3993 002e 0223     		movs	r3, #2
 3994 0030 84F8C130 		strb	r3, [r4, #193]
 3995              	.L311:
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 3996              		.loc 1 1623 0
 3997 0034 94F8C030 		ldrb	r3, [r4, #192]	@ zero_extendqisi2
 3998 0038 012B     		cmp	r3, #1
 3999 003a 3DD0     		beq	.L316
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
ARM GAS  /tmp/ccWQyto6.s 			page 209


 4000              		.loc 1 1623 0 is_stmt 0 discriminator 2
 4001 003c 0127     		movs	r7, #1
 4002 003e 84F8C070 		strb	r7, [r4, #192]
1626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OCChannel;
 4003              		.loc 1 1626 0 is_stmt 1 discriminator 2
 4004 0042 2368     		ldr	r3, [r4]
 4005 0044 D3F89413 		ldr	r1, [r3, #916]
 4006              	.LVL502:
 4007 0048 1143     		orrs	r1, r1, r2
 4008 004a C3F89413 		str	r1, [r3, #916]
1629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   dma_request = HRTIM_GetDMAFromOCMode(hhrtim, TimerIdx, OCChannel);
 4009              		.loc 1 1629 0 discriminator 2
 4010 004e 2046     		mov	r0, r4
 4011 0050 2946     		mov	r1, r5
 4012 0052 FFF7FEFF 		bl	HRTIM_GetDMAFromOCMode
 4013              	.LVL503:
 4014 0056 8046     		mov	r8, r0
 4015              	.LVL504:
1632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 4016              		.loc 1 1632 0 discriminator 2
 4017 0058 2046     		mov	r0, r4
 4018              	.LVL505:
 4019 005a 2946     		mov	r1, r5
 4020 005c FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 4021              	.LVL506:
1635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
 4022              		.loc 1 1635 0 discriminator 2
 4023 0060 174A     		ldr	r2, .L317
 4024 0062 0263     		str	r2, [r0, #48]
1638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
 4025              		.loc 1 1638 0 discriminator 2
 4026 0064 174A     		ldr	r2, .L317+4
 4027 0066 8262     		str	r2, [r0, #40]
1641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
 4028              		.loc 1 1641 0 discriminator 2
 4029 0068 3146     		mov	r1, r6
 4030 006a 069A     		ldr	r2, [sp, #24]
 4031 006c 079B     		ldr	r3, [sp, #28]
 4032 006e FFF7FEFF 		bl	HAL_DMA_Start_IT
 4033              	.LVL507:
1644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, dma_request);
 4034              		.loc 1 1644 0 discriminator 2
 4035 0072 2368     		ldr	r3, [r4]
 4036 0074 03EBC513 		add	r3, r3, r5, lsl #7
 4037 0078 D3F88C20 		ldr	r2, [r3, #140]
 4038 007c 42EA0802 		orr	r2, r2, r8
 4039 0080 C3F88C20 		str	r2, [r3, #140]
1647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4040              		.loc 1 1647 0 discriminator 2
 4041 0084 2368     		ldr	r3, [r4]
 4042 0086 1968     		ldr	r1, [r3]
 4043 0088 0F4A     		ldr	r2, .L317+8
 4044 008a 52F82520 		ldr	r2, [r2, r5, lsl #2]
 4045 008e 0A43     		orrs	r2, r2, r1
 4046 0090 1A60     		str	r2, [r3]
1649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 4047              		.loc 1 1649 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 210


 4048 0092 84F8C170 		strb	r7, [r4, #193]
1652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 4049              		.loc 1 1652 0 discriminator 2
 4050 0096 0020     		movs	r0, #0
 4051 0098 84F8C000 		strb	r0, [r4, #192]
1654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 4052              		.loc 1 1654 0 discriminator 2
 4053 009c BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4054              	.LVL508:
 4055              	.L312:
1608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 4056              		.loc 1 1608 0
 4057 00a0 0220     		movs	r0, #2
 4058 00a2 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4059              	.LVL509:
 4060              	.L313:
1614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
 4061              		.loc 1 1614 0
 4062 00a6 0120     		movs	r0, #1
 4063 00a8 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4064              	.LVL510:
 4065              	.L314:
 4066 00ac 0120     		movs	r0, #1
 4067 00ae BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4068              	.LVL511:
 4069              	.L315:
 4070 00b2 0120     		movs	r0, #1
 4071 00b4 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4072              	.LVL512:
 4073              	.L316:
1623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4074              		.loc 1 1623 0
 4075 00b8 0220     		movs	r0, #2
1655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 4076              		.loc 1 1655 0
 4077 00ba BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 4078              	.LVL513:
 4079              	.L318:
 4080 00be 00BF     		.align	2
 4081              	.L317:
 4082 00c0 00000000 		.word	HRTIM_DMAError
 4083 00c4 00000000 		.word	HRTIM_DMATimerxCplt
 4084 00c8 00000000 		.word	.LANCHOR0
 4085              		.cfi_endproc
 4086              	.LFE142:
 4088              		.section	.text.HAL_HRTIM_SimpleOCStop_DMA,"ax",%progbits
 4089              		.align	2
 4090              		.global	HAL_HRTIM_SimpleOCStop_DMA
 4091              		.thumb
 4092              		.thumb_func
 4094              	HAL_HRTIM_SimpleOCStop_DMA:
 4095              	.LFB143:
1685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 4096              		.loc 1 1685 0
 4097              		.cfi_startproc
 4098              		@ args = 0, pretend = 0, frame = 0
 4099              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWQyto6.s 			page 211


 4100              	.LVL514:
 4101 0000 70B5     		push	{r4, r5, r6, lr}
 4102              	.LCFI23:
 4103              		.cfi_def_cfa_offset 16
 4104              		.cfi_offset 4, -16
 4105              		.cfi_offset 5, -12
 4106              		.cfi_offset 6, -8
 4107              		.cfi_offset 14, -4
 4108 0002 0446     		mov	r4, r0
 4109 0004 0D46     		mov	r5, r1
 4110 0006 1646     		mov	r6, r2
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4111              		.loc 1 1693 0
 4112 0008 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 4113 000c 012B     		cmp	r3, #1
 4114 000e 7FD0     		beq	.L327
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4115              		.loc 1 1693 0 is_stmt 0 discriminator 2
 4116 0010 0123     		movs	r3, #1
 4117 0012 80F8C030 		strb	r3, [r0, #192]
1695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 4118              		.loc 1 1695 0 is_stmt 1 discriminator 2
 4119 0016 0223     		movs	r3, #2
 4120 0018 80F8C130 		strb	r3, [r0, #193]
1698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OCChannel;
 4121              		.loc 1 1698 0 discriminator 2
 4122 001c 0368     		ldr	r3, [r0]
 4123 001e D3F89823 		ldr	r2, [r3, #920]
 4124              	.LVL515:
 4125 0022 3243     		orrs	r2, r2, r6
 4126 0024 C3F89823 		str	r2, [r3, #920]
1701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 4127              		.loc 1 1701 0 discriminator 2
 4128 0028 FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 4129              	.LVL516:
1704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Abort(hdma);
 4130              		.loc 1 1704 0 discriminator 2
 4131 002c FFF7FEFF 		bl	HAL_DMA_Abort
 4132              	.LVL517:
1707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   dma_request = HRTIM_GetDMAFromOCMode(hhrtim, TimerIdx, OCChannel);
 4133              		.loc 1 1707 0 discriminator 2
 4134 0030 2046     		mov	r0, r4
 4135 0032 2946     		mov	r1, r5
 4136 0034 3246     		mov	r2, r6
 4137 0036 FFF7FEFF 		bl	HRTIM_GetDMAFromOCMode
 4138              	.LVL518:
1710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, dma_request);
 4139              		.loc 1 1710 0 discriminator 2
 4140 003a 2368     		ldr	r3, [r4]
 4141 003c 03EBC513 		add	r3, r3, r5, lsl #7
 4142 0040 D3F88C20 		ldr	r2, [r3, #140]
 4143 0044 22EA0000 		bic	r0, r2, r0
 4144              	.LVL519:
 4145 0048 C3F88C00 		str	r0, [r3, #140]
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4146              		.loc 1 1713 0 discriminator 2
 4147 004c 314B     		ldr	r3, .L328
ARM GAS  /tmp/ccWQyto6.s 			page 212


 4148 004e 53F82530 		ldr	r3, [r3, r5, lsl #2]
 4149 0052 13F4803F 		tst	r3, #65536
 4150 0056 04D0     		beq	.L321
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4151              		.loc 1 1713 0 is_stmt 0 discriminator 1
 4152 0058 2368     		ldr	r3, [r4]
 4153 005a 1A68     		ldr	r2, [r3]
 4154 005c 22F48032 		bic	r2, r2, #65536
 4155 0060 1A60     		str	r2, [r3]
 4156              	.L321:
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4157              		.loc 1 1713 0 discriminator 2
 4158 0062 2C4B     		ldr	r3, .L328
 4159 0064 53F82530 		ldr	r3, [r3, r5, lsl #2]
 4160 0068 13F4003F 		tst	r3, #131072
 4161 006c 09D0     		beq	.L322
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4162              		.loc 1 1713 0 discriminator 1
 4163 006e 2368     		ldr	r3, [r4]
 4164 0070 D3F89423 		ldr	r2, [r3, #916]
 4165 0074 12F0030F 		tst	r2, #3
 4166 0078 03D1     		bne	.L322
 4167 007a 1A68     		ldr	r2, [r3]
 4168 007c 22F40032 		bic	r2, r2, #131072
 4169 0080 1A60     		str	r2, [r3]
 4170              	.L322:
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4171              		.loc 1 1713 0 discriminator 2
 4172 0082 244B     		ldr	r3, .L328
 4173 0084 53F82530 		ldr	r3, [r3, r5, lsl #2]
 4174 0088 13F4802F 		tst	r3, #262144
 4175 008c 09D0     		beq	.L323
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4176              		.loc 1 1713 0 discriminator 1
 4177 008e 2368     		ldr	r3, [r4]
 4178 0090 D3F89423 		ldr	r2, [r3, #916]
 4179 0094 12F00C0F 		tst	r2, #12
 4180 0098 03D1     		bne	.L323
 4181 009a 1A68     		ldr	r2, [r3]
 4182 009c 22F48022 		bic	r2, r2, #262144
 4183 00a0 1A60     		str	r2, [r3]
 4184              	.L323:
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4185              		.loc 1 1713 0 discriminator 2
 4186 00a2 1C4B     		ldr	r3, .L328
 4187 00a4 53F82530 		ldr	r3, [r3, r5, lsl #2]
 4188 00a8 13F4002F 		tst	r3, #524288
 4189 00ac 09D0     		beq	.L324
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4190              		.loc 1 1713 0 discriminator 1
 4191 00ae 2368     		ldr	r3, [r4]
 4192 00b0 D3F89423 		ldr	r2, [r3, #916]
 4193 00b4 12F0300F 		tst	r2, #48
 4194 00b8 03D1     		bne	.L324
 4195 00ba 1A68     		ldr	r2, [r3]
 4196 00bc 22F40022 		bic	r2, r2, #524288
 4197 00c0 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccWQyto6.s 			page 213


 4198              	.L324:
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4199              		.loc 1 1713 0 discriminator 2
 4200 00c2 144B     		ldr	r3, .L328
 4201 00c4 53F82530 		ldr	r3, [r3, r5, lsl #2]
 4202 00c8 13F4801F 		tst	r3, #1048576
 4203 00cc 09D0     		beq	.L325
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4204              		.loc 1 1713 0 discriminator 1
 4205 00ce 2368     		ldr	r3, [r4]
 4206 00d0 D3F89423 		ldr	r2, [r3, #916]
 4207 00d4 12F0C00F 		tst	r2, #192
 4208 00d8 03D1     		bne	.L325
 4209 00da 1A68     		ldr	r2, [r3]
 4210 00dc 22F48012 		bic	r2, r2, #1048576
 4211 00e0 1A60     		str	r2, [r3]
 4212              	.L325:
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4213              		.loc 1 1713 0 discriminator 2
 4214 00e2 0C4B     		ldr	r3, .L328
 4215 00e4 53F82530 		ldr	r3, [r3, r5, lsl #2]
 4216 00e8 13F4001F 		tst	r3, #2097152
 4217 00ec 09D0     		beq	.L326
1713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4218              		.loc 1 1713 0 discriminator 1
 4219 00ee 2368     		ldr	r3, [r4]
 4220 00f0 D3F89423 		ldr	r2, [r3, #916]
 4221 00f4 12F4407F 		tst	r2, #768
 4222 00f8 03D1     		bne	.L326
 4223 00fa 1A68     		ldr	r2, [r3]
 4224 00fc 22F40012 		bic	r2, r2, #2097152
 4225 0100 1A60     		str	r2, [r3]
 4226              	.L326:
1715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 4227              		.loc 1 1715 0 is_stmt 1
 4228 0102 0123     		movs	r3, #1
 4229 0104 84F8C130 		strb	r3, [r4, #193]
1718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 4230              		.loc 1 1718 0
 4231 0108 0020     		movs	r0, #0
 4232 010a 84F8C000 		strb	r0, [r4, #192]
1720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 4233              		.loc 1 1720 0
 4234 010e 70BD     		pop	{r4, r5, r6, pc}
 4235              	.LVL520:
 4236              	.L327:
1693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4237              		.loc 1 1693 0
 4238 0110 0220     		movs	r0, #2
 4239              	.LVL521:
1721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 4240              		.loc 1 1721 0
 4241 0112 70BD     		pop	{r4, r5, r6, pc}
 4242              	.LVL522:
 4243              	.L329:
 4244              		.align	2
 4245              	.L328:
ARM GAS  /tmp/ccWQyto6.s 			page 214


 4246 0114 00000000 		.word	.LANCHOR0
 4247              		.cfi_endproc
 4248              	.LFE143:
 4250              		.section	.text.HAL_HRTIM_SimplePWMChannelConfig,"ax",%progbits
 4251              		.align	2
 4252              		.global	HAL_HRTIM_SimplePWMChannelConfig
 4253              		.thumb
 4254              		.thumb_func
 4256              	HAL_HRTIM_SimplePWMChannelConfig:
 4257              	.LFB144:
1789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 4258              		.loc 1 1789 0
 4259              		.cfi_startproc
 4260              		@ args = 0, pretend = 0, frame = 48
 4261              		@ frame_needed = 0, uses_anonymous_args = 0
 4262              	.LVL523:
 4263 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 4264              	.LCFI24:
 4265              		.cfi_def_cfa_offset 28
 4266              		.cfi_offset 4, -28
 4267              		.cfi_offset 5, -24
 4268              		.cfi_offset 6, -20
 4269              		.cfi_offset 7, -16
 4270              		.cfi_offset 8, -12
 4271              		.cfi_offset 9, -8
 4272              		.cfi_offset 14, -4
 4273 0004 8DB0     		sub	sp, sp, #52
 4274              	.LCFI25:
 4275              		.cfi_def_cfa_offset 80
 4276 0006 0446     		mov	r4, r0
 4277 0008 0F46     		mov	r7, r1
 4278 000a 1546     		mov	r5, r2
 4279 000c 9846     		mov	r8, r3
 4280              	.LVL524:
1800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 4281              		.loc 1 1800 0
 4282 000e 90F8C120 		ldrb	r2, [r0, #193]	@ zero_extendqisi2
 4283              	.LVL525:
 4284 0012 D2B2     		uxtb	r2, r2
 4285 0014 022A     		cmp	r2, #2
 4286 0016 61D0     		beq	.L340
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);  hhrtim->State = HAL_HRTIM_STATE_BUSY;
 4287              		.loc 1 1806 0
 4288 0018 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 4289              	.LVL526:
 4290 001c 012B     		cmp	r3, #1
 4291 001e 5FD0     		beq	.L341
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);  hhrtim->State = HAL_HRTIM_STATE_BUSY;
 4292              		.loc 1 1806 0 is_stmt 0 discriminator 2
 4293 0020 0123     		movs	r3, #1
 4294 0022 80F8C030 		strb	r3, [r0, #192]
 4295 0026 0223     		movs	r3, #2
 4296 0028 80F8C130 		strb	r3, [r0, #193]
1809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
 4297              		.loc 1 1809 0 is_stmt 1 discriminator 2
 4298 002c 102D     		cmp	r5, #16
 4299 002e 1FD0     		beq	.L342
ARM GAS  /tmp/ccWQyto6.s 			page 215


 4300 0030 0AD8     		bhi	.L334
 4301 0032 9D42     		cmp	r5, r3
 4302 0034 19D0     		beq	.L335
 4303 0036 02D8     		bhi	.L336
 4304 0038 012D     		cmp	r5, #1
 4305 003a 13D1     		bne	.L332
 4306 003c 18E0     		b	.L342
 4307              	.L336:
 4308 003e 042D     		cmp	r5, #4
 4309 0040 16D0     		beq	.L342
 4310 0042 082D     		cmp	r5, #8
 4311 0044 0ED1     		bne	.L332
 4312 0046 10E0     		b	.L335
 4313              	.L334:
 4314 0048 802D     		cmp	r5, #128
 4315 004a 0ED0     		beq	.L335
 4316 004c 04D8     		bhi	.L337
 4317 004e 202D     		cmp	r5, #32
 4318 0050 0BD0     		beq	.L335
 4319 0052 402D     		cmp	r5, #64
 4320 0054 06D1     		bne	.L332
 4321 0056 0BE0     		b	.L342
 4322              	.L337:
 4323 0058 B5F5807F 		cmp	r5, #256
 4324 005c 08D0     		beq	.L342
 4325 005e B5F5007F 		cmp	r5, #512
 4326 0062 02D0     		beq	.L335
 4327              	.L332:
1790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CompareUnit = 0xFFFFFFFFU;
 4328              		.loc 1 1790 0
 4329 0064 4FF0FF39 		mov	r9, #-1
 4330 0068 04E0     		b	.L333
 4331              	.L335:
 4332              	.LVL527:
1826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_2;
 4333              		.loc 1 1826 0
 4334 006a 4FF00209 		mov	r9, #2
1828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 4335              		.loc 1 1828 0
 4336 006e 01E0     		b	.L333
 4337              	.LVL528:
 4338              	.L342:
1817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_1;
 4339              		.loc 1 1817 0
 4340 0070 4FF00109 		mov	r9, #1
 4341              	.LVL529:
 4342              	.L333:
1833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.CompareValue = pSimplePWMChannelCfg->Pulse;
 4343              		.loc 1 1833 0
 4344 0074 D8F80030 		ldr	r3, [r8]
 4345 0078 0993     		str	r3, [sp, #36]
1834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
 4346              		.loc 1 1834 0
 4347 007a 0026     		movs	r6, #0
 4348 007c 0A96     		str	r6, [sp, #40]
1835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedTimeout = 0U;
 4349              		.loc 1 1835 0
ARM GAS  /tmp/ccWQyto6.s 			page 216


 4350 007e 0B96     		str	r6, [sp, #44]
1837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareUnitConfig(hhrtim,
 4351              		.loc 1 1837 0
 4352 0080 2046     		mov	r0, r4
 4353              	.LVL530:
 4354 0082 3946     		mov	r1, r7
 4355              	.LVL531:
 4356 0084 4A46     		mov	r2, r9
 4357 0086 09AB     		add	r3, sp, #36
 4358 0088 FFF7FEFF 		bl	HRTIM_CompareUnitConfig
 4359              	.LVL532:
1843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.Polarity = pSimplePWMChannelCfg->Polarity;
 4360              		.loc 1 1843 0
 4361 008c D8F80430 		ldr	r3, [r8, #4]
 4362 0090 0193     		str	r3, [sp, #4]
1844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleLevel = pSimplePWMChannelCfg->IdleLevel;
 4363              		.loc 1 1844 0
 4364 0092 D8F80830 		ldr	r3, [r8, #8]
 4365 0096 0593     		str	r3, [sp, #20]
1845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
 4366              		.loc 1 1845 0
 4367 0098 0696     		str	r6, [sp, #24]
1846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
 4368              		.loc 1 1846 0
 4369 009a 0496     		str	r6, [sp, #16]
1847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
 4370              		.loc 1 1847 0
 4371 009c 0796     		str	r6, [sp, #28]
1848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
 4372              		.loc 1 1848 0
 4373 009e 0896     		str	r6, [sp, #32]
1850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CompareUnit == HRTIM_COMPAREUNIT_1)
 4374              		.loc 1 1850 0
 4375 00a0 B9F1010F 		cmp	r9, #1
 4376 00a4 02D1     		bne	.L338
1852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
 4377              		.loc 1 1852 0
 4378 00a6 0823     		movs	r3, #8
 4379 00a8 0293     		str	r3, [sp, #8]
 4380 00aa 01E0     		b	.L339
 4381              	.L338:
1856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
 4382              		.loc 1 1856 0
 4383 00ac 1023     		movs	r3, #16
 4384 00ae 0293     		str	r3, [sp, #8]
 4385              	.L339:
1858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ResetSource = HRTIM_OUTPUTSET_TIMPER;
 4386              		.loc 1 1858 0
 4387 00b0 0423     		movs	r3, #4
 4388 00b2 0393     		str	r3, [sp, #12]
1860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
 4389              		.loc 1 1860 0
 4390 00b4 2046     		mov	r0, r4
 4391 00b6 3946     		mov	r1, r7
 4392 00b8 2A46     		mov	r2, r5
 4393 00ba 6B44     		add	r3, sp, r3
 4394 00bc FFF7FEFF 		bl	HRTIM_OutputConfig
ARM GAS  /tmp/ccWQyto6.s 			page 217


 4395              	.LVL533:
1866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr   = hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR;
 4396              		.loc 1 1866 0
 4397 00c0 2368     		ldr	r3, [r4]
 4398 00c2 0137     		adds	r7, r7, #1
 4399              	.LVL534:
 4400 00c4 FF01     		lsls	r7, r7, #7
 4401              	.LVL535:
 4402 00c6 DA59     		ldr	r2, [r3, r7]
 4403              	.LVL536:
1867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_timcr |= HRTIM_TIMCR_PREEN;
 4404              		.loc 1 1867 0
 4405 00c8 42F00062 		orr	r2, r2, #134217728
 4406              	.LVL537:
1868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR  = hrtim_timcr;  
 4407              		.loc 1 1868 0
 4408 00cc DA51     		str	r2, [r3, r7]
1870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 4409              		.loc 1 1870 0
 4410 00ce 0123     		movs	r3, #1
 4411 00d0 84F8C130 		strb	r3, [r4, #193]
1873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 4412              		.loc 1 1873 0
 4413 00d4 0020     		movs	r0, #0
 4414 00d6 84F8C000 		strb	r0, [r4, #192]
1875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 4415              		.loc 1 1875 0
 4416 00da 02E0     		b	.L331
 4417              	.LVL538:
 4418              	.L340:
1802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 4419              		.loc 1 1802 0
 4420 00dc 0220     		movs	r0, #2
 4421              	.LVL539:
 4422 00de 00E0     		b	.L331
 4423              	.LVL540:
 4424              	.L341:
1806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);  hhrtim->State = HAL_HRTIM_STATE_BUSY;
 4425              		.loc 1 1806 0
 4426 00e0 0220     		movs	r0, #2
 4427              	.LVL541:
 4428              	.L331:
1876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 4429              		.loc 1 1876 0
 4430 00e2 0DB0     		add	sp, sp, #52
 4431              		@ sp needed
 4432 00e4 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4433              		.cfi_endproc
 4434              	.LFE144:
 4436              		.section	.text.HAL_HRTIM_SimplePWMStart,"ax",%progbits
 4437              		.align	2
 4438              		.global	HAL_HRTIM_SimplePWMStart
 4439              		.thumb
 4440              		.thumb_func
 4442              	HAL_HRTIM_SimplePWMStart:
 4443              	.LFB145:
1905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
ARM GAS  /tmp/ccWQyto6.s 			page 218


 4444              		.loc 1 1905 0
 4445              		.cfi_startproc
 4446              		@ args = 0, pretend = 0, frame = 0
 4447              		@ frame_needed = 0, uses_anonymous_args = 0
 4448              		@ link register save eliminated.
 4449              	.LVL542:
 4450 0000 30B4     		push	{r4, r5}
 4451              	.LCFI26:
 4452              		.cfi_def_cfa_offset 8
 4453              		.cfi_offset 4, -8
 4454              		.cfi_offset 5, -4
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4455              		.loc 1 1910 0
 4456 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 4457 0006 012B     		cmp	r3, #1
 4458 0008 19D0     		beq	.L345
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4459              		.loc 1 1910 0 is_stmt 0 discriminator 2
 4460 000a 0123     		movs	r3, #1
 4461 000c 80F8C030 		strb	r3, [r0, #192]
1912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 4462              		.loc 1 1912 0 is_stmt 1 discriminator 2
 4463 0010 0224     		movs	r4, #2
 4464 0012 80F8C140 		strb	r4, [r0, #193]
1915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= PWMChannel;
 4465              		.loc 1 1915 0 discriminator 2
 4466 0016 0468     		ldr	r4, [r0]
 4467 0018 D4F89453 		ldr	r5, [r4, #916]
 4468 001c 2A43     		orrs	r2, r2, r5
 4469              	.LVL543:
 4470 001e C4F89423 		str	r2, [r4, #916]
1918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4471              		.loc 1 1918 0 discriminator 2
 4472 0022 0268     		ldr	r2, [r0]
 4473 0024 1468     		ldr	r4, [r2]
 4474 0026 074D     		ldr	r5, .L346
 4475 0028 55F82110 		ldr	r1, [r5, r1, lsl #2]
 4476              	.LVL544:
 4477 002c 2143     		orrs	r1, r1, r4
 4478 002e 1160     		str	r1, [r2]
1920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 4479              		.loc 1 1920 0 discriminator 2
 4480 0030 80F8C130 		strb	r3, [r0, #193]
1923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 4481              		.loc 1 1923 0 discriminator 2
 4482 0034 0023     		movs	r3, #0
 4483 0036 80F8C030 		strb	r3, [r0, #192]
1925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 4484              		.loc 1 1925 0 discriminator 2
 4485 003a 1846     		mov	r0, r3
 4486              	.LVL545:
 4487 003c 00E0     		b	.L344
 4488              	.LVL546:
 4489              	.L345:
1910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4490              		.loc 1 1910 0
 4491 003e 0220     		movs	r0, #2
ARM GAS  /tmp/ccWQyto6.s 			page 219


 4492              	.LVL547:
 4493              	.L344:
1926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 4494              		.loc 1 1926 0
 4495 0040 30BC     		pop	{r4, r5}
 4496 0042 7047     		bx	lr
 4497              	.L347:
 4498              		.align	2
 4499              	.L346:
 4500 0044 00000000 		.word	.LANCHOR0
 4501              		.cfi_endproc
 4502              	.LFE145:
 4504              		.section	.text.HAL_HRTIM_SimplePWMStop,"ax",%progbits
 4505              		.align	2
 4506              		.global	HAL_HRTIM_SimplePWMStop
 4507              		.thumb
 4508              		.thumb_func
 4510              	HAL_HRTIM_SimplePWMStop:
 4511              	.LFB146:
1955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 4512              		.loc 1 1955 0
 4513              		.cfi_startproc
 4514              		@ args = 0, pretend = 0, frame = 0
 4515              		@ frame_needed = 0, uses_anonymous_args = 0
 4516              		@ link register save eliminated.
 4517              	.LVL548:
 4518 0000 10B4     		push	{r4}
 4519              	.LCFI27:
 4520              		.cfi_def_cfa_offset 4
 4521              		.cfi_offset 4, -4
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4522              		.loc 1 1960 0
 4523 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 4524 0006 012B     		cmp	r3, #1
 4525 0008 6ED0     		beq	.L356
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4526              		.loc 1 1960 0 is_stmt 0 discriminator 2
 4527 000a 0123     		movs	r3, #1
 4528 000c 80F8C030 		strb	r3, [r0, #192]
1962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 4529              		.loc 1 1962 0 is_stmt 1 discriminator 2
 4530 0010 0223     		movs	r3, #2
 4531 0012 80F8C130 		strb	r3, [r0, #193]
1965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= PWMChannel;
 4532              		.loc 1 1965 0 discriminator 2
 4533 0016 0368     		ldr	r3, [r0]
 4534 0018 D3F89843 		ldr	r4, [r3, #920]
 4535 001c 2243     		orrs	r2, r2, r4
 4536              	.LVL549:
 4537 001e C3F89823 		str	r2, [r3, #920]
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4538              		.loc 1 1968 0 discriminator 2
 4539 0022 334B     		ldr	r3, .L357
 4540 0024 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4541 0028 13F4803F 		tst	r3, #65536
 4542 002c 04D0     		beq	.L350
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
ARM GAS  /tmp/ccWQyto6.s 			page 220


 4543              		.loc 1 1968 0 is_stmt 0 discriminator 1
 4544 002e 0368     		ldr	r3, [r0]
 4545 0030 1A68     		ldr	r2, [r3]
 4546 0032 22F48032 		bic	r2, r2, #65536
 4547 0036 1A60     		str	r2, [r3]
 4548              	.L350:
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4549              		.loc 1 1968 0 discriminator 2
 4550 0038 2D4B     		ldr	r3, .L357
 4551 003a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4552 003e 13F4003F 		tst	r3, #131072
 4553 0042 09D0     		beq	.L351
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4554              		.loc 1 1968 0 discriminator 1
 4555 0044 0368     		ldr	r3, [r0]
 4556 0046 D3F89423 		ldr	r2, [r3, #916]
 4557 004a 12F0030F 		tst	r2, #3
 4558 004e 03D1     		bne	.L351
 4559 0050 1A68     		ldr	r2, [r3]
 4560 0052 22F40032 		bic	r2, r2, #131072
 4561 0056 1A60     		str	r2, [r3]
 4562              	.L351:
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4563              		.loc 1 1968 0 discriminator 2
 4564 0058 254B     		ldr	r3, .L357
 4565 005a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4566 005e 13F4802F 		tst	r3, #262144
 4567 0062 09D0     		beq	.L352
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4568              		.loc 1 1968 0 discriminator 1
 4569 0064 0368     		ldr	r3, [r0]
 4570 0066 D3F89423 		ldr	r2, [r3, #916]
 4571 006a 12F00C0F 		tst	r2, #12
 4572 006e 03D1     		bne	.L352
 4573 0070 1A68     		ldr	r2, [r3]
 4574 0072 22F48022 		bic	r2, r2, #262144
 4575 0076 1A60     		str	r2, [r3]
 4576              	.L352:
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4577              		.loc 1 1968 0 discriminator 2
 4578 0078 1D4B     		ldr	r3, .L357
 4579 007a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4580 007e 13F4002F 		tst	r3, #524288
 4581 0082 09D0     		beq	.L353
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4582              		.loc 1 1968 0 discriminator 1
 4583 0084 0368     		ldr	r3, [r0]
 4584 0086 D3F89423 		ldr	r2, [r3, #916]
 4585 008a 12F0300F 		tst	r2, #48
 4586 008e 03D1     		bne	.L353
 4587 0090 1A68     		ldr	r2, [r3]
 4588 0092 22F40022 		bic	r2, r2, #524288
 4589 0096 1A60     		str	r2, [r3]
 4590              	.L353:
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4591              		.loc 1 1968 0 discriminator 2
 4592 0098 154B     		ldr	r3, .L357
ARM GAS  /tmp/ccWQyto6.s 			page 221


 4593 009a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4594 009e 13F4801F 		tst	r3, #1048576
 4595 00a2 09D0     		beq	.L354
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4596              		.loc 1 1968 0 discriminator 1
 4597 00a4 0368     		ldr	r3, [r0]
 4598 00a6 D3F89423 		ldr	r2, [r3, #916]
 4599 00aa 12F0C00F 		tst	r2, #192
 4600 00ae 03D1     		bne	.L354
 4601 00b0 1A68     		ldr	r2, [r3]
 4602 00b2 22F48012 		bic	r2, r2, #1048576
 4603 00b6 1A60     		str	r2, [r3]
 4604              	.L354:
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4605              		.loc 1 1968 0 discriminator 2
 4606 00b8 0D4B     		ldr	r3, .L357
 4607 00ba 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4608 00be 13F4001F 		tst	r3, #2097152
 4609 00c2 09D0     		beq	.L355
1968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4610              		.loc 1 1968 0 discriminator 1
 4611 00c4 0368     		ldr	r3, [r0]
 4612 00c6 D3F89423 		ldr	r2, [r3, #916]
 4613 00ca 12F4407F 		tst	r2, #768
 4614 00ce 03D1     		bne	.L355
 4615 00d0 1A68     		ldr	r2, [r3]
 4616 00d2 22F40012 		bic	r2, r2, #2097152
 4617 00d6 1A60     		str	r2, [r3]
 4618              	.L355:
1970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 4619              		.loc 1 1970 0 is_stmt 1
 4620 00d8 0123     		movs	r3, #1
 4621 00da 80F8C130 		strb	r3, [r0, #193]
1973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 4622              		.loc 1 1973 0
 4623 00de 0023     		movs	r3, #0
 4624 00e0 80F8C030 		strb	r3, [r0, #192]
1975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 4625              		.loc 1 1975 0
 4626 00e4 1846     		mov	r0, r3
 4627              	.LVL550:
 4628 00e6 00E0     		b	.L349
 4629              	.LVL551:
 4630              	.L356:
1960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4631              		.loc 1 1960 0
 4632 00e8 0220     		movs	r0, #2
 4633              	.LVL552:
 4634              	.L349:
1976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 4635              		.loc 1 1976 0
 4636 00ea 5DF8044B 		ldr	r4, [sp], #4
 4637 00ee 7047     		bx	lr
 4638              	.L358:
 4639              		.align	2
 4640              	.L357:
 4641 00f0 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccWQyto6.s 			page 222


 4642              		.cfi_endproc
 4643              	.LFE146:
 4645              		.section	.text.HAL_HRTIM_SimplePWMStart_IT,"ax",%progbits
 4646              		.align	2
 4647              		.global	HAL_HRTIM_SimplePWMStart_IT
 4648              		.thumb
 4649              		.thumb_func
 4651              	HAL_HRTIM_SimplePWMStart_IT:
 4652              	.LFB147:
2006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 4653              		.loc 1 2006 0
 4654              		.cfi_startproc
 4655              		@ args = 0, pretend = 0, frame = 0
 4656              		@ frame_needed = 0, uses_anonymous_args = 0
 4657              		@ link register save eliminated.
 4658              	.LVL553:
 4659 0000 10B4     		push	{r4}
 4660              	.LCFI28:
 4661              		.cfi_def_cfa_offset 4
 4662              		.cfi_offset 4, -4
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4663              		.loc 1 2011 0
 4664 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 4665 0006 012B     		cmp	r3, #1
 4666 0008 4AD0     		beq	.L367
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4667              		.loc 1 2011 0 is_stmt 0 discriminator 2
 4668 000a 0123     		movs	r3, #1
 4669 000c 80F8C030 		strb	r3, [r0, #192]
2013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 4670              		.loc 1 2013 0 is_stmt 1 discriminator 2
 4671 0010 0223     		movs	r3, #2
 4672 0012 80F8C130 		strb	r3, [r0, #193]
2016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= PWMChannel;
 4673              		.loc 1 2016 0 discriminator 2
 4674 0016 0368     		ldr	r3, [r0]
 4675 0018 D3F89443 		ldr	r4, [r3, #916]
 4676 001c 1443     		orrs	r4, r4, r2
 4677 001e C3F89443 		str	r4, [r3, #916]
2019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
 4678              		.loc 1 2019 0 discriminator 2
 4679 0022 102A     		cmp	r2, #16
 4680 0024 1AD0     		beq	.L362
 4681 0026 0AD8     		bhi	.L363
 4682 0028 022A     		cmp	r2, #2
 4683 002a 21D0     		beq	.L364
 4684 002c 02D8     		bhi	.L365
 4685 002e 012A     		cmp	r2, #1
 4686 0030 27D1     		bne	.L361
 4687 0032 13E0     		b	.L362
 4688              	.L365:
 4689 0034 042A     		cmp	r2, #4
 4690 0036 11D0     		beq	.L362
 4691 0038 082A     		cmp	r2, #8
 4692 003a 22D1     		bne	.L361
 4693 003c 18E0     		b	.L364
 4694              	.L363:
ARM GAS  /tmp/ccWQyto6.s 			page 223


 4695 003e 802A     		cmp	r2, #128
 4696 0040 16D0     		beq	.L364
 4697 0042 04D8     		bhi	.L366
 4698 0044 202A     		cmp	r2, #32
 4699 0046 13D0     		beq	.L364
 4700 0048 402A     		cmp	r2, #64
 4701 004a 1AD1     		bne	.L361
 4702 004c 06E0     		b	.L362
 4703              	.L366:
 4704 004e B2F5807F 		cmp	r2, #256
 4705 0052 03D0     		beq	.L362
 4706 0054 B2F5007F 		cmp	r2, #512
 4707 0058 13D1     		bne	.L361
 4708 005a 09E0     		b	.L364
 4709              	.L362:
2027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
 4710              		.loc 1 2027 0
 4711 005c 0368     		ldr	r3, [r0]
 4712 005e 03EBC113 		add	r3, r3, r1, lsl #7
 4713 0062 D3F88C20 		ldr	r2, [r3, #140]
 4714              	.LVL554:
 4715 0066 42F00102 		orr	r2, r2, #1
 4716 006a C3F88C20 		str	r2, [r3, #140]
2029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 4717              		.loc 1 2029 0
 4718 006e 08E0     		b	.L361
 4719              	.LVL555:
 4720              	.L364:
2036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
 4721              		.loc 1 2036 0
 4722 0070 0368     		ldr	r3, [r0]
 4723 0072 03EBC113 		add	r3, r3, r1, lsl #7
 4724 0076 D3F88C20 		ldr	r2, [r3, #140]
 4725              	.LVL556:
 4726 007a 42F00202 		orr	r2, r2, #2
 4727 007e C3F88C20 		str	r2, [r3, #140]
 4728              	.L361:
2044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4729              		.loc 1 2044 0
 4730 0082 0368     		ldr	r3, [r0]
 4731 0084 1C68     		ldr	r4, [r3]
 4732 0086 084A     		ldr	r2, .L368
 4733 0088 52F82120 		ldr	r2, [r2, r1, lsl #2]
 4734 008c 2243     		orrs	r2, r2, r4
 4735 008e 1A60     		str	r2, [r3]
2046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 4736              		.loc 1 2046 0
 4737 0090 0123     		movs	r3, #1
 4738 0092 80F8C130 		strb	r3, [r0, #193]
2049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 4739              		.loc 1 2049 0
 4740 0096 0023     		movs	r3, #0
 4741 0098 80F8C030 		strb	r3, [r0, #192]
2051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 4742              		.loc 1 2051 0
 4743 009c 1846     		mov	r0, r3
 4744              	.LVL557:
ARM GAS  /tmp/ccWQyto6.s 			page 224


 4745 009e 00E0     		b	.L360
 4746              	.LVL558:
 4747              	.L367:
2011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4748              		.loc 1 2011 0
 4749 00a0 0220     		movs	r0, #2
 4750              	.LVL559:
 4751              	.L360:
2052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 4752              		.loc 1 2052 0
 4753 00a2 5DF8044B 		ldr	r4, [sp], #4
 4754 00a6 7047     		bx	lr
 4755              	.L369:
 4756              		.align	2
 4757              	.L368:
 4758 00a8 00000000 		.word	.LANCHOR0
 4759              		.cfi_endproc
 4760              	.LFE147:
 4762              		.section	.text.HAL_HRTIM_SimplePWMStop_IT,"ax",%progbits
 4763              		.align	2
 4764              		.global	HAL_HRTIM_SimplePWMStop_IT
 4765              		.thumb
 4766              		.thumb_func
 4768              	HAL_HRTIM_SimplePWMStop_IT:
 4769              	.LFB148:
2082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 4770              		.loc 1 2082 0
 4771              		.cfi_startproc
 4772              		@ args = 0, pretend = 0, frame = 0
 4773              		@ frame_needed = 0, uses_anonymous_args = 0
 4774              		@ link register save eliminated.
 4775              	.LVL560:
 4776 0000 10B4     		push	{r4}
 4777              	.LCFI29:
 4778              		.cfi_def_cfa_offset 4
 4779              		.cfi_offset 4, -4
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4780              		.loc 1 2087 0
 4781 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 4782 0006 012B     		cmp	r3, #1
 4783 0008 00F09F80 		beq	.L384
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4784              		.loc 1 2087 0 is_stmt 0 discriminator 2
 4785 000c 0123     		movs	r3, #1
 4786 000e 80F8C030 		strb	r3, [r0, #192]
2089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 4787              		.loc 1 2089 0 is_stmt 1 discriminator 2
 4788 0012 0223     		movs	r3, #2
 4789 0014 80F8C130 		strb	r3, [r0, #193]
2092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= PWMChannel;
 4790              		.loc 1 2092 0 discriminator 2
 4791 0018 0368     		ldr	r3, [r0]
 4792 001a D3F89843 		ldr	r4, [r3, #920]
 4793 001e 1443     		orrs	r4, r4, r2
 4794 0020 C3F89843 		str	r4, [r3, #920]
2095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
 4795              		.loc 1 2095 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 225


 4796 0024 102A     		cmp	r2, #16
 4797 0026 1AD0     		beq	.L373
 4798 0028 0AD8     		bhi	.L374
 4799 002a 022A     		cmp	r2, #2
 4800 002c 21D0     		beq	.L375
 4801 002e 02D8     		bhi	.L376
 4802 0030 012A     		cmp	r2, #1
 4803 0032 27D1     		bne	.L372
 4804 0034 13E0     		b	.L373
 4805              	.L376:
 4806 0036 042A     		cmp	r2, #4
 4807 0038 11D0     		beq	.L373
 4808 003a 082A     		cmp	r2, #8
 4809 003c 22D1     		bne	.L372
 4810 003e 18E0     		b	.L375
 4811              	.L374:
 4812 0040 802A     		cmp	r2, #128
 4813 0042 16D0     		beq	.L375
 4814 0044 04D8     		bhi	.L377
 4815 0046 202A     		cmp	r2, #32
 4816 0048 13D0     		beq	.L375
 4817 004a 402A     		cmp	r2, #64
 4818 004c 1AD1     		bne	.L372
 4819 004e 06E0     		b	.L373
 4820              	.L377:
 4821 0050 B2F5807F 		cmp	r2, #256
 4822 0054 03D0     		beq	.L373
 4823 0056 B2F5007F 		cmp	r2, #512
 4824 005a 13D1     		bne	.L372
 4825 005c 09E0     		b	.L375
 4826              	.L373:
2103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
 4827              		.loc 1 2103 0
 4828 005e 0368     		ldr	r3, [r0]
 4829 0060 03EBC113 		add	r3, r3, r1, lsl #7
 4830 0064 D3F88C20 		ldr	r2, [r3, #140]
 4831              	.LVL561:
 4832 0068 22F00102 		bic	r2, r2, #1
 4833 006c C3F88C20 		str	r2, [r3, #140]
2105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 4834              		.loc 1 2105 0
 4835 0070 08E0     		b	.L372
 4836              	.LVL562:
 4837              	.L375:
2112:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
 4838              		.loc 1 2112 0
 4839 0072 0368     		ldr	r3, [r0]
 4840 0074 03EBC113 		add	r3, r3, r1, lsl #7
 4841 0078 D3F88C20 		ldr	r2, [r3, #140]
 4842              	.LVL563:
 4843 007c 22F00202 		bic	r2, r2, #2
 4844 0080 C3F88C20 		str	r2, [r3, #140]
 4845              	.L372:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4846              		.loc 1 2120 0
 4847 0084 334B     		ldr	r3, .L385
 4848 0086 53F82130 		ldr	r3, [r3, r1, lsl #2]
ARM GAS  /tmp/ccWQyto6.s 			page 226


 4849 008a 13F4803F 		tst	r3, #65536
 4850 008e 04D0     		beq	.L378
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4851              		.loc 1 2120 0 is_stmt 0 discriminator 1
 4852 0090 0368     		ldr	r3, [r0]
 4853 0092 1A68     		ldr	r2, [r3]
 4854 0094 22F48032 		bic	r2, r2, #65536
 4855 0098 1A60     		str	r2, [r3]
 4856              	.L378:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4857              		.loc 1 2120 0 discriminator 2
 4858 009a 2E4B     		ldr	r3, .L385
 4859 009c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4860 00a0 13F4003F 		tst	r3, #131072
 4861 00a4 09D0     		beq	.L379
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4862              		.loc 1 2120 0 discriminator 1
 4863 00a6 0368     		ldr	r3, [r0]
 4864 00a8 D3F89423 		ldr	r2, [r3, #916]
 4865 00ac 12F0030F 		tst	r2, #3
 4866 00b0 03D1     		bne	.L379
 4867 00b2 1A68     		ldr	r2, [r3]
 4868 00b4 22F40032 		bic	r2, r2, #131072
 4869 00b8 1A60     		str	r2, [r3]
 4870              	.L379:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4871              		.loc 1 2120 0 discriminator 2
 4872 00ba 264B     		ldr	r3, .L385
 4873 00bc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4874 00c0 13F4802F 		tst	r3, #262144
 4875 00c4 09D0     		beq	.L380
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4876              		.loc 1 2120 0 discriminator 1
 4877 00c6 0368     		ldr	r3, [r0]
 4878 00c8 D3F89423 		ldr	r2, [r3, #916]
 4879 00cc 12F00C0F 		tst	r2, #12
 4880 00d0 03D1     		bne	.L380
 4881 00d2 1A68     		ldr	r2, [r3]
 4882 00d4 22F48022 		bic	r2, r2, #262144
 4883 00d8 1A60     		str	r2, [r3]
 4884              	.L380:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4885              		.loc 1 2120 0 discriminator 2
 4886 00da 1E4B     		ldr	r3, .L385
 4887 00dc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4888 00e0 13F4002F 		tst	r3, #524288
 4889 00e4 09D0     		beq	.L381
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4890              		.loc 1 2120 0 discriminator 1
 4891 00e6 0368     		ldr	r3, [r0]
 4892 00e8 D3F89423 		ldr	r2, [r3, #916]
 4893 00ec 12F0300F 		tst	r2, #48
 4894 00f0 03D1     		bne	.L381
 4895 00f2 1A68     		ldr	r2, [r3]
 4896 00f4 22F40022 		bic	r2, r2, #524288
 4897 00f8 1A60     		str	r2, [r3]
 4898              	.L381:
ARM GAS  /tmp/ccWQyto6.s 			page 227


2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4899              		.loc 1 2120 0 discriminator 2
 4900 00fa 164B     		ldr	r3, .L385
 4901 00fc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4902 0100 13F4801F 		tst	r3, #1048576
 4903 0104 09D0     		beq	.L382
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4904              		.loc 1 2120 0 discriminator 1
 4905 0106 0368     		ldr	r3, [r0]
 4906 0108 D3F89423 		ldr	r2, [r3, #916]
 4907 010c 12F0C00F 		tst	r2, #192
 4908 0110 03D1     		bne	.L382
 4909 0112 1A68     		ldr	r2, [r3]
 4910 0114 22F48012 		bic	r2, r2, #1048576
 4911 0118 1A60     		str	r2, [r3]
 4912              	.L382:
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4913              		.loc 1 2120 0 discriminator 2
 4914 011a 0E4B     		ldr	r3, .L385
 4915 011c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 4916 0120 13F4001F 		tst	r3, #2097152
 4917 0124 09D0     		beq	.L383
2120:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 4918              		.loc 1 2120 0 discriminator 1
 4919 0126 0368     		ldr	r3, [r0]
 4920 0128 D3F89423 		ldr	r2, [r3, #916]
 4921 012c 12F4407F 		tst	r2, #768
 4922 0130 03D1     		bne	.L383
 4923 0132 1A68     		ldr	r2, [r3]
 4924 0134 22F40012 		bic	r2, r2, #2097152
 4925 0138 1A60     		str	r2, [r3]
 4926              	.L383:
2122:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 4927              		.loc 1 2122 0 is_stmt 1
 4928 013a 0123     		movs	r3, #1
 4929 013c 80F8C130 		strb	r3, [r0, #193]
2125:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 4930              		.loc 1 2125 0
 4931 0140 0023     		movs	r3, #0
 4932 0142 80F8C030 		strb	r3, [r0, #192]
2127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 4933              		.loc 1 2127 0
 4934 0146 1846     		mov	r0, r3
 4935              	.LVL564:
 4936 0148 00E0     		b	.L371
 4937              	.LVL565:
 4938              	.L384:
2087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 4939              		.loc 1 2087 0
 4940 014a 0220     		movs	r0, #2
 4941              	.LVL566:
 4942              	.L371:
2128:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 4943              		.loc 1 2128 0
 4944 014c 5DF8044B 		ldr	r4, [sp], #4
 4945 0150 7047     		bx	lr
 4946              	.L386:
ARM GAS  /tmp/ccWQyto6.s 			page 228


 4947 0152 00BF     		.align	2
 4948              	.L385:
 4949 0154 00000000 		.word	.LANCHOR0
 4950              		.cfi_endproc
 4951              	.LFE148:
 4953              		.section	.text.HAL_HRTIM_SimplePWMStart_DMA,"ax",%progbits
 4954              		.align	2
 4955              		.global	HAL_HRTIM_SimplePWMStart_DMA
 4956              		.thumb
 4957              		.thumb_func
 4959              	HAL_HRTIM_SimplePWMStart_DMA:
 4960              	.LFB149:
2165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 4961              		.loc 1 2165 0
 4962              		.cfi_startproc
 4963              		@ args = 8, pretend = 0, frame = 0
 4964              		@ frame_needed = 0, uses_anonymous_args = 0
 4965              	.LVL567:
 4966 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 4967              	.LCFI30:
 4968              		.cfi_def_cfa_offset 24
 4969              		.cfi_offset 3, -24
 4970              		.cfi_offset 4, -20
 4971              		.cfi_offset 5, -16
 4972              		.cfi_offset 6, -12
 4973              		.cfi_offset 7, -8
 4974              		.cfi_offset 14, -4
 4975 0002 0446     		mov	r4, r0
 4976 0004 0E46     		mov	r6, r1
 4977 0006 1546     		mov	r5, r2
 4978 0008 1F46     		mov	r7, r3
2171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
 4979              		.loc 1 2171 0
 4980 000a 90F8C100 		ldrb	r0, [r0, #193]	@ zero_extendqisi2
 4981              	.LVL568:
 4982 000e C0B2     		uxtb	r0, r0
 4983 0010 0228     		cmp	r0, #2
 4984 0012 67D0     		beq	.L396
2175:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
 4985              		.loc 1 2175 0
 4986 0014 94F8C130 		ldrb	r3, [r4, #193]	@ zero_extendqisi2
 4987              	.LVL569:
 4988 0018 DBB2     		uxtb	r3, r3
 4989 001a 012B     		cmp	r3, #1
 4990 001c 0AD1     		bne	.L389
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
 4991              		.loc 1 2177 0
 4992 001e 002F     		cmp	r7, #0
 4993 0020 62D0     		beq	.L397
2177:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((SrcAddr == 0U ) || (DestAddr == 0U ) || (Length == 0U)) 
 4994              		.loc 1 2177 0 is_stmt 0 discriminator 1
 4995 0022 069B     		ldr	r3, [sp, #24]
 4996 0024 002B     		cmp	r3, #0
 4997 0026 61D0     		beq	.L398
 4998 0028 079B     		ldr	r3, [sp, #28]
 4999 002a 002B     		cmp	r3, #0
 5000 002c 60D0     		beq	.L399
ARM GAS  /tmp/ccWQyto6.s 			page 229


2183:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
 5001              		.loc 1 2183 0 is_stmt 1
 5002 002e 0223     		movs	r3, #2
 5003 0030 84F8C130 		strb	r3, [r4, #193]
 5004              	.L389:
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5005              		.loc 1 2188 0
 5006 0034 94F8C030 		ldrb	r3, [r4, #192]	@ zero_extendqisi2
 5007 0038 012B     		cmp	r3, #1
 5008 003a 5BD0     		beq	.L400
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5009              		.loc 1 2188 0 is_stmt 0 discriminator 2
 5010 003c 0123     		movs	r3, #1
 5011 003e 84F8C030 		strb	r3, [r4, #192]
2191:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= PWMChannel;
 5012              		.loc 1 2191 0 is_stmt 1 discriminator 2
 5013 0042 2368     		ldr	r3, [r4]
 5014 0044 D3F89423 		ldr	r2, [r3, #916]
 5015              	.LVL570:
 5016 0048 2A43     		orrs	r2, r2, r5
 5017 004a C3F89423 		str	r2, [r3, #916]
2194:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 5018              		.loc 1 2194 0 discriminator 2
 5019 004e 2046     		mov	r0, r4
 5020 0050 3146     		mov	r1, r6
 5021              	.LVL571:
 5022 0052 FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 5023              	.LVL572:
2197:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
 5024              		.loc 1 2197 0 discriminator 2
 5025 0056 284A     		ldr	r2, .L401
 5026 0058 0263     		str	r2, [r0, #48]
2200:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
 5027              		.loc 1 2200 0 discriminator 2
 5028 005a 284A     		ldr	r2, .L401+4
 5029 005c 8262     		str	r2, [r0, #40]
2203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
 5030              		.loc 1 2203 0 discriminator 2
 5031 005e 3946     		mov	r1, r7
 5032 0060 069A     		ldr	r2, [sp, #24]
 5033 0062 079B     		ldr	r3, [sp, #28]
 5034 0064 FFF7FEFF 		bl	HAL_DMA_Start_IT
 5035              	.LVL573:
2206:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
 5036              		.loc 1 2206 0 discriminator 2
 5037 0068 102D     		cmp	r5, #16
 5038 006a 1AD0     		beq	.L391
 5039 006c 0AD8     		bhi	.L392
 5040 006e 022D     		cmp	r5, #2
 5041 0070 21D0     		beq	.L393
 5042 0072 02D8     		bhi	.L394
 5043 0074 012D     		cmp	r5, #1
 5044 0076 27D1     		bne	.L390
 5045 0078 13E0     		b	.L391
 5046              	.L394:
 5047 007a 042D     		cmp	r5, #4
 5048 007c 11D0     		beq	.L391
ARM GAS  /tmp/ccWQyto6.s 			page 230


 5049 007e 082D     		cmp	r5, #8
 5050 0080 22D1     		bne	.L390
 5051 0082 18E0     		b	.L393
 5052              	.L392:
 5053 0084 802D     		cmp	r5, #128
 5054 0086 16D0     		beq	.L393
 5055 0088 04D8     		bhi	.L395
 5056 008a 202D     		cmp	r5, #32
 5057 008c 13D0     		beq	.L393
 5058 008e 402D     		cmp	r5, #64
 5059 0090 1AD1     		bne	.L390
 5060 0092 06E0     		b	.L391
 5061              	.L395:
 5062 0094 B5F5807F 		cmp	r5, #256
 5063 0098 03D0     		beq	.L391
 5064 009a B5F5007F 		cmp	r5, #512
 5065 009e 13D1     		bne	.L390
 5066 00a0 09E0     		b	.L393
 5067              	.L391:
2214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP1);      
 5068              		.loc 1 2214 0
 5069 00a2 2368     		ldr	r3, [r4]
 5070 00a4 03EBC613 		add	r3, r3, r6, lsl #7
 5071 00a8 D3F88C20 		ldr	r2, [r3, #140]
 5072 00ac 42F48032 		orr	r2, r2, #65536
 5073 00b0 C3F88C20 		str	r2, [r3, #140]
2216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 5074              		.loc 1 2216 0
 5075 00b4 08E0     		b	.L390
 5076              	.L393:
2223:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP2);      
 5077              		.loc 1 2223 0
 5078 00b6 2368     		ldr	r3, [r4]
 5079 00b8 03EBC613 		add	r3, r3, r6, lsl #7
 5080 00bc D3F88C20 		ldr	r2, [r3, #140]
 5081 00c0 42F40032 		orr	r2, r2, #131072
 5082 00c4 C3F88C20 		str	r2, [r3, #140]
 5083              	.L390:
2231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5084              		.loc 1 2231 0
 5085 00c8 2368     		ldr	r3, [r4]
 5086 00ca 1968     		ldr	r1, [r3]
 5087 00cc 0C4A     		ldr	r2, .L401+8
 5088 00ce 52F82620 		ldr	r2, [r2, r6, lsl #2]
 5089 00d2 0A43     		orrs	r2, r2, r1
 5090 00d4 1A60     		str	r2, [r3]
2233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 5091              		.loc 1 2233 0
 5092 00d6 0123     		movs	r3, #1
 5093 00d8 84F8C130 		strb	r3, [r4, #193]
2236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 5094              		.loc 1 2236 0
 5095 00dc 0020     		movs	r0, #0
 5096 00de 84F8C000 		strb	r0, [r4, #192]
2238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 5097              		.loc 1 2238 0
 5098 00e2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  /tmp/ccWQyto6.s 			page 231


 5099              	.LVL574:
 5100              	.L396:
2173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 5101              		.loc 1 2173 0
 5102 00e4 0220     		movs	r0, #2
 5103 00e6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5104              	.LVL575:
 5105              	.L397:
2179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
 5106              		.loc 1 2179 0
 5107 00e8 0120     		movs	r0, #1
 5108 00ea F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5109              	.LVL576:
 5110              	.L398:
 5111 00ec 0120     		movs	r0, #1
 5112 00ee F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5113              	.LVL577:
 5114              	.L399:
 5115 00f0 0120     		movs	r0, #1
 5116 00f2 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5117              	.LVL578:
 5118              	.L400:
2188:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5119              		.loc 1 2188 0
 5120 00f4 0220     		movs	r0, #2
2239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 5121              		.loc 1 2239 0
 5122 00f6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 5123              	.LVL579:
 5124              	.L402:
 5125              		.align	2
 5126              	.L401:
 5127 00f8 00000000 		.word	HRTIM_DMAError
 5128 00fc 00000000 		.word	HRTIM_DMATimerxCplt
 5129 0100 00000000 		.word	.LANCHOR0
 5130              		.cfi_endproc
 5131              	.LFE149:
 5133              		.section	.text.HAL_HRTIM_SimplePWMStop_DMA,"ax",%progbits
 5134              		.align	2
 5135              		.global	HAL_HRTIM_SimplePWMStop_DMA
 5136              		.thumb
 5137              		.thumb_func
 5139              	HAL_HRTIM_SimplePWMStop_DMA:
 5140              	.LFB150:
2269:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 5141              		.loc 1 2269 0
 5142              		.cfi_startproc
 5143              		@ args = 0, pretend = 0, frame = 0
 5144              		@ frame_needed = 0, uses_anonymous_args = 0
 5145              	.LVL580:
 5146 0000 70B5     		push	{r4, r5, r6, lr}
 5147              	.LCFI31:
 5148              		.cfi_def_cfa_offset 16
 5149              		.cfi_offset 4, -16
 5150              		.cfi_offset 5, -12
 5151              		.cfi_offset 6, -8
 5152              		.cfi_offset 14, -4
ARM GAS  /tmp/ccWQyto6.s 			page 232


 5153 0002 0446     		mov	r4, r0
 5154 0004 0D46     		mov	r5, r1
 5155 0006 1646     		mov	r6, r2
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5156              		.loc 1 2276 0
 5157 0008 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 5158 000c 012B     		cmp	r3, #1
 5159 000e 00F0A280 		beq	.L417
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5160              		.loc 1 2276 0 is_stmt 0 discriminator 2
 5161 0012 0123     		movs	r3, #1
 5162 0014 80F8C030 		strb	r3, [r0, #192]
2278:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 5163              		.loc 1 2278 0 is_stmt 1 discriminator 2
 5164 0018 0223     		movs	r3, #2
 5165 001a 80F8C130 		strb	r3, [r0, #193]
2281:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= PWMChannel;
 5166              		.loc 1 2281 0 discriminator 2
 5167 001e 0368     		ldr	r3, [r0]
 5168 0020 D3F89823 		ldr	r2, [r3, #920]
 5169              	.LVL581:
 5170 0024 3243     		orrs	r2, r2, r6
 5171 0026 C3F89823 		str	r2, [r3, #920]
2284:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 5172              		.loc 1 2284 0 discriminator 2
 5173 002a FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 5174              	.LVL582:
2287:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Abort(hdma);
 5175              		.loc 1 2287 0 discriminator 2
 5176 002e FFF7FEFF 		bl	HAL_DMA_Abort
 5177              	.LVL583:
2290:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (PWMChannel)
 5178              		.loc 1 2290 0 discriminator 2
 5179 0032 102E     		cmp	r6, #16
 5180 0034 1AD0     		beq	.L406
 5181 0036 0AD8     		bhi	.L407
 5182 0038 022E     		cmp	r6, #2
 5183 003a 21D0     		beq	.L408
 5184 003c 02D8     		bhi	.L409
 5185 003e 012E     		cmp	r6, #1
 5186 0040 27D1     		bne	.L405
 5187 0042 13E0     		b	.L406
 5188              	.L409:
 5189 0044 042E     		cmp	r6, #4
 5190 0046 11D0     		beq	.L406
 5191 0048 082E     		cmp	r6, #8
 5192 004a 22D1     		bne	.L405
 5193 004c 18E0     		b	.L408
 5194              	.L407:
 5195 004e 802E     		cmp	r6, #128
 5196 0050 16D0     		beq	.L408
 5197 0052 04D8     		bhi	.L410
 5198 0054 202E     		cmp	r6, #32
 5199 0056 13D0     		beq	.L408
 5200 0058 402E     		cmp	r6, #64
 5201 005a 1AD1     		bne	.L405
 5202 005c 06E0     		b	.L406
ARM GAS  /tmp/ccWQyto6.s 			page 233


 5203              	.L410:
 5204 005e B6F5807F 		cmp	r6, #256
 5205 0062 03D0     		beq	.L406
 5206 0064 B6F5007F 		cmp	r6, #512
 5207 0068 13D1     		bne	.L405
 5208 006a 09E0     		b	.L408
 5209              	.L406:
2298:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP1);
 5210              		.loc 1 2298 0
 5211 006c 2368     		ldr	r3, [r4]
 5212 006e 03EBC513 		add	r3, r3, r5, lsl #7
 5213 0072 D3F88C20 		ldr	r2, [r3, #140]
 5214 0076 22F48032 		bic	r2, r2, #65536
 5215 007a C3F88C20 		str	r2, [r3, #140]
2300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 5216              		.loc 1 2300 0
 5217 007e 08E0     		b	.L405
 5218              	.L408:
2307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CMP2);
 5219              		.loc 1 2307 0
 5220 0080 2368     		ldr	r3, [r4]
 5221 0082 03EBC513 		add	r3, r3, r5, lsl #7
 5222 0086 D3F88C20 		ldr	r2, [r3, #140]
 5223 008a 22F40032 		bic	r2, r2, #131072
 5224 008e C3F88C20 		str	r2, [r3, #140]
 5225              	.L405:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5226              		.loc 1 2315 0
 5227 0092 324B     		ldr	r3, .L418
 5228 0094 53F82530 		ldr	r3, [r3, r5, lsl #2]
 5229 0098 13F4803F 		tst	r3, #65536
 5230 009c 04D0     		beq	.L411
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5231              		.loc 1 2315 0 is_stmt 0 discriminator 1
 5232 009e 2368     		ldr	r3, [r4]
 5233 00a0 1A68     		ldr	r2, [r3]
 5234 00a2 22F48032 		bic	r2, r2, #65536
 5235 00a6 1A60     		str	r2, [r3]
 5236              	.L411:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5237              		.loc 1 2315 0 discriminator 2
 5238 00a8 2C4B     		ldr	r3, .L418
 5239 00aa 53F82530 		ldr	r3, [r3, r5, lsl #2]
 5240 00ae 13F4003F 		tst	r3, #131072
 5241 00b2 09D0     		beq	.L412
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5242              		.loc 1 2315 0 discriminator 1
 5243 00b4 2368     		ldr	r3, [r4]
 5244 00b6 D3F89423 		ldr	r2, [r3, #916]
 5245 00ba 12F0030F 		tst	r2, #3
 5246 00be 03D1     		bne	.L412
 5247 00c0 1A68     		ldr	r2, [r3]
 5248 00c2 22F40032 		bic	r2, r2, #131072
 5249 00c6 1A60     		str	r2, [r3]
 5250              	.L412:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5251              		.loc 1 2315 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 234


 5252 00c8 244B     		ldr	r3, .L418
 5253 00ca 53F82530 		ldr	r3, [r3, r5, lsl #2]
 5254 00ce 13F4802F 		tst	r3, #262144
 5255 00d2 09D0     		beq	.L413
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5256              		.loc 1 2315 0 discriminator 1
 5257 00d4 2368     		ldr	r3, [r4]
 5258 00d6 D3F89423 		ldr	r2, [r3, #916]
 5259 00da 12F00C0F 		tst	r2, #12
 5260 00de 03D1     		bne	.L413
 5261 00e0 1A68     		ldr	r2, [r3]
 5262 00e2 22F48022 		bic	r2, r2, #262144
 5263 00e6 1A60     		str	r2, [r3]
 5264              	.L413:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5265              		.loc 1 2315 0 discriminator 2
 5266 00e8 1C4B     		ldr	r3, .L418
 5267 00ea 53F82530 		ldr	r3, [r3, r5, lsl #2]
 5268 00ee 13F4002F 		tst	r3, #524288
 5269 00f2 09D0     		beq	.L414
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5270              		.loc 1 2315 0 discriminator 1
 5271 00f4 2368     		ldr	r3, [r4]
 5272 00f6 D3F89423 		ldr	r2, [r3, #916]
 5273 00fa 12F0300F 		tst	r2, #48
 5274 00fe 03D1     		bne	.L414
 5275 0100 1A68     		ldr	r2, [r3]
 5276 0102 22F40022 		bic	r2, r2, #524288
 5277 0106 1A60     		str	r2, [r3]
 5278              	.L414:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5279              		.loc 1 2315 0 discriminator 2
 5280 0108 144B     		ldr	r3, .L418
 5281 010a 53F82530 		ldr	r3, [r3, r5, lsl #2]
 5282 010e 13F4801F 		tst	r3, #1048576
 5283 0112 09D0     		beq	.L415
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5284              		.loc 1 2315 0 discriminator 1
 5285 0114 2368     		ldr	r3, [r4]
 5286 0116 D3F89423 		ldr	r2, [r3, #916]
 5287 011a 12F0C00F 		tst	r2, #192
 5288 011e 03D1     		bne	.L415
 5289 0120 1A68     		ldr	r2, [r3]
 5290 0122 22F48012 		bic	r2, r2, #1048576
 5291 0126 1A60     		str	r2, [r3]
 5292              	.L415:
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5293              		.loc 1 2315 0 discriminator 2
 5294 0128 0C4B     		ldr	r3, .L418
 5295 012a 53F82530 		ldr	r3, [r3, r5, lsl #2]
 5296 012e 13F4001F 		tst	r3, #2097152
 5297 0132 09D0     		beq	.L416
2315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5298              		.loc 1 2315 0 discriminator 1
 5299 0134 2368     		ldr	r3, [r4]
 5300 0136 D3F89423 		ldr	r2, [r3, #916]
 5301 013a 12F4407F 		tst	r2, #768
ARM GAS  /tmp/ccWQyto6.s 			page 235


 5302 013e 03D1     		bne	.L416
 5303 0140 1A68     		ldr	r2, [r3]
 5304 0142 22F40012 		bic	r2, r2, #2097152
 5305 0146 1A60     		str	r2, [r3]
 5306              	.L416:
2317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 5307              		.loc 1 2317 0 is_stmt 1
 5308 0148 0123     		movs	r3, #1
 5309 014a 84F8C130 		strb	r3, [r4, #193]
2320:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 5310              		.loc 1 2320 0
 5311 014e 0020     		movs	r0, #0
 5312 0150 84F8C000 		strb	r0, [r4, #192]
2322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 5313              		.loc 1 2322 0
 5314 0154 70BD     		pop	{r4, r5, r6, pc}
 5315              	.LVL584:
 5316              	.L417:
2276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5317              		.loc 1 2276 0
 5318 0156 0220     		movs	r0, #2
 5319              	.LVL585:
2323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 5320              		.loc 1 2323 0
 5321 0158 70BD     		pop	{r4, r5, r6, pc}
 5322              	.LVL586:
 5323              	.L419:
 5324 015a 00BF     		.align	2
 5325              	.L418:
 5326 015c 00000000 		.word	.LANCHOR0
 5327              		.cfi_endproc
 5328              	.LFE150:
 5330              		.section	.text.HAL_HRTIM_SimpleCaptureChannelConfig,"ax",%progbits
 5331              		.align	2
 5332              		.global	HAL_HRTIM_SimpleCaptureChannelConfig
 5333              		.thumb
 5334              		.thumb_func
 5336              	HAL_HRTIM_SimpleCaptureChannelConfig:
 5337              	.LFB151:
2376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 5338              		.loc 1 2376 0
 5339              		.cfi_startproc
 5340              		@ args = 0, pretend = 0, frame = 24
 5341              		@ frame_needed = 0, uses_anonymous_args = 0
 5342              	.LVL587:
 5343 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 5344              	.LCFI32:
 5345              		.cfi_def_cfa_offset 28
 5346              		.cfi_offset 4, -28
 5347              		.cfi_offset 5, -24
 5348              		.cfi_offset 6, -20
 5349              		.cfi_offset 7, -16
 5350              		.cfi_offset 8, -12
 5351              		.cfi_offset 9, -8
 5352              		.cfi_offset 14, -4
 5353 0004 87B0     		sub	sp, sp, #28
 5354              	.LCFI33:
ARM GAS  /tmp/ccWQyto6.s 			page 236


 5355              		.cfi_def_cfa_offset 56
 5356 0006 0446     		mov	r4, r0
 5357 0008 0F46     		mov	r7, r1
 5358 000a 1646     		mov	r6, r2
 5359 000c 1D46     		mov	r5, r3
2389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 5360              		.loc 1 2389 0
 5361 000e 90F8C100 		ldrb	r0, [r0, #193]	@ zero_extendqisi2
 5362              	.LVL588:
 5363 0012 C0B2     		uxtb	r0, r0
 5364 0014 0228     		cmp	r0, #2
 5365 0016 27D0     		beq	.L422
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5366              		.loc 1 2395 0
 5367 0018 94F8C030 		ldrb	r3, [r4, #192]	@ zero_extendqisi2
 5368              	.LVL589:
 5369 001c 012B     		cmp	r3, #1
 5370 001e 25D0     		beq	.L423
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5371              		.loc 1 2395 0 is_stmt 0 discriminator 2
 5372 0020 4FF00109 		mov	r9, #1
 5373 0024 84F8C090 		strb	r9, [r4, #192]
2397:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 5374              		.loc 1 2397 0 is_stmt 1 discriminator 2
 5375 0028 0223     		movs	r3, #2
 5376 002a 84F8C130 		strb	r3, [r4, #193]
2400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.FastMode = HRTIM_EVENTFASTMODE_DISABLE;
 5377              		.loc 1 2400 0 discriminator 2
 5378 002e 4FF00008 		mov	r8, #0
 5379 0032 CDF81480 		str	r8, [sp, #20]
2401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Filter = pSimpleCaptureChannelCfg->EventFilter;
 5380              		.loc 1 2401 0 discriminator 2
 5381 0036 EB68     		ldr	r3, [r5, #12]
 5382 0038 0493     		str	r3, [sp, #16]
2402:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Polarity = pSimpleCaptureChannelCfg->EventPolarity;
 5383              		.loc 1 2402 0 discriminator 2
 5384 003a 6B68     		ldr	r3, [r5, #4]
 5385 003c 0293     		str	r3, [sp, #8]
2403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Sensitivity = pSimpleCaptureChannelCfg->EventSensitivity;
 5386              		.loc 1 2403 0 discriminator 2
 5387 003e AB68     		ldr	r3, [r5, #8]
 5388 0040 0393     		str	r3, [sp, #12]
2404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Source = HRTIM_EVENTSRC_1;
 5389              		.loc 1 2404 0 discriminator 2
 5390 0042 06AA     		add	r2, sp, #24
 5391              	.LVL590:
 5392 0044 42F8148D 		str	r8, [r2, #-20]!
2406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventConfig(hhrtim,
 5393              		.loc 1 2406 0 discriminator 2
 5394 0048 2046     		mov	r0, r4
 5395 004a 2968     		ldr	r1, [r5]
 5396              	.LVL591:
 5397 004c FFF7FEFF 		bl	HRTIM_EventConfig
 5398              	.LVL592:
2411:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CaptureUnitConfig(hhrtim,
 5399              		.loc 1 2411 0 discriminator 2
 5400 0050 2046     		mov	r0, r4
ARM GAS  /tmp/ccWQyto6.s 			page 237


 5401 0052 3946     		mov	r1, r7
 5402 0054 3246     		mov	r2, r6
 5403 0056 2B68     		ldr	r3, [r5]
 5404 0058 FFF7FEFF 		bl	HRTIM_CaptureUnitConfig
 5405              	.LVL593:
2416:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 5406              		.loc 1 2416 0 discriminator 2
 5407 005c 84F8C190 		strb	r9, [r4, #193]
2419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 5408              		.loc 1 2419 0 discriminator 2
 5409 0060 84F8C080 		strb	r8, [r4, #192]
2421:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 5410              		.loc 1 2421 0 discriminator 2
 5411 0064 4046     		mov	r0, r8
 5412 0066 02E0     		b	.L421
 5413              	.LVL594:
 5414              	.L422:
2391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 5415              		.loc 1 2391 0
 5416 0068 0220     		movs	r0, #2
 5417 006a 00E0     		b	.L421
 5418              	.LVL595:
 5419              	.L423:
2395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5420              		.loc 1 2395 0
 5421 006c 0220     		movs	r0, #2
 5422              	.LVL596:
 5423              	.L421:
2422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 5424              		.loc 1 2422 0
 5425 006e 07B0     		add	sp, sp, #28
 5426              		@ sp needed
 5427 0070 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 5428              		.cfi_endproc
 5429              	.LFE151:
 5431              		.section	.text.HAL_HRTIM_SimpleCaptureStart,"ax",%progbits
 5432              		.align	2
 5433              		.global	HAL_HRTIM_SimpleCaptureStart
 5434              		.thumb
 5435              		.thumb_func
 5437              	HAL_HRTIM_SimpleCaptureStart:
 5438              	.LFB152:
2446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 5439              		.loc 1 2446 0
 5440              		.cfi_startproc
 5441              		@ args = 0, pretend = 0, frame = 0
 5442              		@ frame_needed = 0, uses_anonymous_args = 0
 5443              		@ link register save eliminated.
 5444              	.LVL597:
 5445 0000 10B4     		push	{r4}
 5446              	.LCFI34:
 5447              		.cfi_def_cfa_offset 4
 5448              		.cfi_offset 4, -4
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5449              		.loc 1 2452 0
 5450 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 5451 0006 012B     		cmp	r3, #1
ARM GAS  /tmp/ccWQyto6.s 			page 238


 5452 0008 2ED0     		beq	.L429
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5453              		.loc 1 2452 0 is_stmt 0 discriminator 2
 5454 000a 0123     		movs	r3, #1
 5455 000c 80F8C030 		strb	r3, [r0, #192]
2454:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 5456              		.loc 1 2454 0 is_stmt 1 discriminator 2
 5457 0010 0223     		movs	r3, #2
 5458 0012 80F8C130 		strb	r3, [r0, #193]
2457:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
 5459              		.loc 1 2457 0 discriminator 2
 5460 0016 012A     		cmp	r2, #1
 5461 0018 02D0     		beq	.L427
 5462 001a 9A42     		cmp	r2, r3
 5463 001c 0BD0     		beq	.L428
 5464 001e 14E0     		b	.L426
 5465              	.L427:
2461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
 5466              		.loc 1 2461 0
 5467 0020 0268     		ldr	r2, [r0]
 5468              	.LVL598:
 5469 0022 C1EBC103 		rsb	r3, r1, r1, lsl #3
 5470 0026 9B00     		lsls	r3, r3, #2
 5471 0028 0344     		add	r3, r3, r0
 5472 002a 9B69     		ldr	r3, [r3, #24]
 5473 002c 02EBC112 		add	r2, r2, r1, lsl #7
 5474 0030 C2F8DC30 		str	r3, [r2, #220]
2463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 5475              		.loc 1 2463 0
 5476 0034 09E0     		b	.L426
 5477              	.LVL599:
 5478              	.L428:
2466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
 5479              		.loc 1 2466 0
 5480 0036 0268     		ldr	r2, [r0]
 5481              	.LVL600:
 5482 0038 C1EBC103 		rsb	r3, r1, r1, lsl #3
 5483 003c 9B00     		lsls	r3, r3, #2
 5484 003e 0344     		add	r3, r3, r0
 5485 0040 DB69     		ldr	r3, [r3, #28]
 5486 0042 02EBC112 		add	r2, r2, r1, lsl #7
 5487 0046 C2F8E030 		str	r3, [r2, #224]
 5488              	.L426:
2474:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5489              		.loc 1 2474 0
 5490 004a 0368     		ldr	r3, [r0]
 5491 004c 1C68     		ldr	r4, [r3]
 5492 004e 084A     		ldr	r2, .L430
 5493 0050 52F82120 		ldr	r2, [r2, r1, lsl #2]
 5494 0054 2243     		orrs	r2, r2, r4
 5495 0056 1A60     		str	r2, [r3]
2476:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 5496              		.loc 1 2476 0
 5497 0058 0123     		movs	r3, #1
 5498 005a 80F8C130 		strb	r3, [r0, #193]
2479:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 5499              		.loc 1 2479 0
ARM GAS  /tmp/ccWQyto6.s 			page 239


 5500 005e 0023     		movs	r3, #0
 5501 0060 80F8C030 		strb	r3, [r0, #192]
2481:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 5502              		.loc 1 2481 0
 5503 0064 1846     		mov	r0, r3
 5504              	.LVL601:
 5505 0066 00E0     		b	.L425
 5506              	.LVL602:
 5507              	.L429:
2452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5508              		.loc 1 2452 0
 5509 0068 0220     		movs	r0, #2
 5510              	.LVL603:
 5511              	.L425:
2482:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 5512              		.loc 1 2482 0
 5513 006a 5DF8044B 		ldr	r4, [sp], #4
 5514 006e 7047     		bx	lr
 5515              	.L431:
 5516              		.align	2
 5517              	.L430:
 5518 0070 00000000 		.word	.LANCHOR0
 5519              		.cfi_endproc
 5520              	.LFE152:
 5522              		.section	.text.HAL_HRTIM_SimpleCaptureStop,"ax",%progbits
 5523              		.align	2
 5524              		.global	HAL_HRTIM_SimpleCaptureStop
 5525              		.thumb
 5526              		.thumb_func
 5528              	HAL_HRTIM_SimpleCaptureStop:
 5529              	.LFB153:
2503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 5530              		.loc 1 2503 0
 5531              		.cfi_startproc
 5532              		@ args = 0, pretend = 0, frame = 0
 5533              		@ frame_needed = 0, uses_anonymous_args = 0
 5534              		@ link register save eliminated.
 5535              	.LVL604:
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5536              		.loc 1 2509 0
 5537 0000 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 5538 0004 012B     		cmp	r3, #1
 5539 0006 00F08780 		beq	.L443
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5540              		.loc 1 2509 0 is_stmt 0 discriminator 2
 5541 000a 0123     		movs	r3, #1
 5542 000c 80F8C030 		strb	r3, [r0, #192]
2511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 5543              		.loc 1 2511 0 is_stmt 1 discriminator 2
 5544 0010 0223     		movs	r3, #2
 5545 0012 80F8C130 		strb	r3, [r0, #193]
2514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
 5546              		.loc 1 2514 0 discriminator 2
 5547 0016 012A     		cmp	r2, #1
 5548 0018 02D0     		beq	.L435
 5549 001a 9A42     		cmp	r2, r3
 5550 001c 07D0     		beq	.L436
ARM GAS  /tmp/ccWQyto6.s 			page 240


 5551 001e 0CE0     		b	.L434
 5552              	.L435:
2518:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = HRTIM_CAPTURETRIGGER_NONE;
 5553              		.loc 1 2518 0
 5554 0020 0368     		ldr	r3, [r0]
 5555 0022 03EBC113 		add	r3, r3, r1, lsl #7
 5556 0026 0022     		movs	r2, #0
 5557              	.LVL605:
 5558 0028 C3F8DC20 		str	r2, [r3, #220]
2520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 5559              		.loc 1 2520 0
 5560 002c 05E0     		b	.L434
 5561              	.LVL606:
 5562              	.L436:
2523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = HRTIM_CAPTURETRIGGER_NONE;
 5563              		.loc 1 2523 0
 5564 002e 0368     		ldr	r3, [r0]
 5565 0030 03EBC113 		add	r3, r3, r1, lsl #7
 5566 0034 0022     		movs	r2, #0
 5567              	.LVL607:
 5568 0036 C3F8E020 		str	r2, [r3, #224]
 5569              	.L434:
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
 5570              		.loc 1 2531 0
 5571 003a 0368     		ldr	r3, [r0]
 5572 003c 03EBC112 		add	r2, r3, r1, lsl #7
 5573 0040 D832     		adds	r2, r2, #216
 5574 0042 5268     		ldr	r2, [r2, #4]
 5575 0044 002A     		cmp	r2, #0
 5576 0046 5FD1     		bne	.L437
2532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR == HRTIM_CAPTURETRIGGER_NONE))
 5577              		.loc 1 2532 0 discriminator 1
 5578 0048 03EBC112 		add	r2, r3, r1, lsl #7
 5579 004c D2F8E020 		ldr	r2, [r2, #224]
2531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
 5580              		.loc 1 2531 0 discriminator 1
 5581 0050 002A     		cmp	r2, #0
 5582 0052 59D1     		bne	.L437
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5583              		.loc 1 2534 0
 5584 0054 314A     		ldr	r2, .L444
 5585 0056 52F82120 		ldr	r2, [r2, r1, lsl #2]
 5586 005a 12F4803F 		tst	r2, #65536
 5587 005e 03D0     		beq	.L438
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5588              		.loc 1 2534 0 is_stmt 0 discriminator 1
 5589 0060 1A68     		ldr	r2, [r3]
 5590 0062 22F48032 		bic	r2, r2, #65536
 5591 0066 1A60     		str	r2, [r3]
 5592              	.L438:
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5593              		.loc 1 2534 0 discriminator 2
 5594 0068 2C4B     		ldr	r3, .L444
 5595 006a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5596 006e 13F4003F 		tst	r3, #131072
 5597 0072 09D0     		beq	.L439
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
ARM GAS  /tmp/ccWQyto6.s 			page 241


 5598              		.loc 1 2534 0 discriminator 1
 5599 0074 0368     		ldr	r3, [r0]
 5600 0076 D3F89423 		ldr	r2, [r3, #916]
 5601 007a 12F0030F 		tst	r2, #3
 5602 007e 03D1     		bne	.L439
 5603 0080 1A68     		ldr	r2, [r3]
 5604 0082 22F40032 		bic	r2, r2, #131072
 5605 0086 1A60     		str	r2, [r3]
 5606              	.L439:
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5607              		.loc 1 2534 0 discriminator 2
 5608 0088 244B     		ldr	r3, .L444
 5609 008a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5610 008e 13F4802F 		tst	r3, #262144
 5611 0092 09D0     		beq	.L440
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5612              		.loc 1 2534 0 discriminator 1
 5613 0094 0368     		ldr	r3, [r0]
 5614 0096 D3F89423 		ldr	r2, [r3, #916]
 5615 009a 12F00C0F 		tst	r2, #12
 5616 009e 03D1     		bne	.L440
 5617 00a0 1A68     		ldr	r2, [r3]
 5618 00a2 22F48022 		bic	r2, r2, #262144
 5619 00a6 1A60     		str	r2, [r3]
 5620              	.L440:
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5621              		.loc 1 2534 0 discriminator 2
 5622 00a8 1C4B     		ldr	r3, .L444
 5623 00aa 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5624 00ae 13F4002F 		tst	r3, #524288
 5625 00b2 09D0     		beq	.L441
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5626              		.loc 1 2534 0 discriminator 1
 5627 00b4 0368     		ldr	r3, [r0]
 5628 00b6 D3F89423 		ldr	r2, [r3, #916]
 5629 00ba 12F0300F 		tst	r2, #48
 5630 00be 03D1     		bne	.L441
 5631 00c0 1A68     		ldr	r2, [r3]
 5632 00c2 22F40022 		bic	r2, r2, #524288
 5633 00c6 1A60     		str	r2, [r3]
 5634              	.L441:
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5635              		.loc 1 2534 0 discriminator 2
 5636 00c8 144B     		ldr	r3, .L444
 5637 00ca 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5638 00ce 13F4801F 		tst	r3, #1048576
 5639 00d2 09D0     		beq	.L442
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5640              		.loc 1 2534 0 discriminator 1
 5641 00d4 0368     		ldr	r3, [r0]
 5642 00d6 D3F89423 		ldr	r2, [r3, #916]
 5643 00da 12F0C00F 		tst	r2, #192
 5644 00de 03D1     		bne	.L442
 5645 00e0 1A68     		ldr	r2, [r3]
 5646 00e2 22F48012 		bic	r2, r2, #1048576
 5647 00e6 1A60     		str	r2, [r3]
 5648              	.L442:
ARM GAS  /tmp/ccWQyto6.s 			page 242


2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5649              		.loc 1 2534 0 discriminator 2
 5650 00e8 0C4B     		ldr	r3, .L444
 5651 00ea 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5652 00ee 13F4001F 		tst	r3, #2097152
 5653 00f2 09D0     		beq	.L437
2534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5654              		.loc 1 2534 0 discriminator 1
 5655 00f4 0368     		ldr	r3, [r0]
 5656 00f6 D3F89423 		ldr	r2, [r3, #916]
 5657 00fa 12F4407F 		tst	r2, #768
 5658 00fe 03D1     		bne	.L437
 5659 0100 1A68     		ldr	r2, [r3]
 5660 0102 22F40012 		bic	r2, r2, #2097152
 5661 0106 1A60     		str	r2, [r3]
 5662              	.L437:
2537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 5663              		.loc 1 2537 0 is_stmt 1
 5664 0108 0123     		movs	r3, #1
 5665 010a 80F8C130 		strb	r3, [r0, #193]
2540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 5666              		.loc 1 2540 0
 5667 010e 0023     		movs	r3, #0
 5668 0110 80F8C030 		strb	r3, [r0, #192]
2542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 5669              		.loc 1 2542 0
 5670 0114 1846     		mov	r0, r3
 5671              	.LVL608:
 5672 0116 7047     		bx	lr
 5673              	.LVL609:
 5674              	.L443:
2509:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5675              		.loc 1 2509 0
 5676 0118 0220     		movs	r0, #2
 5677              	.LVL610:
2543:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 5678              		.loc 1 2543 0
 5679 011a 7047     		bx	lr
 5680              	.L445:
 5681              		.align	2
 5682              	.L444:
 5683 011c 00000000 		.word	.LANCHOR0
 5684              		.cfi_endproc
 5685              	.LFE153:
 5687              		.section	.text.HAL_HRTIM_SimpleCaptureStart_IT,"ax",%progbits
 5688              		.align	2
 5689              		.global	HAL_HRTIM_SimpleCaptureStart_IT
 5690              		.thumb
 5691              		.thumb_func
 5693              	HAL_HRTIM_SimpleCaptureStart_IT:
 5694              	.LFB154:
2565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 5695              		.loc 1 2565 0
 5696              		.cfi_startproc
 5697              		@ args = 0, pretend = 0, frame = 0
 5698              		@ frame_needed = 0, uses_anonymous_args = 0
 5699              		@ link register save eliminated.
ARM GAS  /tmp/ccWQyto6.s 			page 243


 5700              	.LVL611:
 5701 0000 10B4     		push	{r4}
 5702              	.LCFI35:
 5703              		.cfi_def_cfa_offset 4
 5704              		.cfi_offset 4, -4
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5705              		.loc 1 2571 0
 5706 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 5707 0006 012B     		cmp	r3, #1
 5708 0008 3ED0     		beq	.L451
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5709              		.loc 1 2571 0 is_stmt 0 discriminator 2
 5710 000a 0123     		movs	r3, #1
 5711 000c 80F8C030 		strb	r3, [r0, #192]
2573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 5712              		.loc 1 2573 0 is_stmt 1 discriminator 2
 5713 0010 0223     		movs	r3, #2
 5714 0012 80F8C130 		strb	r3, [r0, #193]
2576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
 5715              		.loc 1 2576 0 discriminator 2
 5716 0016 012A     		cmp	r2, #1
 5717 0018 02D0     		beq	.L449
 5718 001a 9A42     		cmp	r2, r3
 5719 001c 13D0     		beq	.L450
 5720 001e 24E0     		b	.L448
 5721              	.L449:
2580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
 5722              		.loc 1 2580 0
 5723 0020 0268     		ldr	r2, [r0]
 5724              	.LVL612:
 5725 0022 C1EBC103 		rsb	r3, r1, r1, lsl #3
 5726 0026 9B00     		lsls	r3, r3, #2
 5727 0028 0344     		add	r3, r3, r0
 5728 002a 9C69     		ldr	r4, [r3, #24]
 5729 002c CB01     		lsls	r3, r1, #7
 5730 002e 1A44     		add	r2, r2, r3
 5731 0030 C2F8DC40 		str	r4, [r2, #220]
2583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1);
 5732              		.loc 1 2583 0
 5733 0034 0268     		ldr	r2, [r0]
 5734 0036 1344     		add	r3, r3, r2
 5735 0038 D3F88C20 		ldr	r2, [r3, #140]
 5736 003c 42F08002 		orr	r2, r2, #128
 5737 0040 C3F88C20 		str	r2, [r3, #140]
2585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 5738              		.loc 1 2585 0
 5739 0044 11E0     		b	.L448
 5740              	.LVL613:
 5741              	.L450:
2588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
 5742              		.loc 1 2588 0
 5743 0046 0268     		ldr	r2, [r0]
 5744              	.LVL614:
 5745 0048 C1EBC103 		rsb	r3, r1, r1, lsl #3
 5746 004c 9B00     		lsls	r3, r3, #2
 5747 004e 0344     		add	r3, r3, r0
 5748 0050 DC69     		ldr	r4, [r3, #28]
ARM GAS  /tmp/ccWQyto6.s 			page 244


 5749 0052 CB01     		lsls	r3, r1, #7
 5750 0054 1A44     		add	r2, r2, r3
 5751 0056 C2F8E040 		str	r4, [r2, #224]
2591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2);
 5752              		.loc 1 2591 0
 5753 005a 0268     		ldr	r2, [r0]
 5754 005c 1344     		add	r3, r3, r2
 5755 005e D3F88C20 		ldr	r2, [r3, #140]
 5756 0062 42F48072 		orr	r2, r2, #256
 5757 0066 C3F88C20 		str	r2, [r3, #140]
 5758              	.L448:
2599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5759              		.loc 1 2599 0
 5760 006a 0368     		ldr	r3, [r0]
 5761 006c 1C68     		ldr	r4, [r3]
 5762 006e 084A     		ldr	r2, .L452
 5763 0070 52F82120 		ldr	r2, [r2, r1, lsl #2]
 5764 0074 2243     		orrs	r2, r2, r4
 5765 0076 1A60     		str	r2, [r3]
2601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 5766              		.loc 1 2601 0
 5767 0078 0123     		movs	r3, #1
 5768 007a 80F8C130 		strb	r3, [r0, #193]
2604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 5769              		.loc 1 2604 0
 5770 007e 0023     		movs	r3, #0
 5771 0080 80F8C030 		strb	r3, [r0, #192]
2606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 5772              		.loc 1 2606 0
 5773 0084 1846     		mov	r0, r3
 5774              	.LVL615:
 5775 0086 00E0     		b	.L447
 5776              	.LVL616:
 5777              	.L451:
2571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5778              		.loc 1 2571 0
 5779 0088 0220     		movs	r0, #2
 5780              	.LVL617:
 5781              	.L447:
2607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 5782              		.loc 1 2607 0
 5783 008a 5DF8044B 		ldr	r4, [sp], #4
 5784 008e 7047     		bx	lr
 5785              	.L453:
 5786              		.align	2
 5787              	.L452:
 5788 0090 00000000 		.word	.LANCHOR0
 5789              		.cfi_endproc
 5790              	.LFE154:
 5792              		.section	.text.HAL_HRTIM_SimpleCaptureStop_IT,"ax",%progbits
 5793              		.align	2
 5794              		.global	HAL_HRTIM_SimpleCaptureStop_IT
 5795              		.thumb
 5796              		.thumb_func
 5798              	HAL_HRTIM_SimpleCaptureStop_IT:
 5799              	.LFB155:
2629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
ARM GAS  /tmp/ccWQyto6.s 			page 245


 5800              		.loc 1 2629 0
 5801              		.cfi_startproc
 5802              		@ args = 0, pretend = 0, frame = 0
 5803              		@ frame_needed = 0, uses_anonymous_args = 0
 5804              		@ link register save eliminated.
 5805              	.LVL618:
 5806 0000 10B4     		push	{r4}
 5807              	.LCFI36:
 5808              		.cfi_def_cfa_offset 4
 5809              		.cfi_offset 4, -4
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5810              		.loc 1 2635 0
 5811 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 5812 0006 012B     		cmp	r3, #1
 5813 0008 00F09780 		beq	.L465
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5814              		.loc 1 2635 0 is_stmt 0 discriminator 2
 5815 000c 0123     		movs	r3, #1
 5816 000e 80F8C030 		strb	r3, [r0, #192]
2637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 5817              		.loc 1 2637 0 is_stmt 1 discriminator 2
 5818 0012 0223     		movs	r3, #2
 5819 0014 80F8C130 		strb	r3, [r0, #193]
2640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
 5820              		.loc 1 2640 0 discriminator 2
 5821 0018 012A     		cmp	r2, #1
 5822 001a 02D0     		beq	.L457
 5823 001c 9A42     		cmp	r2, r3
 5824 001e 0FD0     		beq	.L458
 5825 0020 1CE0     		b	.L456
 5826              	.L457:
2644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = HRTIM_CAPTURETRIGGER_NONE;
 5827              		.loc 1 2644 0
 5828 0022 0268     		ldr	r2, [r0]
 5829              	.LVL619:
 5830 0024 CB01     		lsls	r3, r1, #7
 5831 0026 1A44     		add	r2, r2, r3
 5832 0028 0024     		movs	r4, #0
 5833 002a C2F8DC40 		str	r4, [r2, #220]
2647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1);
 5834              		.loc 1 2647 0
 5835 002e 0268     		ldr	r2, [r0]
 5836 0030 1344     		add	r3, r3, r2
 5837 0032 D3F88C20 		ldr	r2, [r3, #140]
 5838 0036 22F08002 		bic	r2, r2, #128
 5839 003a C3F88C20 		str	r2, [r3, #140]
2649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 5840              		.loc 1 2649 0
 5841 003e 0DE0     		b	.L456
 5842              	.LVL620:
 5843              	.L458:
2652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = HRTIM_CAPTURETRIGGER_NONE;
 5844              		.loc 1 2652 0
 5845 0040 0268     		ldr	r2, [r0]
 5846              	.LVL621:
 5847 0042 CB01     		lsls	r3, r1, #7
 5848 0044 1A44     		add	r2, r2, r3
ARM GAS  /tmp/ccWQyto6.s 			page 246


 5849 0046 0024     		movs	r4, #0
 5850 0048 C2F8E040 		str	r4, [r2, #224]
2655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2);
 5851              		.loc 1 2655 0
 5852 004c 0268     		ldr	r2, [r0]
 5853 004e 1344     		add	r3, r3, r2
 5854 0050 D3F88C20 		ldr	r2, [r3, #140]
 5855 0054 22F48072 		bic	r2, r2, #256
 5856 0058 C3F88C20 		str	r2, [r3, #140]
 5857              	.L456:
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
 5858              		.loc 1 2663 0
 5859 005c 0368     		ldr	r3, [r0]
 5860 005e 03EBC112 		add	r2, r3, r1, lsl #7
 5861 0062 D832     		adds	r2, r2, #216
 5862 0064 5268     		ldr	r2, [r2, #4]
 5863 0066 002A     		cmp	r2, #0
 5864 0068 5FD1     		bne	.L459
2664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR == HRTIM_CAPTURETRIGGER_NONE))
 5865              		.loc 1 2664 0 discriminator 1
 5866 006a 03EBC112 		add	r2, r3, r1, lsl #7
 5867 006e D2F8E020 		ldr	r2, [r2, #224]
2663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
 5868              		.loc 1 2663 0 discriminator 1
 5869 0072 002A     		cmp	r2, #0
 5870 0074 59D1     		bne	.L459
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5871              		.loc 1 2666 0
 5872 0076 334A     		ldr	r2, .L466
 5873 0078 52F82120 		ldr	r2, [r2, r1, lsl #2]
 5874 007c 12F4803F 		tst	r2, #65536
 5875 0080 03D0     		beq	.L460
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5876              		.loc 1 2666 0 is_stmt 0 discriminator 1
 5877 0082 1A68     		ldr	r2, [r3]
 5878 0084 22F48032 		bic	r2, r2, #65536
 5879 0088 1A60     		str	r2, [r3]
 5880              	.L460:
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5881              		.loc 1 2666 0 discriminator 2
 5882 008a 2E4B     		ldr	r3, .L466
 5883 008c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5884 0090 13F4003F 		tst	r3, #131072
 5885 0094 09D0     		beq	.L461
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5886              		.loc 1 2666 0 discriminator 1
 5887 0096 0368     		ldr	r3, [r0]
 5888 0098 D3F89423 		ldr	r2, [r3, #916]
 5889 009c 12F0030F 		tst	r2, #3
 5890 00a0 03D1     		bne	.L461
 5891 00a2 1A68     		ldr	r2, [r3]
 5892 00a4 22F40032 		bic	r2, r2, #131072
 5893 00a8 1A60     		str	r2, [r3]
 5894              	.L461:
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5895              		.loc 1 2666 0 discriminator 2
 5896 00aa 264B     		ldr	r3, .L466
ARM GAS  /tmp/ccWQyto6.s 			page 247


 5897 00ac 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5898 00b0 13F4802F 		tst	r3, #262144
 5899 00b4 09D0     		beq	.L462
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5900              		.loc 1 2666 0 discriminator 1
 5901 00b6 0368     		ldr	r3, [r0]
 5902 00b8 D3F89423 		ldr	r2, [r3, #916]
 5903 00bc 12F00C0F 		tst	r2, #12
 5904 00c0 03D1     		bne	.L462
 5905 00c2 1A68     		ldr	r2, [r3]
 5906 00c4 22F48022 		bic	r2, r2, #262144
 5907 00c8 1A60     		str	r2, [r3]
 5908              	.L462:
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5909              		.loc 1 2666 0 discriminator 2
 5910 00ca 1E4B     		ldr	r3, .L466
 5911 00cc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5912 00d0 13F4002F 		tst	r3, #524288
 5913 00d4 09D0     		beq	.L463
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5914              		.loc 1 2666 0 discriminator 1
 5915 00d6 0368     		ldr	r3, [r0]
 5916 00d8 D3F89423 		ldr	r2, [r3, #916]
 5917 00dc 12F0300F 		tst	r2, #48
 5918 00e0 03D1     		bne	.L463
 5919 00e2 1A68     		ldr	r2, [r3]
 5920 00e4 22F40022 		bic	r2, r2, #524288
 5921 00e8 1A60     		str	r2, [r3]
 5922              	.L463:
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5923              		.loc 1 2666 0 discriminator 2
 5924 00ea 164B     		ldr	r3, .L466
 5925 00ec 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5926 00f0 13F4801F 		tst	r3, #1048576
 5927 00f4 09D0     		beq	.L464
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5928              		.loc 1 2666 0 discriminator 1
 5929 00f6 0368     		ldr	r3, [r0]
 5930 00f8 D3F89423 		ldr	r2, [r3, #916]
 5931 00fc 12F0C00F 		tst	r2, #192
 5932 0100 03D1     		bne	.L464
 5933 0102 1A68     		ldr	r2, [r3]
 5934 0104 22F48012 		bic	r2, r2, #1048576
 5935 0108 1A60     		str	r2, [r3]
 5936              	.L464:
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5937              		.loc 1 2666 0 discriminator 2
 5938 010a 0E4B     		ldr	r3, .L466
 5939 010c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 5940 0110 13F4001F 		tst	r3, #2097152
 5941 0114 09D0     		beq	.L459
2666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 5942              		.loc 1 2666 0 discriminator 1
 5943 0116 0368     		ldr	r3, [r0]
 5944 0118 D3F89423 		ldr	r2, [r3, #916]
 5945 011c 12F4407F 		tst	r2, #768
 5946 0120 03D1     		bne	.L459
ARM GAS  /tmp/ccWQyto6.s 			page 248


 5947 0122 1A68     		ldr	r2, [r3]
 5948 0124 22F40012 		bic	r2, r2, #2097152
 5949 0128 1A60     		str	r2, [r3]
 5950              	.L459:
2669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 5951              		.loc 1 2669 0 is_stmt 1
 5952 012a 0123     		movs	r3, #1
 5953 012c 80F8C130 		strb	r3, [r0, #193]
2672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 5954              		.loc 1 2672 0
 5955 0130 0023     		movs	r3, #0
 5956 0132 80F8C030 		strb	r3, [r0, #192]
2674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 5957              		.loc 1 2674 0
 5958 0136 1846     		mov	r0, r3
 5959              	.LVL622:
 5960 0138 00E0     		b	.L455
 5961              	.LVL623:
 5962              	.L465:
2635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 5963              		.loc 1 2635 0
 5964 013a 0220     		movs	r0, #2
 5965              	.LVL624:
 5966              	.L455:
2675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 5967              		.loc 1 2675 0
 5968 013c 5DF8044B 		ldr	r4, [sp], #4
 5969 0140 7047     		bx	lr
 5970              	.L467:
 5971 0142 00BF     		.align	2
 5972              	.L466:
 5973 0144 00000000 		.word	.LANCHOR0
 5974              		.cfi_endproc
 5975              	.LFE155:
 5977              		.section	.text.HAL_HRTIM_SimpleCaptureStart_DMA,"ax",%progbits
 5978              		.align	2
 5979              		.global	HAL_HRTIM_SimpleCaptureStart_DMA
 5980              		.thumb
 5981              		.thumb_func
 5983              	HAL_HRTIM_SimpleCaptureStart_DMA:
 5984              	.LFB156:
2704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 5985              		.loc 1 2704 0
 5986              		.cfi_startproc
 5987              		@ args = 8, pretend = 0, frame = 0
 5988              		@ frame_needed = 0, uses_anonymous_args = 0
 5989              	.LVL625:
 5990 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 5991              	.LCFI37:
 5992              		.cfi_def_cfa_offset 24
 5993              		.cfi_offset 3, -24
 5994              		.cfi_offset 4, -20
 5995              		.cfi_offset 5, -16
 5996              		.cfi_offset 6, -12
 5997              		.cfi_offset 7, -8
 5998              		.cfi_offset 14, -4
 5999 0002 0446     		mov	r4, r0
ARM GAS  /tmp/ccWQyto6.s 			page 249


 6000 0004 0D46     		mov	r5, r1
 6001 0006 1646     		mov	r6, r2
 6002 0008 1F46     		mov	r7, r3
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6003              		.loc 1 2712 0
 6004 000a 90F8C000 		ldrb	r0, [r0, #192]	@ zero_extendqisi2
 6005              	.LVL626:
 6006 000e 0128     		cmp	r0, #1
 6007 0010 49D0     		beq	.L473
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6008              		.loc 1 2712 0 is_stmt 0 discriminator 2
 6009 0012 0123     		movs	r3, #1
 6010              	.LVL627:
 6011 0014 84F8C030 		strb	r3, [r4, #192]
2714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 6012              		.loc 1 2714 0 is_stmt 1 discriminator 2
 6013 0018 0223     		movs	r3, #2
 6014 001a 84F8C130 		strb	r3, [r4, #193]
2717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 6015              		.loc 1 2717 0 discriminator 2
 6016 001e 2046     		mov	r0, r4
 6017 0020 FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 6018              	.LVL628:
2720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
 6019              		.loc 1 2720 0 discriminator 2
 6020 0024 214A     		ldr	r2, .L474
 6021 0026 0263     		str	r2, [r0, #48]
2723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
 6022              		.loc 1 2723 0 discriminator 2
 6023 0028 214A     		ldr	r2, .L474+4
 6024 002a 8262     		str	r2, [r0, #40]
2726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, SrcAddr, DestAddr, Length);
 6025              		.loc 1 2726 0 discriminator 2
 6026 002c 3946     		mov	r1, r7
 6027 002e 069A     		ldr	r2, [sp, #24]
 6028 0030 079B     		ldr	r3, [sp, #28]
 6029 0032 FFF7FEFF 		bl	HAL_DMA_Start_IT
 6030              	.LVL629:
2728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
 6031              		.loc 1 2728 0 discriminator 2
 6032 0036 012E     		cmp	r6, #1
 6033 0038 02D0     		beq	.L471
 6034 003a 022E     		cmp	r6, #2
 6035 003c 13D0     		beq	.L472
 6036 003e 24E0     		b	.L470
 6037              	.L471:
2733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
 6038              		.loc 1 2733 0
 6039 0040 2268     		ldr	r2, [r4]
 6040 0042 C5EBC503 		rsb	r3, r5, r5, lsl #3
 6041 0046 9B00     		lsls	r3, r3, #2
 6042 0048 2344     		add	r3, r3, r4
 6043 004a 9969     		ldr	r1, [r3, #24]
 6044 004c EB01     		lsls	r3, r5, #7
 6045 004e 1A44     		add	r2, r2, r3
 6046 0050 C2F8DC10 		str	r1, [r2, #220]
2735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT1);      
ARM GAS  /tmp/ccWQyto6.s 			page 250


 6047              		.loc 1 2735 0
 6048 0054 2268     		ldr	r2, [r4]
 6049 0056 1344     		add	r3, r3, r2
 6050 0058 D3F88C20 		ldr	r2, [r3, #140]
 6051 005c 42F40002 		orr	r2, r2, #8388608
 6052 0060 C3F88C20 		str	r2, [r3, #140]
2737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 6053              		.loc 1 2737 0
 6054 0064 11E0     		b	.L470
 6055              	.L472:
2741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = hhrtim->TimerParam[TimerIdx].CaptureTrigger
 6056              		.loc 1 2741 0
 6057 0066 2268     		ldr	r2, [r4]
 6058 0068 C5EBC503 		rsb	r3, r5, r5, lsl #3
 6059 006c 9B00     		lsls	r3, r3, #2
 6060 006e 2344     		add	r3, r3, r4
 6061 0070 D969     		ldr	r1, [r3, #28]
 6062 0072 EB01     		lsls	r3, r5, #7
 6063 0074 1A44     		add	r2, r2, r3
 6064 0076 C2F8E010 		str	r1, [r2, #224]
2744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT2);      
 6065              		.loc 1 2744 0
 6066 007a 2268     		ldr	r2, [r4]
 6067 007c 1344     		add	r3, r3, r2
 6068 007e D3F88C20 		ldr	r2, [r3, #140]
 6069 0082 42F08072 		orr	r2, r2, #16777216
 6070 0086 C3F88C20 		str	r2, [r3, #140]
 6071              	.L470:
2752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6072              		.loc 1 2752 0
 6073 008a 2368     		ldr	r3, [r4]
 6074 008c 1968     		ldr	r1, [r3]
 6075 008e 094A     		ldr	r2, .L474+8
 6076 0090 52F82520 		ldr	r2, [r2, r5, lsl #2]
 6077 0094 0A43     		orrs	r2, r2, r1
 6078 0096 1A60     		str	r2, [r3]
2754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 6079              		.loc 1 2754 0
 6080 0098 0123     		movs	r3, #1
 6081 009a 84F8C130 		strb	r3, [r4, #193]
2757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 6082              		.loc 1 2757 0
 6083 009e 0020     		movs	r0, #0
 6084 00a0 84F8C000 		strb	r0, [r4, #192]
2759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 6085              		.loc 1 2759 0
 6086 00a4 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6087              	.LVL630:
 6088              	.L473:
2712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6089              		.loc 1 2712 0
 6090 00a6 0220     		movs	r0, #2
2760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 6091              		.loc 1 2760 0
 6092 00a8 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 6093              	.LVL631:
 6094              	.L475:
ARM GAS  /tmp/ccWQyto6.s 			page 251


 6095 00aa 00BF     		.align	2
 6096              	.L474:
 6097 00ac 00000000 		.word	HRTIM_DMAError
 6098 00b0 00000000 		.word	HRTIM_DMATimerxCplt
 6099 00b4 00000000 		.word	.LANCHOR0
 6100              		.cfi_endproc
 6101              	.LFE156:
 6103              		.section	.text.HAL_HRTIM_SimpleCaptureStop_DMA,"ax",%progbits
 6104              		.align	2
 6105              		.global	HAL_HRTIM_SimpleCaptureStop_DMA
 6106              		.thumb
 6107              		.thumb_func
 6109              	HAL_HRTIM_SimpleCaptureStop_DMA:
 6110              	.LFB157:
2782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 6111              		.loc 1 2782 0
 6112              		.cfi_startproc
 6113              		@ args = 0, pretend = 0, frame = 0
 6114              		@ frame_needed = 0, uses_anonymous_args = 0
 6115              	.LVL632:
 6116 0000 70B5     		push	{r4, r5, r6, lr}
 6117              	.LCFI38:
 6118              		.cfi_def_cfa_offset 16
 6119              		.cfi_offset 4, -16
 6120              		.cfi_offset 5, -12
 6121              		.cfi_offset 6, -8
 6122              		.cfi_offset 14, -4
 6123 0002 0446     		mov	r4, r0
 6124 0004 0D46     		mov	r5, r1
 6125 0006 1646     		mov	r6, r2
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6126              		.loc 1 2790 0
 6127 0008 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 6128 000c 012B     		cmp	r3, #1
 6129 000e 00F09A80 		beq	.L487
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6130              		.loc 1 2790 0 is_stmt 0 discriminator 2
 6131 0012 0123     		movs	r3, #1
 6132 0014 80F8C030 		strb	r3, [r0, #192]
2792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 6133              		.loc 1 2792 0 is_stmt 1 discriminator 2
 6134 0018 0223     		movs	r3, #2
 6135 001a 80F8C130 		strb	r3, [r0, #193]
2795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 6136              		.loc 1 2795 0 discriminator 2
 6137 001e FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 6138              	.LVL633:
2798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Abort(hdma);
 6139              		.loc 1 2798 0 discriminator 2
 6140 0022 FFF7FEFF 		bl	HAL_DMA_Abort
 6141              	.LVL634:
2800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureChannel)
 6142              		.loc 1 2800 0 discriminator 2
 6143 0026 012E     		cmp	r6, #1
 6144 0028 02D0     		beq	.L479
 6145 002a 022E     		cmp	r6, #2
 6146 002c 0FD0     		beq	.L480
ARM GAS  /tmp/ccWQyto6.s 			page 252


 6147 002e 1CE0     		b	.L478
 6148              	.L479:
2805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = HRTIM_CAPTURETRIGGER_NONE;
 6149              		.loc 1 2805 0
 6150 0030 2268     		ldr	r2, [r4]
 6151 0032 EB01     		lsls	r3, r5, #7
 6152 0034 1A44     		add	r2, r2, r3
 6153 0036 0021     		movs	r1, #0
 6154 0038 C2F8DC10 		str	r1, [r2, #220]
2808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT1);
 6155              		.loc 1 2808 0
 6156 003c 2268     		ldr	r2, [r4]
 6157 003e 1344     		add	r3, r3, r2
 6158 0040 D3F88C20 		ldr	r2, [r3, #140]
 6159 0044 22F40002 		bic	r2, r2, #8388608
 6160 0048 C3F88C20 		str	r2, [r3, #140]
2810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 6161              		.loc 1 2810 0
 6162 004c 0DE0     		b	.L478
 6163              	.L480:
2814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = HRTIM_CAPTURETRIGGER_NONE;
 6164              		.loc 1 2814 0
 6165 004e 2268     		ldr	r2, [r4]
 6166 0050 EB01     		lsls	r3, r5, #7
 6167 0052 1A44     		add	r2, r2, r3
 6168 0054 0021     		movs	r1, #0
 6169 0056 C2F8E010 		str	r1, [r2, #224]
2817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim, TimerIdx, HRTIM_TIM_DMA_CPT2);
 6170              		.loc 1 2817 0
 6171 005a 2268     		ldr	r2, [r4]
 6172 005c 1344     		add	r3, r3, r2
 6173 005e D3F88C20 		ldr	r2, [r3, #140]
 6174 0062 22F08072 		bic	r2, r2, #16777216
 6175 0066 C3F88C20 		str	r2, [r3, #140]
 6176              	.L478:
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
 6177              		.loc 1 2825 0
 6178 006a 2368     		ldr	r3, [r4]
 6179 006c 03EBC512 		add	r2, r3, r5, lsl #7
 6180 0070 D832     		adds	r2, r2, #216
 6181 0072 5268     		ldr	r2, [r2, #4]
 6182 0074 002A     		cmp	r2, #0
 6183 0076 5FD1     		bne	.L481
2826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR == HRTIM_CAPTURETRIGGER_NONE))
 6184              		.loc 1 2826 0 discriminator 1
 6185 0078 03EBC512 		add	r2, r3, r5, lsl #7
 6186 007c D2F8E020 		ldr	r2, [r2, #224]
2825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR == HRTIM_CAPTURETRIGGER_NONE) &&
 6187              		.loc 1 2825 0 discriminator 1
 6188 0080 002A     		cmp	r2, #0
 6189 0082 59D1     		bne	.L481
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6190              		.loc 1 2828 0
 6191 0084 314A     		ldr	r2, .L488
 6192 0086 52F82520 		ldr	r2, [r2, r5, lsl #2]
 6193 008a 12F4803F 		tst	r2, #65536
 6194 008e 03D0     		beq	.L482
ARM GAS  /tmp/ccWQyto6.s 			page 253


2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6195              		.loc 1 2828 0 is_stmt 0 discriminator 1
 6196 0090 1A68     		ldr	r2, [r3]
 6197 0092 22F48032 		bic	r2, r2, #65536
 6198 0096 1A60     		str	r2, [r3]
 6199              	.L482:
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6200              		.loc 1 2828 0 discriminator 2
 6201 0098 2C4B     		ldr	r3, .L488
 6202 009a 53F82530 		ldr	r3, [r3, r5, lsl #2]
 6203 009e 13F4003F 		tst	r3, #131072
 6204 00a2 09D0     		beq	.L483
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6205              		.loc 1 2828 0 discriminator 1
 6206 00a4 2368     		ldr	r3, [r4]
 6207 00a6 D3F89423 		ldr	r2, [r3, #916]
 6208 00aa 12F0030F 		tst	r2, #3
 6209 00ae 03D1     		bne	.L483
 6210 00b0 1A68     		ldr	r2, [r3]
 6211 00b2 22F40032 		bic	r2, r2, #131072
 6212 00b6 1A60     		str	r2, [r3]
 6213              	.L483:
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6214              		.loc 1 2828 0 discriminator 2
 6215 00b8 244B     		ldr	r3, .L488
 6216 00ba 53F82530 		ldr	r3, [r3, r5, lsl #2]
 6217 00be 13F4802F 		tst	r3, #262144
 6218 00c2 09D0     		beq	.L484
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6219              		.loc 1 2828 0 discriminator 1
 6220 00c4 2368     		ldr	r3, [r4]
 6221 00c6 D3F89423 		ldr	r2, [r3, #916]
 6222 00ca 12F00C0F 		tst	r2, #12
 6223 00ce 03D1     		bne	.L484
 6224 00d0 1A68     		ldr	r2, [r3]
 6225 00d2 22F48022 		bic	r2, r2, #262144
 6226 00d6 1A60     		str	r2, [r3]
 6227              	.L484:
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6228              		.loc 1 2828 0 discriminator 2
 6229 00d8 1C4B     		ldr	r3, .L488
 6230 00da 53F82530 		ldr	r3, [r3, r5, lsl #2]
 6231 00de 13F4002F 		tst	r3, #524288
 6232 00e2 09D0     		beq	.L485
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6233              		.loc 1 2828 0 discriminator 1
 6234 00e4 2368     		ldr	r3, [r4]
 6235 00e6 D3F89423 		ldr	r2, [r3, #916]
 6236 00ea 12F0300F 		tst	r2, #48
 6237 00ee 03D1     		bne	.L485
 6238 00f0 1A68     		ldr	r2, [r3]
 6239 00f2 22F40022 		bic	r2, r2, #524288
 6240 00f6 1A60     		str	r2, [r3]
 6241              	.L485:
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6242              		.loc 1 2828 0 discriminator 2
 6243 00f8 144B     		ldr	r3, .L488
ARM GAS  /tmp/ccWQyto6.s 			page 254


 6244 00fa 53F82530 		ldr	r3, [r3, r5, lsl #2]
 6245 00fe 13F4801F 		tst	r3, #1048576
 6246 0102 09D0     		beq	.L486
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6247              		.loc 1 2828 0 discriminator 1
 6248 0104 2368     		ldr	r3, [r4]
 6249 0106 D3F89423 		ldr	r2, [r3, #916]
 6250 010a 12F0C00F 		tst	r2, #192
 6251 010e 03D1     		bne	.L486
 6252 0110 1A68     		ldr	r2, [r3]
 6253 0112 22F48012 		bic	r2, r2, #1048576
 6254 0116 1A60     		str	r2, [r3]
 6255              	.L486:
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6256              		.loc 1 2828 0 discriminator 2
 6257 0118 0C4B     		ldr	r3, .L488
 6258 011a 53F82530 		ldr	r3, [r3, r5, lsl #2]
 6259 011e 13F4001F 		tst	r3, #2097152
 6260 0122 09D0     		beq	.L481
2828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6261              		.loc 1 2828 0 discriminator 1
 6262 0124 2368     		ldr	r3, [r4]
 6263 0126 D3F89423 		ldr	r2, [r3, #916]
 6264 012a 12F4407F 		tst	r2, #768
 6265 012e 03D1     		bne	.L481
 6266 0130 1A68     		ldr	r2, [r3]
 6267 0132 22F40012 		bic	r2, r2, #2097152
 6268 0136 1A60     		str	r2, [r3]
 6269              	.L481:
2831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 6270              		.loc 1 2831 0 is_stmt 1
 6271 0138 0123     		movs	r3, #1
 6272 013a 84F8C130 		strb	r3, [r4, #193]
2834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 6273              		.loc 1 2834 0
 6274 013e 0020     		movs	r0, #0
 6275 0140 84F8C000 		strb	r0, [r4, #192]
2836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 6276              		.loc 1 2836 0
 6277 0144 70BD     		pop	{r4, r5, r6, pc}
 6278              	.LVL635:
 6279              	.L487:
2790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6280              		.loc 1 2790 0
 6281 0146 0220     		movs	r0, #2
 6282              	.LVL636:
2837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 6283              		.loc 1 2837 0
 6284 0148 70BD     		pop	{r4, r5, r6, pc}
 6285              	.LVL637:
 6286              	.L489:
 6287 014a 00BF     		.align	2
 6288              	.L488:
 6289 014c 00000000 		.word	.LANCHOR0
 6290              		.cfi_endproc
 6291              	.LFE157:
 6293              		.section	.text.HAL_HRTIM_SimpleOnePulseChannelConfig,"ax",%progbits
ARM GAS  /tmp/ccWQyto6.s 			page 255


 6294              		.align	2
 6295              		.global	HAL_HRTIM_SimpleOnePulseChannelConfig
 6296              		.thumb
 6297              		.thumb_func
 6299              	HAL_HRTIM_SimpleOnePulseChannelConfig:
 6300              	.LFB158:
2905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 6301              		.loc 1 2905 0
 6302              		.cfi_startproc
 6303              		@ args = 0, pretend = 0, frame = 64
 6304              		@ frame_needed = 0, uses_anonymous_args = 0
 6305              	.LVL638:
 6306 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 6307              	.LCFI39:
 6308              		.cfi_def_cfa_offset 28
 6309              		.cfi_offset 4, -28
 6310              		.cfi_offset 5, -24
 6311              		.cfi_offset 6, -20
 6312              		.cfi_offset 7, -16
 6313              		.cfi_offset 8, -12
 6314              		.cfi_offset 9, -8
 6315              		.cfi_offset 14, -4
 6316 0004 91B0     		sub	sp, sp, #68
 6317              	.LCFI40:
 6318              		.cfi_def_cfa_offset 96
 6319 0006 0446     		mov	r4, r0
 6320 0008 8846     		mov	r8, r1
 6321 000a 1646     		mov	r6, r2
 6322 000c 1D46     		mov	r5, r3
 6323              	.LVL639:
2922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 6324              		.loc 1 2922 0
 6325 000e 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 6326              	.LVL640:
 6327 0012 DBB2     		uxtb	r3, r3
 6328 0014 022B     		cmp	r3, #2
 6329 0016 6CD0     		beq	.L500
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6330              		.loc 1 2928 0
 6331 0018 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 6332 001c 012B     		cmp	r3, #1
 6333 001e 6AD0     		beq	.L501
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6334              		.loc 1 2928 0 is_stmt 0 discriminator 2
 6335 0020 0123     		movs	r3, #1
 6336 0022 80F8C030 		strb	r3, [r0, #192]
2930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 6337              		.loc 1 2930 0 is_stmt 1 discriminator 2
 6338 0026 0223     		movs	r3, #2
 6339 0028 80F8C130 		strb	r3, [r0, #193]
2933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OnePulseChannel)
 6340              		.loc 1 2933 0 discriminator 2
 6341 002c 102A     		cmp	r2, #16
 6342 002e 1FD0     		beq	.L502
 6343 0030 0AD8     		bhi	.L494
 6344 0032 9A42     		cmp	r2, r3
 6345 0034 19D0     		beq	.L495
ARM GAS  /tmp/ccWQyto6.s 			page 256


 6346 0036 02D8     		bhi	.L496
 6347 0038 012A     		cmp	r2, #1
 6348 003a 13D1     		bne	.L492
 6349 003c 18E0     		b	.L502
 6350              	.L496:
 6351 003e 042A     		cmp	r2, #4
 6352 0040 16D0     		beq	.L502
 6353 0042 082A     		cmp	r2, #8
 6354 0044 0ED1     		bne	.L492
 6355 0046 10E0     		b	.L495
 6356              	.L494:
 6357 0048 802A     		cmp	r2, #128
 6358 004a 0ED0     		beq	.L495
 6359 004c 04D8     		bhi	.L497
 6360 004e 202A     		cmp	r2, #32
 6361 0050 0BD0     		beq	.L495
 6362 0052 402A     		cmp	r2, #64
 6363 0054 06D1     		bne	.L492
 6364 0056 0BE0     		b	.L502
 6365              	.L497:
 6366 0058 B2F5807F 		cmp	r2, #256
 6367 005c 08D0     		beq	.L502
 6368 005e B2F5007F 		cmp	r2, #512
 6369 0062 02D0     		beq	.L495
 6370              	.L492:
2906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t CompareUnit = 0xFFFFFFFFU;
 6371              		.loc 1 2906 0
 6372 0064 4FF0FF39 		mov	r9, #-1
 6373 0068 04E0     		b	.L493
 6374              	.L495:
 6375              	.LVL641:
2950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_2;
 6376              		.loc 1 2950 0
 6377 006a 4FF00209 		mov	r9, #2
2952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 6378              		.loc 1 2952 0
 6379 006e 01E0     		b	.L493
 6380              	.LVL642:
 6381              	.L502:
2941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       CompareUnit = HRTIM_COMPAREUNIT_1;
 6382              		.loc 1 2941 0
 6383 0070 4FF00109 		mov	r9, #1
 6384              	.LVL643:
 6385              	.L493:
2957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.CompareValue = pSimpleOnePulseChannelCfg->Pulse;
 6386              		.loc 1 2957 0
 6387 0074 2B68     		ldr	r3, [r5]
 6388 0076 0D93     		str	r3, [sp, #52]
2958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedMode = HRTIM_AUTODELAYEDMODE_REGULAR;
 6389              		.loc 1 2958 0
 6390 0078 0027     		movs	r7, #0
 6391 007a 0E97     		str	r7, [sp, #56]
2959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   CompareCfg.AutoDelayedTimeout = 0U;
 6392              		.loc 1 2959 0
 6393 007c 0F97     		str	r7, [sp, #60]
2961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_CompareUnitConfig(hhrtim,
 6394              		.loc 1 2961 0
ARM GAS  /tmp/ccWQyto6.s 			page 257


 6395 007e 2046     		mov	r0, r4
 6396              	.LVL644:
 6397 0080 4146     		mov	r1, r8
 6398              	.LVL645:
 6399 0082 4A46     		mov	r2, r9
 6400              	.LVL646:
 6401 0084 0DAB     		add	r3, sp, #52
 6402 0086 FFF7FEFF 		bl	HRTIM_CompareUnitConfig
 6403              	.LVL647:
2967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.Polarity = pSimpleOnePulseChannelCfg->OutputPolarity;
 6404              		.loc 1 2967 0
 6405 008a 6B68     		ldr	r3, [r5, #4]
 6406 008c 0593     		str	r3, [sp, #20]
2968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleLevel = pSimpleOnePulseChannelCfg->OutputIdleLevel;
 6407              		.loc 1 2968 0
 6408 008e AB68     		ldr	r3, [r5, #8]
 6409 0090 0993     		str	r3, [sp, #36]
2969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.FaultLevel = HRTIM_OUTPUTFAULTLEVEL_NONE;
 6410              		.loc 1 2969 0
 6411 0092 0A97     		str	r7, [sp, #40]
2970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.IdleMode = HRTIM_OUTPUTIDLEMODE_NONE;
 6412              		.loc 1 2970 0
 6413 0094 0897     		str	r7, [sp, #32]
2971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ChopperModeEnable = HRTIM_OUTPUTCHOPPERMODE_DISABLED;
 6414              		.loc 1 2971 0
 6415 0096 0B97     		str	r7, [sp, #44]
2972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.BurstModeEntryDelayed = HRTIM_OUTPUTBURSTMODEENTRY_REGULAR;
 6416              		.loc 1 2972 0
 6417 0098 0C97     		str	r7, [sp, #48]
2974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (CompareUnit == HRTIM_COMPAREUNIT_1)
 6418              		.loc 1 2974 0
 6419 009a B9F1010F 		cmp	r9, #1
 6420 009e 02D1     		bne	.L498
2976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP1;
 6421              		.loc 1 2976 0
 6422 00a0 0823     		movs	r3, #8
 6423 00a2 0693     		str	r3, [sp, #24]
 6424 00a4 01E0     		b	.L499
 6425              	.L498:
2980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     OutputCfg.SetSource = HRTIM_OUTPUTSET_TIMCMP2;
 6426              		.loc 1 2980 0
 6427 00a6 1023     		movs	r3, #16
 6428 00a8 0693     		str	r3, [sp, #24]
 6429              	.L499:
2982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   OutputCfg.ResetSource = HRTIM_OUTPUTSET_TIMPER;
 6430              		.loc 1 2982 0
 6431 00aa 0423     		movs	r3, #4
 6432 00ac 0793     		str	r3, [sp, #28]
2984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
 6433              		.loc 1 2984 0
 6434 00ae 2046     		mov	r0, r4
 6435 00b0 4146     		mov	r1, r8
 6436 00b2 3246     		mov	r2, r6
 6437 00b4 05AB     		add	r3, sp, #20
 6438 00b6 FFF7FEFF 		bl	HRTIM_OutputConfig
 6439              	.LVL648:
2990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.FastMode = HRTIM_EVENTFASTMODE_DISABLE;
ARM GAS  /tmp/ccWQyto6.s 			page 258


 6440              		.loc 1 2990 0
 6441 00ba 0026     		movs	r6, #0
 6442              	.LVL649:
 6443 00bc 0496     		str	r6, [sp, #16]
2991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Filter = pSimpleOnePulseChannelCfg->EventFilter;
 6444              		.loc 1 2991 0
 6445 00be AB69     		ldr	r3, [r5, #24]
 6446 00c0 0393     		str	r3, [sp, #12]
2992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Polarity = pSimpleOnePulseChannelCfg->EventPolarity;
 6447              		.loc 1 2992 0
 6448 00c2 2B69     		ldr	r3, [r5, #16]
 6449 00c4 0193     		str	r3, [sp, #4]
2993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Sensitivity = pSimpleOnePulseChannelCfg->EventSensitivity;
 6450              		.loc 1 2993 0
 6451 00c6 6B69     		ldr	r3, [r5, #20]
 6452 00c8 0293     		str	r3, [sp, #8]
2994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   EventCfg.Source = HRTIM_EVENTSRC_1;
 6453              		.loc 1 2994 0
 6454 00ca 10AA     		add	r2, sp, #64
 6455 00cc 42F8406D 		str	r6, [r2, #-64]!
2996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventConfig(hhrtim,
 6456              		.loc 1 2996 0
 6457 00d0 2046     		mov	r0, r4
 6458 00d2 E968     		ldr	r1, [r5, #12]
 6459 00d4 6A46     		mov	r2, sp
 6460 00d6 FFF7FEFF 		bl	HRTIM_EventConfig
 6461              	.LVL650:
3001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_TIM_ResetConfig(hhrtim,
 6462              		.loc 1 3001 0
 6463 00da 2046     		mov	r0, r4
 6464 00dc 4146     		mov	r1, r8
 6465 00de EA68     		ldr	r2, [r5, #12]
 6466 00e0 FFF7FEFF 		bl	HRTIM_TIM_ResetConfig
 6467              	.LVL651:
3005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 6468              		.loc 1 3005 0
 6469 00e4 0123     		movs	r3, #1
 6470 00e6 84F8C130 		strb	r3, [r4, #193]
3008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 6471              		.loc 1 3008 0
 6472 00ea 84F8C060 		strb	r6, [r4, #192]
3010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 6473              		.loc 1 3010 0
 6474 00ee 3046     		mov	r0, r6
 6475 00f0 02E0     		b	.L491
 6476              	.LVL652:
 6477              	.L500:
2924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 6478              		.loc 1 2924 0
 6479 00f2 0220     		movs	r0, #2
 6480              	.LVL653:
 6481 00f4 00E0     		b	.L491
 6482              	.LVL654:
 6483              	.L501:
2928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6484              		.loc 1 2928 0
 6485 00f6 0220     		movs	r0, #2
ARM GAS  /tmp/ccWQyto6.s 			page 259


 6486              	.LVL655:
 6487              	.L491:
3011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 6488              		.loc 1 3011 0
 6489 00f8 11B0     		add	sp, sp, #68
 6490              		@ sp needed
 6491 00fa BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 6492              		.cfi_endproc
 6493              	.LFE158:
 6495 00fe 00BF     		.section	.text.HAL_HRTIM_SimpleOnePulseStart,"ax",%progbits
 6496              		.align	2
 6497              		.global	HAL_HRTIM_SimpleOnePulseStart
 6498              		.thumb
 6499              		.thumb_func
 6501              	HAL_HRTIM_SimpleOnePulseStart:
 6502              	.LFB159:
3040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 6503              		.loc 1 3040 0
 6504              		.cfi_startproc
 6505              		@ args = 0, pretend = 0, frame = 0
 6506              		@ frame_needed = 0, uses_anonymous_args = 0
 6507              		@ link register save eliminated.
 6508              	.LVL656:
 6509 0000 30B4     		push	{r4, r5}
 6510              	.LCFI41:
 6511              		.cfi_def_cfa_offset 8
 6512              		.cfi_offset 4, -8
 6513              		.cfi_offset 5, -4
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6514              		.loc 1 3045 0
 6515 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 6516 0006 012B     		cmp	r3, #1
 6517 0008 19D0     		beq	.L505
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6518              		.loc 1 3045 0 is_stmt 0 discriminator 2
 6519 000a 0123     		movs	r3, #1
 6520 000c 80F8C030 		strb	r3, [r0, #192]
3047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 6521              		.loc 1 3047 0 is_stmt 1 discriminator 2
 6522 0010 0224     		movs	r4, #2
 6523 0012 80F8C140 		strb	r4, [r0, #193]
3050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OnePulseChannel;
 6524              		.loc 1 3050 0 discriminator 2
 6525 0016 0468     		ldr	r4, [r0]
 6526 0018 D4F89453 		ldr	r5, [r4, #916]
 6527 001c 2A43     		orrs	r2, r2, r5
 6528              	.LVL657:
 6529 001e C4F89423 		str	r2, [r4, #916]
3053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6530              		.loc 1 3053 0 discriminator 2
 6531 0022 0268     		ldr	r2, [r0]
 6532 0024 1468     		ldr	r4, [r2]
 6533 0026 074D     		ldr	r5, .L506
 6534 0028 55F82110 		ldr	r1, [r5, r1, lsl #2]
 6535              	.LVL658:
 6536 002c 2143     		orrs	r1, r1, r4
 6537 002e 1160     		str	r1, [r2]
ARM GAS  /tmp/ccWQyto6.s 			page 260


3055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 6538              		.loc 1 3055 0 discriminator 2
 6539 0030 80F8C130 		strb	r3, [r0, #193]
3058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 6540              		.loc 1 3058 0 discriminator 2
 6541 0034 0023     		movs	r3, #0
 6542 0036 80F8C030 		strb	r3, [r0, #192]
3060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 6543              		.loc 1 3060 0 discriminator 2
 6544 003a 1846     		mov	r0, r3
 6545              	.LVL659:
 6546 003c 00E0     		b	.L504
 6547              	.LVL660:
 6548              	.L505:
3045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6549              		.loc 1 3045 0
 6550 003e 0220     		movs	r0, #2
 6551              	.LVL661:
 6552              	.L504:
3061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 6553              		.loc 1 3061 0
 6554 0040 30BC     		pop	{r4, r5}
 6555 0042 7047     		bx	lr
 6556              	.L507:
 6557              		.align	2
 6558              	.L506:
 6559 0044 00000000 		.word	.LANCHOR0
 6560              		.cfi_endproc
 6561              	.LFE159:
 6563              		.section	.text.HAL_HRTIM_SimpleOnePulseStop,"ax",%progbits
 6564              		.align	2
 6565              		.global	HAL_HRTIM_SimpleOnePulseStop
 6566              		.thumb
 6567              		.thumb_func
 6569              	HAL_HRTIM_SimpleOnePulseStop:
 6570              	.LFB160:
3090:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 6571              		.loc 1 3090 0
 6572              		.cfi_startproc
 6573              		@ args = 0, pretend = 0, frame = 0
 6574              		@ frame_needed = 0, uses_anonymous_args = 0
 6575              		@ link register save eliminated.
 6576              	.LVL662:
 6577 0000 10B4     		push	{r4}
 6578              	.LCFI42:
 6579              		.cfi_def_cfa_offset 4
 6580              		.cfi_offset 4, -4
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6581              		.loc 1 3095 0
 6582 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 6583 0006 012B     		cmp	r3, #1
 6584 0008 6ED0     		beq	.L516
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6585              		.loc 1 3095 0 is_stmt 0 discriminator 2
 6586 000a 0123     		movs	r3, #1
 6587 000c 80F8C030 		strb	r3, [r0, #192]
3097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
ARM GAS  /tmp/ccWQyto6.s 			page 261


 6588              		.loc 1 3097 0 is_stmt 1 discriminator 2
 6589 0010 0223     		movs	r3, #2
 6590 0012 80F8C130 		strb	r3, [r0, #193]
3100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OnePulseChannel;
 6591              		.loc 1 3100 0 discriminator 2
 6592 0016 0368     		ldr	r3, [r0]
 6593 0018 D3F89843 		ldr	r4, [r3, #920]
 6594 001c 2243     		orrs	r2, r2, r4
 6595              	.LVL663:
 6596 001e C3F89823 		str	r2, [r3, #920]
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6597              		.loc 1 3103 0 discriminator 2
 6598 0022 334B     		ldr	r3, .L517
 6599 0024 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6600 0028 13F4803F 		tst	r3, #65536
 6601 002c 04D0     		beq	.L510
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6602              		.loc 1 3103 0 is_stmt 0 discriminator 1
 6603 002e 0368     		ldr	r3, [r0]
 6604 0030 1A68     		ldr	r2, [r3]
 6605 0032 22F48032 		bic	r2, r2, #65536
 6606 0036 1A60     		str	r2, [r3]
 6607              	.L510:
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6608              		.loc 1 3103 0 discriminator 2
 6609 0038 2D4B     		ldr	r3, .L517
 6610 003a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6611 003e 13F4003F 		tst	r3, #131072
 6612 0042 09D0     		beq	.L511
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6613              		.loc 1 3103 0 discriminator 1
 6614 0044 0368     		ldr	r3, [r0]
 6615 0046 D3F89423 		ldr	r2, [r3, #916]
 6616 004a 12F0030F 		tst	r2, #3
 6617 004e 03D1     		bne	.L511
 6618 0050 1A68     		ldr	r2, [r3]
 6619 0052 22F40032 		bic	r2, r2, #131072
 6620 0056 1A60     		str	r2, [r3]
 6621              	.L511:
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6622              		.loc 1 3103 0 discriminator 2
 6623 0058 254B     		ldr	r3, .L517
 6624 005a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6625 005e 13F4802F 		tst	r3, #262144
 6626 0062 09D0     		beq	.L512
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6627              		.loc 1 3103 0 discriminator 1
 6628 0064 0368     		ldr	r3, [r0]
 6629 0066 D3F89423 		ldr	r2, [r3, #916]
 6630 006a 12F00C0F 		tst	r2, #12
 6631 006e 03D1     		bne	.L512
 6632 0070 1A68     		ldr	r2, [r3]
 6633 0072 22F48022 		bic	r2, r2, #262144
 6634 0076 1A60     		str	r2, [r3]
 6635              	.L512:
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6636              		.loc 1 3103 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 262


 6637 0078 1D4B     		ldr	r3, .L517
 6638 007a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6639 007e 13F4002F 		tst	r3, #524288
 6640 0082 09D0     		beq	.L513
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6641              		.loc 1 3103 0 discriminator 1
 6642 0084 0368     		ldr	r3, [r0]
 6643 0086 D3F89423 		ldr	r2, [r3, #916]
 6644 008a 12F0300F 		tst	r2, #48
 6645 008e 03D1     		bne	.L513
 6646 0090 1A68     		ldr	r2, [r3]
 6647 0092 22F40022 		bic	r2, r2, #524288
 6648 0096 1A60     		str	r2, [r3]
 6649              	.L513:
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6650              		.loc 1 3103 0 discriminator 2
 6651 0098 154B     		ldr	r3, .L517
 6652 009a 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6653 009e 13F4801F 		tst	r3, #1048576
 6654 00a2 09D0     		beq	.L514
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6655              		.loc 1 3103 0 discriminator 1
 6656 00a4 0368     		ldr	r3, [r0]
 6657 00a6 D3F89423 		ldr	r2, [r3, #916]
 6658 00aa 12F0C00F 		tst	r2, #192
 6659 00ae 03D1     		bne	.L514
 6660 00b0 1A68     		ldr	r2, [r3]
 6661 00b2 22F48012 		bic	r2, r2, #1048576
 6662 00b6 1A60     		str	r2, [r3]
 6663              	.L514:
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6664              		.loc 1 3103 0 discriminator 2
 6665 00b8 0D4B     		ldr	r3, .L517
 6666 00ba 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6667 00be 13F4001F 		tst	r3, #2097152
 6668 00c2 09D0     		beq	.L515
3103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6669              		.loc 1 3103 0 discriminator 1
 6670 00c4 0368     		ldr	r3, [r0]
 6671 00c6 D3F89423 		ldr	r2, [r3, #916]
 6672 00ca 12F4407F 		tst	r2, #768
 6673 00ce 03D1     		bne	.L515
 6674 00d0 1A68     		ldr	r2, [r3]
 6675 00d2 22F40012 		bic	r2, r2, #2097152
 6676 00d6 1A60     		str	r2, [r3]
 6677              	.L515:
3105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 6678              		.loc 1 3105 0 is_stmt 1
 6679 00d8 0123     		movs	r3, #1
 6680 00da 80F8C130 		strb	r3, [r0, #193]
3108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 6681              		.loc 1 3108 0
 6682 00de 0023     		movs	r3, #0
 6683 00e0 80F8C030 		strb	r3, [r0, #192]
3110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 6684              		.loc 1 3110 0
 6685 00e4 1846     		mov	r0, r3
ARM GAS  /tmp/ccWQyto6.s 			page 263


 6686              	.LVL664:
 6687 00e6 00E0     		b	.L509
 6688              	.LVL665:
 6689              	.L516:
3095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6690              		.loc 1 3095 0
 6691 00e8 0220     		movs	r0, #2
 6692              	.LVL666:
 6693              	.L509:
3111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 6694              		.loc 1 3111 0
 6695 00ea 5DF8044B 		ldr	r4, [sp], #4
 6696 00ee 7047     		bx	lr
 6697              	.L518:
 6698              		.align	2
 6699              	.L517:
 6700 00f0 00000000 		.word	.LANCHOR0
 6701              		.cfi_endproc
 6702              	.LFE160:
 6704              		.section	.text.HAL_HRTIM_SimpleOnePulseStart_IT,"ax",%progbits
 6705              		.align	2
 6706              		.global	HAL_HRTIM_SimpleOnePulseStart_IT
 6707              		.thumb
 6708              		.thumb_func
 6710              	HAL_HRTIM_SimpleOnePulseStart_IT:
 6711              	.LFB161:
3141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 6712              		.loc 1 3141 0
 6713              		.cfi_startproc
 6714              		@ args = 0, pretend = 0, frame = 0
 6715              		@ frame_needed = 0, uses_anonymous_args = 0
 6716              		@ link register save eliminated.
 6717              	.LVL667:
 6718 0000 10B4     		push	{r4}
 6719              	.LCFI43:
 6720              		.cfi_def_cfa_offset 4
 6721              		.cfi_offset 4, -4
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6722              		.loc 1 3146 0
 6723 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 6724 0006 012B     		cmp	r3, #1
 6725 0008 4AD0     		beq	.L527
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6726              		.loc 1 3146 0 is_stmt 0 discriminator 2
 6727 000a 0123     		movs	r3, #1
 6728 000c 80F8C030 		strb	r3, [r0, #192]
3148:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 6729              		.loc 1 3148 0 is_stmt 1 discriminator 2
 6730 0010 0223     		movs	r3, #2
 6731 0012 80F8C130 		strb	r3, [r0, #193]
3151:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= OnePulseChannel;
 6732              		.loc 1 3151 0 discriminator 2
 6733 0016 0368     		ldr	r3, [r0]
 6734 0018 D3F89443 		ldr	r4, [r3, #916]
 6735 001c 1443     		orrs	r4, r4, r2
 6736 001e C3F89443 		str	r4, [r3, #916]
3154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OnePulseChannel)
ARM GAS  /tmp/ccWQyto6.s 			page 264


 6737              		.loc 1 3154 0 discriminator 2
 6738 0022 102A     		cmp	r2, #16
 6739 0024 1AD0     		beq	.L522
 6740 0026 0AD8     		bhi	.L523
 6741 0028 022A     		cmp	r2, #2
 6742 002a 21D0     		beq	.L524
 6743 002c 02D8     		bhi	.L525
 6744 002e 012A     		cmp	r2, #1
 6745 0030 27D1     		bne	.L521
 6746 0032 13E0     		b	.L522
 6747              	.L525:
 6748 0034 042A     		cmp	r2, #4
 6749 0036 11D0     		beq	.L522
 6750 0038 082A     		cmp	r2, #8
 6751 003a 22D1     		bne	.L521
 6752 003c 18E0     		b	.L524
 6753              	.L523:
 6754 003e 802A     		cmp	r2, #128
 6755 0040 16D0     		beq	.L524
 6756 0042 04D8     		bhi	.L526
 6757 0044 202A     		cmp	r2, #32
 6758 0046 13D0     		beq	.L524
 6759 0048 402A     		cmp	r2, #64
 6760 004a 1AD1     		bne	.L521
 6761 004c 06E0     		b	.L522
 6762              	.L526:
 6763 004e B2F5807F 		cmp	r2, #256
 6764 0052 03D0     		beq	.L522
 6765 0054 B2F5007F 		cmp	r2, #512
 6766 0058 13D1     		bne	.L521
 6767 005a 09E0     		b	.L524
 6768              	.L522:
3162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
 6769              		.loc 1 3162 0
 6770 005c 0368     		ldr	r3, [r0]
 6771 005e 03EBC113 		add	r3, r3, r1, lsl #7
 6772 0062 D3F88C20 		ldr	r2, [r3, #140]
 6773              	.LVL668:
 6774 0066 42F00102 		orr	r2, r2, #1
 6775 006a C3F88C20 		str	r2, [r3, #140]
3164:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 6776              		.loc 1 3164 0
 6777 006e 08E0     		b	.L521
 6778              	.LVL669:
 6779              	.L524:
3171:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
 6780              		.loc 1 3171 0
 6781 0070 0368     		ldr	r3, [r0]
 6782 0072 03EBC113 		add	r3, r3, r1, lsl #7
 6783 0076 D3F88C20 		ldr	r2, [r3, #140]
 6784              	.LVL670:
 6785 007a 42F00202 		orr	r2, r2, #2
 6786 007e C3F88C20 		str	r2, [r3, #140]
 6787              	.L521:
3179:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6788              		.loc 1 3179 0
 6789 0082 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccWQyto6.s 			page 265


 6790 0084 1C68     		ldr	r4, [r3]
 6791 0086 084A     		ldr	r2, .L528
 6792 0088 52F82120 		ldr	r2, [r2, r1, lsl #2]
 6793 008c 2243     		orrs	r2, r2, r4
 6794 008e 1A60     		str	r2, [r3]
3181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 6795              		.loc 1 3181 0
 6796 0090 0123     		movs	r3, #1
 6797 0092 80F8C130 		strb	r3, [r0, #193]
3184:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 6798              		.loc 1 3184 0
 6799 0096 0023     		movs	r3, #0
 6800 0098 80F8C030 		strb	r3, [r0, #192]
3186:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 6801              		.loc 1 3186 0
 6802 009c 1846     		mov	r0, r3
 6803              	.LVL671:
 6804 009e 00E0     		b	.L520
 6805              	.LVL672:
 6806              	.L527:
3146:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6807              		.loc 1 3146 0
 6808 00a0 0220     		movs	r0, #2
 6809              	.LVL673:
 6810              	.L520:
3187:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 6811              		.loc 1 3187 0
 6812 00a2 5DF8044B 		ldr	r4, [sp], #4
 6813 00a6 7047     		bx	lr
 6814              	.L529:
 6815              		.align	2
 6816              	.L528:
 6817 00a8 00000000 		.word	.LANCHOR0
 6818              		.cfi_endproc
 6819              	.LFE161:
 6821              		.section	.text.HAL_HRTIM_SimpleOnePulseStop_IT,"ax",%progbits
 6822              		.align	2
 6823              		.global	HAL_HRTIM_SimpleOnePulseStop_IT
 6824              		.thumb
 6825              		.thumb_func
 6827              	HAL_HRTIM_SimpleOnePulseStop_IT:
 6828              	.LFB162:
3217:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 6829              		.loc 1 3217 0
 6830              		.cfi_startproc
 6831              		@ args = 0, pretend = 0, frame = 0
 6832              		@ frame_needed = 0, uses_anonymous_args = 0
 6833              		@ link register save eliminated.
 6834              	.LVL674:
 6835 0000 10B4     		push	{r4}
 6836              	.LCFI44:
 6837              		.cfi_def_cfa_offset 4
 6838              		.cfi_offset 4, -4
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6839              		.loc 1 3222 0
 6840 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 6841 0006 012B     		cmp	r3, #1
ARM GAS  /tmp/ccWQyto6.s 			page 266


 6842 0008 00F09F80 		beq	.L544
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6843              		.loc 1 3222 0 is_stmt 0 discriminator 2
 6844 000c 0123     		movs	r3, #1
 6845 000e 80F8C030 		strb	r3, [r0, #192]
3224:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 6846              		.loc 1 3224 0 is_stmt 1 discriminator 2
 6847 0012 0223     		movs	r3, #2
 6848 0014 80F8C130 		strb	r3, [r0, #193]
3227:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= OnePulseChannel;
 6849              		.loc 1 3227 0 discriminator 2
 6850 0018 0368     		ldr	r3, [r0]
 6851 001a D3F89843 		ldr	r4, [r3, #920]
 6852 001e 1443     		orrs	r4, r4, r2
 6853 0020 C3F89843 		str	r4, [r3, #920]
3230:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (OnePulseChannel)
 6854              		.loc 1 3230 0 discriminator 2
 6855 0024 102A     		cmp	r2, #16
 6856 0026 1AD0     		beq	.L533
 6857 0028 0AD8     		bhi	.L534
 6858 002a 022A     		cmp	r2, #2
 6859 002c 21D0     		beq	.L535
 6860 002e 02D8     		bhi	.L536
 6861 0030 012A     		cmp	r2, #1
 6862 0032 27D1     		bne	.L532
 6863 0034 13E0     		b	.L533
 6864              	.L536:
 6865 0036 042A     		cmp	r2, #4
 6866 0038 11D0     		beq	.L533
 6867 003a 082A     		cmp	r2, #8
 6868 003c 22D1     		bne	.L532
 6869 003e 18E0     		b	.L535
 6870              	.L534:
 6871 0040 802A     		cmp	r2, #128
 6872 0042 16D0     		beq	.L535
 6873 0044 04D8     		bhi	.L537
 6874 0046 202A     		cmp	r2, #32
 6875 0048 13D0     		beq	.L535
 6876 004a 402A     		cmp	r2, #64
 6877 004c 1AD1     		bne	.L532
 6878 004e 06E0     		b	.L533
 6879              	.L537:
 6880 0050 B2F5807F 		cmp	r2, #256
 6881 0054 03D0     		beq	.L533
 6882 0056 B2F5007F 		cmp	r2, #512
 6883 005a 13D1     		bne	.L532
 6884 005c 09E0     		b	.L535
 6885              	.L533:
3238:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
 6886              		.loc 1 3238 0
 6887 005e 0368     		ldr	r3, [r0]
 6888 0060 03EBC113 		add	r3, r3, r1, lsl #7
 6889 0064 D3F88C20 		ldr	r2, [r3, #140]
 6890              	.LVL675:
 6891 0068 22F00102 		bic	r2, r2, #1
 6892 006c C3F88C20 		str	r2, [r3, #140]
3240:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 267


 6893              		.loc 1 3240 0
 6894 0070 08E0     		b	.L532
 6895              	.LVL676:
 6896              	.L535:
3247:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
 6897              		.loc 1 3247 0
 6898 0072 0368     		ldr	r3, [r0]
 6899 0074 03EBC113 		add	r3, r3, r1, lsl #7
 6900 0078 D3F88C20 		ldr	r2, [r3, #140]
 6901              	.LVL677:
 6902 007c 22F00202 		bic	r2, r2, #2
 6903 0080 C3F88C20 		str	r2, [r3, #140]
 6904              	.L532:
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6905              		.loc 1 3255 0
 6906 0084 334B     		ldr	r3, .L545
 6907 0086 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6908 008a 13F4803F 		tst	r3, #65536
 6909 008e 04D0     		beq	.L538
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6910              		.loc 1 3255 0 is_stmt 0 discriminator 1
 6911 0090 0368     		ldr	r3, [r0]
 6912 0092 1A68     		ldr	r2, [r3]
 6913 0094 22F48032 		bic	r2, r2, #65536
 6914 0098 1A60     		str	r2, [r3]
 6915              	.L538:
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6916              		.loc 1 3255 0 discriminator 2
 6917 009a 2E4B     		ldr	r3, .L545
 6918 009c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6919 00a0 13F4003F 		tst	r3, #131072
 6920 00a4 09D0     		beq	.L539
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6921              		.loc 1 3255 0 discriminator 1
 6922 00a6 0368     		ldr	r3, [r0]
 6923 00a8 D3F89423 		ldr	r2, [r3, #916]
 6924 00ac 12F0030F 		tst	r2, #3
 6925 00b0 03D1     		bne	.L539
 6926 00b2 1A68     		ldr	r2, [r3]
 6927 00b4 22F40032 		bic	r2, r2, #131072
 6928 00b8 1A60     		str	r2, [r3]
 6929              	.L539:
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6930              		.loc 1 3255 0 discriminator 2
 6931 00ba 264B     		ldr	r3, .L545
 6932 00bc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6933 00c0 13F4802F 		tst	r3, #262144
 6934 00c4 09D0     		beq	.L540
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6935              		.loc 1 3255 0 discriminator 1
 6936 00c6 0368     		ldr	r3, [r0]
 6937 00c8 D3F89423 		ldr	r2, [r3, #916]
 6938 00cc 12F00C0F 		tst	r2, #12
 6939 00d0 03D1     		bne	.L540
 6940 00d2 1A68     		ldr	r2, [r3]
 6941 00d4 22F48022 		bic	r2, r2, #262144
 6942 00d8 1A60     		str	r2, [r3]
ARM GAS  /tmp/ccWQyto6.s 			page 268


 6943              	.L540:
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6944              		.loc 1 3255 0 discriminator 2
 6945 00da 1E4B     		ldr	r3, .L545
 6946 00dc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6947 00e0 13F4002F 		tst	r3, #524288
 6948 00e4 09D0     		beq	.L541
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6949              		.loc 1 3255 0 discriminator 1
 6950 00e6 0368     		ldr	r3, [r0]
 6951 00e8 D3F89423 		ldr	r2, [r3, #916]
 6952 00ec 12F0300F 		tst	r2, #48
 6953 00f0 03D1     		bne	.L541
 6954 00f2 1A68     		ldr	r2, [r3]
 6955 00f4 22F40022 		bic	r2, r2, #524288
 6956 00f8 1A60     		str	r2, [r3]
 6957              	.L541:
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6958              		.loc 1 3255 0 discriminator 2
 6959 00fa 164B     		ldr	r3, .L545
 6960 00fc 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6961 0100 13F4801F 		tst	r3, #1048576
 6962 0104 09D0     		beq	.L542
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6963              		.loc 1 3255 0 discriminator 1
 6964 0106 0368     		ldr	r3, [r0]
 6965 0108 D3F89423 		ldr	r2, [r3, #916]
 6966 010c 12F0C00F 		tst	r2, #192
 6967 0110 03D1     		bne	.L542
 6968 0112 1A68     		ldr	r2, [r3]
 6969 0114 22F48012 		bic	r2, r2, #1048576
 6970 0118 1A60     		str	r2, [r3]
 6971              	.L542:
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6972              		.loc 1 3255 0 discriminator 2
 6973 011a 0E4B     		ldr	r3, .L545
 6974 011c 53F82130 		ldr	r3, [r3, r1, lsl #2]
 6975 0120 13F4001F 		tst	r3, #2097152
 6976 0124 09D0     		beq	.L543
3255:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, TimerIdxToTimerId[TimerIdx]);
 6977              		.loc 1 3255 0 discriminator 1
 6978 0126 0368     		ldr	r3, [r0]
 6979 0128 D3F89423 		ldr	r2, [r3, #916]
 6980 012c 12F4407F 		tst	r2, #768
 6981 0130 03D1     		bne	.L543
 6982 0132 1A68     		ldr	r2, [r3]
 6983 0134 22F40012 		bic	r2, r2, #2097152
 6984 0138 1A60     		str	r2, [r3]
 6985              	.L543:
3257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 6986              		.loc 1 3257 0 is_stmt 1
 6987 013a 0123     		movs	r3, #1
 6988 013c 80F8C130 		strb	r3, [r0, #193]
3260:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 6989              		.loc 1 3260 0
 6990 0140 0023     		movs	r3, #0
 6991 0142 80F8C030 		strb	r3, [r0, #192]
ARM GAS  /tmp/ccWQyto6.s 			page 269


3262:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 6992              		.loc 1 3262 0
 6993 0146 1846     		mov	r0, r3
 6994              	.LVL678:
 6995 0148 00E0     		b	.L531
 6996              	.LVL679:
 6997              	.L544:
3222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 6998              		.loc 1 3222 0
 6999 014a 0220     		movs	r0, #2
 7000              	.LVL680:
 7001              	.L531:
3263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7002              		.loc 1 3263 0
 7003 014c 5DF8044B 		ldr	r4, [sp], #4
 7004 0150 7047     		bx	lr
 7005              	.L546:
 7006 0152 00BF     		.align	2
 7007              	.L545:
 7008 0154 00000000 		.word	.LANCHOR0
 7009              		.cfi_endproc
 7010              	.LFE162:
 7012              		.section	.text.HAL_HRTIM_BurstModeConfig,"ax",%progbits
 7013              		.align	2
 7014              		.global	HAL_HRTIM_BurstModeConfig
 7015              		.thumb
 7016              		.thumb_func
 7018              	HAL_HRTIM_BurstModeConfig:
 7019              	.LFB163:
3299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7020              		.loc 1 3299 0
 7021              		.cfi_startproc
 7022              		@ args = 0, pretend = 0, frame = 0
 7023              		@ frame_needed = 0, uses_anonymous_args = 0
 7024              		@ link register save eliminated.
 7025              	.LVL681:
 7026 0000 30B4     		push	{r4, r5}
 7027              	.LCFI45:
 7028              		.cfi_def_cfa_offset 8
 7029              		.cfi_offset 4, -8
 7030              		.cfi_offset 5, -4
3309:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7031              		.loc 1 3309 0
 7032 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 7033 0006 DBB2     		uxtb	r3, r3
 7034 0008 022B     		cmp	r3, #2
 7035 000a 31D0     		beq	.L549
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7036              		.loc 1 3315 0
 7037 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 7038 0010 012B     		cmp	r3, #1
 7039 0012 2FD0     		beq	.L550
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7040              		.loc 1 3315 0 is_stmt 0 discriminator 2
 7041 0014 0123     		movs	r3, #1
 7042 0016 80F8C030 		strb	r3, [r0, #192]
3317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
ARM GAS  /tmp/ccWQyto6.s 			page 270


 7043              		.loc 1 3317 0 is_stmt 1 discriminator 2
 7044 001a 0222     		movs	r2, #2
 7045 001c 80F8C120 		strb	r2, [r0, #193]
3319:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr = hhrtim->Instance->sCommonRegs.BMCR;
 7046              		.loc 1 3319 0 discriminator 2
 7047 0020 0268     		ldr	r2, [r0]
 7048 0022 D2F8A053 		ldr	r5, [r2, #928]
 7049              	.LVL682:
3322:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMOM);
 7050              		.loc 1 3322 0 discriminator 2
 7051 0026 25F00205 		bic	r5, r5, #2
 7052              	.LVL683:
3323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->Mode;
 7053              		.loc 1 3323 0 discriminator 2
 7054 002a 0C68     		ldr	r4, [r1]
 7055 002c 2543     		orrs	r5, r5, r4
 7056              	.LVL684:
3326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMCLK);
 7057              		.loc 1 3326 0 discriminator 2
 7058 002e 25F03C05 		bic	r5, r5, #60
 7059              	.LVL685:
3327:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->ClockSource;
 7060              		.loc 1 3327 0 discriminator 2
 7061 0032 4C68     		ldr	r4, [r1, #4]
 7062 0034 2543     		orrs	r5, r5, r4
 7063              	.LVL686:
3330:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMPRSC);
 7064              		.loc 1 3330 0 discriminator 2
 7065 0036 25F47075 		bic	r5, r5, #960
 7066              	.LVL687:
3331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->Prescaler;
 7067              		.loc 1 3331 0 discriminator 2
 7068 003a 8C68     		ldr	r4, [r1, #8]
 7069 003c 2543     		orrs	r5, r5, r4
 7070              	.LVL688:
3334:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BMPREN);
 7071              		.loc 1 3334 0 discriminator 2
 7072 003e 25F48065 		bic	r5, r5, #1024
 7073              	.LVL689:
3335:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= pBurstModeCfg->PreloadEnable;
 7074              		.loc 1 3335 0 discriminator 2
 7075 0042 CC68     		ldr	r4, [r1, #12]
 7076 0044 2543     		orrs	r5, r5, r4
 7077              	.LVL690:
3338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMTRGR = pBurstModeCfg->Trigger;
 7078              		.loc 1 3338 0 discriminator 2
 7079 0046 0C69     		ldr	r4, [r1, #16]
 7080 0048 C2F8A443 		str	r4, [r2, #932]
3341:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCMPR = pBurstModeCfg->IdleDuration;
 7081              		.loc 1 3341 0 discriminator 2
 7082 004c 0268     		ldr	r2, [r0]
 7083 004e 4C69     		ldr	r4, [r1, #20]
 7084 0050 C2F8A843 		str	r4, [r2, #936]
3344:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMPER = pBurstModeCfg->Period;
 7085              		.loc 1 3344 0 discriminator 2
 7086 0054 0268     		ldr	r2, [r0]
 7087 0056 8969     		ldr	r1, [r1, #24]
ARM GAS  /tmp/ccWQyto6.s 			page 271


 7088              	.LVL691:
 7089 0058 C2F8AC13 		str	r1, [r2, #940]
3347:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCR = hrtim_bmcr;
 7090              		.loc 1 3347 0 discriminator 2
 7091 005c 0268     		ldr	r2, [r0]
 7092 005e C2F8A053 		str	r5, [r2, #928]
3349:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 7093              		.loc 1 3349 0 discriminator 2
 7094 0062 80F8C130 		strb	r3, [r0, #193]
3352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 7095              		.loc 1 3352 0 discriminator 2
 7096 0066 0023     		movs	r3, #0
 7097 0068 80F8C030 		strb	r3, [r0, #192]
3354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 7098              		.loc 1 3354 0 discriminator 2
 7099 006c 1846     		mov	r0, r3
 7100              	.LVL692:
 7101 006e 02E0     		b	.L548
 7102              	.LVL693:
 7103              	.L549:
3311:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 7104              		.loc 1 3311 0
 7105 0070 0220     		movs	r0, #2
 7106              	.LVL694:
 7107 0072 00E0     		b	.L548
 7108              	.LVL695:
 7109              	.L550:
3315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7110              		.loc 1 3315 0
 7111 0074 0220     		movs	r0, #2
 7112              	.LVL696:
 7113              	.L548:
3355:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7114              		.loc 1 3355 0
 7115 0076 30BC     		pop	{r4, r5}
 7116 0078 7047     		bx	lr
 7117              		.cfi_endproc
 7118              	.LFE163:
 7120 007a 00BF     		.section	.text.HAL_HRTIM_EventConfig,"ax",%progbits
 7121              		.align	2
 7122              		.global	HAL_HRTIM_EventConfig
 7123              		.thumb
 7124              		.thumb_func
 7126              	HAL_HRTIM_EventConfig:
 7127              	.LFB164:
3379:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7128              		.loc 1 3379 0
 7129              		.cfi_startproc
 7130              		@ args = 0, pretend = 0, frame = 0
 7131              		@ frame_needed = 0, uses_anonymous_args = 0
 7132              	.LVL697:
 7133 0000 38B5     		push	{r3, r4, r5, lr}
 7134              	.LCFI46:
 7135              		.cfi_def_cfa_offset 16
 7136              		.cfi_offset 3, -16
 7137              		.cfi_offset 4, -12
 7138              		.cfi_offset 5, -8
ARM GAS  /tmp/ccWQyto6.s 			page 272


 7139              		.cfi_offset 14, -4
 7140 0002 0446     		mov	r4, r0
3387:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7141              		.loc 1 3387 0
 7142 0004 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 7143 0008 DBB2     		uxtb	r3, r3
 7144 000a 022B     		cmp	r3, #2
 7145 000c 11D0     		beq	.L553
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7146              		.loc 1 3393 0
 7147 000e 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 7148 0012 012B     		cmp	r3, #1
 7149 0014 0FD0     		beq	.L554
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7150              		.loc 1 3393 0 is_stmt 0 discriminator 2
 7151 0016 0125     		movs	r5, #1
 7152 0018 80F8C050 		strb	r5, [r0, #192]
3395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 7153              		.loc 1 3395 0 is_stmt 1 discriminator 2
 7154 001c 0223     		movs	r3, #2
 7155 001e 80F8C130 		strb	r3, [r0, #193]
3398:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_EventConfig(hhrtim, Event, pEventCfg);
 7156              		.loc 1 3398 0 discriminator 2
 7157 0022 FFF7FEFF 		bl	HRTIM_EventConfig
 7158              	.LVL698:
3400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 7159              		.loc 1 3400 0 discriminator 2
 7160 0026 84F8C150 		strb	r5, [r4, #193]
3403:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 7161              		.loc 1 3403 0 discriminator 2
 7162 002a 0020     		movs	r0, #0
 7163 002c 84F8C000 		strb	r0, [r4, #192]
3405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 7164              		.loc 1 3405 0 discriminator 2
 7165 0030 38BD     		pop	{r3, r4, r5, pc}
 7166              	.LVL699:
 7167              	.L553:
3389:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 7168              		.loc 1 3389 0
 7169 0032 0220     		movs	r0, #2
 7170              	.LVL700:
 7171 0034 38BD     		pop	{r3, r4, r5, pc}
 7172              	.LVL701:
 7173              	.L554:
3393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7174              		.loc 1 3393 0
 7175 0036 0220     		movs	r0, #2
 7176              	.LVL702:
3406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7177              		.loc 1 3406 0
 7178 0038 38BD     		pop	{r3, r4, r5, pc}
 7179              		.cfi_endproc
 7180              	.LFE164:
 7182 003a 00BF     		.section	.text.HAL_HRTIM_EventPrescalerConfig,"ax",%progbits
 7183              		.align	2
 7184              		.global	HAL_HRTIM_EventPrescalerConfig
 7185              		.thumb
ARM GAS  /tmp/ccWQyto6.s 			page 273


 7186              		.thumb_func
 7188              	HAL_HRTIM_EventPrescalerConfig:
 7189              	.LFB165:
3422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7190              		.loc 1 3422 0
 7191              		.cfi_startproc
 7192              		@ args = 0, pretend = 0, frame = 0
 7193              		@ frame_needed = 0, uses_anonymous_args = 0
 7194              		@ link register save eliminated.
 7195              	.LVL703:
 7196 0000 10B4     		push	{r4}
 7197              	.LCFI47:
 7198              		.cfi_def_cfa_offset 4
 7199              		.cfi_offset 4, -4
3428:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7200              		.loc 1 3428 0
 7201 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 7202 0006 DBB2     		uxtb	r3, r3
 7203 0008 022B     		cmp	r3, #2
 7204 000a 18D0     		beq	.L557
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7205              		.loc 1 3434 0
 7206 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 7207 0010 012B     		cmp	r3, #1
 7208 0012 16D0     		beq	.L558
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7209              		.loc 1 3434 0 is_stmt 0 discriminator 2
 7210 0014 0123     		movs	r3, #1
 7211 0016 80F8C030 		strb	r3, [r0, #192]
3436:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 7212              		.loc 1 3436 0 is_stmt 1 discriminator 2
 7213 001a 0222     		movs	r2, #2
 7214 001c 80F8C120 		strb	r2, [r0, #193]
3439:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr3 = hhrtim->Instance->sCommonRegs.EECR3;
 7215              		.loc 1 3439 0 discriminator 2
 7216 0020 0268     		ldr	r2, [r0]
 7217 0022 D2F8B843 		ldr	r4, [r2, #952]
 7218              	.LVL704:
3440:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr3 &= ~(HRTIM_EECR3_EEVSD);
 7219              		.loc 1 3440 0 discriminator 2
 7220 0026 24F04044 		bic	r4, r4, #-1073741824
 7221              	.LVL705:
3441:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_eecr3 |= Prescaler;
 7222              		.loc 1 3441 0 discriminator 2
 7223 002a 2143     		orrs	r1, r1, r4
 7224              	.LVL706:
3444:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.EECR3 = hrtim_eecr3;
 7225              		.loc 1 3444 0 discriminator 2
 7226 002c C2F8B813 		str	r1, [r2, #952]
3446:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 7227              		.loc 1 3446 0 discriminator 2
 7228 0030 80F8C130 		strb	r3, [r0, #193]
3449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 7229              		.loc 1 3449 0 discriminator 2
 7230 0034 0023     		movs	r3, #0
 7231 0036 80F8C030 		strb	r3, [r0, #192]
3451:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
ARM GAS  /tmp/ccWQyto6.s 			page 274


 7232              		.loc 1 3451 0 discriminator 2
 7233 003a 1846     		mov	r0, r3
 7234              	.LVL707:
 7235 003c 02E0     		b	.L556
 7236              	.LVL708:
 7237              	.L557:
3430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 7238              		.loc 1 3430 0
 7239 003e 0220     		movs	r0, #2
 7240              	.LVL709:
 7241 0040 00E0     		b	.L556
 7242              	.LVL710:
 7243              	.L558:
3434:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7244              		.loc 1 3434 0
 7245 0042 0220     		movs	r0, #2
 7246              	.LVL711:
 7247              	.L556:
3452:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7248              		.loc 1 3452 0
 7249 0044 5DF8044B 		ldr	r4, [sp], #4
 7250 0048 7047     		bx	lr
 7251              		.cfi_endproc
 7252              	.LFE165:
 7254 004a 00BF     		.section	.text.HAL_HRTIM_FaultConfig,"ax",%progbits
 7255              		.align	2
 7256              		.global	HAL_HRTIM_FaultConfig
 7257              		.thumb
 7258              		.thumb_func
 7260              	HAL_HRTIM_FaultConfig:
 7261              	.LFB166:
3472:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7262              		.loc 1 3472 0
 7263              		.cfi_startproc
 7264              		@ args = 0, pretend = 0, frame = 0
 7265              		@ frame_needed = 0, uses_anonymous_args = 0
 7266              		@ link register save eliminated.
 7267              	.LVL712:
 7268 0000 70B4     		push	{r4, r5, r6}
 7269              	.LCFI48:
 7270              		.cfi_def_cfa_offset 12
 7271              		.cfi_offset 4, -12
 7272              		.cfi_offset 5, -8
 7273              		.cfi_offset 6, -4
3483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7274              		.loc 1 3483 0
 7275 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 7276 0006 DBB2     		uxtb	r3, r3
 7277 0008 022B     		cmp	r3, #2
 7278 000a 6AD0     		beq	.L568
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7279              		.loc 1 3489 0
 7280 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 7281 0010 012B     		cmp	r3, #1
 7282 0012 68D0     		beq	.L569
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7283              		.loc 1 3489 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 275


 7284 0014 0123     		movs	r3, #1
 7285 0016 80F8C030 		strb	r3, [r0, #192]
3491:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 7286              		.loc 1 3491 0 is_stmt 1 discriminator 2
 7287 001a 0223     		movs	r3, #2
 7288 001c 80F8C130 		strb	r3, [r0, #193]
3494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr1 = hhrtim->Instance->sCommonRegs.FLTINR1;
 7289              		.loc 1 3494 0 discriminator 2
 7290 0020 0368     		ldr	r3, [r0]
 7291 0022 D3F8D043 		ldr	r4, [r3, #976]
 7292              	.LVL713:
3495:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 = hhrtim->Instance->sCommonRegs.FLTINR2;
 7293              		.loc 1 3495 0 discriminator 2
 7294 0026 D3F8D453 		ldr	r5, [r3, #980]
 7295              	.LVL714:
3497:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Fault)
 7296              		.loc 1 3497 0 discriminator 2
 7297 002a 0139     		subs	r1, r1, #1
 7298              	.LVL715:
 7299 002c 0F29     		cmp	r1, #15
 7300 002e 4BD8     		bhi	.L561
 7301 0030 DFE801F0 		tbb	[pc, r1]
 7302              	.L563:
 7303 0034 08       		.byte	(.L562-.L563)/2
 7304 0035 13       		.byte	(.L564-.L563)/2
 7305 0036 4A       		.byte	(.L561-.L563)/2
 7306 0037 22       		.byte	(.L565-.L563)/2
 7307 0038 4A       		.byte	(.L561-.L563)/2
 7308 0039 4A       		.byte	(.L561-.L563)/2
 7309 003a 4A       		.byte	(.L561-.L563)/2
 7310 003b 31       		.byte	(.L566-.L563)/2
 7311 003c 4A       		.byte	(.L561-.L563)/2
 7312 003d 4A       		.byte	(.L561-.L563)/2
 7313 003e 4A       		.byte	(.L561-.L563)/2
 7314 003f 4A       		.byte	(.L561-.L563)/2
 7315 0040 4A       		.byte	(.L561-.L563)/2
 7316 0041 4A       		.byte	(.L561-.L563)/2
 7317 0042 4A       		.byte	(.L561-.L563)/2
 7318 0043 40       		.byte	(.L567-.L563)/2
 7319              		.p2align 1
 7320              	.L562:
3501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT1P | HRTIM_FLTINR1_FLT1SRC | HRTIM_FLTINR1_FLT1F | HRTIM_
 7321              		.loc 1 3501 0
 7322 0044 24F0FE04 		bic	r4, r4, #254
 7323              	.LVL716:
3502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Polarity;
 7324              		.loc 1 3502 0
 7325 0048 5168     		ldr	r1, [r2, #4]
 7326              	.LVL717:
 7327 004a 0C43     		orrs	r4, r4, r1
 7328              	.LVL718:
3503:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Source;
 7329              		.loc 1 3503 0
 7330 004c 1168     		ldr	r1, [r2]
 7331 004e 0C43     		orrs	r4, r4, r1
 7332              	.LVL719:
3504:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Filter;
ARM GAS  /tmp/ccWQyto6.s 			page 276


 7333              		.loc 1 3504 0
 7334 0050 9168     		ldr	r1, [r2, #8]
 7335 0052 2143     		orrs	r1, r1, r4
 7336              	.LVL720:
3505:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= pFaultCfg->Lock;
 7337              		.loc 1 3505 0
 7338 0054 D468     		ldr	r4, [r2, #12]
 7339 0056 0C43     		orrs	r4, r4, r1
 7340              	.LVL721:
3507:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7341              		.loc 1 3507 0
 7342 0058 36E0     		b	.L561
 7343              	.L564:
3510:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT2P | HRTIM_FLTINR1_FLT2SRC | HRTIM_FLTINR1_FLT2F | HRTIM_
 7344              		.loc 1 3510 0
 7345 005a 24F47E44 		bic	r4, r4, #65024
 7346              	.LVL722:
3511:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Polarity << 8U);
 7347              		.loc 1 3511 0
 7348 005e 5168     		ldr	r1, [r2, #4]
 7349 0060 44EA0124 		orr	r4, r4, r1, lsl #8
 7350              	.LVL723:
3512:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Source << 8U);
 7351              		.loc 1 3512 0
 7352 0064 1168     		ldr	r1, [r2]
 7353 0066 44EA0124 		orr	r4, r4, r1, lsl #8
 7354              	.LVL724:
3513:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Filter << 8U);
 7355              		.loc 1 3513 0
 7356 006a 9168     		ldr	r1, [r2, #8]
 7357 006c 44EA0121 		orr	r1, r4, r1, lsl #8
 7358              	.LVL725:
3514:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Lock << 8U);
 7359              		.loc 1 3514 0
 7360 0070 D468     		ldr	r4, [r2, #12]
 7361 0072 41EA0424 		orr	r4, r1, r4, lsl #8
 7362              	.LVL726:
3516:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7363              		.loc 1 3516 0
 7364 0076 27E0     		b	.L561
 7365              	.L565:
3519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT3P | HRTIM_FLTINR1_FLT3SRC | HRTIM_FLTINR1_FLT3F | HRTIM_
 7366              		.loc 1 3519 0
 7367 0078 24F47E04 		bic	r4, r4, #16646144
 7368              	.LVL727:
3520:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Polarity << 16U);
 7369              		.loc 1 3520 0
 7370 007c 5168     		ldr	r1, [r2, #4]
 7371 007e 44EA0144 		orr	r4, r4, r1, lsl #16
 7372              	.LVL728:
3521:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Source << 16U);
 7373              		.loc 1 3521 0
 7374 0082 1168     		ldr	r1, [r2]
 7375 0084 44EA0144 		orr	r4, r4, r1, lsl #16
 7376              	.LVL729:
3522:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Filter << 16U);
 7377              		.loc 1 3522 0
ARM GAS  /tmp/ccWQyto6.s 			page 277


 7378 0088 9168     		ldr	r1, [r2, #8]
 7379 008a 44EA0141 		orr	r1, r4, r1, lsl #16
 7380              	.LVL730:
3523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Lock << 16U);
 7381              		.loc 1 3523 0
 7382 008e D468     		ldr	r4, [r2, #12]
 7383 0090 41EA0444 		orr	r4, r1, r4, lsl #16
 7384              	.LVL731:
3525:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7385              		.loc 1 3525 0
 7386 0094 18E0     		b	.L561
 7387              	.L566:
3528:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 &= ~(HRTIM_FLTINR1_FLT4P | HRTIM_FLTINR1_FLT4SRC | HRTIM_FLTINR1_FLT4F | HRTIM_
 7388              		.loc 1 3528 0
 7389 0096 24F07E44 		bic	r4, r4, #-33554432
 7390              	.LVL732:
3529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Polarity << 24U);
 7391              		.loc 1 3529 0
 7392 009a 5168     		ldr	r1, [r2, #4]
 7393 009c 44EA0164 		orr	r4, r4, r1, lsl #24
 7394              	.LVL733:
3530:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Source << 24U);
 7395              		.loc 1 3530 0
 7396 00a0 1168     		ldr	r1, [r2]
 7397 00a2 44EA0164 		orr	r4, r4, r1, lsl #24
 7398              	.LVL734:
3531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Filter << 24U);
 7399              		.loc 1 3531 0
 7400 00a6 9168     		ldr	r1, [r2, #8]
 7401 00a8 44EA0161 		orr	r1, r4, r1, lsl #24
 7402              	.LVL735:
3532:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr1 |= (pFaultCfg->Lock << 24U);
 7403              		.loc 1 3532 0
 7404 00ac D468     		ldr	r4, [r2, #12]
 7405 00ae 41EA0464 		orr	r4, r1, r4, lsl #24
 7406              	.LVL736:
3534:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7407              		.loc 1 3534 0
 7408 00b2 09E0     		b	.L561
 7409              	.L567:
3537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 &= ~(HRTIM_FLTINR2_FLT5P | HRTIM_FLTINR2_FLT5SRC | HRTIM_FLTINR2_FLT5F | HRTIM_
 7410              		.loc 1 3537 0
 7411 00b4 25F0FE05 		bic	r5, r5, #254
 7412              	.LVL737:
3538:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Polarity;
 7413              		.loc 1 3538 0
 7414 00b8 5168     		ldr	r1, [r2, #4]
 7415 00ba 0D43     		orrs	r5, r5, r1
 7416              	.LVL738:
3539:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Source;
 7417              		.loc 1 3539 0
 7418 00bc 1168     		ldr	r1, [r2]
 7419 00be 0D43     		orrs	r5, r5, r1
 7420              	.LVL739:
3540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Filter;
 7421              		.loc 1 3540 0
 7422 00c0 9168     		ldr	r1, [r2, #8]
ARM GAS  /tmp/ccWQyto6.s 			page 278


 7423 00c2 2943     		orrs	r1, r1, r5
 7424              	.LVL740:
3541:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_fltinr2 |= pFaultCfg->Lock;
 7425              		.loc 1 3541 0
 7426 00c4 D568     		ldr	r5, [r2, #12]
 7427 00c6 0D43     		orrs	r5, r5, r1
 7428              	.LVL741:
 7429              	.L561:
3549:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR1 = hrtim_fltinr1;
 7430              		.loc 1 3549 0
 7431 00c8 C3F8D043 		str	r4, [r3, #976]
3550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR2 = hrtim_fltinr2;
 7432              		.loc 1 3550 0
 7433 00cc 0368     		ldr	r3, [r0]
 7434 00ce C3F8D453 		str	r5, [r3, #980]
3552:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 7435              		.loc 1 3552 0
 7436 00d2 0123     		movs	r3, #1
 7437 00d4 80F8C130 		strb	r3, [r0, #193]
3555:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 7438              		.loc 1 3555 0
 7439 00d8 0023     		movs	r3, #0
 7440 00da 80F8C030 		strb	r3, [r0, #192]
3557:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 7441              		.loc 1 3557 0
 7442 00de 1846     		mov	r0, r3
 7443              	.LVL742:
 7444 00e0 02E0     		b	.L560
 7445              	.LVL743:
 7446              	.L568:
3485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 7447              		.loc 1 3485 0
 7448 00e2 0220     		movs	r0, #2
 7449              	.LVL744:
 7450 00e4 00E0     		b	.L560
 7451              	.LVL745:
 7452              	.L569:
3489:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7453              		.loc 1 3489 0
 7454 00e6 0220     		movs	r0, #2
 7455              	.LVL746:
 7456              	.L560:
3558:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7457              		.loc 1 3558 0
 7458 00e8 70BC     		pop	{r4, r5, r6}
 7459 00ea 7047     		bx	lr
 7460              		.cfi_endproc
 7461              	.LFE166:
 7463              		.section	.text.HAL_HRTIM_FaultPrescalerConfig,"ax",%progbits
 7464              		.align	2
 7465              		.global	HAL_HRTIM_FaultPrescalerConfig
 7466              		.thumb
 7467              		.thumb_func
 7469              	HAL_HRTIM_FaultPrescalerConfig:
 7470              	.LFB167:
3575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7471              		.loc 1 3575 0
ARM GAS  /tmp/ccWQyto6.s 			page 279


 7472              		.cfi_startproc
 7473              		@ args = 0, pretend = 0, frame = 0
 7474              		@ frame_needed = 0, uses_anonymous_args = 0
 7475              		@ link register save eliminated.
 7476              	.LVL747:
 7477 0000 10B4     		push	{r4}
 7478              	.LCFI49:
 7479              		.cfi_def_cfa_offset 4
 7480              		.cfi_offset 4, -4
3581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7481              		.loc 1 3581 0
 7482 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 7483 0006 DBB2     		uxtb	r3, r3
 7484 0008 022B     		cmp	r3, #2
 7485 000a 18D0     		beq	.L572
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7486              		.loc 1 3587 0
 7487 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 7488 0010 012B     		cmp	r3, #1
 7489 0012 16D0     		beq	.L573
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7490              		.loc 1 3587 0 is_stmt 0 discriminator 2
 7491 0014 0123     		movs	r3, #1
 7492 0016 80F8C030 		strb	r3, [r0, #192]
3589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 7493              		.loc 1 3589 0 is_stmt 1 discriminator 2
 7494 001a 0222     		movs	r2, #2
 7495 001c 80F8C120 		strb	r2, [r0, #193]
3592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 = hhrtim->Instance->sCommonRegs.FLTINR2;
 7496              		.loc 1 3592 0 discriminator 2
 7497 0020 0268     		ldr	r2, [r0]
 7498 0022 D2F8D443 		ldr	r4, [r2, #980]
 7499              	.LVL748:
3593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 &= ~(HRTIM_FLTINR2_FLTSD);
 7500              		.loc 1 3593 0 discriminator 2
 7501 0026 24F04074 		bic	r4, r4, #50331648
 7502              	.LVL749:
3594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 |= Prescaler;
 7503              		.loc 1 3594 0 discriminator 2
 7504 002a 2143     		orrs	r1, r1, r4
 7505              	.LVL750:
3597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR2 = hrtim_fltinr2;
 7506              		.loc 1 3597 0 discriminator 2
 7507 002c C2F8D413 		str	r1, [r2, #980]
3599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 7508              		.loc 1 3599 0 discriminator 2
 7509 0030 80F8C130 		strb	r3, [r0, #193]
3602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 7510              		.loc 1 3602 0 discriminator 2
 7511 0034 0023     		movs	r3, #0
 7512 0036 80F8C030 		strb	r3, [r0, #192]
3604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 7513              		.loc 1 3604 0 discriminator 2
 7514 003a 1846     		mov	r0, r3
 7515              	.LVL751:
 7516 003c 02E0     		b	.L571
 7517              	.LVL752:
ARM GAS  /tmp/ccWQyto6.s 			page 280


 7518              	.L572:
3583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 7519              		.loc 1 3583 0
 7520 003e 0220     		movs	r0, #2
 7521              	.LVL753:
 7522 0040 00E0     		b	.L571
 7523              	.LVL754:
 7524              	.L573:
3587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7525              		.loc 1 3587 0
 7526 0042 0220     		movs	r0, #2
 7527              	.LVL755:
 7528              	.L571:
3605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7529              		.loc 1 3605 0
 7530 0044 5DF8044B 		ldr	r4, [sp], #4
 7531 0048 7047     		bx	lr
 7532              		.cfi_endproc
 7533              	.LFE167:
 7535 004a 00BF     		.section	.text.HAL_HRTIM_FaultModeCtl,"ax",%progbits
 7536              		.align	2
 7537              		.global	HAL_HRTIM_FaultModeCtl
 7538              		.thumb
 7539              		.thumb_func
 7541              	HAL_HRTIM_FaultModeCtl:
 7542              	.LFB168:
3626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7543              		.loc 1 3626 0
 7544              		.cfi_startproc
 7545              		@ args = 0, pretend = 0, frame = 0
 7546              		@ frame_needed = 0, uses_anonymous_args = 0
 7547              		@ link register save eliminated.
 7548              	.LVL756:
 7549 0000 30B4     		push	{r4, r5}
 7550              	.LCFI50:
 7551              		.cfi_def_cfa_offset 8
 7552              		.cfi_offset 4, -8
 7553              		.cfi_offset 5, -4
3635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr1 = hhrtim->Instance->sCommonRegs.FLTINR1;
 7554              		.loc 1 3635 0
 7555 0002 0468     		ldr	r4, [r0]
 7556 0004 D4F8D033 		ldr	r3, [r4, #976]
 7557              	.LVL757:
3636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_fltinr2 = hhrtim->Instance->sCommonRegs.FLTINR2;
 7558              		.loc 1 3636 0
 7559 0008 D4F8D453 		ldr	r5, [r4, #980]
 7560              	.LVL758:
3638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_1) != RESET)
 7561              		.loc 1 3638 0
 7562 000c 11F0010F 		tst	r1, #1
 7563 0010 02D0     		beq	.L575
3640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT1E;
 7564              		.loc 1 3640 0
 7565 0012 23F00103 		bic	r3, r3, #1
 7566              	.LVL759:
3641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= Enable;
 7567              		.loc 1 3641 0
ARM GAS  /tmp/ccWQyto6.s 			page 281


 7568 0016 1343     		orrs	r3, r3, r2
 7569              	.LVL760:
 7570              	.L575:
3643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_2) != RESET)
 7571              		.loc 1 3643 0
 7572 0018 11F0020F 		tst	r1, #2
 7573 001c 03D0     		beq	.L576
3645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT2E;
 7574              		.loc 1 3645 0
 7575 001e 23F48073 		bic	r3, r3, #256
 7576              	.LVL761:
3646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= (Enable << 8U);
 7577              		.loc 1 3646 0
 7578 0022 43EA0223 		orr	r3, r3, r2, lsl #8
 7579              	.LVL762:
 7580              	.L576:
3648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_3) != RESET)
 7581              		.loc 1 3648 0
 7582 0026 11F0040F 		tst	r1, #4
 7583 002a 03D0     		beq	.L577
3650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT3E;
 7584              		.loc 1 3650 0
 7585 002c 23F48033 		bic	r3, r3, #65536
 7586              	.LVL763:
3651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= (Enable << 16U);
 7587              		.loc 1 3651 0
 7588 0030 43EA0243 		orr	r3, r3, r2, lsl #16
 7589              	.LVL764:
 7590              	.L577:
3653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_4) != RESET)
 7591              		.loc 1 3653 0
 7592 0034 11F0080F 		tst	r1, #8
 7593 0038 03D0     		beq	.L578
3655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 &= ~HRTIM_FLTINR1_FLT4E; 
 7594              		.loc 1 3655 0
 7595 003a 23F08073 		bic	r3, r3, #16777216
 7596              	.LVL765:
3656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr1 |= (Enable << 24U);
 7597              		.loc 1 3656 0
 7598 003e 43EA0263 		orr	r3, r3, r2, lsl #24
 7599              	.LVL766:
 7600              	.L578:
3658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Faults & HRTIM_FAULT_5) != RESET)
 7601              		.loc 1 3658 0
 7602 0042 11F0100F 		tst	r1, #16
 7603 0046 02D0     		beq	.L579
3660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr2 &= ~HRTIM_FLTINR2_FLT5E;
 7604              		.loc 1 3660 0
 7605 0048 25F00105 		bic	r5, r5, #1
 7606              	.LVL767:
3661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     hrtim_fltinr2 |= Enable;
 7607              		.loc 1 3661 0
 7608 004c 1543     		orrs	r5, r5, r2
 7609              	.LVL768:
 7610              	.L579:
3665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR1 = hrtim_fltinr1;
 7611              		.loc 1 3665 0
ARM GAS  /tmp/ccWQyto6.s 			page 282


 7612 004e C4F8D033 		str	r3, [r4, #976]
3666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.FLTINR2 = hrtim_fltinr2;
 7613              		.loc 1 3666 0
 7614 0052 0368     		ldr	r3, [r0]
 7615              	.LVL769:
 7616 0054 C3F8D453 		str	r5, [r3, #980]
 7617              	.LVL770:
3667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }      
 7618              		.loc 1 3667 0
 7619 0058 30BC     		pop	{r4, r5}
 7620              	.LVL771:
 7621 005a 7047     		bx	lr
 7622              		.cfi_endproc
 7623              	.LFE168:
 7625              		.section	.text.HAL_HRTIM_ADCTriggerConfig,"ax",%progbits
 7626              		.align	2
 7627              		.global	HAL_HRTIM_ADCTriggerConfig
 7628              		.thumb
 7629              		.thumb_func
 7631              	HAL_HRTIM_ADCTriggerConfig:
 7632              	.LFB169:
3686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7633              		.loc 1 3686 0
 7634              		.cfi_startproc
 7635              		@ args = 0, pretend = 0, frame = 0
 7636              		@ frame_needed = 0, uses_anonymous_args = 0
 7637              		@ link register save eliminated.
 7638              	.LVL772:
 7639 0000 30B4     		push	{r4, r5}
 7640              	.LCFI51:
 7641              		.cfi_def_cfa_offset 8
 7642              		.cfi_offset 4, -8
 7643              		.cfi_offset 5, -4
3693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7644              		.loc 1 3693 0
 7645 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 7646 0006 DBB2     		uxtb	r3, r3
 7647 0008 022B     		cmp	r3, #2
 7648 000a 4AD0     		beq	.L588
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7649              		.loc 1 3699 0
 7650 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 7651 0010 012B     		cmp	r3, #1
 7652 0012 48D0     		beq	.L589
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7653              		.loc 1 3699 0 is_stmt 0 discriminator 2
 7654 0014 0123     		movs	r3, #1
 7655 0016 80F8C030 		strb	r3, [r0, #192]
3701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 7656              		.loc 1 3701 0 is_stmt 1 discriminator 2
 7657 001a 0223     		movs	r3, #2
 7658 001c 80F8C130 		strb	r3, [r0, #193]
3704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_cr1 = hhrtim->Instance->sCommonRegs.CR1;
 7659              		.loc 1 3704 0 discriminator 2
 7660 0020 0468     		ldr	r4, [r0]
 7661 0022 D4F88033 		ldr	r3, [r4, #896]
 7662              	.LVL773:
ARM GAS  /tmp/ccWQyto6.s 			page 283


3706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (ADCTrigger)
 7663              		.loc 1 3706 0 discriminator 2
 7664 0026 0139     		subs	r1, r1, #1
 7665              	.LVL774:
 7666 0028 0729     		cmp	r1, #7
 7667 002a 2FD8     		bhi	.L582
 7668 002c DFE801F0 		tbb	[pc, r1]
 7669              	.L584:
 7670 0030 04       		.byte	(.L583-.L584)/2
 7671 0031 0E       		.byte	(.L585-.L584)/2
 7672 0032 2E       		.byte	(.L582-.L584)/2
 7673 0033 19       		.byte	(.L586-.L584)/2
 7674 0034 2E       		.byte	(.L582-.L584)/2
 7675 0035 2E       		.byte	(.L582-.L584)/2
 7676 0036 2E       		.byte	(.L582-.L584)/2
 7677 0037 24       		.byte	(.L587-.L584)/2
 7678              		.p2align 1
 7679              	.L583:
3710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC1USRC);
 7680              		.loc 1 3710 0
 7681 0038 23F4E023 		bic	r3, r3, #458752
 7682              	.LVL775:
3711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= (pADCTriggerCfg->UpdateSource & HRTIM_CR1_ADC1USRC);
 7683              		.loc 1 3711 0
 7684 003c 1168     		ldr	r1, [r2]
 7685              	.LVL776:
 7686 003e 01F4E021 		and	r1, r1, #458752
 7687 0042 0B43     		orrs	r3, r3, r1
 7688              	.LVL777:
3714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC1R = pADCTriggerCfg->Trigger;
 7689              		.loc 1 3714 0
 7690 0044 5268     		ldr	r2, [r2, #4]
 7691              	.LVL778:
 7692 0046 C4F8BC23 		str	r2, [r4, #956]
3716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7693              		.loc 1 3716 0
 7694 004a 1FE0     		b	.L582
 7695              	.LVL779:
 7696              	.L585:
3719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC2USRC);
 7697              		.loc 1 3719 0
 7698 004c 23F46013 		bic	r3, r3, #3670016
 7699              	.LVL780:
3720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= ((pADCTriggerCfg->UpdateSource << 3U) & HRTIM_CR1_ADC2USRC); 
 7700              		.loc 1 3720 0
 7701 0050 1168     		ldr	r1, [r2]
 7702 0052 C900     		lsls	r1, r1, #3
 7703 0054 01F46011 		and	r1, r1, #3670016
 7704 0058 0B43     		orrs	r3, r3, r1
 7705              	.LVL781:
3723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC2R = pADCTriggerCfg->Trigger;
 7706              		.loc 1 3723 0
 7707 005a 5268     		ldr	r2, [r2, #4]
 7708              	.LVL782:
 7709 005c C4F8C023 		str	r2, [r4, #960]
3725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7710              		.loc 1 3725 0
ARM GAS  /tmp/ccWQyto6.s 			page 284


 7711 0060 14E0     		b	.L582
 7712              	.LVL783:
 7713              	.L586:
3728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC3USRC);
 7714              		.loc 1 3728 0
 7715 0062 23F0E073 		bic	r3, r3, #29360128
 7716              	.LVL784:
3729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= ((pADCTriggerCfg->UpdateSource << 6U) & HRTIM_CR1_ADC3USRC); 
 7717              		.loc 1 3729 0
 7718 0066 1168     		ldr	r1, [r2]
 7719 0068 8901     		lsls	r1, r1, #6
 7720 006a 01F0E071 		and	r1, r1, #29360128
 7721 006e 0B43     		orrs	r3, r3, r1
 7722              	.LVL785:
3732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC3R = pADCTriggerCfg->Trigger;
 7723              		.loc 1 3732 0
 7724 0070 5268     		ldr	r2, [r2, #4]
 7725              	.LVL786:
 7726 0072 C4F8C423 		str	r2, [r4, #964]
3734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7727              		.loc 1 3734 0
 7728 0076 09E0     		b	.L582
 7729              	.LVL787:
 7730              	.L587:
3737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 &= ~(HRTIM_CR1_ADC4USRC);
 7731              		.loc 1 3737 0
 7732 0078 23F06063 		bic	r3, r3, #234881024
 7733              	.LVL788:
3738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_cr1 |= ((pADCTriggerCfg->UpdateSource << 9U) & HRTIM_CR1_ADC4USRC); 
 7734              		.loc 1 3738 0
 7735 007c 1168     		ldr	r1, [r2]
 7736 007e 4902     		lsls	r1, r1, #9
 7737 0080 01F06061 		and	r1, r1, #234881024
 7738 0084 0B43     		orrs	r3, r3, r1
 7739              	.LVL789:
3741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.ADC4R = pADCTriggerCfg->Trigger;
 7740              		.loc 1 3741 0
 7741 0086 5268     		ldr	r2, [r2, #4]
 7742              	.LVL790:
 7743 0088 C4F8C823 		str	r2, [r4, #968]
 7744              	.L582:
3749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR1 = hrtim_cr1;
 7745              		.loc 1 3749 0
 7746 008c 0268     		ldr	r2, [r0]
 7747 008e C2F88033 		str	r3, [r2, #896]
3751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 7748              		.loc 1 3751 0
 7749 0092 0123     		movs	r3, #1
 7750              	.LVL791:
 7751 0094 80F8C130 		strb	r3, [r0, #193]
 7752              	.LVL792:
3754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 7753              		.loc 1 3754 0
 7754 0098 0023     		movs	r3, #0
 7755 009a 80F8C030 		strb	r3, [r0, #192]
3756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 7756              		.loc 1 3756 0
ARM GAS  /tmp/ccWQyto6.s 			page 285


 7757 009e 1846     		mov	r0, r3
 7758              	.LVL793:
 7759 00a0 02E0     		b	.L581
 7760              	.LVL794:
 7761              	.L588:
3695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 7762              		.loc 1 3695 0
 7763 00a2 0220     		movs	r0, #2
 7764              	.LVL795:
 7765 00a4 00E0     		b	.L581
 7766              	.LVL796:
 7767              	.L589:
3699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7768              		.loc 1 3699 0
 7769 00a6 0220     		movs	r0, #2
 7770              	.LVL797:
 7771              	.L581:
3757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7772              		.loc 1 3757 0
 7773 00a8 30BC     		pop	{r4, r5}
 7774 00aa 7047     		bx	lr
 7775              		.cfi_endproc
 7776              	.LFE169:
 7778              		.section	.text.HAL_HRTIM_WaveformTimerConfig,"ax",%progbits
 7779              		.align	2
 7780              		.global	HAL_HRTIM_WaveformTimerConfig
 7781              		.thumb
 7782              		.thumb_func
 7784              	HAL_HRTIM_WaveformTimerConfig:
 7785              	.LFB170:
3821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7786              		.loc 1 3821 0
 7787              		.cfi_startproc
 7788              		@ args = 0, pretend = 0, frame = 0
 7789              		@ frame_needed = 0, uses_anonymous_args = 0
 7790              	.LVL798:
 7791 0000 70B5     		push	{r4, r5, r6, lr}
 7792              	.LCFI52:
 7793              		.cfi_def_cfa_offset 16
 7794              		.cfi_offset 4, -16
 7795              		.cfi_offset 5, -12
 7796              		.cfi_offset 6, -8
 7797              		.cfi_offset 14, -4
 7798 0002 0446     		mov	r4, r0
 7799 0004 0E46     		mov	r6, r1
 7800 0006 1546     		mov	r5, r2
3834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7801              		.loc 1 3834 0
 7802 0008 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 7803 000c DBB2     		uxtb	r3, r3
 7804 000e 022B     		cmp	r3, #2
 7805 0010 2AD0     		beq	.L594
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7806              		.loc 1 3840 0
 7807 0012 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 7808 0016 012B     		cmp	r3, #1
 7809 0018 28D0     		beq	.L595
ARM GAS  /tmp/ccWQyto6.s 			page 286


3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7810              		.loc 1 3840 0 is_stmt 0 discriminator 2
 7811 001a 0123     		movs	r3, #1
 7812 001c 80F8C030 		strb	r3, [r0, #192]
3842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 7813              		.loc 1 3842 0 is_stmt 1 discriminator 2
 7814 0020 0223     		movs	r3, #2
 7815 0022 80F8C130 		strb	r3, [r0, #193]
3844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 7816              		.loc 1 3844 0 discriminator 2
 7817 0026 0529     		cmp	r1, #5
 7818 0028 03D1     		bne	.L592
3852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_MasterWaveform_Config(hhrtim, pTimerCfg);
 7819              		.loc 1 3852 0
 7820 002a 1146     		mov	r1, r2
 7821              	.LVL799:
 7822 002c FFF7FEFF 		bl	HRTIM_MasterWaveform_Config
 7823              	.LVL800:
 7824 0030 01E0     		b	.L593
 7825              	.LVL801:
 7826              	.L592:
3872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_TimingUnitWaveform_Config(hhrtim, TimerIdx, pTimerCfg);
 7827              		.loc 1 3872 0
 7828 0032 FFF7FEFF 		bl	HRTIM_TimingUnitWaveform_Config
 7829              	.LVL802:
 7830              	.L593:
3876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].InterruptRequests = pTimerCfg->InterruptRequests;
 7831              		.loc 1 3876 0
 7832 0036 2A68     		ldr	r2, [r5]
 7833 0038 F300     		lsls	r3, r6, #3
 7834 003a 9B1B     		subs	r3, r3, r6
 7835 003c 9B00     		lsls	r3, r3, #2
 7836 003e 2344     		add	r3, r3, r4
 7837 0040 1A62     		str	r2, [r3, #32]
3877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMARequests = pTimerCfg->DMARequests;
 7838              		.loc 1 3877 0
 7839 0042 6A68     		ldr	r2, [r5, #4]
 7840 0044 5A62     		str	r2, [r3, #36]
3878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMASrcAddress = pTimerCfg->DMASrcAddress;
 7841              		.loc 1 3878 0
 7842 0046 AA68     		ldr	r2, [r5, #8]
 7843 0048 9A62     		str	r2, [r3, #40]
3879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMADstAddress = pTimerCfg->DMADstAddress;
 7844              		.loc 1 3879 0
 7845 004a EA68     		ldr	r2, [r5, #12]
 7846 004c DA62     		str	r2, [r3, #44]
3880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->TimerParam[TimerIdx].DMASize = pTimerCfg->DMASize;
 7847              		.loc 1 3880 0
 7848 004e 2A69     		ldr	r2, [r5, #16]
 7849 0050 1A63     		str	r2, [r3, #48]
3883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_ForceRegistersUpdate(hhrtim, TimerIdx);
 7850              		.loc 1 3883 0
 7851 0052 2046     		mov	r0, r4
 7852 0054 3146     		mov	r1, r6
 7853 0056 FFF7FEFF 		bl	HRTIM_ForceRegistersUpdate
 7854              	.LVL803:
3885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
ARM GAS  /tmp/ccWQyto6.s 			page 287


 7855              		.loc 1 3885 0
 7856 005a 0123     		movs	r3, #1
 7857 005c 84F8C130 		strb	r3, [r4, #193]
3888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 7858              		.loc 1 3888 0
 7859 0060 0020     		movs	r0, #0
 7860 0062 84F8C000 		strb	r0, [r4, #192]
3890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 7861              		.loc 1 3890 0
 7862 0066 70BD     		pop	{r4, r5, r6, pc}
 7863              	.LVL804:
 7864              	.L594:
3836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 7865              		.loc 1 3836 0
 7866 0068 0220     		movs	r0, #2
 7867              	.LVL805:
 7868 006a 70BD     		pop	{r4, r5, r6, pc}
 7869              	.LVL806:
 7870              	.L595:
3840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7871              		.loc 1 3840 0
 7872 006c 0220     		movs	r0, #2
 7873              	.LVL807:
3891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 7874              		.loc 1 3891 0
 7875 006e 70BD     		pop	{r4, r5, r6, pc}
 7876              		.cfi_endproc
 7877              	.LFE170:
 7879              		.section	.text.HAL_HRTIM_TimerEventFilteringConfig,"ax",%progbits
 7880              		.align	2
 7881              		.global	HAL_HRTIM_TimerEventFilteringConfig
 7882              		.thumb
 7883              		.thumb_func
 7885              	HAL_HRTIM_TimerEventFilteringConfig:
 7886              	.LFB171:
3924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 7887              		.loc 1 3924 0
 7888              		.cfi_startproc
 7889              		@ args = 0, pretend = 0, frame = 0
 7890              		@ frame_needed = 0, uses_anonymous_args = 0
 7891              		@ link register save eliminated.
 7892              	.LVL808:
 7893 0000 10B4     		push	{r4}
 7894              	.LCFI53:
 7895              		.cfi_def_cfa_offset 4
 7896              		.cfi_offset 4, -4
3933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 7897              		.loc 1 3933 0
 7898 0002 90F8C140 		ldrb	r4, [r0, #193]	@ zero_extendqisi2
 7899 0006 E4B2     		uxtb	r4, r4
 7900 0008 022C     		cmp	r4, #2
 7901 000a 00F0D380 		beq	.L613
3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7902              		.loc 1 3939 0
 7903 000e 90F8C040 		ldrb	r4, [r0, #192]	@ zero_extendqisi2
 7904 0012 012C     		cmp	r4, #1
 7905 0014 00F0D080 		beq	.L614
ARM GAS  /tmp/ccWQyto6.s 			page 288


3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 7906              		.loc 1 3939 0 is_stmt 0 discriminator 2
 7907 0018 0124     		movs	r4, #1
 7908 001a 80F8C040 		strb	r4, [r0, #192]
3941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 7909              		.loc 1 3941 0 is_stmt 1 discriminator 2
 7910 001e 0224     		movs	r4, #2
 7911 0020 80F8C140 		strb	r4, [r0, #193]
3944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Event)
 7912              		.loc 1 3944 0 discriminator 2
 7913 0024 102A     		cmp	r2, #16
 7914 0026 65D0     		beq	.L599
 7915 0028 0BD8     		bhi	.L600
 7916 002a A242     		cmp	r2, r4
 7917 002c 35D0     		beq	.L601
 7918 002e 03D8     		bhi	.L602
 7919 0030 CAB1     		cbz	r2, .L603
 7920 0032 012A     		cmp	r2, #1
 7921 0034 23D0     		beq	.L604
 7922 0036 B5E0     		b	.L598
 7923              	.L602:
 7924 0038 042A     		cmp	r2, #4
 7925 003a 3DD0     		beq	.L605
 7926 003c 082A     		cmp	r2, #8
 7927 003e 4AD0     		beq	.L606
 7928 0040 B0E0     		b	.L598
 7929              	.L600:
 7930 0042 802A     		cmp	r2, #128
 7931 0044 00F08280 		beq	.L607
 7932 0048 04D8     		bhi	.L608
 7933 004a 202A     		cmp	r2, #32
 7934 004c 61D0     		beq	.L609
 7935 004e 402A     		cmp	r2, #64
 7936 0050 6DD0     		beq	.L610
 7937 0052 A7E0     		b	.L598
 7938              	.L608:
 7939 0054 B2F5807F 		cmp	r2, #256
 7940 0058 00F08780 		beq	.L611
 7941 005c B2F5007F 		cmp	r2, #512
 7942 0060 00F09280 		beq	.L612
 7943 0064 9EE0     		b	.L598
 7944              	.L603:
3948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = 0U;
 7945              		.loc 1 3948 0
 7946 0066 0368     		ldr	r3, [r0]
 7947              	.LVL809:
 7948 0068 C901     		lsls	r1, r1, #7
 7949              	.LVL810:
 7950 006a 0B44     		add	r3, r3, r1
 7951 006c 03F1C802 		add	r2, r3, #200
 7952              	.LVL811:
 7953 0070 0023     		movs	r3, #0
 7954 0072 5360     		str	r3, [r2, #4]
3949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = 0U;
 7955              		.loc 1 3949 0
 7956 0074 0268     		ldr	r2, [r0]
 7957 0076 1144     		add	r1, r1, r2
ARM GAS  /tmp/ccWQyto6.s 			page 289


 7958 0078 C1F8D030 		str	r3, [r1, #208]
3951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7959              		.loc 1 3951 0
 7960 007c 92E0     		b	.L598
 7961              	.LVL812:
 7962              	.L604:
3954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
 7963              		.loc 1 3954 0
 7964 007e 0268     		ldr	r2, [r0]
 7965              	.LVL813:
 7966 0080 02EBC111 		add	r1, r2, r1, lsl #7
 7967              	.LVL814:
 7968 0084 D1F8CC20 		ldr	r2, [r1, #204]
 7969              	.LVL815:
3955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE1FLTR | HRTIM_EEFR1_EE1LTCH);
 7970              		.loc 1 3955 0
 7971 0088 22F01F02 		bic	r2, r2, #31
 7972              	.LVL816:
3956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= (pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch);
 7973              		.loc 1 3956 0
 7974 008c 1C68     		ldr	r4, [r3]
 7975 008e 5B68     		ldr	r3, [r3, #4]
 7976              	.LVL817:
 7977 0090 2343     		orrs	r3, r3, r4
 7978 0092 1343     		orrs	r3, r3, r2
 7979              	.LVL818:
3957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
 7980              		.loc 1 3957 0
 7981 0094 C1F8CC30 		str	r3, [r1, #204]
3959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 7982              		.loc 1 3959 0
 7983 0098 84E0     		b	.L598
 7984              	.LVL819:
 7985              	.L601:
3962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
 7986              		.loc 1 3962 0
 7987 009a 0268     		ldr	r2, [r0]
 7988              	.LVL820:
 7989 009c 02EBC111 		add	r1, r2, r1, lsl #7
 7990              	.LVL821:
 7991 00a0 D1F8CC20 		ldr	r2, [r1, #204]
 7992              	.LVL822:
3963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE2FLTR | HRTIM_EEFR1_EE2LTCH);
 7993              		.loc 1 3963 0
 7994 00a4 22F4F862 		bic	r2, r2, #1984
 7995              	.LVL823:
3964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 6U);
 7996              		.loc 1 3964 0
 7997 00a8 1C68     		ldr	r4, [r3]
 7998 00aa 5B68     		ldr	r3, [r3, #4]
 7999              	.LVL824:
 8000 00ac 2343     		orrs	r3, r3, r4
 8001 00ae 42EA8313 		orr	r3, r2, r3, lsl #6
 8002              	.LVL825:
3965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
 8003              		.loc 1 3965 0
 8004 00b2 C1F8CC30 		str	r3, [r1, #204]
ARM GAS  /tmp/ccWQyto6.s 			page 290


3967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8005              		.loc 1 3967 0
 8006 00b6 75E0     		b	.L598
 8007              	.LVL826:
 8008              	.L605:
3970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
 8009              		.loc 1 3970 0
 8010 00b8 0268     		ldr	r2, [r0]
 8011              	.LVL827:
 8012 00ba 02EBC111 		add	r1, r2, r1, lsl #7
 8013              	.LVL828:
 8014 00be D1F8CC20 		ldr	r2, [r1, #204]
 8015              	.LVL829:
3971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE3FLTR | HRTIM_EEFR1_EE3LTCH);
 8016              		.loc 1 3971 0
 8017 00c2 22F4F832 		bic	r2, r2, #126976
 8018              	.LVL830:
3972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 12U);
 8019              		.loc 1 3972 0
 8020 00c6 1C68     		ldr	r4, [r3]
 8021 00c8 5B68     		ldr	r3, [r3, #4]
 8022              	.LVL831:
 8023 00ca 2343     		orrs	r3, r3, r4
 8024 00cc 42EA0333 		orr	r3, r2, r3, lsl #12
 8025              	.LVL832:
3973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
 8026              		.loc 1 3973 0
 8027 00d0 C1F8CC30 		str	r3, [r1, #204]
3975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8028              		.loc 1 3975 0
 8029 00d4 66E0     		b	.L598
 8030              	.LVL833:
 8031              	.L606:
3978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
 8032              		.loc 1 3978 0
 8033 00d6 0268     		ldr	r2, [r0]
 8034              	.LVL834:
 8035 00d8 02EBC111 		add	r1, r2, r1, lsl #7
 8036              	.LVL835:
 8037 00dc D1F8CC20 		ldr	r2, [r1, #204]
 8038              	.LVL836:
3979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE4FLTR | HRTIM_EEFR1_EE4LTCH);
 8039              		.loc 1 3979 0
 8040 00e0 22F4F802 		bic	r2, r2, #8126464
 8041              	.LVL837:
3980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 18U);
 8042              		.loc 1 3980 0
 8043 00e4 1C68     		ldr	r4, [r3]
 8044 00e6 5B68     		ldr	r3, [r3, #4]
 8045              	.LVL838:
 8046 00e8 2343     		orrs	r3, r3, r4
 8047 00ea 42EA8343 		orr	r3, r2, r3, lsl #18
 8048              	.LVL839:
3981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
 8049              		.loc 1 3981 0
 8050 00ee C1F8CC30 		str	r3, [r1, #204]
3983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
ARM GAS  /tmp/ccWQyto6.s 			page 291


 8051              		.loc 1 3983 0
 8052 00f2 57E0     		b	.L598
 8053              	.LVL840:
 8054              	.L599:
3986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1;
 8055              		.loc 1 3986 0
 8056 00f4 0268     		ldr	r2, [r0]
 8057              	.LVL841:
 8058 00f6 02EBC111 		add	r1, r2, r1, lsl #7
 8059              	.LVL842:
 8060 00fa D1F8CC20 		ldr	r2, [r1, #204]
 8061              	.LVL843:
3987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR1_EE5FLTR | HRTIM_EEFR1_EE5LTCH);
 8062              		.loc 1 3987 0
 8063 00fe 22F0F852 		bic	r2, r2, #520093696
 8064              	.LVL844:
3988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 24U);
 8065              		.loc 1 3988 0
 8066 0102 1C68     		ldr	r4, [r3]
 8067 0104 5B68     		ldr	r3, [r3, #4]
 8068              	.LVL845:
 8069 0106 2343     		orrs	r3, r3, r4
 8070 0108 42EA0363 		orr	r3, r2, r3, lsl #24
 8071              	.LVL846:
3989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR1 = hrtim_eefr;
 8072              		.loc 1 3989 0
 8073 010c C1F8CC30 		str	r3, [r1, #204]
3991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8074              		.loc 1 3991 0
 8075 0110 48E0     		b	.L598
 8076              	.LVL847:
 8077              	.L609:
3994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
 8078              		.loc 1 3994 0
 8079 0112 0268     		ldr	r2, [r0]
 8080              	.LVL848:
 8081 0114 02EBC111 		add	r1, r2, r1, lsl #7
 8082              	.LVL849:
 8083 0118 D1F8D020 		ldr	r2, [r1, #208]
 8084              	.LVL850:
3995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE6FLTR | HRTIM_EEFR2_EE6LTCH);
 8085              		.loc 1 3995 0
 8086 011c 22F01F02 		bic	r2, r2, #31
 8087              	.LVL851:
3996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= (pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch);
 8088              		.loc 1 3996 0
 8089 0120 1C68     		ldr	r4, [r3]
 8090 0122 5B68     		ldr	r3, [r3, #4]
 8091              	.LVL852:
 8092 0124 2343     		orrs	r3, r3, r4
 8093 0126 1343     		orrs	r3, r3, r2
 8094              	.LVL853:
3997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
 8095              		.loc 1 3997 0
 8096 0128 C1F8D030 		str	r3, [r1, #208]
3999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8097              		.loc 1 3999 0
ARM GAS  /tmp/ccWQyto6.s 			page 292


 8098 012c 3AE0     		b	.L598
 8099              	.LVL854:
 8100              	.L610:
4002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
 8101              		.loc 1 4002 0
 8102 012e 0268     		ldr	r2, [r0]
 8103              	.LVL855:
 8104 0130 02EBC111 		add	r1, r2, r1, lsl #7
 8105              	.LVL856:
 8106 0134 D1F8D020 		ldr	r2, [r1, #208]
 8107              	.LVL857:
4003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE7FLTR | HRTIM_EEFR2_EE7LTCH);
 8108              		.loc 1 4003 0
 8109 0138 22F4F862 		bic	r2, r2, #1984
 8110              	.LVL858:
4004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 6U);
 8111              		.loc 1 4004 0
 8112 013c 1C68     		ldr	r4, [r3]
 8113 013e 5B68     		ldr	r3, [r3, #4]
 8114              	.LVL859:
 8115 0140 2343     		orrs	r3, r3, r4
 8116 0142 42EA8313 		orr	r3, r2, r3, lsl #6
 8117              	.LVL860:
4005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
 8118              		.loc 1 4005 0
 8119 0146 C1F8D030 		str	r3, [r1, #208]
4007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8120              		.loc 1 4007 0
 8121 014a 2BE0     		b	.L598
 8122              	.LVL861:
 8123              	.L607:
4010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
 8124              		.loc 1 4010 0
 8125 014c 0268     		ldr	r2, [r0]
 8126              	.LVL862:
 8127 014e 02EBC111 		add	r1, r2, r1, lsl #7
 8128              	.LVL863:
 8129 0152 D1F8D020 		ldr	r2, [r1, #208]
 8130              	.LVL864:
4011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE8FLTR | HRTIM_EEFR2_EE8LTCH);
 8131              		.loc 1 4011 0
 8132 0156 22F4F832 		bic	r2, r2, #126976
 8133              	.LVL865:
4012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 12U);
 8134              		.loc 1 4012 0
 8135 015a 1C68     		ldr	r4, [r3]
 8136 015c 5B68     		ldr	r3, [r3, #4]
 8137              	.LVL866:
 8138 015e 2343     		orrs	r3, r3, r4
 8139 0160 42EA0333 		orr	r3, r2, r3, lsl #12
 8140              	.LVL867:
4013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
 8141              		.loc 1 4013 0
 8142 0164 C1F8D030 		str	r3, [r1, #208]
4015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8143              		.loc 1 4015 0
 8144 0168 1CE0     		b	.L598
ARM GAS  /tmp/ccWQyto6.s 			page 293


 8145              	.LVL868:
 8146              	.L611:
4018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
 8147              		.loc 1 4018 0
 8148 016a 0268     		ldr	r2, [r0]
 8149              	.LVL869:
 8150 016c 02EBC111 		add	r1, r2, r1, lsl #7
 8151              	.LVL870:
 8152 0170 D1F8D020 		ldr	r2, [r1, #208]
 8153              	.LVL871:
4019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE9FLTR | HRTIM_EEFR2_EE9LTCH);
 8154              		.loc 1 4019 0
 8155 0174 22F4F802 		bic	r2, r2, #8126464
 8156              	.LVL872:
4020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 18U);
 8157              		.loc 1 4020 0
 8158 0178 1C68     		ldr	r4, [r3]
 8159 017a 5B68     		ldr	r3, [r3, #4]
 8160              	.LVL873:
 8161 017c 2343     		orrs	r3, r3, r4
 8162 017e 42EA8343 		orr	r3, r2, r3, lsl #18
 8163              	.LVL874:
4021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
 8164              		.loc 1 4021 0
 8165 0182 C1F8D030 		str	r3, [r1, #208]
4023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8166              		.loc 1 4023 0
 8167 0186 0DE0     		b	.L598
 8168              	.LVL875:
 8169              	.L612:
4026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr = hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2;
 8170              		.loc 1 4026 0
 8171 0188 0268     		ldr	r2, [r0]
 8172              	.LVL876:
 8173 018a 02EBC111 		add	r1, r2, r1, lsl #7
 8174              	.LVL877:
 8175 018e D1F8D020 		ldr	r2, [r1, #208]
 8176              	.LVL878:
4027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr &= ~(HRTIM_EEFR2_EE10FLTR | HRTIM_EEFR2_EE10LTCH);
 8177              		.loc 1 4027 0
 8178 0192 22F0F852 		bic	r2, r2, #520093696
 8179              	.LVL879:
4028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hrtim_eefr |= ((pTimerEventFilteringCfg->Filter | pTimerEventFilteringCfg->Latch) << 24U);
 8180              		.loc 1 4028 0
 8181 0196 1C68     		ldr	r4, [r3]
 8182 0198 5B68     		ldr	r3, [r3, #4]
 8183              	.LVL880:
 8184 019a 2343     		orrs	r3, r3, r4
 8185 019c 42EA0363 		orr	r3, r2, r3, lsl #24
 8186              	.LVL881:
4029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].EEFxR2 = hrtim_eefr;
 8187              		.loc 1 4029 0
 8188 01a0 C1F8D030 		str	r3, [r1, #208]
 8189              	.LVL882:
 8190              	.L598:
4036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 8191              		.loc 1 4036 0
ARM GAS  /tmp/ccWQyto6.s 			page 294


 8192 01a4 0123     		movs	r3, #1
 8193 01a6 80F8C130 		strb	r3, [r0, #193]
4039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 8194              		.loc 1 4039 0
 8195 01aa 0023     		movs	r3, #0
 8196 01ac 80F8C030 		strb	r3, [r0, #192]
4041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 8197              		.loc 1 4041 0
 8198 01b0 1846     		mov	r0, r3
 8199              	.LVL883:
 8200 01b2 02E0     		b	.L597
 8201              	.LVL884:
 8202              	.L613:
3935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 8203              		.loc 1 3935 0
 8204 01b4 0220     		movs	r0, #2
 8205              	.LVL885:
 8206 01b6 00E0     		b	.L597
 8207              	.LVL886:
 8208              	.L614:
3939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8209              		.loc 1 3939 0
 8210 01b8 0220     		movs	r0, #2
 8211              	.LVL887:
 8212              	.L597:
4042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 8213              		.loc 1 4042 0
 8214 01ba 5DF8044B 		ldr	r4, [sp], #4
 8215 01be 7047     		bx	lr
 8216              		.cfi_endproc
 8217              	.LFE171:
 8219              		.section	.text.HAL_HRTIM_DeadTimeConfig,"ax",%progbits
 8220              		.align	2
 8221              		.global	HAL_HRTIM_DeadTimeConfig
 8222              		.thumb
 8223              		.thumb_func
 8225              	HAL_HRTIM_DeadTimeConfig:
 8226              	.LFB172:
4061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 8227              		.loc 1 4061 0
 8228              		.cfi_startproc
 8229              		@ args = 0, pretend = 0, frame = 0
 8230              		@ frame_needed = 0, uses_anonymous_args = 0
 8231              		@ link register save eliminated.
 8232              	.LVL888:
 8233 0000 30B4     		push	{r4, r5}
 8234              	.LCFI54:
 8235              		.cfi_def_cfa_offset 8
 8236              		.cfi_offset 4, -8
 8237              		.cfi_offset 5, -4
4074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 8238              		.loc 1 4074 0
 8239 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 8240 0006 DBB2     		uxtb	r3, r3
 8241 0008 022B     		cmp	r3, #2
 8242 000a 2CD0     		beq	.L617
4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
ARM GAS  /tmp/ccWQyto6.s 			page 295


 8243              		.loc 1 4080 0
 8244 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 8245 0010 012B     		cmp	r3, #1
 8246 0012 2AD0     		beq	.L618
4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8247              		.loc 1 4080 0 is_stmt 0 discriminator 2
 8248 0014 0124     		movs	r4, #1
 8249 0016 80F8C040 		strb	r4, [r0, #192]
4082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 8250              		.loc 1 4082 0 is_stmt 1 discriminator 2
 8251 001a 0223     		movs	r3, #2
 8252 001c 80F8C130 		strb	r3, [r0, #193]
4084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr = hhrtim->Instance->sTimerxRegs[TimerIdx].DTxR;
 8253              		.loc 1 4084 0 discriminator 2
 8254 0020 0368     		ldr	r3, [r0]
 8255 0022 03EBC111 		add	r1, r3, r1, lsl #7
 8256              	.LVL889:
 8257 0026 D1F8B850 		ldr	r5, [r1, #184]
 8258              	.LVL890:
4087:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr &= ~(HRTIM_DTR_DTR | HRTIM_DTR_SDTR | HRTIM_DTR_DTPRSC |
 8259              		.loc 1 4087 0 discriminator 2
 8260 002a 114B     		ldr	r3, .L619
 8261 002c 2B40     		ands	r3, r3, r5
 8262              	.LVL891:
4092:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->Prescaler;
 8263              		.loc 1 4092 0 discriminator 2
 8264 002e 1568     		ldr	r5, [r2]
 8265 0030 2B43     		orrs	r3, r3, r5
 8266              	.LVL892:
4093:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingValue;
 8267              		.loc 1 4093 0 discriminator 2
 8268 0032 5568     		ldr	r5, [r2, #4]
 8269 0034 2B43     		orrs	r3, r3, r5
 8270              	.LVL893:
4094:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingSign;
 8271              		.loc 1 4094 0 discriminator 2
 8272 0036 9568     		ldr	r5, [r2, #8]
 8273 0038 2B43     		orrs	r3, r3, r5
 8274              	.LVL894:
4095:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingSignLock;
 8275              		.loc 1 4095 0 discriminator 2
 8276 003a 1569     		ldr	r5, [r2, #16]
 8277 003c 2B43     		orrs	r3, r3, r5
 8278              	.LVL895:
4096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->RisingLock;
 8279              		.loc 1 4096 0 discriminator 2
 8280 003e D568     		ldr	r5, [r2, #12]
 8281 0040 1D43     		orrs	r5, r5, r3
 8282              	.LVL896:
4097:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= (pDeadTimeCfg->FallingValue << 16U);
 8283              		.loc 1 4097 0 discriminator 2
 8284 0042 5369     		ldr	r3, [r2, #20]
 8285 0044 45EA0345 		orr	r5, r5, r3, lsl #16
 8286              	.LVL897:
4098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->FallingSign;
 8287              		.loc 1 4098 0 discriminator 2
 8288 0048 9369     		ldr	r3, [r2, #24]
ARM GAS  /tmp/ccWQyto6.s 			page 296


 8289 004a 1D43     		orrs	r5, r5, r3
 8290              	.LVL898:
4099:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->FallingSignLock;
 8291              		.loc 1 4099 0 discriminator 2
 8292 004c 136A     		ldr	r3, [r2, #32]
 8293 004e 2B43     		orrs	r3, r3, r5
 8294              	.LVL899:
4100:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_dtr |= pDeadTimeCfg->FallingLock;
 8295              		.loc 1 4100 0 discriminator 2
 8296 0050 D269     		ldr	r2, [r2, #28]
 8297              	.LVL900:
 8298 0052 1343     		orrs	r3, r3, r2
 8299              	.LVL901:
4103:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].DTxR = hrtim_dtr;
 8300              		.loc 1 4103 0 discriminator 2
 8301 0054 C1F8B830 		str	r3, [r1, #184]
4105:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 8302              		.loc 1 4105 0 discriminator 2
 8303 0058 80F8C140 		strb	r4, [r0, #193]
4108:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 8304              		.loc 1 4108 0 discriminator 2
 8305 005c 0023     		movs	r3, #0
 8306              	.LVL902:
 8307 005e 80F8C030 		strb	r3, [r0, #192]
4110:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 8308              		.loc 1 4110 0 discriminator 2
 8309 0062 1846     		mov	r0, r3
 8310              	.LVL903:
 8311 0064 02E0     		b	.L616
 8312              	.LVL904:
 8313              	.L617:
4076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 8314              		.loc 1 4076 0
 8315 0066 0220     		movs	r0, #2
 8316              	.LVL905:
 8317 0068 00E0     		b	.L616
 8318              	.LVL906:
 8319              	.L618:
4080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8320              		.loc 1 4080 0
 8321 006a 0220     		movs	r0, #2
 8322              	.LVL907:
 8323              	.L616:
4111:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 8324              		.loc 1 4111 0
 8325 006c 30BC     		pop	{r4, r5}
 8326 006e 7047     		bx	lr
 8327              	.L620:
 8328              		.align	2
 8329              	.L619:
 8330 0070 0020003C 		.word	1006641152
 8331              		.cfi_endproc
 8332              	.LFE172:
 8334              		.section	.text.HAL_HRTIM_ChopperModeConfig,"ax",%progbits
 8335              		.align	2
 8336              		.global	HAL_HRTIM_ChopperModeConfig
 8337              		.thumb
ARM GAS  /tmp/ccWQyto6.s 			page 297


 8338              		.thumb_func
 8340              	HAL_HRTIM_ChopperModeConfig:
 8341              	.LFB173:
4130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 8342              		.loc 1 4130 0
 8343              		.cfi_startproc
 8344              		@ args = 0, pretend = 0, frame = 0
 8345              		@ frame_needed = 0, uses_anonymous_args = 0
 8346              		@ link register save eliminated.
 8347              	.LVL908:
 8348 0000 30B4     		push	{r4, r5}
 8349              	.LCFI55:
 8350              		.cfi_def_cfa_offset 8
 8351              		.cfi_offset 4, -8
 8352              		.cfi_offset 5, -4
4139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 8353              		.loc 1 4139 0
 8354 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 8355 0006 DBB2     		uxtb	r3, r3
 8356 0008 022B     		cmp	r3, #2
 8357 000a 21D0     		beq	.L623
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8358              		.loc 1 4145 0
 8359 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 8360 0010 012B     		cmp	r3, #1
 8361 0012 1FD0     		beq	.L624
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8362              		.loc 1 4145 0 is_stmt 0 discriminator 2
 8363 0014 0124     		movs	r4, #1
 8364 0016 80F8C040 		strb	r4, [r0, #192]
4147:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 8365              		.loc 1 4147 0 is_stmt 1 discriminator 2
 8366 001a 0223     		movs	r3, #2
 8367 001c 80F8C130 		strb	r3, [r0, #193]
4149:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr = hhrtim->Instance->sTimerxRegs[TimerIdx].CHPxR;
 8368              		.loc 1 4149 0 discriminator 2
 8369 0020 0368     		ldr	r3, [r0]
 8370 0022 03EBC111 		add	r1, r3, r1, lsl #7
 8371              	.LVL909:
 8372 0026 D1F8D830 		ldr	r3, [r1, #216]
 8373              	.LVL910:
4152:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr &= ~(HRTIM_CHPR_CARFRQ | HRTIM_CHPR_CARDTY | HRTIM_CHPR_STRPW);
 8374              		.loc 1 4152 0 discriminator 2
 8375 002a 23F4FF63 		bic	r3, r3, #2040
 8376              	.LVL911:
 8377 002e 23F00703 		bic	r3, r3, #7
 8378              	.LVL912:
4155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr |= pChopperModeCfg->CarrierFreq;
 8379              		.loc 1 4155 0 discriminator 2
 8380 0032 1568     		ldr	r5, [r2]
 8381 0034 2B43     		orrs	r3, r3, r5
 8382              	.LVL913:
4156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr |= (pChopperModeCfg->DutyCycle);
 8383              		.loc 1 4156 0 discriminator 2
 8384 0036 5568     		ldr	r5, [r2, #4]
 8385 0038 1D43     		orrs	r5, r5, r3
 8386              	.LVL914:
ARM GAS  /tmp/ccWQyto6.s 			page 298


4157:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_chpr |= (pChopperModeCfg->StartPulse);
 8387              		.loc 1 4157 0 discriminator 2
 8388 003a 9368     		ldr	r3, [r2, #8]
 8389 003c 1D43     		orrs	r5, r5, r3
 8390              	.LVL915:
4160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sTimerxRegs[TimerIdx].CHPxR = hrtim_chpr;
 8391              		.loc 1 4160 0 discriminator 2
 8392 003e C1F8D850 		str	r5, [r1, #216]
4162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 8393              		.loc 1 4162 0 discriminator 2
 8394 0042 80F8C140 		strb	r4, [r0, #193]
4165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 8395              		.loc 1 4165 0 discriminator 2
 8396 0046 0023     		movs	r3, #0
 8397 0048 80F8C030 		strb	r3, [r0, #192]
4167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 8398              		.loc 1 4167 0 discriminator 2
 8399 004c 1846     		mov	r0, r3
 8400              	.LVL916:
 8401 004e 02E0     		b	.L622
 8402              	.LVL917:
 8403              	.L623:
4141:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 8404              		.loc 1 4141 0
 8405 0050 0220     		movs	r0, #2
 8406              	.LVL918:
 8407 0052 00E0     		b	.L622
 8408              	.LVL919:
 8409              	.L624:
4145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8410              		.loc 1 4145 0
 8411 0054 0220     		movs	r0, #2
 8412              	.LVL920:
 8413              	.L622:
4168:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 8414              		.loc 1 4168 0
 8415 0056 30BC     		pop	{r4, r5}
 8416 0058 7047     		bx	lr
 8417              		.cfi_endproc
 8418              	.LFE173:
 8420 005a 00BF     		.section	.text.HAL_HRTIM_BurstDMAConfig,"ax",%progbits
 8421              		.align	2
 8422              		.global	HAL_HRTIM_BurstDMAConfig
 8423              		.thumb
 8424              		.thumb_func
 8426              	HAL_HRTIM_BurstDMAConfig:
 8427              	.LFB174:
4210:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 8428              		.loc 1 4210 0
 8429              		.cfi_startproc
 8430              		@ args = 0, pretend = 0, frame = 0
 8431              		@ frame_needed = 0, uses_anonymous_args = 0
 8432              		@ link register save eliminated.
 8433              	.LVL921:
4214:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 8434              		.loc 1 4214 0
 8435 0000 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
ARM GAS  /tmp/ccWQyto6.s 			page 299


 8436 0004 DBB2     		uxtb	r3, r3
 8437 0006 022B     		cmp	r3, #2
 8438 0008 2FD0     		beq	.L635
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8439              		.loc 1 4220 0
 8440 000a 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 8441 000e 012B     		cmp	r3, #1
 8442 0010 2DD0     		beq	.L636
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8443              		.loc 1 4220 0 is_stmt 0 discriminator 2
 8444 0012 0123     		movs	r3, #1
 8445 0014 80F8C030 		strb	r3, [r0, #192]
4222:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 8446              		.loc 1 4222 0 is_stmt 1 discriminator 2
 8447 0018 0223     		movs	r3, #2
 8448 001a 80F8C130 		strb	r3, [r0, #193]
4225:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (TimerIdx) 
 8449              		.loc 1 4225 0 discriminator 2
 8450 001e 0529     		cmp	r1, #5
 8451 0020 1BD8     		bhi	.L627
 8452 0022 DFE801F0 		tbb	[pc, r1]
 8453              	.L629:
 8454 0026 03       		.byte	(.L628-.L629)/2
 8455 0027 07       		.byte	(.L630-.L629)/2
 8456 0028 0B       		.byte	(.L631-.L629)/2
 8457 0029 0F       		.byte	(.L632-.L629)/2
 8458 002a 13       		.byte	(.L633-.L629)/2
 8459 002b 17       		.byte	(.L634-.L629)/2
 8460              		.p2align 1
 8461              	.L628:
4229:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTAUPR = RegistersToUpdate;
 8462              		.loc 1 4229 0
 8463 002c 0368     		ldr	r3, [r0]
 8464 002e C3F8DC23 		str	r2, [r3, #988]
4231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8465              		.loc 1 4231 0
 8466 0032 12E0     		b	.L627
 8467              	.L630:
4234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTBUPR = RegistersToUpdate;
 8468              		.loc 1 4234 0
 8469 0034 0368     		ldr	r3, [r0]
 8470 0036 C3F8E023 		str	r2, [r3, #992]
4236:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8471              		.loc 1 4236 0
 8472 003a 0EE0     		b	.L627
 8473              	.L631:
4239:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTCUPR = RegistersToUpdate;
 8474              		.loc 1 4239 0
 8475 003c 0368     		ldr	r3, [r0]
 8476 003e C3F8E423 		str	r2, [r3, #996]
4241:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8477              		.loc 1 4241 0
 8478 0042 0AE0     		b	.L627
 8479              	.L632:
4244:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTDUPR = RegistersToUpdate;
 8480              		.loc 1 4244 0
 8481 0044 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccWQyto6.s 			page 300


 8482 0046 C3F8E823 		str	r2, [r3, #1000]
4246:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8483              		.loc 1 4246 0
 8484 004a 06E0     		b	.L627
 8485              	.L633:
4249:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDTEUPR = RegistersToUpdate;
 8486              		.loc 1 4249 0
 8487 004c 0368     		ldr	r3, [r0]
 8488 004e C3F8EC23 		str	r2, [r3, #1004]
4251:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8489              		.loc 1 4251 0
 8490 0052 02E0     		b	.L627
 8491              	.L634:
4254:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sCommonRegs.BDMUPR = RegistersToUpdate;
 8492              		.loc 1 4254 0
 8493 0054 0368     		ldr	r3, [r0]
 8494 0056 C3F8D823 		str	r2, [r3, #984]
 8495              	.L627:
4261:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 8496              		.loc 1 4261 0
 8497 005a 0123     		movs	r3, #1
 8498 005c 80F8C130 		strb	r3, [r0, #193]
4264:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 8499              		.loc 1 4264 0
 8500 0060 0023     		movs	r3, #0
 8501 0062 80F8C030 		strb	r3, [r0, #192]
4266:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 8502              		.loc 1 4266 0
 8503 0066 1846     		mov	r0, r3
 8504              	.LVL922:
 8505 0068 7047     		bx	lr
 8506              	.LVL923:
 8507              	.L635:
4216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 8508              		.loc 1 4216 0
 8509 006a 0220     		movs	r0, #2
 8510              	.LVL924:
 8511 006c 7047     		bx	lr
 8512              	.LVL925:
 8513              	.L636:
4220:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8514              		.loc 1 4220 0
 8515 006e 0220     		movs	r0, #2
 8516              	.LVL926:
4267:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 8517              		.loc 1 4267 0
 8518 0070 7047     		bx	lr
 8519              		.cfi_endproc
 8520              	.LFE174:
 8522 0072 00BF     		.section	.text.HAL_HRTIM_WaveformCompareConfig,"ax",%progbits
 8523              		.align	2
 8524              		.global	HAL_HRTIM_WaveformCompareConfig
 8525              		.thumb
 8526              		.thumb_func
 8528              	HAL_HRTIM_WaveformCompareConfig:
 8529              	.LFB175:
4300:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
ARM GAS  /tmp/ccWQyto6.s 			page 301


 8530              		.loc 1 4300 0
 8531              		.cfi_startproc
 8532              		@ args = 0, pretend = 0, frame = 0
 8533              		@ frame_needed = 0, uses_anonymous_args = 0
 8534              		@ link register save eliminated.
 8535              	.LVL927:
 8536 0000 70B4     		push	{r4, r5, r6}
 8537              	.LCFI56:
 8538              		.cfi_def_cfa_offset 12
 8539              		.cfi_offset 4, -12
 8540              		.cfi_offset 5, -8
 8541              		.cfi_offset 6, -4
4304:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 8542              		.loc 1 4304 0
 8543 0002 90F8C140 		ldrb	r4, [r0, #193]	@ zero_extendqisi2
 8544 0006 E4B2     		uxtb	r4, r4
 8545 0008 022C     		cmp	r4, #2
 8546 000a 00F09880 		beq	.L653
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8547              		.loc 1 4310 0
 8548 000e 90F8C040 		ldrb	r4, [r0, #192]	@ zero_extendqisi2
 8549 0012 012C     		cmp	r4, #1
 8550 0014 00F09580 		beq	.L654
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8551              		.loc 1 4310 0 is_stmt 0 discriminator 2
 8552 0018 0124     		movs	r4, #1
 8553 001a 80F8C040 		strb	r4, [r0, #192]
4312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 8554              		.loc 1 4312 0 is_stmt 1 discriminator 2
 8555 001e 0224     		movs	r4, #2
 8556 0020 80F8C140 		strb	r4, [r0, #193]
4315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 8557              		.loc 1 4315 0 discriminator 2
 8558 0024 0529     		cmp	r1, #5
 8559 0026 18D1     		bne	.L639
4317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     switch (CompareUnit)
 8560              		.loc 1 4317 0
 8561 0028 013A     		subs	r2, r2, #1
 8562              	.LVL928:
 8563 002a 072A     		cmp	r2, #7
 8564 002c 7FD8     		bhi	.L640
 8565 002e DFE802F0 		tbb	[pc, r2]
 8566              	.LVL929:
 8567              	.L642:
 8568 0032 04       		.byte	(.L641-.L642)/2
 8569 0033 08       		.byte	(.L643-.L642)/2
 8570 0034 7E       		.byte	(.L640-.L642)/2
 8571 0035 0C       		.byte	(.L644-.L642)/2
 8572 0036 7E       		.byte	(.L640-.L642)/2
 8573 0037 7E       		.byte	(.L640-.L642)/2
 8574 0038 7E       		.byte	(.L640-.L642)/2
 8575 0039 10       		.byte	(.L645-.L642)/2
 8576              		.p2align 1
 8577              	.L641:
4321:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP1R = pCompareCfg->CompareValue;
 8578              		.loc 1 4321 0
 8579 003a 0268     		ldr	r2, [r0]
ARM GAS  /tmp/ccWQyto6.s 			page 302


 8580              	.LVL930:
 8581 003c 1B68     		ldr	r3, [r3]
 8582              	.LVL931:
 8583 003e D361     		str	r3, [r2, #28]
4323:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
 8584              		.loc 1 4323 0
 8585 0040 75E0     		b	.L640
 8586              	.LVL932:
 8587              	.L643:
4326:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP2R = pCompareCfg->CompareValue;
 8588              		.loc 1 4326 0
 8589 0042 0268     		ldr	r2, [r0]
 8590 0044 1B68     		ldr	r3, [r3]
 8591              	.LVL933:
 8592 0046 5362     		str	r3, [r2, #36]
4328:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
 8593              		.loc 1 4328 0
 8594 0048 71E0     		b	.L640
 8595              	.LVL934:
 8596              	.L644:
4331:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP3R = pCompareCfg->CompareValue;
 8597              		.loc 1 4331 0
 8598 004a 0268     		ldr	r2, [r0]
 8599 004c 1B68     		ldr	r3, [r3]
 8600              	.LVL935:
 8601 004e 9362     		str	r3, [r2, #40]
4333:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
 8602              		.loc 1 4333 0
 8603 0050 6DE0     		b	.L640
 8604              	.LVL936:
 8605              	.L645:
4336:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sMasterRegs.MCMP4R = pCompareCfg->CompareValue;
 8606              		.loc 1 4336 0
 8607 0052 0268     		ldr	r2, [r0]
 8608 0054 1B68     		ldr	r3, [r3]
 8609              	.LVL937:
 8610 0056 D362     		str	r3, [r2, #44]
4338:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         break;
 8611              		.loc 1 4338 0
 8612 0058 69E0     		b	.L640
 8613              	.LVL938:
 8614              	.L639:
4345:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     switch (CompareUnit)
 8615              		.loc 1 4345 0
 8616 005a 013A     		subs	r2, r2, #1
 8617              	.LVL939:
 8618 005c 072A     		cmp	r2, #7
 8619 005e 66D8     		bhi	.L640
 8620 0060 DFE802F0 		tbb	[pc, r2]
 8621              	.L647:
 8622 0064 04       		.byte	(.L646-.L647)/2
 8623 0065 0B       		.byte	(.L648-.L647)/2
 8624 0066 65       		.byte	(.L640-.L647)/2
 8625 0067 35       		.byte	(.L649-.L647)/2
 8626 0068 65       		.byte	(.L640-.L647)/2
 8627 0069 65       		.byte	(.L640-.L647)/2
 8628 006a 65       		.byte	(.L640-.L647)/2
ARM GAS  /tmp/ccWQyto6.s 			page 303


 8629 006b 3C       		.byte	(.L650-.L647)/2
 8630              		.p2align 1
 8631              	.L646:
4350:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP1xR = pCompareCfg->CompareValue;
 8632              		.loc 1 4350 0
 8633 006c 0268     		ldr	r2, [r0]
 8634              	.LVL940:
 8635 006e 1B68     		ldr	r3, [r3]
 8636              	.LVL941:
 8637 0070 02EBC112 		add	r2, r2, r1, lsl #7
 8638 0074 C2F89C30 		str	r3, [r2, #156]
4352:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 8639              		.loc 1 4352 0
 8640 0078 59E0     		b	.L640
 8641              	.LVL942:
 8642              	.L648:
4359:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP2xR = pCompareCfg->CompareValue;
 8643              		.loc 1 4359 0
 8644 007a 0468     		ldr	r4, [r0]
 8645 007c 1A68     		ldr	r2, [r3]
 8646 007e 04EBC114 		add	r4, r4, r1, lsl #7
 8647 0082 C4F8A420 		str	r2, [r4, #164]
4361:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         if (pCompareCfg->AutoDelayedMode != HRTIM_AUTODELAYEDMODE_REGULAR)
 8648              		.loc 1 4361 0
 8649 0086 5A68     		ldr	r2, [r3, #4]
 8650 0088 002A     		cmp	r2, #0
 8651 008a 50D0     		beq	.L640
4366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR &= ~HRTIM_TIMCR_DELCMP2;
 8652              		.loc 1 4366 0
 8653 008c 0468     		ldr	r4, [r0]
 8654 008e 4A1C     		adds	r2, r1, #1
 8655 0090 D201     		lsls	r2, r2, #7
 8656 0092 A558     		ldr	r5, [r4, r2]
 8657 0094 25F44055 		bic	r5, r5, #12288
 8658 0098 A550     		str	r5, [r4, r2]
4367:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR |= pCompareCfg->AutoDelayedMode;
 8659              		.loc 1 4367 0
 8660 009a 0468     		ldr	r4, [r0]
 8661 009c A658     		ldr	r6, [r4, r2]
 8662 009e 5D68     		ldr	r5, [r3, #4]
 8663 00a0 3543     		orrs	r5, r5, r6
 8664 00a2 A550     		str	r5, [r4, r2]
4370:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP1)
 8665              		.loc 1 4370 0
 8666 00a4 5A68     		ldr	r2, [r3, #4]
 8667 00a6 B2F5005F 		cmp	r2, #8192
 8668 00aa 06D1     		bne	.L651
4372:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP1xR = pCompareCfg->AutoDelayedTimeout;
 8669              		.loc 1 4372 0
 8670 00ac 0268     		ldr	r2, [r0]
 8671 00ae 9C68     		ldr	r4, [r3, #8]
 8672 00b0 02EBC113 		add	r3, r2, r1, lsl #7
 8673              	.LVL943:
 8674 00b4 C3F89C40 		str	r4, [r3, #156]
 8675 00b8 39E0     		b	.L640
 8676              	.LVL944:
 8677              	.L651:
ARM GAS  /tmp/ccWQyto6.s 			page 304


4374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           else if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP3)
 8678              		.loc 1 4374 0
 8679 00ba B2F5405F 		cmp	r2, #12288
 8680 00be 36D1     		bne	.L640
4376:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP3xR = pCompareCfg->AutoDelayedTimeout;
 8681              		.loc 1 4376 0
 8682 00c0 0268     		ldr	r2, [r0]
 8683 00c2 9B68     		ldr	r3, [r3, #8]
 8684              	.LVL945:
 8685 00c4 02EBC112 		add	r2, r2, r1, lsl #7
 8686 00c8 C2F8A830 		str	r3, [r2, #168]
 8687 00cc 2FE0     		b	.L640
 8688              	.LVL946:
 8689              	.L649:
4384:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP3xR = pCompareCfg->CompareValue;
 8690              		.loc 1 4384 0
 8691 00ce 0268     		ldr	r2, [r0]
 8692 00d0 1B68     		ldr	r3, [r3]
 8693              	.LVL947:
 8694 00d2 02EBC112 		add	r2, r2, r1, lsl #7
 8695 00d6 C2F8A830 		str	r3, [r2, #168]
4386:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       break;
 8696              		.loc 1 4386 0
 8697 00da 28E0     		b	.L640
 8698              	.LVL948:
 8699              	.L650:
4393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].CMP4xR = pCompareCfg->CompareValue;
 8700              		.loc 1 4393 0
 8701 00dc 0468     		ldr	r4, [r0]
 8702 00de 1A68     		ldr	r2, [r3]
 8703 00e0 04EBC114 		add	r4, r4, r1, lsl #7
 8704 00e4 C4F8AC20 		str	r2, [r4, #172]
4395:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         if (pCompareCfg->AutoDelayedMode != HRTIM_AUTODELAYEDMODE_REGULAR)
 8705              		.loc 1 4395 0
 8706 00e8 5A68     		ldr	r2, [r3, #4]
 8707 00ea 02B3     		cbz	r2, .L640
4400:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR &= ~HRTIM_TIMCR_DELCMP4;
 8708              		.loc 1 4400 0
 8709 00ec 0468     		ldr	r4, [r0]
 8710 00ee 4A1C     		adds	r2, r1, #1
 8711 00f0 D201     		lsls	r2, r2, #7
 8712 00f2 A558     		ldr	r5, [r4, r2]
 8713 00f4 25F44045 		bic	r5, r5, #49152
 8714 00f8 A550     		str	r5, [r4, r2]
4401:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxCR |= (pCompareCfg->AutoDelayedMode << 2U);
 8715              		.loc 1 4401 0
 8716 00fa 0468     		ldr	r4, [r0]
 8717 00fc A658     		ldr	r6, [r4, r2]
 8718 00fe 5D68     		ldr	r5, [r3, #4]
 8719 0100 46EA8505 		orr	r5, r6, r5, lsl #2
 8720 0104 A550     		str	r5, [r4, r2]
4404:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP1)
 8721              		.loc 1 4404 0
 8722 0106 5A68     		ldr	r2, [r3, #4]
 8723 0108 B2F5005F 		cmp	r2, #8192
 8724 010c 06D1     		bne	.L652
4406:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP1xR = pCompareCfg->AutoDelayedTimeout;
ARM GAS  /tmp/ccWQyto6.s 			page 305


 8725              		.loc 1 4406 0
 8726 010e 0268     		ldr	r2, [r0]
 8727 0110 9C68     		ldr	r4, [r3, #8]
 8728 0112 02EBC113 		add	r3, r2, r1, lsl #7
 8729              	.LVL949:
 8730 0116 C3F89C40 		str	r4, [r3, #156]
 8731 011a 08E0     		b	.L640
 8732              	.LVL950:
 8733              	.L652:
4408:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****           else if (pCompareCfg->AutoDelayedMode == HRTIM_AUTODELAYEDMODE_AUTODELAYED_TIMEOUTCMP3)
 8734              		.loc 1 4408 0
 8735 011c B2F5405F 		cmp	r2, #12288
 8736 0120 05D1     		bne	.L640
4410:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****             hhrtim->Instance->sTimerxRegs[TimerIdx].CMP3xR = pCompareCfg->AutoDelayedTimeout;
 8737              		.loc 1 4410 0
 8738 0122 0268     		ldr	r2, [r0]
 8739 0124 9B68     		ldr	r3, [r3, #8]
 8740              	.LVL951:
 8741 0126 02EBC112 		add	r2, r2, r1, lsl #7
 8742 012a C2F8A830 		str	r3, [r2, #168]
 8743              	.LVL952:
 8744              	.L640:
4419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 8745              		.loc 1 4419 0
 8746 012e 0123     		movs	r3, #1
 8747 0130 80F8C130 		strb	r3, [r0, #193]
4422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 8748              		.loc 1 4422 0
 8749 0134 0023     		movs	r3, #0
 8750 0136 80F8C030 		strb	r3, [r0, #192]
4424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 8751              		.loc 1 4424 0
 8752 013a 1846     		mov	r0, r3
 8753              	.LVL953:
 8754 013c 02E0     		b	.L638
 8755              	.LVL954:
 8756              	.L653:
4306:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 8757              		.loc 1 4306 0
 8758 013e 0220     		movs	r0, #2
 8759              	.LVL955:
 8760 0140 00E0     		b	.L638
 8761              	.LVL956:
 8762              	.L654:
4310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8763              		.loc 1 4310 0
 8764 0142 0220     		movs	r0, #2
 8765              	.LVL957:
 8766              	.L638:
4425:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 8767              		.loc 1 4425 0
 8768 0144 70BC     		pop	{r4, r5, r6}
 8769 0146 7047     		bx	lr
 8770              		.cfi_endproc
 8771              	.LFE175:
 8773              		.section	.text.HAL_HRTIM_WaveformCaptureConfig,"ax",%progbits
 8774              		.align	2
ARM GAS  /tmp/ccWQyto6.s 			page 306


 8775              		.global	HAL_HRTIM_WaveformCaptureConfig
 8776              		.thumb
 8777              		.thumb_func
 8779              	HAL_HRTIM_WaveformCaptureConfig:
 8780              	.LFB176:
4449:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 8781              		.loc 1 4449 0
 8782              		.cfi_startproc
 8783              		@ args = 0, pretend = 0, frame = 0
 8784              		@ frame_needed = 0, uses_anonymous_args = 0
 8785              		@ link register save eliminated.
 8786              	.LVL958:
 8787 0000 10B4     		push	{r4}
 8788              	.LCFI57:
 8789              		.cfi_def_cfa_offset 4
 8790              		.cfi_offset 4, -4
4453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 8791              		.loc 1 4453 0
 8792 0002 90F8C140 		ldrb	r4, [r0, #193]	@ zero_extendqisi2
 8793 0006 E4B2     		uxtb	r4, r4
 8794 0008 022C     		cmp	r4, #2
 8795 000a 23D0     		beq	.L660
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8796              		.loc 1 4459 0
 8797 000c 90F8C040 		ldrb	r4, [r0, #192]	@ zero_extendqisi2
 8798 0010 012C     		cmp	r4, #1
 8799 0012 21D0     		beq	.L661
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8800              		.loc 1 4459 0 is_stmt 0 discriminator 2
 8801 0014 0124     		movs	r4, #1
 8802 0016 80F8C040 		strb	r4, [r0, #192]
4461:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 8803              		.loc 1 4461 0 is_stmt 1 discriminator 2
 8804 001a 0224     		movs	r4, #2
 8805 001c 80F8C140 		strb	r4, [r0, #193]
4464:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureUnit)
 8806              		.loc 1 4464 0 discriminator 2
 8807 0020 012A     		cmp	r2, #1
 8808 0022 02D0     		beq	.L658
 8809 0024 A242     		cmp	r2, r4
 8810 0026 07D0     		beq	.L659
 8811 0028 0CE0     		b	.L657
 8812              	.L658:
4468:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR = pCaptureCfg->Trigger;
 8813              		.loc 1 4468 0
 8814 002a 0268     		ldr	r2, [r0]
 8815              	.LVL959:
 8816 002c 1B68     		ldr	r3, [r3]
 8817              	.LVL960:
 8818 002e 02EBC112 		add	r2, r2, r1, lsl #7
 8819 0032 C2F8DC30 		str	r3, [r2, #220]
4470:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 8820              		.loc 1 4470 0
 8821 0036 05E0     		b	.L657
 8822              	.LVL961:
 8823              	.L659:
4473:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR = pCaptureCfg->Trigger;
ARM GAS  /tmp/ccWQyto6.s 			page 307


 8824              		.loc 1 4473 0
 8825 0038 0268     		ldr	r2, [r0]
 8826              	.LVL962:
 8827 003a 1B68     		ldr	r3, [r3]
 8828              	.LVL963:
 8829 003c 02EBC111 		add	r1, r2, r1, lsl #7
 8830              	.LVL964:
 8831 0040 C1F8E030 		str	r3, [r1, #224]
 8832              	.L657:
4480:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 8833              		.loc 1 4480 0
 8834 0044 0123     		movs	r3, #1
 8835 0046 80F8C130 		strb	r3, [r0, #193]
4483:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 8836              		.loc 1 4483 0
 8837 004a 0023     		movs	r3, #0
 8838 004c 80F8C030 		strb	r3, [r0, #192]
4485:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 8839              		.loc 1 4485 0
 8840 0050 1846     		mov	r0, r3
 8841              	.LVL965:
 8842 0052 02E0     		b	.L656
 8843              	.LVL966:
 8844              	.L660:
4455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 8845              		.loc 1 4455 0
 8846 0054 0220     		movs	r0, #2
 8847              	.LVL967:
 8848 0056 00E0     		b	.L656
 8849              	.LVL968:
 8850              	.L661:
4459:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8851              		.loc 1 4459 0
 8852 0058 0220     		movs	r0, #2
 8853              	.LVL969:
 8854              	.L656:
4486:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 8855              		.loc 1 4486 0
 8856 005a 5DF8044B 		ldr	r4, [sp], #4
 8857 005e 7047     		bx	lr
 8858              		.cfi_endproc
 8859              	.LFE176:
 8861              		.section	.text.HAL_HRTIM_WaveformOutputConfig,"ax",%progbits
 8862              		.align	2
 8863              		.global	HAL_HRTIM_WaveformOutputConfig
 8864              		.thumb
 8865              		.thumb_func
 8867              	HAL_HRTIM_WaveformOutputConfig:
 8868              	.LFB177:
4519:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 8869              		.loc 1 4519 0
 8870              		.cfi_startproc
 8871              		@ args = 0, pretend = 0, frame = 0
 8872              		@ frame_needed = 0, uses_anonymous_args = 0
 8873              	.LVL970:
 8874 0000 38B5     		push	{r3, r4, r5, lr}
 8875              	.LCFI58:
ARM GAS  /tmp/ccWQyto6.s 			page 308


 8876              		.cfi_def_cfa_offset 16
 8877              		.cfi_offset 3, -16
 8878              		.cfi_offset 4, -12
 8879              		.cfi_offset 5, -8
 8880              		.cfi_offset 14, -4
 8881 0002 0446     		mov	r4, r0
4529:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 8882              		.loc 1 4529 0
 8883 0004 90F8C100 		ldrb	r0, [r0, #193]	@ zero_extendqisi2
 8884              	.LVL971:
 8885 0008 C0B2     		uxtb	r0, r0
 8886 000a 0228     		cmp	r0, #2
 8887 000c 12D0     		beq	.L664
4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8888              		.loc 1 4535 0
 8889 000e 94F8C000 		ldrb	r0, [r4, #192]	@ zero_extendqisi2
 8890 0012 0128     		cmp	r0, #1
 8891 0014 10D0     		beq	.L665
4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8892              		.loc 1 4535 0 is_stmt 0 discriminator 2
 8893 0016 0125     		movs	r5, #1
 8894 0018 84F8C050 		strb	r5, [r4, #192]
4537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 8895              		.loc 1 4537 0 is_stmt 1 discriminator 2
 8896 001c 0220     		movs	r0, #2
 8897 001e 84F8C100 		strb	r0, [r4, #193]
4540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_OutputConfig(hhrtim,
 8898              		.loc 1 4540 0 discriminator 2
 8899 0022 2046     		mov	r0, r4
 8900 0024 FFF7FEFF 		bl	HRTIM_OutputConfig
 8901              	.LVL972:
4545:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 8902              		.loc 1 4545 0 discriminator 2
 8903 0028 84F8C150 		strb	r5, [r4, #193]
4548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 8904              		.loc 1 4548 0 discriminator 2
 8905 002c 0020     		movs	r0, #0
 8906 002e 84F8C000 		strb	r0, [r4, #192]
4550:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 8907              		.loc 1 4550 0 discriminator 2
 8908 0032 38BD     		pop	{r3, r4, r5, pc}
 8909              	.LVL973:
 8910              	.L664:
4531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 8911              		.loc 1 4531 0
 8912 0034 0220     		movs	r0, #2
 8913 0036 38BD     		pop	{r3, r4, r5, pc}
 8914              	.LVL974:
 8915              	.L665:
4535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8916              		.loc 1 4535 0
 8917 0038 0220     		movs	r0, #2
4551:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 8918              		.loc 1 4551 0
 8919 003a 38BD     		pop	{r3, r4, r5, pc}
 8920              		.cfi_endproc
 8921              	.LFE177:
ARM GAS  /tmp/ccWQyto6.s 			page 309


 8923              		.section	.text.HAL_HRTIM_WaveformSetOutputLevel,"ax",%progbits
 8924              		.align	2
 8925              		.global	HAL_HRTIM_WaveformSetOutputLevel
 8926              		.thumb
 8927              		.thumb_func
 8929              	HAL_HRTIM_WaveformSetOutputLevel:
 8930              	.LFB178:
4587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 8931              		.loc 1 4587 0
 8932              		.cfi_startproc
 8933              		@ args = 0, pretend = 0, frame = 0
 8934              		@ frame_needed = 0, uses_anonymous_args = 0
 8935              		@ link register save eliminated.
 8936              	.LVL975:
 8937 0000 10B4     		push	{r4}
 8938              	.LCFI59:
 8939              		.cfi_def_cfa_offset 4
 8940              		.cfi_offset 4, -4
4592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 8941              		.loc 1 4592 0
 8942 0002 90F8C140 		ldrb	r4, [r0, #193]	@ zero_extendqisi2
 8943 0006 E4B2     		uxtb	r4, r4
 8944 0008 022C     		cmp	r4, #2
 8945 000a 59D0     		beq	.L676
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8946              		.loc 1 4598 0
 8947 000c 90F8C040 		ldrb	r4, [r0, #192]	@ zero_extendqisi2
 8948 0010 012C     		cmp	r4, #1
 8949 0012 57D0     		beq	.L677
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 8950              		.loc 1 4598 0 is_stmt 0 discriminator 2
 8951 0014 0124     		movs	r4, #1
 8952 0016 80F8C040 		strb	r4, [r0, #192]
4600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 8953              		.loc 1 4600 0 is_stmt 1 discriminator 2
 8954 001a 0224     		movs	r4, #2
 8955 001c 80F8C140 		strb	r4, [r0, #193]
4603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
 8956              		.loc 1 4603 0 discriminator 2
 8957 0020 102A     		cmp	r2, #16
 8958 0022 1AD0     		beq	.L669
 8959 0024 0AD8     		bhi	.L670
 8960 0026 A242     		cmp	r2, r4
 8961 0028 2DD0     		beq	.L671
 8962 002a 02D8     		bhi	.L672
 8963 002c 012A     		cmp	r2, #1
 8964 002e 3FD1     		bne	.L668
 8965 0030 13E0     		b	.L669
 8966              	.L672:
 8967 0032 042A     		cmp	r2, #4
 8968 0034 11D0     		beq	.L669
 8969 0036 082A     		cmp	r2, #8
 8970 0038 3AD1     		bne	.L668
 8971 003a 24E0     		b	.L671
 8972              	.L670:
 8973 003c 802A     		cmp	r2, #128
 8974 003e 22D0     		beq	.L671
ARM GAS  /tmp/ccWQyto6.s 			page 310


 8975 0040 04D8     		bhi	.L673
 8976 0042 202A     		cmp	r2, #32
 8977 0044 1FD0     		beq	.L671
 8978 0046 402A     		cmp	r2, #64
 8979 0048 32D1     		bne	.L668
 8980 004a 06E0     		b	.L669
 8981              	.L673:
 8982 004c B2F5807F 		cmp	r2, #256
 8983 0050 03D0     		beq	.L669
 8984 0052 B2F5007F 		cmp	r2, #512
 8985 0056 2BD1     		bne	.L668
 8986 0058 15E0     		b	.L671
 8987              	.L669:
4611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (OutputLevel == HRTIM_OUTPUTLEVEL_ACTIVE)
 8988              		.loc 1 4611 0
 8989 005a 012B     		cmp	r3, #1
 8990 005c 09D1     		bne	.L674
4614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].SETx1R |= HRTIM_SET1R_SST;
 8991              		.loc 1 4614 0
 8992 005e 0368     		ldr	r3, [r0]
 8993              	.LVL976:
 8994 0060 03EBC111 		add	r1, r3, r1, lsl #7
 8995              	.LVL977:
 8996 0064 D1F8BC30 		ldr	r3, [r1, #188]
 8997 0068 43F00103 		orr	r3, r3, #1
 8998 006c C1F8BC30 		str	r3, [r1, #188]
 8999 0070 1EE0     		b	.L668
 9000              	.LVL978:
 9001              	.L674:
4619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx1R |= HRTIM_RST1R_SRT;
 9002              		.loc 1 4619 0
 9003 0072 0368     		ldr	r3, [r0]
 9004              	.LVL979:
 9005 0074 03EBC111 		add	r1, r3, r1, lsl #7
 9006              	.LVL980:
 9007 0078 D1F8C030 		ldr	r3, [r1, #192]
 9008 007c 43F00103 		orr	r3, r3, #1
 9009 0080 C1F8C030 		str	r3, [r1, #192]
 9010 0084 14E0     		b	.L668
 9011              	.LVL981:
 9012              	.L671:
4629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if (OutputLevel == HRTIM_OUTPUTLEVEL_ACTIVE)
 9013              		.loc 1 4629 0
 9014 0086 012B     		cmp	r3, #1
 9015 0088 09D1     		bne	.L675
4632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].SETx2R |= HRTIM_SET2R_SST;
 9016              		.loc 1 4632 0
 9017 008a 0368     		ldr	r3, [r0]
 9018              	.LVL982:
 9019 008c 03EBC111 		add	r1, r3, r1, lsl #7
 9020              	.LVL983:
 9021 0090 D1F8C430 		ldr	r3, [r1, #196]
 9022 0094 43F00103 		orr	r3, r3, #1
 9023 0098 C1F8C430 		str	r3, [r1, #196]
 9024 009c 08E0     		b	.L668
 9025              	.LVL984:
 9026              	.L675:
ARM GAS  /tmp/ccWQyto6.s 			page 311


4637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         hhrtim->Instance->sTimerxRegs[TimerIdx].RSTx2R |= HRTIM_RST2R_SRT;
 9027              		.loc 1 4637 0
 9028 009e 0368     		ldr	r3, [r0]
 9029              	.LVL985:
 9030 00a0 03EBC111 		add	r1, r3, r1, lsl #7
 9031              	.LVL986:
 9032 00a4 D1F8C830 		ldr	r3, [r1, #200]
 9033 00a8 43F00103 		orr	r3, r3, #1
 9034 00ac C1F8C830 		str	r3, [r1, #200]
 9035              	.L668:
4645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 9036              		.loc 1 4645 0
 9037 00b0 0123     		movs	r3, #1
 9038 00b2 80F8C130 		strb	r3, [r0, #193]
4648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 9039              		.loc 1 4648 0
 9040 00b6 0023     		movs	r3, #0
 9041 00b8 80F8C030 		strb	r3, [r0, #192]
4650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 9042              		.loc 1 4650 0
 9043 00bc 1846     		mov	r0, r3
 9044              	.LVL987:
 9045 00be 02E0     		b	.L667
 9046              	.LVL988:
 9047              	.L676:
4594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 9048              		.loc 1 4594 0
 9049 00c0 0220     		movs	r0, #2
 9050              	.LVL989:
 9051 00c2 00E0     		b	.L667
 9052              	.LVL990:
 9053              	.L677:
4598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9054              		.loc 1 4598 0
 9055 00c4 0220     		movs	r0, #2
 9056              	.LVL991:
 9057              	.L667:
4651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9058              		.loc 1 4651 0
 9059 00c6 5DF8044B 		ldr	r4, [sp], #4
 9060 00ca 7047     		bx	lr
 9061              		.cfi_endproc
 9062              	.LFE178:
 9064              		.section	.text.HAL_HRTIM_WaveformOutputStart,"ax",%progbits
 9065              		.align	2
 9066              		.global	HAL_HRTIM_WaveformOutputStart
 9067              		.thumb
 9068              		.thumb_func
 9070              	HAL_HRTIM_WaveformOutputStart:
 9071              	.LFB179:
4673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9072              		.loc 1 4673 0
 9073              		.cfi_startproc
 9074              		@ args = 0, pretend = 0, frame = 0
 9075              		@ frame_needed = 0, uses_anonymous_args = 0
 9076              		@ link register save eliminated.
 9077              	.LVL992:
ARM GAS  /tmp/ccWQyto6.s 			page 312


 9078 0000 10B4     		push	{r4}
 9079              	.LCFI60:
 9080              		.cfi_def_cfa_offset 4
 9081              		.cfi_offset 4, -4
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9082              		.loc 1 4678 0
 9083 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9084 0006 012B     		cmp	r3, #1
 9085 0008 12D0     		beq	.L680
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9086              		.loc 1 4678 0 is_stmt 0 discriminator 2
 9087 000a 0123     		movs	r3, #1
 9088 000c 80F8C030 		strb	r3, [r0, #192]
4680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 9089              		.loc 1 4680 0 is_stmt 1 discriminator 2
 9090 0010 0222     		movs	r2, #2
 9091 0012 80F8C120 		strb	r2, [r0, #193]
4683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.OENR |= (OutputsToStart);
 9092              		.loc 1 4683 0 discriminator 2
 9093 0016 0268     		ldr	r2, [r0]
 9094 0018 D2F89443 		ldr	r4, [r2, #916]
 9095 001c 2143     		orrs	r1, r1, r4
 9096              	.LVL993:
 9097 001e C2F89413 		str	r1, [r2, #916]
4685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9098              		.loc 1 4685 0 discriminator 2
 9099 0022 80F8C130 		strb	r3, [r0, #193]
4688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 9100              		.loc 1 4688 0 discriminator 2
 9101 0026 0023     		movs	r3, #0
 9102 0028 80F8C030 		strb	r3, [r0, #192]
4690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 9103              		.loc 1 4690 0 discriminator 2
 9104 002c 1846     		mov	r0, r3
 9105              	.LVL994:
 9106 002e 00E0     		b	.L679
 9107              	.LVL995:
 9108              	.L680:
4678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9109              		.loc 1 4678 0
 9110 0030 0220     		movs	r0, #2
 9111              	.LVL996:
 9112              	.L679:
4691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9113              		.loc 1 4691 0
 9114 0032 5DF8044B 		ldr	r4, [sp], #4
 9115 0036 7047     		bx	lr
 9116              		.cfi_endproc
 9117              	.LFE179:
 9119              		.section	.text.HAL_HRTIM_WaveformOutputStop,"ax",%progbits
 9120              		.align	2
 9121              		.global	HAL_HRTIM_WaveformOutputStop
 9122              		.thumb
 9123              		.thumb_func
 9125              	HAL_HRTIM_WaveformOutputStop:
 9126              	.LFB180:
4713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
ARM GAS  /tmp/ccWQyto6.s 			page 313


 9127              		.loc 1 4713 0
 9128              		.cfi_startproc
 9129              		@ args = 0, pretend = 0, frame = 0
 9130              		@ frame_needed = 0, uses_anonymous_args = 0
 9131              		@ link register save eliminated.
 9132              	.LVL997:
 9133 0000 10B4     		push	{r4}
 9134              	.LCFI61:
 9135              		.cfi_def_cfa_offset 4
 9136              		.cfi_offset 4, -4
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9137              		.loc 1 4718 0
 9138 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9139 0006 012B     		cmp	r3, #1
 9140 0008 12D0     		beq	.L683
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9141              		.loc 1 4718 0 is_stmt 0 discriminator 2
 9142 000a 0123     		movs	r3, #1
 9143 000c 80F8C030 		strb	r3, [r0, #192]
4720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 9144              		.loc 1 4720 0 is_stmt 1 discriminator 2
 9145 0010 0222     		movs	r2, #2
 9146 0012 80F8C120 		strb	r2, [r0, #193]
4723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.ODISR |= (OutputsToStop);
 9147              		.loc 1 4723 0 discriminator 2
 9148 0016 0268     		ldr	r2, [r0]
 9149 0018 D2F89843 		ldr	r4, [r2, #920]
 9150 001c 2143     		orrs	r1, r1, r4
 9151              	.LVL998:
 9152 001e C2F89813 		str	r1, [r2, #920]
4725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9153              		.loc 1 4725 0 discriminator 2
 9154 0022 80F8C130 		strb	r3, [r0, #193]
4728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 9155              		.loc 1 4728 0 discriminator 2
 9156 0026 0023     		movs	r3, #0
 9157 0028 80F8C030 		strb	r3, [r0, #192]
4730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 9158              		.loc 1 4730 0 discriminator 2
 9159 002c 1846     		mov	r0, r3
 9160              	.LVL999:
 9161 002e 00E0     		b	.L682
 9162              	.LVL1000:
 9163              	.L683:
4718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9164              		.loc 1 4718 0
 9165 0030 0220     		movs	r0, #2
 9166              	.LVL1001:
 9167              	.L682:
4731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9168              		.loc 1 4731 0
 9169 0032 5DF8044B 		ldr	r4, [sp], #4
 9170 0036 7047     		bx	lr
 9171              		.cfi_endproc
 9172              	.LFE180:
 9174              		.section	.text.HAL_HRTIM_WaveformCounterStart,"ax",%progbits
 9175              		.align	2
ARM GAS  /tmp/ccWQyto6.s 			page 314


 9176              		.global	HAL_HRTIM_WaveformCounterStart
 9177              		.thumb
 9178              		.thumb_func
 9180              	HAL_HRTIM_WaveformCounterStart:
 9181              	.LFB181:
4749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9182              		.loc 1 4749 0
 9183              		.cfi_startproc
 9184              		@ args = 0, pretend = 0, frame = 0
 9185              		@ frame_needed = 0, uses_anonymous_args = 0
 9186              		@ link register save eliminated.
 9187              	.LVL1002:
 9188 0000 10B4     		push	{r4}
 9189              	.LCFI62:
 9190              		.cfi_def_cfa_offset 4
 9191              		.cfi_offset 4, -4
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9192              		.loc 1 4754 0
 9193 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9194 0006 012B     		cmp	r3, #1
 9195 0008 10D0     		beq	.L686
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9196              		.loc 1 4754 0 is_stmt 0 discriminator 2
 9197 000a 0123     		movs	r3, #1
 9198 000c 80F8C030 		strb	r3, [r0, #192]
4756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 9199              		.loc 1 4756 0 is_stmt 1 discriminator 2
 9200 0010 0222     		movs	r2, #2
 9201 0012 80F8C120 		strb	r2, [r0, #193]
4759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR |= (Timers);
 9202              		.loc 1 4759 0 discriminator 2
 9203 0016 0268     		ldr	r2, [r0]
 9204 0018 1468     		ldr	r4, [r2]
 9205 001a 2143     		orrs	r1, r1, r4
 9206              	.LVL1003:
 9207 001c 1160     		str	r1, [r2]
4761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9208              		.loc 1 4761 0 discriminator 2
 9209 001e 80F8C130 		strb	r3, [r0, #193]
4764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 9210              		.loc 1 4764 0 discriminator 2
 9211 0022 0023     		movs	r3, #0
 9212 0024 80F8C030 		strb	r3, [r0, #192]
4766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 9213              		.loc 1 4766 0 discriminator 2
 9214 0028 1846     		mov	r0, r3
 9215              	.LVL1004:
 9216 002a 00E0     		b	.L685
 9217              	.LVL1005:
 9218              	.L686:
4754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9219              		.loc 1 4754 0
 9220 002c 0220     		movs	r0, #2
 9221              	.LVL1006:
 9222              	.L685:
4767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9223              		.loc 1 4767 0
ARM GAS  /tmp/ccWQyto6.s 			page 315


 9224 002e 5DF8044B 		ldr	r4, [sp], #4
 9225 0032 7047     		bx	lr
 9226              		.cfi_endproc
 9227              	.LFE181:
 9229              		.section	.text.HAL_HRTIM_WaveformCounterStop,"ax",%progbits
 9230              		.align	2
 9231              		.global	HAL_HRTIM_WaveformCounterStop
 9232              		.thumb
 9233              		.thumb_func
 9235              	HAL_HRTIM_WaveformCounterStop:
 9236              	.LFB182:
4786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9237              		.loc 1 4786 0
 9238              		.cfi_startproc
 9239              		@ args = 0, pretend = 0, frame = 0
 9240              		@ frame_needed = 0, uses_anonymous_args = 0
 9241              		@ link register save eliminated.
 9242              	.LVL1007:
 9243 0000 10B4     		push	{r4}
 9244              	.LCFI63:
 9245              		.cfi_def_cfa_offset 4
 9246              		.cfi_offset 4, -4
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9247              		.loc 1 4791 0
 9248 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9249 0006 012B     		cmp	r3, #1
 9250 0008 11D0     		beq	.L689
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9251              		.loc 1 4791 0 is_stmt 0 discriminator 2
 9252 000a 0123     		movs	r3, #1
 9253 000c 80F8C030 		strb	r3, [r0, #192]
4793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 9254              		.loc 1 4793 0 is_stmt 1 discriminator 2
 9255 0010 0222     		movs	r2, #2
 9256 0012 80F8C120 		strb	r2, [r0, #193]
4796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR &= ~(Timers);
 9257              		.loc 1 4796 0 discriminator 2
 9258 0016 0268     		ldr	r2, [r0]
 9259 0018 1468     		ldr	r4, [r2]
 9260 001a 24EA0101 		bic	r1, r4, r1
 9261              	.LVL1008:
 9262 001e 1160     		str	r1, [r2]
4798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9263              		.loc 1 4798 0 discriminator 2
 9264 0020 80F8C130 		strb	r3, [r0, #193]
4801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 9265              		.loc 1 4801 0 discriminator 2
 9266 0024 0023     		movs	r3, #0
 9267 0026 80F8C030 		strb	r3, [r0, #192]
4803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 9268              		.loc 1 4803 0 discriminator 2
 9269 002a 1846     		mov	r0, r3
 9270              	.LVL1009:
 9271 002c 00E0     		b	.L688
 9272              	.LVL1010:
 9273              	.L689:
4791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
ARM GAS  /tmp/ccWQyto6.s 			page 316


 9274              		.loc 1 4791 0
 9275 002e 0220     		movs	r0, #2
 9276              	.LVL1011:
 9277              	.L688:
4804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9278              		.loc 1 4804 0
 9279 0030 5DF8044B 		ldr	r4, [sp], #4
 9280 0034 7047     		bx	lr
 9281              		.cfi_endproc
 9282              	.LFE182:
 9284 0036 00BF     		.section	.text.HAL_HRTIM_WaveformCounterStart_IT,"ax",%progbits
 9285              		.align	2
 9286              		.global	HAL_HRTIM_WaveformCounterStart_IT
 9287              		.thumb
 9288              		.thumb_func
 9290              	HAL_HRTIM_WaveformCounterStart_IT:
 9291              	.LFB183:
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9292              		.loc 1 4826 0
 9293              		.cfi_startproc
 9294              		@ args = 0, pretend = 0, frame = 0
 9295              		@ frame_needed = 0, uses_anonymous_args = 0
 9296              		@ link register save eliminated.
 9297              	.LVL1012:
 9298 0000 70B4     		push	{r4, r5, r6}
 9299              	.LCFI64:
 9300              		.cfi_def_cfa_offset 12
 9301              		.cfi_offset 4, -12
 9302              		.cfi_offset 5, -8
 9303              		.cfi_offset 6, -4
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9304              		.loc 1 4833 0
 9305 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9306 0006 012B     		cmp	r3, #1
 9307 0008 39D0     		beq	.L696
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9308              		.loc 1 4833 0 is_stmt 0 discriminator 2
 9309 000a 0123     		movs	r3, #1
 9310 000c 80F8C030 		strb	r3, [r0, #192]
4835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 9311              		.loc 1 4835 0 is_stmt 1 discriminator 2
 9312 0010 0223     		movs	r3, #2
 9313 0012 80F8C130 		strb	r3, [r0, #193]
4838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE_IT(hhrtim, hhrtim->Init.HRTIMInterruptResquests);
 9314              		.loc 1 4838 0 discriminator 2
 9315 0016 0368     		ldr	r3, [r0]
 9316 0018 D3F89043 		ldr	r4, [r3, #912]
 9317 001c 4268     		ldr	r2, [r0, #4]
 9318 001e 2243     		orrs	r2, r2, r4
 9319 0020 C3F89023 		str	r2, [r3, #912]
4841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Timers & HRTIM_TIMERID_MASTER) != RESET)
 9320              		.loc 1 4841 0 discriminator 2
 9321 0024 11F4803F 		tst	r1, #65536
 9322 0028 05D0     		beq	.L692
4843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_ENABLE_IT(hhrtim, 
 9323              		.loc 1 4843 0
 9324 002a 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccWQyto6.s 			page 317


 9325 002c DC68     		ldr	r4, [r3, #12]
 9326 002e D0F8AC20 		ldr	r2, [r0, #172]
 9327 0032 2243     		orrs	r2, r2, r4
 9328 0034 DA60     		str	r2, [r3, #12]
 9329              	.L692:
4826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9330              		.loc 1 4826 0 discriminator 1
 9331 0036 0023     		movs	r3, #0
4852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((Timers & TimerIdxToTimerId[timer_idx]) != RESET)
 9332              		.loc 1 4852 0 discriminator 1
 9333 0038 124D     		ldr	r5, .L697
 9334 003a 12E0     		b	.L693
 9335              	.LVL1013:
 9336              	.L695:
4852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((Timers & TimerIdxToTimerId[timer_idx]) != RESET)
 9337              		.loc 1 4852 0 is_stmt 0
 9338 003c 55F82320 		ldr	r2, [r5, r3, lsl #2]
 9339 0040 0A42     		tst	r2, r1
 9340 0042 0CD0     		beq	.L694
4854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_IT(hhrtim, 
 9341              		.loc 1 4854 0 is_stmt 1
 9342 0044 0468     		ldr	r4, [r0]
 9343 0046 04EBC314 		add	r4, r4, r3, lsl #7
 9344 004a D4F88C60 		ldr	r6, [r4, #140]
 9345 004e C3EBC302 		rsb	r2, r3, r3, lsl #3
 9346 0052 9200     		lsls	r2, r2, #2
 9347 0054 0244     		add	r2, r2, r0
 9348 0056 126A     		ldr	r2, [r2, #32]
 9349 0058 3243     		orrs	r2, r2, r6
 9350 005a C4F88C20 		str	r2, [r4, #140]
 9351              	.L694:
4850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
 9352              		.loc 1 4850 0
 9353 005e 0133     		adds	r3, r3, #1
 9354              	.LVL1014:
 9355 0060 DBB2     		uxtb	r3, r3
 9356              	.LVL1015:
 9357              	.L693:
4848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
 9358              		.loc 1 4848 0 discriminator 1
 9359 0062 042B     		cmp	r3, #4
 9360 0064 EAD9     		bls	.L695
4861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR |= (Timers);
 9361              		.loc 1 4861 0
 9362 0066 0368     		ldr	r3, [r0]
 9363              	.LVL1016:
 9364 0068 1A68     		ldr	r2, [r3]
 9365 006a 1143     		orrs	r1, r1, r2
 9366              	.LVL1017:
 9367 006c 1960     		str	r1, [r3]
4863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9368              		.loc 1 4863 0
 9369 006e 0123     		movs	r3, #1
 9370 0070 80F8C130 		strb	r3, [r0, #193]
4866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 9371              		.loc 1 4866 0
 9372 0074 0023     		movs	r3, #0
ARM GAS  /tmp/ccWQyto6.s 			page 318


 9373 0076 80F8C030 		strb	r3, [r0, #192]
4868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;}
 9374              		.loc 1 4868 0
 9375 007a 1846     		mov	r0, r3
 9376              	.LVL1018:
 9377 007c 00E0     		b	.L691
 9378              	.LVL1019:
 9379              	.L696:
4833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9380              		.loc 1 4833 0
 9381 007e 0220     		movs	r0, #2
 9382              	.LVL1020:
 9383              	.L691:
4868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;}
 9384              		.loc 1 4868 0
 9385 0080 70BC     		pop	{r4, r5, r6}
 9386 0082 7047     		bx	lr
 9387              	.L698:
 9388              		.align	2
 9389              	.L697:
 9390 0084 00000000 		.word	.LANCHOR0
 9391              		.cfi_endproc
 9392              	.LFE183:
 9394              		.section	.text.HAL_HRTIM_WaveformCounterStop_IT,"ax",%progbits
 9395              		.align	2
 9396              		.global	HAL_HRTIM_WaveformCounterStop_IT
 9397              		.thumb
 9398              		.thumb_func
 9400              	HAL_HRTIM_WaveformCounterStop_IT:
 9401              	.LFB184:
4888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9402              		.loc 1 4888 0
 9403              		.cfi_startproc
 9404              		@ args = 0, pretend = 0, frame = 8
 9405              		@ frame_needed = 0, uses_anonymous_args = 0
 9406              		@ link register save eliminated.
 9407              	.LVL1021:
 9408 0000 70B4     		push	{r4, r5, r6}
 9409              	.LCFI65:
 9410              		.cfi_def_cfa_offset 12
 9411              		.cfi_offset 4, -12
 9412              		.cfi_offset 5, -8
 9413              		.cfi_offset 6, -4
 9414 0002 83B0     		sub	sp, sp, #12
 9415              	.LCFI66:
 9416              		.cfi_def_cfa_offset 24
4890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __IO uint32_t delai = (uint32_t)(0x17FU);
 9417              		.loc 1 4890 0
 9418 0004 40F27F13 		movw	r3, #383
 9419 0008 0193     		str	r3, [sp, #4]
4899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9420              		.loc 1 4899 0
 9421 000a 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9422 000e 012B     		cmp	r3, #1
 9423 0010 43D0     		beq	.L706
4899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9424              		.loc 1 4899 0 is_stmt 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 319


 9425 0012 0123     		movs	r3, #1
 9426 0014 80F8C030 		strb	r3, [r0, #192]
4901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 9427              		.loc 1 4901 0 is_stmt 1 discriminator 2
 9428 0018 0223     		movs	r3, #2
 9429 001a 80F8C130 		strb	r3, [r0, #193]
4904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE_IT(hhrtim, hhrtim->Init.HRTIMInterruptResquests);
 9430              		.loc 1 4904 0 discriminator 2
 9431 001e 0368     		ldr	r3, [r0]
 9432 0020 D3F89043 		ldr	r4, [r3, #912]
 9433 0024 4268     		ldr	r2, [r0, #4]
 9434 0026 24EA0202 		bic	r2, r4, r2
 9435 002a C3F89023 		str	r2, [r3, #912]
4907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((Timers & HRTIM_TIMERID_MASTER) != RESET)
 9436              		.loc 1 4907 0 discriminator 2
 9437 002e 11F4803F 		tst	r1, #65536
 9438 0032 06D0     		beq	.L701
4910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_IT(hhrtim, hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].InterruptRequ
 9439              		.loc 1 4910 0
 9440 0034 0368     		ldr	r3, [r0]
 9441 0036 DC68     		ldr	r4, [r3, #12]
 9442 0038 D0F8AC20 		ldr	r2, [r0, #172]
 9443 003c 24EA0202 		bic	r2, r4, r2
 9444 0040 DA60     		str	r2, [r3, #12]
 9445              	.L701:
4888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9446              		.loc 1 4888 0 discriminator 1
 9447 0042 0023     		movs	r3, #0
4918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((Timers & TimerIdxToTimerId[timer_idx]) != RESET)
 9448              		.loc 1 4918 0 discriminator 1
 9449 0044 174D     		ldr	r5, .L709
 9450 0046 13E0     		b	.L702
 9451              	.LVL1022:
 9452              	.L704:
4918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((Timers & TimerIdxToTimerId[timer_idx]) != RESET)
 9453              		.loc 1 4918 0 is_stmt 0
 9454 0048 55F82320 		ldr	r2, [r5, r3, lsl #2]
 9455 004c 0A42     		tst	r2, r1
 9456 004e 0DD0     		beq	.L703
4920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_IT(hhrtim, timer_idx, hhrtim->TimerParam[timer_idx].InterruptReques
 9457              		.loc 1 4920 0 is_stmt 1
 9458 0050 0468     		ldr	r4, [r0]
 9459 0052 04EBC314 		add	r4, r4, r3, lsl #7
 9460 0056 D4F88C60 		ldr	r6, [r4, #140]
 9461 005a C3EBC302 		rsb	r2, r3, r3, lsl #3
 9462 005e 9200     		lsls	r2, r2, #2
 9463 0060 0244     		add	r2, r2, r0
 9464 0062 126A     		ldr	r2, [r2, #32]
 9465 0064 26EA0202 		bic	r2, r6, r2
 9466 0068 C4F88C20 		str	r2, [r4, #140]
 9467              	.L703:
4916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
 9468              		.loc 1 4916 0
 9469 006c 0133     		adds	r3, r3, #1
 9470              	.LVL1023:
 9471 006e DBB2     		uxtb	r3, r3
 9472              	.LVL1024:
ARM GAS  /tmp/ccWQyto6.s 			page 320


 9473              	.L702:
4914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
 9474              		.loc 1 4914 0 discriminator 1
 9475 0070 042B     		cmp	r3, #4
 9476 0072 E9D9     		bls	.L704
 9477              	.LVL1025:
 9478              	.L707:
4925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   do { delai--; } while (delai != 0U);
 9479              		.loc 1 4925 0 discriminator 1
 9480 0074 019B     		ldr	r3, [sp, #4]
 9481 0076 013B     		subs	r3, r3, #1
 9482 0078 0193     		str	r3, [sp, #4]
 9483 007a 019B     		ldr	r3, [sp, #4]
 9484 007c 002B     		cmp	r3, #0
 9485 007e F9D1     		bne	.L707
4929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sMasterRegs.MCR &= ~(Timers);
 9486              		.loc 1 4929 0
 9487 0080 0368     		ldr	r3, [r0]
 9488 0082 1A68     		ldr	r2, [r3]
 9489 0084 22EA0101 		bic	r1, r2, r1
 9490              	.LVL1026:
 9491 0088 1960     		str	r1, [r3]
4931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9492              		.loc 1 4931 0
 9493 008a 0123     		movs	r3, #1
 9494 008c 80F8C130 		strb	r3, [r0, #193]
4934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 9495              		.loc 1 4934 0
 9496 0090 0023     		movs	r3, #0
 9497 0092 80F8C030 		strb	r3, [r0, #192]
4936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 9498              		.loc 1 4936 0
 9499 0096 1846     		mov	r0, r3
 9500              	.LVL1027:
 9501 0098 00E0     		b	.L700
 9502              	.LVL1028:
 9503              	.L706:
4899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9504              		.loc 1 4899 0
 9505 009a 0220     		movs	r0, #2
 9506              	.LVL1029:
 9507              	.L700:
4937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9508              		.loc 1 4937 0
 9509 009c 03B0     		add	sp, sp, #12
 9510              		@ sp needed
 9511 009e 70BC     		pop	{r4, r5, r6}
 9512 00a0 7047     		bx	lr
 9513              	.L710:
 9514 00a2 00BF     		.align	2
 9515              	.L709:
 9516 00a4 00000000 		.word	.LANCHOR0
 9517              		.cfi_endproc
 9518              	.LFE184:
 9520              		.section	.text.HAL_HRTIM_WaveformCounterStart_DMA,"ax",%progbits
 9521              		.align	2
 9522              		.global	HAL_HRTIM_WaveformCounterStart_DMA
ARM GAS  /tmp/ccWQyto6.s 			page 321


 9523              		.thumb
 9524              		.thumb_func
 9526              	HAL_HRTIM_WaveformCounterStart_DMA:
 9527              	.LFB185:
4960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9528              		.loc 1 4960 0
 9529              		.cfi_startproc
 9530              		@ args = 0, pretend = 0, frame = 0
 9531              		@ frame_needed = 0, uses_anonymous_args = 0
 9532              	.LVL1030:
 9533 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 9534              	.LCFI67:
 9535              		.cfi_def_cfa_offset 40
 9536              		.cfi_offset 3, -40
 9537              		.cfi_offset 4, -36
 9538              		.cfi_offset 5, -32
 9539              		.cfi_offset 6, -28
 9540              		.cfi_offset 7, -24
 9541              		.cfi_offset 8, -20
 9542              		.cfi_offset 9, -16
 9543              		.cfi_offset 10, -12
 9544              		.cfi_offset 11, -8
 9545              		.cfi_offset 14, -4
 9546 0004 0546     		mov	r5, r0
 9547 0006 0E46     		mov	r6, r1
4967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
 9548              		.loc 1 4967 0
 9549 0008 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 9550 000c DBB2     		uxtb	r3, r3
 9551 000e 022B     		cmp	r3, #2
 9552 0010 69D0     		beq	.L717
4972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 9553              		.loc 1 4972 0
 9554 0012 0223     		movs	r3, #2
 9555 0014 80F8C130 		strb	r3, [r0, #193]
4975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9556              		.loc 1 4975 0
 9557 0018 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9558 001c 012B     		cmp	r3, #1
 9559 001e 65D0     		beq	.L718
4975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9560              		.loc 1 4975 0 is_stmt 0 discriminator 2
 9561 0020 0123     		movs	r3, #1
 9562 0022 80F8C030 		strb	r3, [r0, #192]
4977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (((Timers & HRTIM_TIMERID_MASTER) != RESET) &&
 9563              		.loc 1 4977 0 is_stmt 1 discriminator 2
 9564 0026 11F4803F 		tst	r1, #65536
 9565 002a 1AD0     		beq	.L713
4978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMARequests != 0U))
 9566              		.loc 1 4978 0 discriminator 1
 9567 002c D0F8B030 		ldr	r3, [r0, #176]
4977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (((Timers & HRTIM_TIMERID_MASTER) != RESET) &&
 9568              		.loc 1 4977 0 discriminator 1
 9569 0030 BBB1     		cbz	r3, .L713
4981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->hdmaMaster->XferErrorCallback = HRTIM_DMAError ;
 9570              		.loc 1 4981 0
 9571 0032 D0F8C430 		ldr	r3, [r0, #196]
ARM GAS  /tmp/ccWQyto6.s 			page 322


 9572 0036 2F4A     		ldr	r2, .L719
 9573 0038 1A63     		str	r2, [r3, #48]
4984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->hdmaMaster->XferCpltCallback = HRTIM_DMAMasterCplt;
 9574              		.loc 1 4984 0
 9575 003a D0F8C430 		ldr	r3, [r0, #196]
 9576 003e 2E4A     		ldr	r2, .L719+4
 9577 0040 9A62     		str	r2, [r3, #40]
4987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_DMA_Start_IT(hhrtim->hdmaMaster,
 9578              		.loc 1 4987 0
 9579 0042 D0F8C400 		ldr	r0, [r0, #196]
 9580              	.LVL1031:
 9581 0046 D5F8B410 		ldr	r1, [r5, #180]
 9582              	.LVL1032:
 9583 004a D5F8B820 		ldr	r2, [r5, #184]
 9584 004e D5F8BC30 		ldr	r3, [r5, #188]
 9585 0052 FFF7FEFF 		bl	HAL_DMA_Start_IT
 9586              	.LVL1033:
4993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_ENABLE_DMA(hhrtim, 
 9587              		.loc 1 4993 0
 9588 0056 2B68     		ldr	r3, [r5]
 9589 0058 D968     		ldr	r1, [r3, #12]
 9590 005a D5F8B020 		ldr	r2, [r5, #176]
 9591 005e 0A43     		orrs	r2, r2, r1
 9592 0060 DA60     		str	r2, [r3, #12]
 9593              	.L713:
4960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9594              		.loc 1 4960 0 discriminator 1
 9595 0062 0024     		movs	r4, #0
5001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
 9596              		.loc 1 5001 0 discriminator 1
 9597 0064 254F     		ldr	r7, .L719+8
5008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma->XferErrorCallback = HRTIM_DMAError ;
 9598              		.loc 1 5008 0 discriminator 1
 9599 0066 DFF88C90 		ldr	r9, .L719
5011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
 9600              		.loc 1 5011 0 discriminator 1
 9601 006a DFF89480 		ldr	r8, .L719+12
 9602 006e 2CE0     		b	.L714
 9603              	.LVL1034:
 9604              	.L716:
5001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
 9605              		.loc 1 5001 0
 9606 0070 57F82430 		ldr	r3, [r7, r4, lsl #2]
 9607 0074 3342     		tst	r3, r6
 9608 0076 26D0     		beq	.L715
5002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****          (hhrtim->TimerParam[timer_idx].DMARequests != 0U))
 9609              		.loc 1 5002 0 discriminator 1
 9610 0078 C4EBC403 		rsb	r3, r4, r4, lsl #3
 9611 007c 9B00     		lsls	r3, r3, #2
 9612 007e 2B44     		add	r3, r3, r5
 9613 0080 5B6A     		ldr	r3, [r3, #36]
5001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
 9614              		.loc 1 5001 0 discriminator 1
 9615 0082 03B3     		cbz	r3, .L715
5005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, timer_idx);
 9616              		.loc 1 5005 0
 9617 0084 2846     		mov	r0, r5
ARM GAS  /tmp/ccWQyto6.s 			page 323


 9618 0086 2146     		mov	r1, r4
 9619 0088 FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 9620              	.LVL1035:
5008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma->XferErrorCallback = HRTIM_DMAError ;
 9621              		.loc 1 5008 0
 9622 008c C0F83090 		str	r9, [r0, #48]
5011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma->XferCpltCallback = HRTIM_DMATimerxCplt;
 9623              		.loc 1 5011 0
 9624 0090 C0F82880 		str	r8, [r0, #40]
5014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_DMA_Start_IT(hdma,
 9625              		.loc 1 5014 0
 9626 0094 4FEAC40B 		lsl	fp, r4, #3
 9627 0098 C4EB0B0B 		rsb	fp, r4, fp
 9628 009c 4FEA8B0B 		lsl	fp, fp, #2
 9629 00a0 AB44     		add	fp, fp, r5
 9630 00a2 DBF82810 		ldr	r1, [fp, #40]
 9631 00a6 DBF82C20 		ldr	r2, [fp, #44]
 9632 00aa DBF83030 		ldr	r3, [fp, #48]
 9633 00ae FFF7FEFF 		bl	HAL_DMA_Start_IT
 9634              	.LVL1036:
5020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_ENABLE_DMA(hhrtim, 
 9635              		.loc 1 5020 0
 9636 00b2 2B68     		ldr	r3, [r5]
 9637 00b4 03EBC41A 		add	r10, r3, r4, lsl #7
 9638 00b8 DAF88C20 		ldr	r2, [r10, #140]
 9639 00bc DBF82430 		ldr	r3, [fp, #36]
 9640 00c0 1343     		orrs	r3, r3, r2
 9641 00c2 CAF88C30 		str	r3, [r10, #140]
 9642              	.L715:
4999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
 9643              		.loc 1 4999 0
 9644 00c6 0134     		adds	r4, r4, #1
 9645              	.LVL1037:
 9646 00c8 E4B2     		uxtb	r4, r4
 9647              	.LVL1038:
 9648              	.L714:
4997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
 9649              		.loc 1 4997 0 discriminator 1
 9650 00ca 042C     		cmp	r4, #4
 9651 00cc D0D9     		bls	.L716
5027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_ENABLE(hhrtim, Timers);
 9652              		.loc 1 5027 0
 9653 00ce 2B68     		ldr	r3, [r5]
 9654 00d0 1A68     		ldr	r2, [r3]
 9655 00d2 1643     		orrs	r6, r6, r2
 9656              	.LVL1039:
 9657 00d4 1E60     		str	r6, [r3]
5029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9658              		.loc 1 5029 0
 9659 00d6 0123     		movs	r3, #1
 9660 00d8 85F8C130 		strb	r3, [r5, #193]
5032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 9661              		.loc 1 5032 0
 9662 00dc 0020     		movs	r0, #0
 9663 00de 85F8C000 		strb	r0, [r5, #192]
5034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 9664              		.loc 1 5034 0
ARM GAS  /tmp/ccWQyto6.s 			page 324


 9665 00e2 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9666              	.LVL1040:
 9667              	.L717:
4969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 9668              		.loc 1 4969 0
 9669 00e6 0220     		movs	r0, #2
 9670              	.LVL1041:
 9671 00e8 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9672              	.LVL1042:
 9673              	.L718:
4975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9674              		.loc 1 4975 0
 9675 00ec 0220     		movs	r0, #2
 9676              	.LVL1043:
5035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9677              		.loc 1 5035 0
 9678 00ee BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 9679              	.LVL1044:
 9680              	.L720:
 9681 00f2 00BF     		.align	2
 9682              	.L719:
 9683 00f4 00000000 		.word	HRTIM_DMAError
 9684 00f8 00000000 		.word	HRTIM_DMAMasterCplt
 9685 00fc 00000000 		.word	.LANCHOR0
 9686 0100 00000000 		.word	HRTIM_DMATimerxCplt
 9687              		.cfi_endproc
 9688              	.LFE185:
 9690              		.section	.text.HAL_HRTIM_WaveformCounterStop_DMA,"ax",%progbits
 9691              		.align	2
 9692              		.global	HAL_HRTIM_WaveformCounterStop_DMA
 9693              		.thumb
 9694              		.thumb_func
 9696              	HAL_HRTIM_WaveformCounterStop_DMA:
 9697              	.LFB186:
5055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9698              		.loc 1 5055 0
 9699              		.cfi_startproc
 9700              		@ args = 0, pretend = 0, frame = 0
 9701              		@ frame_needed = 0, uses_anonymous_args = 0
 9702              	.LVL1045:
 9703 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 9704              	.LCFI68:
 9705              		.cfi_def_cfa_offset 32
 9706              		.cfi_offset 3, -32
 9707              		.cfi_offset 4, -28
 9708              		.cfi_offset 5, -24
 9709              		.cfi_offset 6, -20
 9710              		.cfi_offset 7, -16
 9711              		.cfi_offset 8, -12
 9712              		.cfi_offset 9, -8
 9713              		.cfi_offset 14, -4
 9714 0004 0646     		mov	r6, r0
 9715 0006 0D46     		mov	r5, r1
5062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 9716              		.loc 1 5062 0
 9717 0008 0223     		movs	r3, #2
 9718 000a 80F8C130 		strb	r3, [r0, #193]
ARM GAS  /tmp/ccWQyto6.s 			page 325


5064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (((Timers & HRTIM_TIMERID_MASTER) != RESET) &&
 9719              		.loc 1 5064 0
 9720 000e 11F48038 		ands	r8, r1, #65536
 9721 0012 0DD0     		beq	.L722
5065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       (hhrtim->TimerParam[HRTIM_TIMERINDEX_MASTER].DMARequests != 0U))
 9722              		.loc 1 5065 0 discriminator 1
 9723 0014 D0F8B030 		ldr	r3, [r0, #176]
5064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (((Timers & HRTIM_TIMERID_MASTER) != RESET) &&
 9724              		.loc 1 5064 0 discriminator 1
 9725 0018 53B1     		cbz	r3, .L722
5068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_DMA_Abort(hhrtim->hdmaMaster);
 9726              		.loc 1 5068 0
 9727 001a D0F8C400 		ldr	r0, [r0, #196]
 9728              	.LVL1046:
 9729 001e FFF7FEFF 		bl	HAL_DMA_Abort
 9730              	.LVL1047:
5071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     __HAL_HRTIM_MASTER_DISABLE_DMA(hhrtim,
 9731              		.loc 1 5071 0
 9732 0022 3368     		ldr	r3, [r6]
 9733 0024 D968     		ldr	r1, [r3, #12]
 9734 0026 D6F8B020 		ldr	r2, [r6, #176]
 9735 002a 21EA0202 		bic	r2, r1, r2
 9736 002e DA60     		str	r2, [r3, #12]
 9737              	.L722:
5055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9738              		.loc 1 5055 0 discriminator 1
 9739 0030 0024     		movs	r4, #0
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
 9740              		.loc 1 5079 0 discriminator 1
 9741 0032 3A4F     		ldr	r7, .L732
 9742 0034 21E0     		b	.L723
 9743              	.LVL1048:
 9744              	.L725:
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
 9745              		.loc 1 5079 0 is_stmt 0
 9746 0036 57F82430 		ldr	r3, [r7, r4, lsl #2]
 9747 003a 2B42     		tst	r3, r5
 9748 003c 1BD0     		beq	.L724
5080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         (hhrtim->TimerParam[timer_idx].DMARequests != 0U))
 9749              		.loc 1 5080 0 is_stmt 1 discriminator 1
 9750 003e C4EBC403 		rsb	r3, r4, r4, lsl #3
 9751 0042 9B00     		lsls	r3, r3, #2
 9752 0044 3344     		add	r3, r3, r6
 9753 0046 5B6A     		ldr	r3, [r3, #36]
5079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if (((Timers & TimerIdxToTimerId[timer_idx]) != RESET) &&
 9754              		.loc 1 5079 0 discriminator 1
 9755 0048 ABB1     		cbz	r3, .L724
5083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, timer_idx);
 9756              		.loc 1 5083 0
 9757 004a 3046     		mov	r0, r6
 9758 004c 2146     		mov	r1, r4
 9759 004e FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
 9760              	.LVL1049:
5086:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_DMA_Abort(hdma);
 9761              		.loc 1 5086 0
 9762 0052 FFF7FEFF 		bl	HAL_DMA_Abort
 9763              	.LVL1050:
ARM GAS  /tmp/ccWQyto6.s 			page 326


5089:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_DISABLE_DMA(hhrtim,
 9764              		.loc 1 5089 0
 9765 0056 3368     		ldr	r3, [r6]
 9766 0058 03EBC413 		add	r3, r3, r4, lsl #7
 9767 005c D3F88C20 		ldr	r2, [r3, #140]
 9768 0060 C4EBC409 		rsb	r9, r4, r4, lsl #3
 9769 0064 4FEA8909 		lsl	r9, r9, #2
 9770 0068 B144     		add	r9, r9, r6
 9771 006a D9F82410 		ldr	r1, [r9, #36]
 9772 006e 22EA0102 		bic	r2, r2, r1
 9773 0072 C3F88C20 		str	r2, [r3, #140]
 9774              	.L724:
5077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****        timer_idx++)
 9775              		.loc 1 5077 0
 9776 0076 0134     		adds	r4, r4, #1
 9777              	.LVL1051:
 9778 0078 E4B2     		uxtb	r4, r4
 9779              	.LVL1052:
 9780              	.L723:
5075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   for (timer_idx = HRTIM_TIMERINDEX_TIMER_A ; 
 9781              		.loc 1 5075 0 discriminator 1
 9782 007a 042C     		cmp	r4, #4
 9783 007c DBD9     		bls	.L725
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9784              		.loc 1 5096 0
 9785 007e B8F1000F 		cmp	r8, #0
 9786 0082 04D0     		beq	.L726
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9787              		.loc 1 5096 0 is_stmt 0 discriminator 1
 9788 0084 3368     		ldr	r3, [r6]
 9789 0086 1A68     		ldr	r2, [r3]
 9790 0088 22F48032 		bic	r2, r2, #65536
 9791 008c 1A60     		str	r2, [r3]
 9792              	.L726:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9793              		.loc 1 5096 0 discriminator 2
 9794 008e 15F4003F 		tst	r5, #131072
 9795 0092 09D0     		beq	.L727
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9796              		.loc 1 5096 0 discriminator 1
 9797 0094 3368     		ldr	r3, [r6]
 9798 0096 D3F89423 		ldr	r2, [r3, #916]
 9799 009a 12F0030F 		tst	r2, #3
 9800 009e 03D1     		bne	.L727
 9801 00a0 1A68     		ldr	r2, [r3]
 9802 00a2 22F40032 		bic	r2, r2, #131072
 9803 00a6 1A60     		str	r2, [r3]
 9804              	.L727:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9805              		.loc 1 5096 0 discriminator 2
 9806 00a8 15F4802F 		tst	r5, #262144
 9807 00ac 09D0     		beq	.L728
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9808              		.loc 1 5096 0 discriminator 1
 9809 00ae 3368     		ldr	r3, [r6]
 9810 00b0 D3F89423 		ldr	r2, [r3, #916]
 9811 00b4 12F00C0F 		tst	r2, #12
ARM GAS  /tmp/ccWQyto6.s 			page 327


 9812 00b8 03D1     		bne	.L728
 9813 00ba 1A68     		ldr	r2, [r3]
 9814 00bc 22F48022 		bic	r2, r2, #262144
 9815 00c0 1A60     		str	r2, [r3]
 9816              	.L728:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9817              		.loc 1 5096 0 discriminator 2
 9818 00c2 15F4002F 		tst	r5, #524288
 9819 00c6 09D0     		beq	.L729
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9820              		.loc 1 5096 0 discriminator 1
 9821 00c8 3368     		ldr	r3, [r6]
 9822 00ca D3F89423 		ldr	r2, [r3, #916]
 9823 00ce 12F0300F 		tst	r2, #48
 9824 00d2 03D1     		bne	.L729
 9825 00d4 1A68     		ldr	r2, [r3]
 9826 00d6 22F40022 		bic	r2, r2, #524288
 9827 00da 1A60     		str	r2, [r3]
 9828              	.L729:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9829              		.loc 1 5096 0 discriminator 2
 9830 00dc 15F4801F 		tst	r5, #1048576
 9831 00e0 09D0     		beq	.L730
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9832              		.loc 1 5096 0 discriminator 1
 9833 00e2 3368     		ldr	r3, [r6]
 9834 00e4 D3F89423 		ldr	r2, [r3, #916]
 9835 00e8 12F0C00F 		tst	r2, #192
 9836 00ec 03D1     		bne	.L730
 9837 00ee 1A68     		ldr	r2, [r3]
 9838 00f0 22F48012 		bic	r2, r2, #1048576
 9839 00f4 1A60     		str	r2, [r3]
 9840              	.L730:
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9841              		.loc 1 5096 0 discriminator 2
 9842 00f6 15F4001F 		tst	r5, #2097152
 9843 00fa 09D0     		beq	.L731
5096:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_HRTIM_DISABLE(hhrtim, Timers);
 9844              		.loc 1 5096 0 discriminator 1
 9845 00fc 3368     		ldr	r3, [r6]
 9846 00fe D3F89423 		ldr	r2, [r3, #916]
 9847 0102 12F4407F 		tst	r2, #768
 9848 0106 03D1     		bne	.L731
 9849 0108 1A68     		ldr	r2, [r3]
 9850 010a 22F40012 		bic	r2, r2, #2097152
 9851 010e 1A60     		str	r2, [r3]
 9852              	.L731:
5098:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 9853              		.loc 1 5098 0 is_stmt 1
 9854 0110 0123     		movs	r3, #1
 9855 0112 86F8C130 		strb	r3, [r6, #193]
5101:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9856              		.loc 1 5101 0
 9857 0116 0020     		movs	r0, #0
 9858 0118 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 9859              	.LVL1053:
 9860              	.L733:
ARM GAS  /tmp/ccWQyto6.s 			page 328


 9861              		.align	2
 9862              	.L732:
 9863 011c 00000000 		.word	.LANCHOR0
 9864              		.cfi_endproc
 9865              	.LFE186:
 9867              		.section	.text.HAL_HRTIM_BurstModeCtl,"ax",%progbits
 9868              		.align	2
 9869              		.global	HAL_HRTIM_BurstModeCtl
 9870              		.thumb
 9871              		.thumb_func
 9873              	HAL_HRTIM_BurstModeCtl:
 9874              	.LFB187:
5115:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9875              		.loc 1 5115 0
 9876              		.cfi_startproc
 9877              		@ args = 0, pretend = 0, frame = 0
 9878              		@ frame_needed = 0, uses_anonymous_args = 0
 9879              		@ link register save eliminated.
 9880              	.LVL1054:
 9881 0000 10B4     		push	{r4}
 9882              	.LCFI69:
 9883              		.cfi_def_cfa_offset 4
 9884              		.cfi_offset 4, -4
5121:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 9885              		.loc 1 5121 0
 9886 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 9887 0006 DBB2     		uxtb	r3, r3
 9888 0008 022B     		cmp	r3, #2
 9889 000a 18D0     		beq	.L736
5127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9890              		.loc 1 5127 0
 9891 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9892 0010 012B     		cmp	r3, #1
 9893 0012 16D0     		beq	.L737
5127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9894              		.loc 1 5127 0 is_stmt 0 discriminator 2
 9895 0014 0123     		movs	r3, #1
 9896 0016 80F8C030 		strb	r3, [r0, #192]
5129:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 9897              		.loc 1 5129 0 is_stmt 1 discriminator 2
 9898 001a 0222     		movs	r2, #2
 9899 001c 80F8C120 		strb	r2, [r0, #193]
5132:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr = hhrtim->Instance->sCommonRegs.BMCR;
 9900              		.loc 1 5132 0 discriminator 2
 9901 0020 0268     		ldr	r2, [r0]
 9902 0022 D2F8A043 		ldr	r4, [r2, #928]
 9903              	.LVL1055:
5133:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr &= ~(HRTIM_BMCR_BME);
 9904              		.loc 1 5133 0 discriminator 2
 9905 0026 24F00104 		bic	r4, r4, #1
 9906              	.LVL1056:
5134:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hrtim_bmcr |= Enable;
 9907              		.loc 1 5134 0 discriminator 2
 9908 002a 2143     		orrs	r1, r1, r4
 9909              	.LVL1057:
5137:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMCR = hrtim_bmcr;
 9910              		.loc 1 5137 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 329


 9911 002c C2F8A013 		str	r1, [r2, #928]
5139:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 9912              		.loc 1 5139 0 discriminator 2
 9913 0030 80F8C130 		strb	r3, [r0, #193]
5142:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 9914              		.loc 1 5142 0 discriminator 2
 9915 0034 0023     		movs	r3, #0
 9916 0036 80F8C030 		strb	r3, [r0, #192]
5144:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 9917              		.loc 1 5144 0 discriminator 2
 9918 003a 1846     		mov	r0, r3
 9919              	.LVL1058:
 9920 003c 02E0     		b	.L735
 9921              	.LVL1059:
 9922              	.L736:
5123:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 9923              		.loc 1 5123 0
 9924 003e 0220     		movs	r0, #2
 9925              	.LVL1060:
 9926 0040 00E0     		b	.L735
 9927              	.LVL1061:
 9928              	.L737:
5127:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9929              		.loc 1 5127 0
 9930 0042 0220     		movs	r0, #2
 9931              	.LVL1062:
 9932              	.L735:
5145:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9933              		.loc 1 5145 0
 9934 0044 5DF8044B 		ldr	r4, [sp], #4
 9935 0048 7047     		bx	lr
 9936              		.cfi_endproc
 9937              	.LFE187:
 9939 004a 00BF     		.section	.text.HAL_HRTIM_BurstModeSoftwareTrigger,"ax",%progbits
 9940              		.align	2
 9941              		.global	HAL_HRTIM_BurstModeSoftwareTrigger
 9942              		.thumb
 9943              		.thumb_func
 9945              	HAL_HRTIM_BurstModeSoftwareTrigger:
 9946              	.LFB188:
5153:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 9947              		.loc 1 5153 0
 9948              		.cfi_startproc
 9949              		@ args = 0, pretend = 0, frame = 0
 9950              		@ frame_needed = 0, uses_anonymous_args = 0
 9951              		@ link register save eliminated.
 9952              	.LVL1063:
5154:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 9953              		.loc 1 5154 0
 9954 0000 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 9955 0004 DBB2     		uxtb	r3, r3
 9956 0006 022B     		cmp	r3, #2
 9957 0008 16D0     		beq	.L740
5160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9958              		.loc 1 5160 0
 9959 000a 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 9960 000e 012B     		cmp	r3, #1
ARM GAS  /tmp/ccWQyto6.s 			page 330


 9961 0010 14D0     		beq	.L741
5160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9962              		.loc 1 5160 0 is_stmt 0 discriminator 2
 9963 0012 0123     		movs	r3, #1
 9964 0014 80F8C030 		strb	r3, [r0, #192]
5162:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 9965              		.loc 1 5162 0 is_stmt 1 discriminator 2
 9966 0018 0222     		movs	r2, #2
 9967 001a 80F8C120 		strb	r2, [r0, #193]
5165:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.BMTRGR |= HRTIM_BMTRGR_SW;
 9968              		.loc 1 5165 0 discriminator 2
 9969 001e 0268     		ldr	r2, [r0]
 9970 0020 D2F8A413 		ldr	r1, [r2, #932]
 9971 0024 1943     		orrs	r1, r1, r3
 9972 0026 C2F8A413 		str	r1, [r2, #932]
5167:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 9973              		.loc 1 5167 0 discriminator 2
 9974 002a 80F8C130 		strb	r3, [r0, #193]
5170:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 9975              		.loc 1 5170 0 discriminator 2
 9976 002e 0023     		movs	r3, #0
 9977 0030 80F8C030 		strb	r3, [r0, #192]
5172:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 9978              		.loc 1 5172 0 discriminator 2
 9979 0034 1846     		mov	r0, r3
 9980              	.LVL1064:
 9981 0036 7047     		bx	lr
 9982              	.LVL1065:
 9983              	.L740:
5156:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 9984              		.loc 1 5156 0
 9985 0038 0220     		movs	r0, #2
 9986              	.LVL1066:
 9987 003a 7047     		bx	lr
 9988              	.LVL1067:
 9989              	.L741:
5160:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 9990              		.loc 1 5160 0
 9991 003c 0220     		movs	r0, #2
 9992              	.LVL1068:
5173:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 9993              		.loc 1 5173 0
 9994 003e 7047     		bx	lr
 9995              		.cfi_endproc
 9996              	.LFE188:
 9998              		.section	.text.HAL_HRTIM_SoftwareCapture,"ax",%progbits
 9999              		.align	2
 10000              		.global	HAL_HRTIM_SoftwareCapture
 10001              		.thumb
 10002              		.thumb_func
 10004              	HAL_HRTIM_SoftwareCapture:
 10005              	.LFB189:
5196:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10006              		.loc 1 5196 0
 10007              		.cfi_startproc
 10008              		@ args = 0, pretend = 0, frame = 0
 10009              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccWQyto6.s 			page 331


 10010              		@ link register save eliminated.
 10011              	.LVL1069:
5201:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 10012              		.loc 1 5201 0
 10013 0000 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 10014 0004 DBB2     		uxtb	r3, r3
 10015 0006 022B     		cmp	r3, #2
 10016 0008 29D0     		beq	.L747
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10017              		.loc 1 5207 0
 10018 000a 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 10019 000e 012B     		cmp	r3, #1
 10020 0010 27D0     		beq	.L748
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10021              		.loc 1 5207 0 is_stmt 0 discriminator 2
 10022 0012 0123     		movs	r3, #1
 10023 0014 80F8C030 		strb	r3, [r0, #192]
5209:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 10024              		.loc 1 5209 0 is_stmt 1 discriminator 2
 10025 0018 0223     		movs	r3, #2
 10026 001a 80F8C130 		strb	r3, [r0, #193]
5212:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureUnit)
 10027              		.loc 1 5212 0 discriminator 2
 10028 001e 012A     		cmp	r2, #1
 10029 0020 02D0     		beq	.L745
 10030 0022 9A42     		cmp	r2, r3
 10031 0024 0AD0     		beq	.L746
 10032 0026 12E0     		b	.L744
 10033              	.L745:
5216:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xCR |= HRTIM_CPT1CR_SWCPT;
 10034              		.loc 1 5216 0
 10035 0028 0368     		ldr	r3, [r0]
 10036 002a 03EBC111 		add	r1, r3, r1, lsl #7
 10037              	.LVL1070:
 10038 002e D1F8DC30 		ldr	r3, [r1, #220]
 10039 0032 43F00103 		orr	r3, r3, #1
 10040 0036 C1F8DC30 		str	r3, [r1, #220]
5218:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10041              		.loc 1 5218 0
 10042 003a 08E0     		b	.L744
 10043              	.LVL1071:
 10044              	.L746:
5221:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xCR |= HRTIM_CPT2CR_SWCPT;
 10045              		.loc 1 5221 0
 10046 003c 0368     		ldr	r3, [r0]
 10047 003e 03EBC111 		add	r1, r3, r1, lsl #7
 10048              	.LVL1072:
 10049 0042 D1F8E030 		ldr	r3, [r1, #224]
 10050 0046 43F00103 		orr	r3, r3, #1
 10051 004a C1F8E030 		str	r3, [r1, #224]
 10052              	.L744:
5228:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 10053              		.loc 1 5228 0
 10054 004e 0123     		movs	r3, #1
 10055 0050 80F8C130 		strb	r3, [r0, #193]
5231:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 10056              		.loc 1 5231 0
ARM GAS  /tmp/ccWQyto6.s 			page 332


 10057 0054 0023     		movs	r3, #0
 10058 0056 80F8C030 		strb	r3, [r0, #192]
5233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 10059              		.loc 1 5233 0
 10060 005a 1846     		mov	r0, r3
 10061              	.LVL1073:
 10062 005c 7047     		bx	lr
 10063              	.LVL1074:
 10064              	.L747:
5203:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 10065              		.loc 1 5203 0
 10066 005e 0220     		movs	r0, #2
 10067              	.LVL1075:
 10068 0060 7047     		bx	lr
 10069              	.LVL1076:
 10070              	.L748:
5207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10071              		.loc 1 5207 0
 10072 0062 0220     		movs	r0, #2
 10073              	.LVL1077:
5234:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10074              		.loc 1 5234 0
 10075 0064 7047     		bx	lr
 10076              		.cfi_endproc
 10077              	.LFE189:
 10079 0066 00BF     		.section	.text.HAL_HRTIM_SoftwareUpdate,"ax",%progbits
 10080              		.align	2
 10081              		.global	HAL_HRTIM_SoftwareUpdate
 10082              		.thumb
 10083              		.thumb_func
 10085              	HAL_HRTIM_SoftwareUpdate:
 10086              	.LFB190:
5253:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10087              		.loc 1 5253 0
 10088              		.cfi_startproc
 10089              		@ args = 0, pretend = 0, frame = 0
 10090              		@ frame_needed = 0, uses_anonymous_args = 0
 10091              		@ link register save eliminated.
 10092              	.LVL1078:
 10093 0000 10B4     		push	{r4}
 10094              	.LCFI70:
 10095              		.cfi_def_cfa_offset 4
 10096              		.cfi_offset 4, -4
5257:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 10097              		.loc 1 5257 0
 10098 0002 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 10099 0006 DBB2     		uxtb	r3, r3
 10100 0008 022B     		cmp	r3, #2
 10101 000a 16D0     		beq	.L751
5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10102              		.loc 1 5263 0
 10103 000c 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 10104 0010 012B     		cmp	r3, #1
 10105 0012 14D0     		beq	.L752
5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10106              		.loc 1 5263 0 is_stmt 0 discriminator 2
 10107 0014 0123     		movs	r3, #1
ARM GAS  /tmp/ccWQyto6.s 			page 333


 10108 0016 80F8C030 		strb	r3, [r0, #192]
5265:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 10109              		.loc 1 5265 0 is_stmt 1 discriminator 2
 10110 001a 0222     		movs	r2, #2
 10111 001c 80F8C120 		strb	r2, [r0, #193]
5268:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR2 |= Timers;
 10112              		.loc 1 5268 0 discriminator 2
 10113 0020 0268     		ldr	r2, [r0]
 10114 0022 D2F88443 		ldr	r4, [r2, #900]
 10115 0026 2143     		orrs	r1, r1, r4
 10116              	.LVL1079:
 10117 0028 C2F88413 		str	r1, [r2, #900]
5270:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 10118              		.loc 1 5270 0 discriminator 2
 10119 002c 80F8C130 		strb	r3, [r0, #193]
5273:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 10120              		.loc 1 5273 0 discriminator 2
 10121 0030 0023     		movs	r3, #0
 10122 0032 80F8C030 		strb	r3, [r0, #192]
5275:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 10123              		.loc 1 5275 0 discriminator 2
 10124 0036 1846     		mov	r0, r3
 10125              	.LVL1080:
 10126 0038 02E0     		b	.L750
 10127              	.LVL1081:
 10128              	.L751:
5259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 10129              		.loc 1 5259 0
 10130 003a 0220     		movs	r0, #2
 10131              	.LVL1082:
 10132 003c 00E0     		b	.L750
 10133              	.LVL1083:
 10134              	.L752:
5263:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10135              		.loc 1 5263 0
 10136 003e 0220     		movs	r0, #2
 10137              	.LVL1084:
 10138              	.L750:
5276:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10139              		.loc 1 5276 0
 10140 0040 5DF8044B 		ldr	r4, [sp], #4
 10141 0044 7047     		bx	lr
 10142              		.cfi_endproc
 10143              	.LFE190:
 10145 0046 00BF     		.section	.text.HAL_HRTIM_SoftwareReset,"ax",%progbits
 10146              		.align	2
 10147              		.global	HAL_HRTIM_SoftwareReset
 10148              		.thumb
 10149              		.thumb_func
 10151              	HAL_HRTIM_SoftwareReset:
 10152              	.LFB191:
5295:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10153              		.loc 1 5295 0
 10154              		.cfi_startproc
 10155              		@ args = 0, pretend = 0, frame = 0
 10156              		@ frame_needed = 0, uses_anonymous_args = 0
 10157              		@ link register save eliminated.
ARM GAS  /tmp/ccWQyto6.s 			page 334


 10158              	.LVL1085:
5299:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(hhrtim->State == HAL_HRTIM_STATE_BUSY)
 10159              		.loc 1 5299 0
 10160 0000 90F8C130 		ldrb	r3, [r0, #193]	@ zero_extendqisi2
 10161 0004 DBB2     		uxtb	r3, r3
 10162 0006 022B     		cmp	r3, #2
 10163 0008 11D0     		beq	.L755
5305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10164              		.loc 1 5305 0
 10165 000a 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 10166 000e 012B     		cmp	r3, #1
 10167 0010 0FD0     		beq	.L756
5307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY;
 10168              		.loc 1 5307 0 discriminator 2
 10169 0012 0223     		movs	r3, #2
 10170 0014 80F8C130 		strb	r3, [r0, #193]
5310:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR2 = Timers;
 10171              		.loc 1 5310 0 discriminator 2
 10172 0018 0368     		ldr	r3, [r0]
 10173 001a C3F88413 		str	r1, [r3, #900]
5312:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY;
 10174              		.loc 1 5312 0 discriminator 2
 10175 001e 0123     		movs	r3, #1
 10176 0020 80F8C130 		strb	r3, [r0, #193]
5315:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 10177              		.loc 1 5315 0 discriminator 2
 10178 0024 0023     		movs	r3, #0
 10179 0026 80F8C030 		strb	r3, [r0, #192]
5317:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK; 
 10180              		.loc 1 5317 0 discriminator 2
 10181 002a 1846     		mov	r0, r3
 10182              	.LVL1086:
 10183 002c 7047     		bx	lr
 10184              	.LVL1087:
 10185              	.L755:
5301:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 10186              		.loc 1 5301 0
 10187 002e 0220     		movs	r0, #2
 10188              	.LVL1088:
 10189 0030 7047     		bx	lr
 10190              	.LVL1089:
 10191              	.L756:
5305:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10192              		.loc 1 5305 0
 10193 0032 0220     		movs	r0, #2
 10194              	.LVL1090:
5318:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10195              		.loc 1 5318 0
 10196 0034 7047     		bx	lr
 10197              		.cfi_endproc
 10198              	.LFE191:
 10200 0036 00BF     		.section	.text.HAL_HRTIM_BurstDMATransfer,"ax",%progbits
 10201              		.align	2
 10202              		.global	HAL_HRTIM_BurstDMATransfer
 10203              		.thumb
 10204              		.thumb_func
 10206              	HAL_HRTIM_BurstDMATransfer:
ARM GAS  /tmp/ccWQyto6.s 			page 335


 10207              	.LFB192:
5348:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10208              		.loc 1 5348 0
 10209              		.cfi_startproc
 10210              		@ args = 0, pretend = 0, frame = 0
 10211              		@ frame_needed = 0, uses_anonymous_args = 0
 10212              	.LVL1091:
 10213 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 10214              	.LCFI71:
 10215              		.cfi_def_cfa_offset 24
 10216              		.cfi_offset 3, -24
 10217              		.cfi_offset 4, -20
 10218              		.cfi_offset 5, -16
 10219              		.cfi_offset 6, -12
 10220              		.cfi_offset 7, -8
 10221              		.cfi_offset 14, -4
 10222 0002 0446     		mov	r4, r0
 10223 0004 1546     		mov	r5, r2
 10224 0006 1E46     		mov	r6, r3
5354:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_BUSY))
 10225              		.loc 1 5354 0
 10226 0008 90F8C100 		ldrb	r0, [r0, #193]	@ zero_extendqisi2
 10227              	.LVL1092:
 10228 000c C0B2     		uxtb	r0, r0
 10229 000e 0228     		cmp	r0, #2
 10230 0010 24D0     		beq	.L760
5358:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if((hhrtim->State == HAL_HRTIM_STATE_READY))
 10231              		.loc 1 5358 0
 10232 0012 94F8C130 		ldrb	r3, [r4, #193]	@ zero_extendqisi2
 10233              	.LVL1093:
 10234 0016 DBB2     		uxtb	r3, r3
 10235 0018 012B     		cmp	r3, #1
 10236 001a 04D1     		bne	.L759
5360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((BurstBufferAddress == 0U ) || (BurstBufferLength == 0U)) 
 10237              		.loc 1 5360 0
 10238 001c 02B3     		cbz	r2, .L761
5360:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if((BurstBufferAddress == 0U ) || (BurstBufferLength == 0U)) 
 10239              		.loc 1 5360 0 is_stmt 0 discriminator 1
 10240 001e 0EB3     		cbz	r6, .L762
5366:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_BUSY;
 10241              		.loc 1 5366 0 is_stmt 1
 10242 0020 0223     		movs	r3, #2
 10243 0022 84F8C130 		strb	r3, [r4, #193]
 10244              	.L759:
5371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10245              		.loc 1 5371 0
 10246 0026 94F8C030 		ldrb	r3, [r4, #192]	@ zero_extendqisi2
 10247 002a 012B     		cmp	r3, #1
 10248 002c 1CD0     		beq	.L763
5371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10249              		.loc 1 5371 0 is_stmt 0 discriminator 2
 10250 002e 0127     		movs	r7, #1
 10251 0030 84F8C070 		strb	r7, [r4, #192]
5374:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma = HRTIM_GetDMAHandleFromTimerIdx(hhrtim, TimerIdx);
 10252              		.loc 1 5374 0 is_stmt 1 discriminator 2
 10253 0034 2046     		mov	r0, r4
 10254 0036 FFF7FEFF 		bl	HRTIM_GetDMAHandleFromTimerIdx
ARM GAS  /tmp/ccWQyto6.s 			page 336


 10255              	.LVL1094:
5377:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferCpltCallback = HRTIM_BurstDMACplt;
 10256              		.loc 1 5377 0 discriminator 2
 10257 003a 0C4A     		ldr	r2, .L764
 10258 003c 8262     		str	r2, [r0, #40]
5380:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hdma->XferErrorCallback = HRTIM_DMAError ;
 10259              		.loc 1 5380 0 discriminator 2
 10260 003e 0C4A     		ldr	r2, .L764+4
 10261 0040 0263     		str	r2, [r0, #48]
5385:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                    (uint32_t)&(hhrtim->Instance->sCommonRegs.BDMADR),
 10262              		.loc 1 5385 0 discriminator 2
 10263 0042 2268     		ldr	r2, [r4]
5383:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_DMA_Start_IT(hdma, 
 10264              		.loc 1 5383 0 discriminator 2
 10265 0044 2946     		mov	r1, r5
 10266 0046 02F57C72 		add	r2, r2, #1008
 10267 004a 3346     		mov	r3, r6
 10268 004c FFF7FEFF 		bl	HAL_DMA_Start_IT
 10269              	.LVL1095:
5388:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 10270              		.loc 1 5388 0 discriminator 2
 10271 0050 84F8C170 		strb	r7, [r4, #193]
5391:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);  
 10272              		.loc 1 5391 0 discriminator 2
 10273 0054 0020     		movs	r0, #0
 10274 0056 84F8C000 		strb	r0, [r4, #192]
5393:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 10275              		.loc 1 5393 0 discriminator 2
 10276 005a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10277              	.LVL1096:
 10278              	.L760:
5356:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****      return HAL_BUSY;
 10279              		.loc 1 5356 0
 10280 005c 0220     		movs	r0, #2
 10281 005e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10282              	.LVL1097:
 10283              	.L761:
5362:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       return HAL_ERROR;                                    
 10284              		.loc 1 5362 0
 10285 0060 0120     		movs	r0, #1
 10286 0062 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10287              	.LVL1098:
 10288              	.L762:
 10289 0064 0120     		movs	r0, #1
 10290 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10291              	.LVL1099:
 10292              	.L763:
5371:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10293              		.loc 1 5371 0
 10294 0068 0220     		movs	r0, #2
5394:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10295              		.loc 1 5394 0
 10296 006a F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 10297              	.LVL1100:
 10298              	.L765:
 10299              		.align	2
 10300              	.L764:
ARM GAS  /tmp/ccWQyto6.s 			page 337


 10301 006c 00000000 		.word	HRTIM_BurstDMACplt
 10302 0070 00000000 		.word	HRTIM_DMAError
 10303              		.cfi_endproc
 10304              	.LFE192:
 10306              		.section	.text.HAL_HRTIM_UpdateEnable,"ax",%progbits
 10307              		.align	2
 10308              		.global	HAL_HRTIM_UpdateEnable
 10309              		.thumb
 10310              		.thumb_func
 10312              	HAL_HRTIM_UpdateEnable:
 10313              	.LFB193:
5412:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10314              		.loc 1 5412 0
 10315              		.cfi_startproc
 10316              		@ args = 0, pretend = 0, frame = 0
 10317              		@ frame_needed = 0, uses_anonymous_args = 0
 10318              		@ link register save eliminated.
 10319              	.LVL1101:
 10320 0000 10B4     		push	{r4}
 10321              	.LCFI72:
 10322              		.cfi_def_cfa_offset 4
 10323              		.cfi_offset 4, -4
5417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10324              		.loc 1 5417 0
 10325 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 10326 0006 012B     		cmp	r3, #1
 10327 0008 13D0     		beq	.L768
5417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10328              		.loc 1 5417 0 is_stmt 0 discriminator 2
 10329 000a 0123     		movs	r3, #1
 10330 000c 80F8C030 		strb	r3, [r0, #192]
5419:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 10331              		.loc 1 5419 0 is_stmt 1 discriminator 2
 10332 0010 0222     		movs	r2, #2
 10333 0012 80F8C120 		strb	r2, [r0, #193]
5422:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR1 &= ~(Timers);
 10334              		.loc 1 5422 0 discriminator 2
 10335 0016 0268     		ldr	r2, [r0]
 10336 0018 D2F88043 		ldr	r4, [r2, #896]
 10337 001c 24EA0101 		bic	r1, r4, r1
 10338              	.LVL1102:
 10339 0020 C2F88013 		str	r1, [r2, #896]
5424:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 10340              		.loc 1 5424 0 discriminator 2
 10341 0024 80F8C130 		strb	r3, [r0, #193]
5427:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 10342              		.loc 1 5427 0 discriminator 2
 10343 0028 0023     		movs	r3, #0
 10344 002a 80F8C030 		strb	r3, [r0, #192]
5429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 10345              		.loc 1 5429 0 discriminator 2
 10346 002e 1846     		mov	r0, r3
 10347              	.LVL1103:
 10348 0030 00E0     		b	.L767
 10349              	.LVL1104:
 10350              	.L768:
5417:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
ARM GAS  /tmp/ccWQyto6.s 			page 338


 10351              		.loc 1 5417 0
 10352 0032 0220     		movs	r0, #2
 10353              	.LVL1105:
 10354              	.L767:
5430:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 10355              		.loc 1 5430 0
 10356 0034 5DF8044B 		ldr	r4, [sp], #4
 10357 0038 7047     		bx	lr
 10358              		.cfi_endproc
 10359              	.LFE193:
 10361 003a 00BF     		.section	.text.HAL_HRTIM_UpdateDisable,"ax",%progbits
 10362              		.align	2
 10363              		.global	HAL_HRTIM_UpdateDisable
 10364              		.thumb
 10365              		.thumb_func
 10367              	HAL_HRTIM_UpdateDisable:
 10368              	.LFB194:
5448:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10369              		.loc 1 5448 0
 10370              		.cfi_startproc
 10371              		@ args = 0, pretend = 0, frame = 0
 10372              		@ frame_needed = 0, uses_anonymous_args = 0
 10373              		@ link register save eliminated.
 10374              	.LVL1106:
 10375 0000 10B4     		push	{r4}
 10376              	.LCFI73:
 10377              		.cfi_def_cfa_offset 4
 10378              		.cfi_offset 4, -4
5453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10379              		.loc 1 5453 0
 10380 0002 90F8C030 		ldrb	r3, [r0, #192]	@ zero_extendqisi2
 10381 0006 012B     		cmp	r3, #1
 10382 0008 12D0     		beq	.L771
5453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10383              		.loc 1 5453 0 is_stmt 0 discriminator 2
 10384 000a 0123     		movs	r3, #1
 10385 000c 80F8C030 		strb	r3, [r0, #192]
5455:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_BUSY; 
 10386              		.loc 1 5455 0 is_stmt 1 discriminator 2
 10387 0010 0222     		movs	r2, #2
 10388 0012 80F8C120 		strb	r2, [r0, #193]
5458:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->Instance->sCommonRegs.CR1 |= (Timers);
 10389              		.loc 1 5458 0 discriminator 2
 10390 0016 0268     		ldr	r2, [r0]
 10391 0018 D2F88043 		ldr	r4, [r2, #896]
 10392 001c 2143     		orrs	r1, r1, r4
 10393              	.LVL1107:
 10394 001e C2F88013 		str	r1, [r2, #896]
5460:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   hhrtim->State = HAL_HRTIM_STATE_READY; 
 10395              		.loc 1 5460 0 discriminator 2
 10396 0022 80F8C130 		strb	r3, [r0, #193]
5463:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_UNLOCK(hhrtim);      
 10397              		.loc 1 5463 0 discriminator 2
 10398 0026 0023     		movs	r3, #0
 10399 0028 80F8C030 		strb	r3, [r0, #192]
5465:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return HAL_OK;
 10400              		.loc 1 5465 0 discriminator 2
ARM GAS  /tmp/ccWQyto6.s 			page 339


 10401 002c 1846     		mov	r0, r3
 10402              	.LVL1108:
 10403 002e 00E0     		b	.L770
 10404              	.LVL1109:
 10405              	.L771:
5453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   __HAL_LOCK(hhrtim);
 10406              		.loc 1 5453 0
 10407 0030 0220     		movs	r0, #2
 10408              	.LVL1110:
 10409              	.L770:
5466:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
 10410              		.loc 1 5466 0
 10411 0032 5DF8044B 		ldr	r4, [sp], #4
 10412 0036 7047     		bx	lr
 10413              		.cfi_endproc
 10414              	.LFE194:
 10416              		.section	.text.HAL_HRTIM_GetState,"ax",%progbits
 10417              		.align	2
 10418              		.global	HAL_HRTIM_GetState
 10419              		.thumb
 10420              		.thumb_func
 10422              	HAL_HRTIM_GetState:
 10423              	.LFB195:
5499:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10424              		.loc 1 5499 0
 10425              		.cfi_startproc
 10426              		@ args = 0, pretend = 0, frame = 0
 10427              		@ frame_needed = 0, uses_anonymous_args = 0
 10428              		@ link register save eliminated.
 10429              	.LVL1111:
5501:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   return hhrtim->State;
 10430              		.loc 1 5501 0
 10431 0000 90F8C100 		ldrb	r0, [r0, #193]	@ zero_extendqisi2
 10432              	.LVL1112:
5502:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10433              		.loc 1 5502 0
 10434 0004 7047     		bx	lr
 10435              		.cfi_endproc
 10436              	.LFE195:
 10438 0006 00BF     		.section	.text.HAL_HRTIM_GetCapturedValue,"ax",%progbits
 10439              		.align	2
 10440              		.global	HAL_HRTIM_GetCapturedValue
 10441              		.thumb
 10442              		.thumb_func
 10444              	HAL_HRTIM_GetCapturedValue:
 10445              	.LFB196:
5523:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10446              		.loc 1 5523 0
 10447              		.cfi_startproc
 10448              		@ args = 0, pretend = 0, frame = 0
 10449              		@ frame_needed = 0, uses_anonymous_args = 0
 10450              		@ link register save eliminated.
 10451              	.LVL1113:
5531:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (CaptureUnit)
 10452              		.loc 1 5531 0
 10453 0000 012A     		cmp	r2, #1
 10454 0002 02D0     		beq	.L775
ARM GAS  /tmp/ccWQyto6.s 			page 340


 10455 0004 022A     		cmp	r2, #2
 10456 0006 06D0     		beq	.L776
 10457 0008 0BE0     		b	.L778
 10458              	.L775:
5535:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       captured_value = hhrtim->Instance->sTimerxRegs[TimerIdx].CPT1xR;
 10459              		.loc 1 5535 0
 10460 000a 0368     		ldr	r3, [r0]
 10461 000c 03EBC111 		add	r1, r3, r1, lsl #7
 10462              	.LVL1114:
 10463 0010 D1F8B000 		ldr	r0, [r1, #176]
 10464              	.LVL1115:
5537:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10465              		.loc 1 5537 0
 10466 0014 7047     		bx	lr
 10467              	.LVL1116:
 10468              	.L776:
5540:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       captured_value = hhrtim->Instance->sTimerxRegs[TimerIdx].CPT2xR;
 10469              		.loc 1 5540 0
 10470 0016 0368     		ldr	r3, [r0]
 10471 0018 03EBC111 		add	r1, r3, r1, lsl #7
 10472              	.LVL1117:
 10473 001c D1F8B400 		ldr	r0, [r1, #180]
 10474              	.LVL1118:
5542:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10475              		.loc 1 5542 0
 10476 0020 7047     		bx	lr
 10477              	.LVL1119:
 10478              	.L778:
5524:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t captured_value = 0U;
 10479              		.loc 1 5524 0
 10480 0022 0020     		movs	r0, #0
 10481              	.LVL1120:
5548:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10482              		.loc 1 5548 0
 10483 0024 7047     		bx	lr
 10484              		.cfi_endproc
 10485              	.LFE196:
 10487 0026 00BF     		.section	.text.HAL_HRTIM_WaveformGetOutputLevel,"ax",%progbits
 10488              		.align	2
 10489              		.global	HAL_HRTIM_WaveformGetOutputLevel
 10490              		.thumb
 10491              		.thumb_func
 10493              	HAL_HRTIM_WaveformGetOutputLevel:
 10494              	.LFB197:
5579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10495              		.loc 1 5579 0
 10496              		.cfi_startproc
 10497              		@ args = 0, pretend = 0, frame = 0
 10498              		@ frame_needed = 0, uses_anonymous_args = 0
 10499              		@ link register save eliminated.
 10500              	.LVL1121:
5586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
 10501              		.loc 1 5586 0
 10502 0000 102A     		cmp	r2, #16
 10503 0002 1AD0     		beq	.L781
 10504 0004 0AD8     		bhi	.L782
 10505 0006 022A     		cmp	r2, #2
ARM GAS  /tmp/ccWQyto6.s 			page 341


 10506 0008 21D0     		beq	.L783
 10507 000a 02D8     		bhi	.L784
 10508 000c 012A     		cmp	r2, #1
 10509 000e 28D1     		bne	.L786
 10510 0010 13E0     		b	.L781
 10511              	.L784:
 10512 0012 042A     		cmp	r2, #4
 10513 0014 11D0     		beq	.L781
 10514 0016 082A     		cmp	r2, #8
 10515 0018 23D1     		bne	.L786
 10516 001a 18E0     		b	.L783
 10517              	.L782:
 10518 001c 802A     		cmp	r2, #128
 10519 001e 16D0     		beq	.L783
 10520 0020 04D8     		bhi	.L785
 10521 0022 202A     		cmp	r2, #32
 10522 0024 13D0     		beq	.L783
 10523 0026 402A     		cmp	r2, #64
 10524 0028 1BD1     		bne	.L786
 10525 002a 06E0     		b	.L781
 10526              	.L785:
 10527 002c B2F5807F 		cmp	r2, #256
 10528 0030 03D0     		beq	.L781
 10529 0032 B2F5007F 		cmp	r2, #512
 10530 0036 14D1     		bne	.L786
 10531 0038 09E0     		b	.L783
 10532              	.L781:
5594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O1CPY) != RESET)
 10533              		.loc 1 5594 0
 10534 003a 0368     		ldr	r3, [r0]
 10535 003c 0131     		adds	r1, r1, #1
 10536              	.LVL1122:
 10537 003e 03EBC111 		add	r1, r3, r1, lsl #7
 10538              	.LVL1123:
 10539 0042 4B68     		ldr	r3, [r1, #4]
 10540 0044 13F4801F 		tst	r3, #1048576
 10541 0048 0DD0     		beq	.L787
5596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_ACTIVE;
 10542              		.loc 1 5596 0
 10543 004a 0120     		movs	r0, #1
 10544              	.LVL1124:
 10545 004c 7047     		bx	lr
 10546              	.LVL1125:
 10547              	.L783:
5610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O2CPY) != RESET)
 10548              		.loc 1 5610 0
 10549 004e 0368     		ldr	r3, [r0]
 10550 0050 0131     		adds	r1, r1, #1
 10551              	.LVL1126:
 10552 0052 03EBC111 		add	r1, r3, r1, lsl #7
 10553              	.LVL1127:
 10554 0056 4B68     		ldr	r3, [r1, #4]
 10555 0058 13F4001F 		tst	r3, #2097152
 10556 005c 05D0     		beq	.L788
5612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_ACTIVE;
 10557              		.loc 1 5612 0
 10558 005e 0120     		movs	r0, #1
ARM GAS  /tmp/ccWQyto6.s 			page 342


 10559              	.LVL1128:
 10560 0060 7047     		bx	lr
 10561              	.LVL1129:
 10562              	.L786:
5580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t output_level = HRTIM_OUTPUTLEVEL_INACTIVE;
 10563              		.loc 1 5580 0
 10564 0062 0220     		movs	r0, #2
 10565              	.LVL1130:
 10566 0064 7047     		bx	lr
 10567              	.LVL1131:
 10568              	.L787:
5600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_INACTIVE;
 10569              		.loc 1 5600 0
 10570 0066 0220     		movs	r0, #2
 10571              	.LVL1132:
 10572 0068 7047     		bx	lr
 10573              	.LVL1133:
 10574              	.L788:
5616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         output_level = HRTIM_OUTPUTLEVEL_INACTIVE;
 10575              		.loc 1 5616 0
 10576 006a 0220     		movs	r0, #2
 10577              	.LVL1134:
5625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10578              		.loc 1 5625 0
 10579 006c 7047     		bx	lr
 10580              		.cfi_endproc
 10581              	.LFE197:
 10583 006e 00BF     		.section	.text.HAL_HRTIM_WaveformGetOutputState,"ax",%progbits
 10584              		.align	2
 10585              		.global	HAL_HRTIM_WaveformGetOutputState
 10586              		.thumb
 10587              		.thumb_func
 10589              	HAL_HRTIM_WaveformGetOutputState:
 10590              	.LFB198:
5654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10591              		.loc 1 5654 0
 10592              		.cfi_startproc
 10593              		@ args = 0, pretend = 0, frame = 0
 10594              		@ frame_needed = 0, uses_anonymous_args = 0
 10595              		@ link register save eliminated.
 10596              	.LVL1135:
5662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
 10597              		.loc 1 5662 0
 10598 0000 102A     		cmp	r2, #16
 10599 0002 21D0     		beq	.L791
 10600 0004 0AD8     		bhi	.L792
 10601 0006 022A     		cmp	r2, #2
 10602 0008 18D0     		beq	.L793
 10603 000a 02D8     		bhi	.L794
 10604 000c 012A     		cmp	r2, #1
 10605 000e 29D0     		beq	.L805
 10606 0010 12E0     		b	.L790
 10607              	.L794:
 10608 0012 042A     		cmp	r2, #4
 10609 0014 14D0     		beq	.L796
 10610 0016 082A     		cmp	r2, #8
 10611 0018 14D0     		beq	.L797
ARM GAS  /tmp/ccWQyto6.s 			page 343


 10612 001a 0DE0     		b	.L790
 10613              	.L792:
 10614 001c 802A     		cmp	r2, #128
 10615 001e 19D0     		beq	.L798
 10616 0020 04D8     		bhi	.L799
 10617 0022 202A     		cmp	r2, #32
 10618 0024 12D0     		beq	.L800
 10619 0026 402A     		cmp	r2, #64
 10620 0028 12D0     		beq	.L801
 10621 002a 05E0     		b	.L790
 10622              	.L799:
 10623 002c B2F5807F 		cmp	r2, #256
 10624 0030 12D0     		beq	.L802
 10625 0032 B2F5007F 		cmp	r2, #512
 10626 0036 12D0     		beq	.L803
 10627              	.L790:
5655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t output_bit = 0U;
 10628              		.loc 1 5655 0
 10629 0038 0022     		movs	r2, #0
 10630              	.LVL1136:
 10631 003a 14E0     		b	.L795
 10632              	.LVL1137:
 10633              	.L793:
5671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TA2OEN;
 10634              		.loc 1 5671 0
 10635 003c 0222     		movs	r2, #2
 10636              	.LVL1138:
5673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10637              		.loc 1 5673 0
 10638 003e 12E0     		b	.L795
 10639              	.LVL1139:
 10640              	.L796:
5676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TB1OEN;
 10641              		.loc 1 5676 0
 10642 0040 0422     		movs	r2, #4
 10643              	.LVL1140:
5678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10644              		.loc 1 5678 0
 10645 0042 10E0     		b	.L795
 10646              	.LVL1141:
 10647              	.L797:
5681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TB2OEN;
 10648              		.loc 1 5681 0
 10649 0044 0822     		movs	r2, #8
 10650              	.LVL1142:
5683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10651              		.loc 1 5683 0
 10652 0046 0EE0     		b	.L795
 10653              	.LVL1143:
 10654              	.L791:
5686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TC1OEN;
 10655              		.loc 1 5686 0
 10656 0048 1022     		movs	r2, #16
 10657              	.LVL1144:
5688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10658              		.loc 1 5688 0
 10659 004a 0CE0     		b	.L795
ARM GAS  /tmp/ccWQyto6.s 			page 344


 10660              	.LVL1145:
 10661              	.L800:
5691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TC2OEN;
 10662              		.loc 1 5691 0
 10663 004c 2022     		movs	r2, #32
 10664              	.LVL1146:
5693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10665              		.loc 1 5693 0
 10666 004e 0AE0     		b	.L795
 10667              	.LVL1147:
 10668              	.L801:
5696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TD1OEN;
 10669              		.loc 1 5696 0
 10670 0050 4022     		movs	r2, #64
 10671              	.LVL1148:
5698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10672              		.loc 1 5698 0
 10673 0052 08E0     		b	.L795
 10674              	.LVL1149:
 10675              	.L798:
5701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TD2OEN;
 10676              		.loc 1 5701 0
 10677 0054 8022     		movs	r2, #128
 10678              	.LVL1150:
5703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10679              		.loc 1 5703 0
 10680 0056 06E0     		b	.L795
 10681              	.LVL1151:
 10682              	.L802:
5706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TE1OEN;
 10683              		.loc 1 5706 0
 10684 0058 4FF48072 		mov	r2, #256
 10685              	.LVL1152:
5708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10686              		.loc 1 5708 0
 10687 005c 03E0     		b	.L795
 10688              	.LVL1153:
 10689              	.L803:
5711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TE2OEN;
 10690              		.loc 1 5711 0
 10691 005e 4FF40072 		mov	r2, #512
 10692              	.LVL1154:
5713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
 10693              		.loc 1 5713 0
 10694 0062 00E0     		b	.L795
 10695              	.LVL1155:
 10696              	.L805:
5666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_bit = HRTIM_OENR_TA1OEN;
 10697              		.loc 1 5666 0
 10698 0064 0122     		movs	r2, #1
 10699              	.LVL1156:
 10700              	.L795:
5718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hhrtim->Instance->sCommonRegs.OENR & output_bit) != RESET)
 10701              		.loc 1 5718 0
 10702 0066 0368     		ldr	r3, [r0]
 10703 0068 D3F89413 		ldr	r1, [r3, #916]
 10704              	.LVL1157:
ARM GAS  /tmp/ccWQyto6.s 			page 345


 10705 006c 1142     		tst	r1, r2
 10706 006e 05D1     		bne	.L806
5725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if ((hhrtim->Instance->sCommonRegs.ODSR & output_bit) != RESET)
 10707              		.loc 1 5725 0
 10708 0070 D3F89C33 		ldr	r3, [r3, #924]
 10709 0074 1342     		tst	r3, r2
 10710 0076 03D0     		beq	.L807
5728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_state = HRTIM_OUTPUTSTATE_FAULT;
 10711              		.loc 1 5728 0
 10712 0078 0320     		movs	r0, #3
 10713              	.LVL1158:
 10714 007a 7047     		bx	lr
 10715              	.LVL1159:
 10716              	.L806:
5721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     output_state = HRTIM_OUTPUTSTATE_RUN;
 10717              		.loc 1 5721 0
 10718 007c 0220     		movs	r0, #2
 10719              	.LVL1160:
 10720 007e 7047     		bx	lr
 10721              	.LVL1161:
 10722              	.L807:
5733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       output_state = HRTIM_OUTPUTSTATE_IDLE;
 10723              		.loc 1 5733 0
 10724 0080 0120     		movs	r0, #1
 10725              	.LVL1162:
5738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10726              		.loc 1 5738 0
 10727 0082 7047     		bx	lr
 10728              		.cfi_endproc
 10729              	.LFE198:
 10731              		.section	.text.HAL_HRTIM_GetDelayedProtectionStatus,"ax",%progbits
 10732              		.align	2
 10733              		.global	HAL_HRTIM_GetDelayedProtectionStatus
 10734              		.thumb
 10735              		.thumb_func
 10737              	HAL_HRTIM_GetDelayedProtectionStatus:
 10738              	.LFB199:
5768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10739              		.loc 1 5768 0
 10740              		.cfi_startproc
 10741              		@ args = 0, pretend = 0, frame = 0
 10742              		@ frame_needed = 0, uses_anonymous_args = 0
 10743              		@ link register save eliminated.
 10744              	.LVL1163:
5775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   switch (Output)
 10745              		.loc 1 5775 0
 10746 0000 102A     		cmp	r2, #16
 10747 0002 1AD0     		beq	.L810
 10748 0004 0AD8     		bhi	.L811
 10749 0006 022A     		cmp	r2, #2
 10750 0008 21D0     		beq	.L812
 10751 000a 02D8     		bhi	.L813
 10752 000c 012A     		cmp	r2, #1
 10753 000e 28D1     		bne	.L815
 10754 0010 13E0     		b	.L810
 10755              	.L813:
 10756 0012 042A     		cmp	r2, #4
ARM GAS  /tmp/ccWQyto6.s 			page 346


 10757 0014 11D0     		beq	.L810
 10758 0016 082A     		cmp	r2, #8
 10759 0018 23D1     		bne	.L815
 10760 001a 18E0     		b	.L812
 10761              	.L811:
 10762 001c 802A     		cmp	r2, #128
 10763 001e 16D0     		beq	.L812
 10764 0020 04D8     		bhi	.L814
 10765 0022 202A     		cmp	r2, #32
 10766 0024 13D0     		beq	.L812
 10767 0026 402A     		cmp	r2, #64
 10768 0028 1BD1     		bne	.L815
 10769 002a 06E0     		b	.L810
 10770              	.L814:
 10771 002c B2F5807F 		cmp	r2, #256
 10772 0030 03D0     		beq	.L810
 10773 0032 B2F5007F 		cmp	r2, #512
 10774 0036 14D1     		bne	.L815
 10775 0038 09E0     		b	.L812
 10776              	.L810:
5783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O1STAT) != RESET)
 10777              		.loc 1 5783 0
 10778 003a 0368     		ldr	r3, [r0]
 10779 003c 0131     		adds	r1, r1, #1
 10780              	.LVL1164:
 10781 003e 03EBC111 		add	r1, r3, r1, lsl #7
 10782              	.LVL1165:
 10783 0042 4B68     		ldr	r3, [r1, #4]
 10784 0044 13F4802F 		tst	r3, #262144
 10785 0048 0DD0     		beq	.L816
5786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_ACTIVE;
 10786              		.loc 1 5786 0
 10787 004a 0120     		movs	r0, #1
 10788              	.LVL1166:
 10789 004c 7047     		bx	lr
 10790              	.LVL1167:
 10791              	.L812:
5801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       if ((hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_O2STAT) != RESET)
 10792              		.loc 1 5801 0
 10793 004e 0368     		ldr	r3, [r0]
 10794 0050 0131     		adds	r1, r1, #1
 10795              	.LVL1168:
 10796 0052 03EBC111 		add	r1, r3, r1, lsl #7
 10797              	.LVL1169:
 10798 0056 4B68     		ldr	r3, [r1, #4]
 10799 0058 13F4002F 		tst	r3, #524288
 10800 005c 05D0     		beq	.L817
5804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_ACTIVE;
 10801              		.loc 1 5804 0
 10802 005e 0120     		movs	r0, #1
 10803              	.LVL1170:
 10804 0060 7047     		bx	lr
 10805              	.LVL1171:
 10806              	.L815:
5769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint32_t delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;
 10807              		.loc 1 5769 0
 10808 0062 0220     		movs	r0, #2
ARM GAS  /tmp/ccWQyto6.s 			page 347


 10809              	.LVL1172:
 10810 0064 7047     		bx	lr
 10811              	.LVL1173:
 10812              	.L816:
5791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;
 10813              		.loc 1 5791 0
 10814 0066 0220     		movs	r0, #2
 10815              	.LVL1174:
 10816 0068 7047     		bx	lr
 10817              	.LVL1175:
 10818              	.L817:
5809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****         delayed_protection_status = HRTIM_OUTPUTLEVEL_INACTIVE;
 10819              		.loc 1 5809 0
 10820 006a 0220     		movs	r0, #2
 10821              	.LVL1176:
5818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10822              		.loc 1 5818 0
 10823 006c 7047     		bx	lr
 10824              		.cfi_endproc
 10825              	.LFE199:
 10827 006e 00BF     		.section	.text.HAL_HRTIM_GetBurstStatus,"ax",%progbits
 10828              		.align	2
 10829              		.global	HAL_HRTIM_GetBurstStatus
 10830              		.thumb
 10831              		.thumb_func
 10833              	HAL_HRTIM_GetBurstStatus:
 10834              	.LFB200:
5826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10835              		.loc 1 5826 0
 10836              		.cfi_startproc
 10837              		@ args = 0, pretend = 0, frame = 0
 10838              		@ frame_needed = 0, uses_anonymous_args = 0
 10839              		@ link register save eliminated.
 10840              	.LVL1177:
5830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   burst_mode_status = (hhrtim->Instance->sCommonRegs.BMCR & HRTIM_BMCR_BMSTAT);
 10841              		.loc 1 5830 0
 10842 0000 0368     		ldr	r3, [r0]
 10843 0002 D3F8A003 		ldr	r0, [r3, #928]
 10844              	.LVL1178:
5833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10845              		.loc 1 5833 0
 10846 0006 00F00040 		and	r0, r0, #-2147483648
 10847              	.LVL1179:
 10848 000a 7047     		bx	lr
 10849              		.cfi_endproc
 10850              	.LFE200:
 10852              		.section	.text.HAL_HRTIM_GetCurrentPushPullStatus,"ax",%progbits
 10853              		.align	2
 10854              		.global	HAL_HRTIM_GetCurrentPushPullStatus
 10855              		.thumb
 10856              		.thumb_func
 10858              	HAL_HRTIM_GetCurrentPushPullStatus:
 10859              	.LFB201:
5850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10860              		.loc 1 5850 0
 10861              		.cfi_startproc
 10862              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccWQyto6.s 			page 348


 10863              		@ frame_needed = 0, uses_anonymous_args = 0
 10864              		@ link register save eliminated.
 10865              	.LVL1180:
5857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   current_pushpull_status = (hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_CPPSTAT
 10866              		.loc 1 5857 0
 10867 0000 0368     		ldr	r3, [r0]
 10868 0002 0131     		adds	r1, r1, #1
 10869              	.LVL1181:
 10870 0004 03EBC113 		add	r3, r3, r1, lsl #7
 10871 0008 5868     		ldr	r0, [r3, #4]
 10872              	.LVL1182:
5860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10873              		.loc 1 5860 0
 10874 000a 00F48030 		and	r0, r0, #65536
 10875              	.LVL1183:
 10876 000e 7047     		bx	lr
 10877              		.cfi_endproc
 10878              	.LFE201:
 10880              		.section	.text.HAL_HRTIM_GetIdlePushPullStatus,"ax",%progbits
 10881              		.align	2
 10882              		.global	HAL_HRTIM_GetIdlePushPullStatus
 10883              		.thumb
 10884              		.thumb_func
 10886              	HAL_HRTIM_GetIdlePushPullStatus:
 10887              	.LFB202:
5878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10888              		.loc 1 5878 0
 10889              		.cfi_startproc
 10890              		@ args = 0, pretend = 0, frame = 0
 10891              		@ frame_needed = 0, uses_anonymous_args = 0
 10892              		@ link register save eliminated.
 10893              	.LVL1184:
5885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   idle_pushpull_status = (hhrtim->Instance->sTimerxRegs[TimerIdx].TIMxISR & HRTIM_TIMISR_IPPSTAT);
 10894              		.loc 1 5885 0
 10895 0000 0368     		ldr	r3, [r0]
 10896 0002 0131     		adds	r1, r1, #1
 10897              	.LVL1185:
 10898 0004 03EBC113 		add	r3, r3, r1, lsl #7
 10899 0008 5868     		ldr	r0, [r3, #4]
 10900              	.LVL1186:
5888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
 10901              		.loc 1 5888 0
 10902 000a 00F40030 		and	r0, r0, #131072
 10903              	.LVL1187:
 10904 000e 7047     		bx	lr
 10905              		.cfi_endproc
 10906              	.LFE202:
 10908              		.section	.text.HAL_HRTIM_Fault1Callback,"ax",%progbits
 10909              		.align	2
 10910              		.weak	HAL_HRTIM_Fault1Callback
 10911              		.thumb
 10912              		.thumb_func
 10914              	HAL_HRTIM_Fault1Callback:
 10915              	.LFB204:
5986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10916              		.loc 1 5986 0
 10917              		.cfi_startproc
ARM GAS  /tmp/ccWQyto6.s 			page 349


 10918              		@ args = 0, pretend = 0, frame = 0
 10919              		@ frame_needed = 0, uses_anonymous_args = 0
 10920              		@ link register save eliminated.
 10921              	.LVL1188:
 10922 0000 7047     		bx	lr
 10923              		.cfi_endproc
 10924              	.LFE204:
 10926 0002 00BF     		.section	.text.HAL_HRTIM_Fault2Callback,"ax",%progbits
 10927              		.align	2
 10928              		.weak	HAL_HRTIM_Fault2Callback
 10929              		.thumb
 10930              		.thumb_func
 10932              	HAL_HRTIM_Fault2Callback:
 10933              	.LFB205:
6001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10934              		.loc 1 6001 0
 10935              		.cfi_startproc
 10936              		@ args = 0, pretend = 0, frame = 0
 10937              		@ frame_needed = 0, uses_anonymous_args = 0
 10938              		@ link register save eliminated.
 10939              	.LVL1189:
 10940 0000 7047     		bx	lr
 10941              		.cfi_endproc
 10942              	.LFE205:
 10944 0002 00BF     		.section	.text.HAL_HRTIM_Fault3Callback,"ax",%progbits
 10945              		.align	2
 10946              		.weak	HAL_HRTIM_Fault3Callback
 10947              		.thumb
 10948              		.thumb_func
 10950              	HAL_HRTIM_Fault3Callback:
 10951              	.LFB206:
6016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10952              		.loc 1 6016 0
 10953              		.cfi_startproc
 10954              		@ args = 0, pretend = 0, frame = 0
 10955              		@ frame_needed = 0, uses_anonymous_args = 0
 10956              		@ link register save eliminated.
 10957              	.LVL1190:
 10958 0000 7047     		bx	lr
 10959              		.cfi_endproc
 10960              	.LFE206:
 10962 0002 00BF     		.section	.text.HAL_HRTIM_Fault4Callback,"ax",%progbits
 10963              		.align	2
 10964              		.weak	HAL_HRTIM_Fault4Callback
 10965              		.thumb
 10966              		.thumb_func
 10968              	HAL_HRTIM_Fault4Callback:
 10969              	.LFB207:
6031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10970              		.loc 1 6031 0
 10971              		.cfi_startproc
 10972              		@ args = 0, pretend = 0, frame = 0
 10973              		@ frame_needed = 0, uses_anonymous_args = 0
 10974              		@ link register save eliminated.
 10975              	.LVL1191:
 10976 0000 7047     		bx	lr
 10977              		.cfi_endproc
ARM GAS  /tmp/ccWQyto6.s 			page 350


 10978              	.LFE207:
 10980 0002 00BF     		.section	.text.HAL_HRTIM_Fault5Callback,"ax",%progbits
 10981              		.align	2
 10982              		.weak	HAL_HRTIM_Fault5Callback
 10983              		.thumb
 10984              		.thumb_func
 10986              	HAL_HRTIM_Fault5Callback:
 10987              	.LFB208:
6046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 10988              		.loc 1 6046 0
 10989              		.cfi_startproc
 10990              		@ args = 0, pretend = 0, frame = 0
 10991              		@ frame_needed = 0, uses_anonymous_args = 0
 10992              		@ link register save eliminated.
 10993              	.LVL1192:
 10994 0000 7047     		bx	lr
 10995              		.cfi_endproc
 10996              	.LFE208:
 10998 0002 00BF     		.section	.text.HAL_HRTIM_SystemFaultCallback,"ax",%progbits
 10999              		.align	2
 11000              		.weak	HAL_HRTIM_SystemFaultCallback
 11001              		.thumb
 11002              		.thumb_func
 11004              	HAL_HRTIM_SystemFaultCallback:
 11005              	.LFB209:
6061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11006              		.loc 1 6061 0
 11007              		.cfi_startproc
 11008              		@ args = 0, pretend = 0, frame = 0
 11009              		@ frame_needed = 0, uses_anonymous_args = 0
 11010              		@ link register save eliminated.
 11011              	.LVL1193:
 11012 0000 7047     		bx	lr
 11013              		.cfi_endproc
 11014              	.LFE209:
 11016 0002 00BF     		.section	.text.HRTIM_HRTIM_ISR,"ax",%progbits
 11017              		.align	2
 11018              		.thumb
 11019              		.thumb_func
 11021              	HRTIM_HRTIM_ISR:
 11022              	.LFB243:
7560:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7561:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7562:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   default:
7563:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     break;
7564:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7565:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
7566:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7567:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7568:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7569:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  HRTIM interrupts service routine
7570:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
7571:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
7572:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7573:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_HRTIM_ISR(HRTIM_HandleTypeDef * hhrtim)
7574:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11023              		.loc 1 7574 0
ARM GAS  /tmp/ccWQyto6.s 			page 351


 11024              		.cfi_startproc
 11025              		@ args = 0, pretend = 0, frame = 0
 11026              		@ frame_needed = 0, uses_anonymous_args = 0
 11027              	.LVL1194:
 11028              		.loc 1 7574 0
 11029 0000 10B5     		push	{r4, lr}
 11030              	.LCFI74:
 11031              		.cfi_def_cfa_offset 8
 11032              		.cfi_offset 4, -8
 11033              		.cfi_offset 14, -4
 11034 0002 0446     		mov	r4, r0
7575:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Fault 1 event */
7576:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_FLT1) != RESET)
 11035              		.loc 1 7576 0
 11036 0004 0368     		ldr	r3, [r0]
 11037 0006 D3F88823 		ldr	r2, [r3, #904]
 11038 000a 12F0010F 		tst	r2, #1
 11039 000e 09D0     		beq	.L828
7577:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7578:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_FLT1) != RESET)
 11040              		.loc 1 7578 0
 11041 0010 D3F89023 		ldr	r2, [r3, #912]
 11042 0014 12F0010F 		tst	r2, #1
 11043 0018 04D0     		beq	.L828
7579:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7580:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_FLT1);
 11044              		.loc 1 7580 0
 11045 001a 0122     		movs	r2, #1
 11046 001c C3F88C23 		str	r2, [r3, #908]
7581:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7582:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke Fault 1 event callback */
7583:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Fault1Callback(hhrtim);  
 11047              		.loc 1 7583 0
 11048 0020 FFF7FEFF 		bl	HAL_HRTIM_Fault1Callback
 11049              	.LVL1195:
 11050              	.L828:
7584:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7585:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7586:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7587:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Fault 2 event */
7588:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_FLT2) != RESET)
 11051              		.loc 1 7588 0
 11052 0024 2368     		ldr	r3, [r4]
 11053 0026 D3F88823 		ldr	r2, [r3, #904]
 11054 002a 12F0020F 		tst	r2, #2
 11055 002e 0AD0     		beq	.L829
7589:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7590:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_FLT2) != RESET)
 11056              		.loc 1 7590 0
 11057 0030 D3F89023 		ldr	r2, [r3, #912]
 11058 0034 12F0020F 		tst	r2, #2
 11059 0038 05D0     		beq	.L829
7591:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7592:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_FLT2);
 11060              		.loc 1 7592 0
 11061 003a 0222     		movs	r2, #2
 11062 003c C3F88C23 		str	r2, [r3, #908]
ARM GAS  /tmp/ccWQyto6.s 			page 352


7593:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7594:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke Fault 2 event callback */
7595:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Fault2Callback(hhrtim);  
 11063              		.loc 1 7595 0
 11064 0040 2046     		mov	r0, r4
 11065 0042 FFF7FEFF 		bl	HAL_HRTIM_Fault2Callback
 11066              	.LVL1196:
 11067              	.L829:
7596:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7597:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7598:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7599:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Fault 3 event */
7600:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_FLT3) != RESET)
 11068              		.loc 1 7600 0
 11069 0046 2368     		ldr	r3, [r4]
 11070 0048 D3F88823 		ldr	r2, [r3, #904]
 11071 004c 12F0040F 		tst	r2, #4
 11072 0050 0AD0     		beq	.L830
7601:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7602:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_FLT3) != RESET)
 11073              		.loc 1 7602 0
 11074 0052 D3F89023 		ldr	r2, [r3, #912]
 11075 0056 12F0040F 		tst	r2, #4
 11076 005a 05D0     		beq	.L830
7603:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7604:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_FLT3);
 11077              		.loc 1 7604 0
 11078 005c 0422     		movs	r2, #4
 11079 005e C3F88C23 		str	r2, [r3, #908]
7605:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7606:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke Fault 3 event callback */
7607:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Fault3Callback(hhrtim);  
 11080              		.loc 1 7607 0
 11081 0062 2046     		mov	r0, r4
 11082 0064 FFF7FEFF 		bl	HAL_HRTIM_Fault3Callback
 11083              	.LVL1197:
 11084              	.L830:
7608:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7609:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7610:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7611:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Fault 4 event */
7612:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_FLT4) != RESET)
 11085              		.loc 1 7612 0
 11086 0068 2368     		ldr	r3, [r4]
 11087 006a D3F88823 		ldr	r2, [r3, #904]
 11088 006e 12F0080F 		tst	r2, #8
 11089 0072 0AD0     		beq	.L831
7613:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7614:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_FLT4) != RESET)
 11090              		.loc 1 7614 0
 11091 0074 D3F89023 		ldr	r2, [r3, #912]
 11092 0078 12F0080F 		tst	r2, #8
 11093 007c 05D0     		beq	.L831
7615:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7616:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_FLT4);
 11094              		.loc 1 7616 0
 11095 007e 0822     		movs	r2, #8
ARM GAS  /tmp/ccWQyto6.s 			page 353


 11096 0080 C3F88C23 		str	r2, [r3, #908]
7617:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7618:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke Fault 4 event callback */
7619:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Fault4Callback(hhrtim);  
 11097              		.loc 1 7619 0
 11098 0084 2046     		mov	r0, r4
 11099 0086 FFF7FEFF 		bl	HAL_HRTIM_Fault4Callback
 11100              	.LVL1198:
 11101              	.L831:
7620:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7621:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7622:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7623:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Fault 5 event */
7624:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_FLT5) != RESET)
 11102              		.loc 1 7624 0
 11103 008a 2368     		ldr	r3, [r4]
 11104 008c D3F88823 		ldr	r2, [r3, #904]
 11105 0090 12F0100F 		tst	r2, #16
 11106 0094 0AD0     		beq	.L832
7625:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7626:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_FLT5) != RESET)
 11107              		.loc 1 7626 0
 11108 0096 D3F89023 		ldr	r2, [r3, #912]
 11109 009a 12F0100F 		tst	r2, #16
 11110 009e 05D0     		beq	.L832
7627:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7628:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_FLT5);
 11111              		.loc 1 7628 0
 11112 00a0 1022     		movs	r2, #16
 11113 00a2 C3F88C23 		str	r2, [r3, #908]
7629:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7630:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke Fault 5 event callback */
7631:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Fault5Callback(hhrtim);  
 11114              		.loc 1 7631 0
 11115 00a6 2046     		mov	r0, r4
 11116 00a8 FFF7FEFF 		bl	HAL_HRTIM_Fault5Callback
 11117              	.LVL1199:
 11118              	.L832:
7632:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7633:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7634:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7635:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* System fault event */
7636:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_SYSFLT) != RESET)
 11119              		.loc 1 7636 0
 11120 00ac 2368     		ldr	r3, [r4]
 11121 00ae D3F88823 		ldr	r2, [r3, #904]
 11122 00b2 12F0200F 		tst	r2, #32
 11123 00b6 0AD0     		beq	.L827
7637:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7638:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_SYSFLT) != RESET)
 11124              		.loc 1 7638 0
 11125 00b8 D3F89023 		ldr	r2, [r3, #912]
 11126 00bc 12F0200F 		tst	r2, #32
 11127 00c0 05D0     		beq	.L827
7639:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7640:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_SYSFLT);
 11128              		.loc 1 7640 0
ARM GAS  /tmp/ccWQyto6.s 			page 354


 11129 00c2 2022     		movs	r2, #32
 11130 00c4 C3F88C23 		str	r2, [r3, #908]
7641:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7642:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke System fault event callback */
7643:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_SystemFaultCallback(hhrtim);  
 11131              		.loc 1 7643 0
 11132 00c8 2046     		mov	r0, r4
 11133 00ca FFF7FEFF 		bl	HAL_HRTIM_SystemFaultCallback
 11134              	.LVL1200:
 11135              	.L827:
 11136 00ce 10BD     		pop	{r4, pc}
 11137              		.cfi_endproc
 11138              	.LFE243:
 11140              		.section	.text.HAL_HRTIM_DLLCalbrationReadyCallback,"ax",%progbits
 11141              		.align	2
 11142              		.weak	HAL_HRTIM_DLLCalbrationReadyCallback
 11143              		.thumb
 11144              		.thumb_func
 11146              	HAL_HRTIM_DLLCalbrationReadyCallback:
 11147              	.LFB210:
6076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11148              		.loc 1 6076 0
 11149              		.cfi_startproc
 11150              		@ args = 0, pretend = 0, frame = 0
 11151              		@ frame_needed = 0, uses_anonymous_args = 0
 11152              		@ link register save eliminated.
 11153              	.LVL1201:
 11154 0000 7047     		bx	lr
 11155              		.cfi_endproc
 11156              	.LFE210:
 11158 0002 00BF     		.section	.text.HAL_HRTIM_BurstModePeriodCallback,"ax",%progbits
 11159              		.align	2
 11160              		.weak	HAL_HRTIM_BurstModePeriodCallback
 11161              		.thumb
 11162              		.thumb_func
 11164              	HAL_HRTIM_BurstModePeriodCallback:
 11165              	.LFB211:
6091:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11166              		.loc 1 6091 0
 11167              		.cfi_startproc
 11168              		@ args = 0, pretend = 0, frame = 0
 11169              		@ frame_needed = 0, uses_anonymous_args = 0
 11170              		@ link register save eliminated.
 11171              	.LVL1202:
 11172 0000 7047     		bx	lr
 11173              		.cfi_endproc
 11174              	.LFE211:
 11176 0002 00BF     		.section	.text.HAL_HRTIM_SynchronizationEventCallback,"ax",%progbits
 11177              		.align	2
 11178              		.weak	HAL_HRTIM_SynchronizationEventCallback
 11179              		.thumb
 11180              		.thumb_func
 11182              	HAL_HRTIM_SynchronizationEventCallback:
 11183              	.LFB212:
6106:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11184              		.loc 1 6106 0
 11185              		.cfi_startproc
ARM GAS  /tmp/ccWQyto6.s 			page 355


 11186              		@ args = 0, pretend = 0, frame = 0
 11187              		@ frame_needed = 0, uses_anonymous_args = 0
 11188              		@ link register save eliminated.
 11189              	.LVL1203:
 11190 0000 7047     		bx	lr
 11191              		.cfi_endproc
 11192              	.LFE212:
 11194 0002 00BF     		.section	.text.HAL_HRTIM_RegistersUpdateCallback,"ax",%progbits
 11195              		.align	2
 11196              		.weak	HAL_HRTIM_RegistersUpdateCallback
 11197              		.thumb
 11198              		.thumb_func
 11200              	HAL_HRTIM_RegistersUpdateCallback:
 11201              	.LFB213:
6130:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11202              		.loc 1 6130 0
 11203              		.cfi_startproc
 11204              		@ args = 0, pretend = 0, frame = 0
 11205              		@ frame_needed = 0, uses_anonymous_args = 0
 11206              		@ link register save eliminated.
 11207              	.LVL1204:
 11208 0000 7047     		bx	lr
 11209              		.cfi_endproc
 11210              	.LFE213:
 11212 0002 00BF     		.section	.text.HAL_HRTIM_RepetitionEventCallback,"ax",%progbits
 11213              		.align	2
 11214              		.weak	HAL_HRTIM_RepetitionEventCallback
 11215              		.thumb
 11216              		.thumb_func
 11218              	HAL_HRTIM_RepetitionEventCallback:
 11219              	.LFB214:
6155:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11220              		.loc 1 6155 0
 11221              		.cfi_startproc
 11222              		@ args = 0, pretend = 0, frame = 0
 11223              		@ frame_needed = 0, uses_anonymous_args = 0
 11224              		@ link register save eliminated.
 11225              	.LVL1205:
 11226 0000 7047     		bx	lr
 11227              		.cfi_endproc
 11228              	.LFE214:
 11230 0002 00BF     		.section	.text.HAL_HRTIM_Compare1EventCallback,"ax",%progbits
 11231              		.align	2
 11232              		.weak	HAL_HRTIM_Compare1EventCallback
 11233              		.thumb
 11234              		.thumb_func
 11236              	HAL_HRTIM_Compare1EventCallback:
 11237              	.LFB215:
6181:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11238              		.loc 1 6181 0
 11239              		.cfi_startproc
 11240              		@ args = 0, pretend = 0, frame = 0
 11241              		@ frame_needed = 0, uses_anonymous_args = 0
 11242              		@ link register save eliminated.
 11243              	.LVL1206:
 11244 0000 7047     		bx	lr
 11245              		.cfi_endproc
ARM GAS  /tmp/ccWQyto6.s 			page 356


 11246              	.LFE215:
 11248 0002 00BF     		.section	.text.HAL_HRTIM_Compare2EventCallback,"ax",%progbits
 11249              		.align	2
 11250              		.weak	HAL_HRTIM_Compare2EventCallback
 11251              		.thumb
 11252              		.thumb_func
 11254              	HAL_HRTIM_Compare2EventCallback:
 11255              	.LFB216:
6207:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11256              		.loc 1 6207 0
 11257              		.cfi_startproc
 11258              		@ args = 0, pretend = 0, frame = 0
 11259              		@ frame_needed = 0, uses_anonymous_args = 0
 11260              		@ link register save eliminated.
 11261              	.LVL1207:
 11262 0000 7047     		bx	lr
 11263              		.cfi_endproc
 11264              	.LFE216:
 11266 0002 00BF     		.section	.text.HAL_HRTIM_Compare3EventCallback,"ax",%progbits
 11267              		.align	2
 11268              		.weak	HAL_HRTIM_Compare3EventCallback
 11269              		.thumb
 11270              		.thumb_func
 11272              	HAL_HRTIM_Compare3EventCallback:
 11273              	.LFB217:
6233:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11274              		.loc 1 6233 0
 11275              		.cfi_startproc
 11276              		@ args = 0, pretend = 0, frame = 0
 11277              		@ frame_needed = 0, uses_anonymous_args = 0
 11278              		@ link register save eliminated.
 11279              	.LVL1208:
 11280 0000 7047     		bx	lr
 11281              		.cfi_endproc
 11282              	.LFE217:
 11284 0002 00BF     		.section	.text.HAL_HRTIM_Compare4EventCallback,"ax",%progbits
 11285              		.align	2
 11286              		.weak	HAL_HRTIM_Compare4EventCallback
 11287              		.thumb
 11288              		.thumb_func
 11290              	HAL_HRTIM_Compare4EventCallback:
 11291              	.LFB218:
6259:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11292              		.loc 1 6259 0
 11293              		.cfi_startproc
 11294              		@ args = 0, pretend = 0, frame = 0
 11295              		@ frame_needed = 0, uses_anonymous_args = 0
 11296              		@ link register save eliminated.
 11297              	.LVL1209:
 11298 0000 7047     		bx	lr
 11299              		.cfi_endproc
 11300              	.LFE218:
 11302 0002 00BF     		.section	.text.HRTIM_DMAMasterCplt,"ax",%progbits
 11303              		.align	2
 11304              		.thumb
 11305              		.thumb_func
 11307              	HRTIM_DMAMasterCplt:
ARM GAS  /tmp/ccWQyto6.s 			page 357


 11308              	.LFB246:
7644:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7645:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7646:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
7647:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7648:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7649:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** * @brief  Master timer interrupts service routine
7650:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** * @param  hhrtim: pointer to HAL HRTIM handle
7651:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** * @retval None
7652:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** */
7653:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_Master_ISR(HRTIM_HandleTypeDef * hhrtim)
7654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
7655:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* DLL calibration ready event */
7656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_DLLRDY) != RESET)
7657:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_DLLRDY) != RESET)
7659:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_DLLRDY);
7661:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7662:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Set HRTIM State */  
7663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_READY;
7664:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7665:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Process unlocked */
7666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_UNLOCK(hhrtim); 
7667:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7668:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke System fault event callback */
7669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_DLLCalbrationReadyCallback(hhrtim);  
7670:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7671:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7672:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7673:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Burst mode period event */
7674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_BMPER) != RESET)
7675:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_BMPER) != RESET)
7677:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_BMPER);
7679:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7680:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke Burst mode period event callback */
7681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_BurstModePeriodCallback(hhrtim);  
7682:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7683:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }  
7684:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7685:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Master timer compare 1 event */
7686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP1) != RESET)
7687:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP1) != RESET)
7689:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP1);
7691:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7692:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 1 event callback */
7693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare1EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
7694:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7695:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7696:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7697:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Master timer compare 2 event */
7698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP2) != RESET)
7699:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
ARM GAS  /tmp/ccWQyto6.s 			page 358


7700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP2) != RESET)
7701:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP2);
7703:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7704:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 2 event callback */
7705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare2EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
7706:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7707:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7708:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7709:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Master timer compare 3 event */
7710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP3) != RESET)
7711:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP3) != RESET)
7713:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP3);
7715:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7716:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 3 event callback */
7717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare3EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
7718:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7719:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7720:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7721:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Master timer compare 4 event */
7722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP4) != RESET)
7723:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP4) != RESET)
7725:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP4);
7727:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7728:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 4 event callback */
7729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare4EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
7730:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7731:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7732:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7733:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Master timer repetition event */
7734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MREP) != RESET)
7735:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MREP) != RESET)
7737:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MREP);
7739:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7740:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke repetition event callback */
7741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RepetitionEventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
7742:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7743:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7744:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7745:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Synchronization input event */
7746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_SYNC) != RESET)
7747:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_SYNC) != RESET)
7749:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_SYNC);
7751:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7752:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke synchronization event callback */
7753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_SynchronizationEventCallback(hhrtim);  
7754:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7755:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7756:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
ARM GAS  /tmp/ccWQyto6.s 			page 359


7757:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Master timer registers update event */
7758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MUPD) != RESET)
7759:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MUPD) != RESET)
7761:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MUPD);
7763:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7764:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke registers update event callback */
7765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RegistersUpdateCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
7766:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7767:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7768:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
7769:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7770:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7771:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  Timer interrupts service routine
7772:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hhrtim: pointer to HAL HRTIM handle
7773:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  TimerIdx: Timer index
7774:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   This parameter can be one of the following values:
7775:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_A for timer A
7776:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_B for timer B
7777:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_C for timer C
7778:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_D for timer D
7779:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   *                   @arg HRTIM_TIMERINDEX_TIMER_E for timer E
7780:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
7781:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** */
7782:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_Timer_ISR(HRTIM_HandleTypeDef * hhrtim,
7783:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****                      uint32_t TimerIdx)
7784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
7785:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer compare 1 event */
7786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP1) != RESET)
7787:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1) != RESET)
7789:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
7791:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7792:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 1 event callback */
7793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare1EventCallback(hhrtim, TimerIdx);  
7794:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7795:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7796:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7797:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer compare 2 event */
7798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP2) != RESET)
7799:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2) != RESET)
7801:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
7803:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7804:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 2 event callback */
7805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare2EventCallback(hhrtim, TimerIdx);  
7806:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7807:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7808:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7809:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer compare 3 event */
7810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP3) != RESET)
7811:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP3) != RESET)
7813:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
ARM GAS  /tmp/ccWQyto6.s 			page 360


7814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP3);
7815:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7816:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 3 event callback */
7817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare3EventCallback(hhrtim, TimerIdx);  
7818:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7819:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7820:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7821:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer compare 4 event */
7822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP4) != RESET)
7823:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP4) != RESET)
7825:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP4);
7827:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7828:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke compare 4 event callback */
7829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare4EventCallback(hhrtim, TimerIdx);  
7830:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7831:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7832:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7833:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer repetition event */
7834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_REP) != RESET)
7835:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_REP) != RESET)
7837:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_REP);
7839:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7840:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke repetition event callback */
7841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RepetitionEventCallback(hhrtim, TimerIdx);  
7842:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7843:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7844:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7845:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer registers update event */
7846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_UPD) != RESET)
7847:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_UPD) != RESET)
7849:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_UPD);
7851:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7852:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke registers update event callback */
7853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RegistersUpdateCallback(hhrtim, TimerIdx);  
7854:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7855:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7856:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7857:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer capture 1 event */
7858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CPT1) != RESET)
7859:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {    
7860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1) != RESET)
7861:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1);
7863:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7864:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke capture 1 event callback */
7865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Capture1EventCallback(hhrtim, TimerIdx);  
7866:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7867:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7868:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7869:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer capture 2 event */
7870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CPT2) != RESET)
ARM GAS  /tmp/ccWQyto6.s 			page 361


7871:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2) != RESET)
7873:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2);
7875:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7876:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke capture 2 event callback */
7877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Capture2EventCallback(hhrtim, TimerIdx);  
7878:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7879:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7880:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7881:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer ouput 1 set event */
7882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_SET1) != RESET)
7883:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_SET1) != RESET)
7885:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_SET1);
7887:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7888:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke ouput 1 set event callback */
7889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output1SetCallback(hhrtim, TimerIdx);  
7890:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7891:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7892:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7893:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer ouput 1 reset event */
7894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_RST1) != RESET)
7895:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_RST1) != RESET)
7897:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_RST1);
7899:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7900:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke ouput 1 reset event callback */
7901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output1ResetCallback(hhrtim, TimerIdx);  
7902:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7903:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7904:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7905:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer ouput 2 set event */
7906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_SET2) != RESET)
7907:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_SET2) != RESET)
7909:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_SET2);
7911:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7912:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke ouput 2 set event callback */
7913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output2SetCallback(hhrtim, TimerIdx);  
7914:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7915:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7916:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7917:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer ouput 2 reset event */
7918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_RST2) != RESET)
7919:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_RST2) != RESET)
7921:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_RST2);
7923:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7924:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke ouput 2 reset event callback */
7925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output2ResetCallback(hhrtim, TimerIdx);  
7926:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7927:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
ARM GAS  /tmp/ccWQyto6.s 			page 362


7928:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7929:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Timer reset event */
7930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_RST) != RESET)
7931:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_RST) != RESET)
7933:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_RST);
7935:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7936:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke timer reset callback */
7937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_CounterResetCallback(hhrtim, TimerIdx);  
7938:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7939:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7940:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7941:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   /* Delayed protection event */  
7942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_DLYPRT) != RESET)
7943:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_DLYPRT) != RESET)
7945:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     {
7946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_DLYPRT);
7947:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       
7948:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       /* Invoke delayed protection callback */
7949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_DelayedProtectionCallback(hhrtim, TimerIdx);  
7950:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     }
7951:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7952:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
7953:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7954:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7955:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  DMA callback invoked upon master timer related DMA request completion
7956:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hdma: pointer to DMA handle.
7957:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
7958:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7959:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_DMAMasterCplt(DMA_HandleTypeDef *hdma)
7960:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11309              		.loc 1 7960 0
 11310              		.cfi_startproc
 11311              		@ args = 0, pretend = 0, frame = 0
 11312              		@ frame_needed = 0, uses_anonymous_args = 0
 11313              	.LVL1210:
 11314              		.loc 1 7960 0
 11315 0000 08B5     		push	{r3, lr}
 11316              	.LCFI75:
 11317              		.cfi_def_cfa_offset 8
 11318              		.cfi_offset 3, -8
 11319              		.cfi_offset 14, -4
7961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_HandleTypeDef * hrtim = (HRTIM_HandleTypeDef *)((DMA_HandleTypeDef* )hdma)->Parent;
 11320              		.loc 1 7961 0
 11321 0002 406A     		ldr	r0, [r0, #36]
 11322              	.LVL1211:
7962:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
7963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hrtim->Instance->sMasterRegs.MDIER & HRTIM_MASTER_DMA_MCMP1) != RESET)
 11323              		.loc 1 7963 0
 11324 0004 0368     		ldr	r3, [r0]
 11325 0006 DA68     		ldr	r2, [r3, #12]
 11326 0008 12F4803F 		tst	r2, #65536
 11327 000c 03D0     		beq	.L844
7964:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare1EventCallback(hrtim, HRTIM_TIMERINDEX_MASTER);
ARM GAS  /tmp/ccWQyto6.s 			page 363


 11328              		.loc 1 7965 0
 11329 000e 0521     		movs	r1, #5
 11330 0010 FFF7FEFF 		bl	HAL_HRTIM_Compare1EventCallback
 11331              	.LVL1212:
 11332 0014 08BD     		pop	{r3, pc}
 11333              	.LVL1213:
 11334              	.L844:
7966:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sMasterRegs.MDIER & HRTIM_MASTER_DMA_MCMP2) != RESET)
 11335              		.loc 1 7967 0
 11336 0016 DA68     		ldr	r2, [r3, #12]
 11337 0018 12F4003F 		tst	r2, #131072
 11338 001c 03D0     		beq	.L846
7968:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7969:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare2EventCallback(hrtim, HRTIM_TIMERINDEX_MASTER);
 11339              		.loc 1 7969 0
 11340 001e 0521     		movs	r1, #5
 11341 0020 FFF7FEFF 		bl	HAL_HRTIM_Compare2EventCallback
 11342              	.LVL1214:
 11343 0024 08BD     		pop	{r3, pc}
 11344              	.LVL1215:
 11345              	.L846:
7970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7971:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sMasterRegs.MDIER & HRTIM_MASTER_DMA_MCMP3) != RESET)
 11346              		.loc 1 7971 0
 11347 0026 DA68     		ldr	r2, [r3, #12]
 11348 0028 12F4802F 		tst	r2, #262144
 11349 002c 03D0     		beq	.L847
7972:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7973:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare3EventCallback(hrtim, HRTIM_TIMERINDEX_MASTER);
 11350              		.loc 1 7973 0
 11351 002e 0521     		movs	r1, #5
 11352 0030 FFF7FEFF 		bl	HAL_HRTIM_Compare3EventCallback
 11353              	.LVL1216:
 11354 0034 08BD     		pop	{r3, pc}
 11355              	.LVL1217:
 11356              	.L847:
7974:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sMasterRegs.MDIER & HRTIM_MASTER_DMA_MCMP4) != RESET)
 11357              		.loc 1 7975 0
 11358 0036 DA68     		ldr	r2, [r3, #12]
 11359 0038 12F4002F 		tst	r2, #524288
 11360 003c 03D0     		beq	.L848
7976:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7977:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare4EventCallback(hrtim, HRTIM_TIMERINDEX_MASTER);
 11361              		.loc 1 7977 0
 11362 003e 0521     		movs	r1, #5
 11363 0040 FFF7FEFF 		bl	HAL_HRTIM_Compare4EventCallback
 11364              	.LVL1218:
 11365 0044 08BD     		pop	{r3, pc}
 11366              	.LVL1219:
 11367              	.L848:
7978:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7979:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sMasterRegs.MDIER & HRTIM_MASTER_DMA_MREP) != RESET)
 11368              		.loc 1 7979 0
 11369 0046 DA68     		ldr	r2, [r3, #12]
 11370 0048 12F4801F 		tst	r2, #1048576
ARM GAS  /tmp/ccWQyto6.s 			page 364


 11371 004c 03D0     		beq	.L849
7980:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7981:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_RepetitionEventCallback(hrtim, HRTIM_TIMERINDEX_MASTER);
 11372              		.loc 1 7981 0
 11373 004e 0521     		movs	r1, #5
 11374 0050 FFF7FEFF 		bl	HAL_HRTIM_RepetitionEventCallback
 11375              	.LVL1220:
 11376 0054 08BD     		pop	{r3, pc}
 11377              	.LVL1221:
 11378              	.L849:
7982:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7983:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sMasterRegs.MDIER & HRTIM_MASTER_DMA_SYNC) != RESET)
 11379              		.loc 1 7983 0
 11380 0056 DA68     		ldr	r2, [r3, #12]
 11381 0058 12F4001F 		tst	r2, #2097152
 11382 005c 02D0     		beq	.L850
7984:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7985:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_SynchronizationEventCallback(hrtim);
 11383              		.loc 1 7985 0
 11384 005e FFF7FEFF 		bl	HAL_HRTIM_SynchronizationEventCallback
 11385              	.LVL1222:
 11386 0062 08BD     		pop	{r3, pc}
 11387              	.LVL1223:
 11388              	.L850:
7986:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7987:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sMasterRegs.MDIER & HRTIM_MASTER_DMA_MUPD) != RESET)
 11389              		.loc 1 7987 0
 11390 0064 DB68     		ldr	r3, [r3, #12]
 11391 0066 13F4800F 		tst	r3, #4194304
 11392 006a 02D0     		beq	.L843
7988:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
7989:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_RegistersUpdateCallback(hrtim, HRTIM_TIMERINDEX_MASTER);
 11393              		.loc 1 7989 0
 11394 006c 0521     		movs	r1, #5
 11395 006e FFF7FEFF 		bl	HAL_HRTIM_RegistersUpdateCallback
 11396              	.LVL1224:
 11397              	.L843:
 11398 0072 08BD     		pop	{r3, pc}
 11399              		.cfi_endproc
 11400              	.LFE246:
 11402              		.section	.text.HRTIM_Master_ISR,"ax",%progbits
 11403              		.align	2
 11404              		.thumb
 11405              		.thumb_func
 11407              	HRTIM_Master_ISR:
 11408              	.LFB244:
7654:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11409              		.loc 1 7654 0
 11410              		.cfi_startproc
 11411              		@ args = 0, pretend = 0, frame = 0
 11412              		@ frame_needed = 0, uses_anonymous_args = 0
 11413              	.LVL1225:
 11414 0000 10B5     		push	{r4, lr}
 11415              	.LCFI76:
 11416              		.cfi_def_cfa_offset 8
 11417              		.cfi_offset 4, -8
 11418              		.cfi_offset 14, -4
ARM GAS  /tmp/ccWQyto6.s 			page 365


 11419 0002 0446     		mov	r4, r0
7656:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_DLLRDY) != RESET)
 11420              		.loc 1 7656 0
 11421 0004 0368     		ldr	r3, [r0]
 11422 0006 D3F88823 		ldr	r2, [r3, #904]
 11423 000a 12F4803F 		tst	r2, #65536
 11424 000e 10D0     		beq	.L852
7658:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_DLLRDY) != RESET)
 11425              		.loc 1 7658 0
 11426 0010 D3F89023 		ldr	r2, [r3, #912]
 11427 0014 12F4803F 		tst	r2, #65536
 11428 0018 0BD0     		beq	.L852
7660:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_DLLRDY);
 11429              		.loc 1 7660 0
 11430 001a 4FF48032 		mov	r2, #65536
 11431 001e C3F88C23 		str	r2, [r3, #908]
7663:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       hhrtim->State = HAL_HRTIM_STATE_READY;
 11432              		.loc 1 7663 0
 11433 0022 0123     		movs	r3, #1
 11434 0024 80F8C130 		strb	r3, [r0, #193]
7666:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_UNLOCK(hhrtim); 
 11435              		.loc 1 7666 0
 11436 0028 0023     		movs	r3, #0
 11437 002a 80F8C030 		strb	r3, [r0, #192]
7669:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_DLLCalbrationReadyCallback(hhrtim);  
 11438              		.loc 1 7669 0
 11439 002e FFF7FEFF 		bl	HAL_HRTIM_DLLCalbrationReadyCallback
 11440              	.LVL1226:
 11441              	.L852:
7674:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_GET_FLAG(hhrtim, HRTIM_FLAG_BMPER) != RESET)
 11442              		.loc 1 7674 0
 11443 0032 2368     		ldr	r3, [r4]
 11444 0034 D3F88823 		ldr	r2, [r3, #904]
 11445 0038 12F4003F 		tst	r2, #131072
 11446 003c 0BD0     		beq	.L853
7676:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_GET_ITSTATUS(hhrtim, HRTIM_IT_BMPER) != RESET)
 11447              		.loc 1 7676 0
 11448 003e D3F89023 		ldr	r2, [r3, #912]
 11449 0042 12F4003F 		tst	r2, #131072
 11450 0046 06D0     		beq	.L853
7678:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_CLEAR_IT(hhrtim, HRTIM_IT_BMPER);
 11451              		.loc 1 7678 0
 11452 0048 4FF40032 		mov	r2, #131072
 11453 004c C3F88C23 		str	r2, [r3, #908]
7681:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_BurstModePeriodCallback(hhrtim);  
 11454              		.loc 1 7681 0
 11455 0050 2046     		mov	r0, r4
 11456 0052 FFF7FEFF 		bl	HAL_HRTIM_BurstModePeriodCallback
 11457              	.LVL1227:
 11458              	.L853:
7686:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP1) != RESET)
 11459              		.loc 1 7686 0
 11460 0056 2368     		ldr	r3, [r4]
 11461 0058 5A68     		ldr	r2, [r3, #4]
 11462 005a 12F0010F 		tst	r2, #1
 11463 005e 09D0     		beq	.L854
7688:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP1) != RESET)
ARM GAS  /tmp/ccWQyto6.s 			page 366


 11464              		.loc 1 7688 0
 11465 0060 DA68     		ldr	r2, [r3, #12]
 11466 0062 12F0010F 		tst	r2, #1
 11467 0066 05D0     		beq	.L854
7690:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP1);
 11468              		.loc 1 7690 0
 11469 0068 0122     		movs	r2, #1
 11470 006a 9A60     		str	r2, [r3, #8]
7693:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare1EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
 11471              		.loc 1 7693 0
 11472 006c 2046     		mov	r0, r4
 11473 006e 0521     		movs	r1, #5
 11474 0070 FFF7FEFF 		bl	HAL_HRTIM_Compare1EventCallback
 11475              	.LVL1228:
 11476              	.L854:
7698:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP2) != RESET)
 11477              		.loc 1 7698 0
 11478 0074 2368     		ldr	r3, [r4]
 11479 0076 5A68     		ldr	r2, [r3, #4]
 11480 0078 12F0020F 		tst	r2, #2
 11481 007c 09D0     		beq	.L855
7700:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP2) != RESET)
 11482              		.loc 1 7700 0
 11483 007e DA68     		ldr	r2, [r3, #12]
 11484 0080 12F0020F 		tst	r2, #2
 11485 0084 05D0     		beq	.L855
7702:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP2);
 11486              		.loc 1 7702 0
 11487 0086 0222     		movs	r2, #2
 11488 0088 9A60     		str	r2, [r3, #8]
7705:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare2EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
 11489              		.loc 1 7705 0
 11490 008a 2046     		mov	r0, r4
 11491 008c 0521     		movs	r1, #5
 11492 008e FFF7FEFF 		bl	HAL_HRTIM_Compare2EventCallback
 11493              	.LVL1229:
 11494              	.L855:
7710:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP3) != RESET)
 11495              		.loc 1 7710 0
 11496 0092 2368     		ldr	r3, [r4]
 11497 0094 5A68     		ldr	r2, [r3, #4]
 11498 0096 12F0040F 		tst	r2, #4
 11499 009a 09D0     		beq	.L856
7712:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP3) != RESET)
 11500              		.loc 1 7712 0
 11501 009c DA68     		ldr	r2, [r3, #12]
 11502 009e 12F0040F 		tst	r2, #4
 11503 00a2 05D0     		beq	.L856
7714:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP3);
 11504              		.loc 1 7714 0
 11505 00a4 0422     		movs	r2, #4
 11506 00a6 9A60     		str	r2, [r3, #8]
7717:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare3EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
 11507              		.loc 1 7717 0
 11508 00a8 2046     		mov	r0, r4
 11509 00aa 0521     		movs	r1, #5
 11510 00ac FFF7FEFF 		bl	HAL_HRTIM_Compare3EventCallback
ARM GAS  /tmp/ccWQyto6.s 			page 367


 11511              	.LVL1230:
 11512              	.L856:
7722:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MCMP4) != RESET)
 11513              		.loc 1 7722 0
 11514 00b0 2368     		ldr	r3, [r4]
 11515 00b2 5A68     		ldr	r2, [r3, #4]
 11516 00b4 12F0080F 		tst	r2, #8
 11517 00b8 09D0     		beq	.L857
7724:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MCMP4) != RESET)
 11518              		.loc 1 7724 0
 11519 00ba DA68     		ldr	r2, [r3, #12]
 11520 00bc 12F0080F 		tst	r2, #8
 11521 00c0 05D0     		beq	.L857
7726:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MCMP4);
 11522              		.loc 1 7726 0
 11523 00c2 0822     		movs	r2, #8
 11524 00c4 9A60     		str	r2, [r3, #8]
7729:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare4EventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
 11525              		.loc 1 7729 0
 11526 00c6 2046     		mov	r0, r4
 11527 00c8 0521     		movs	r1, #5
 11528 00ca FFF7FEFF 		bl	HAL_HRTIM_Compare4EventCallback
 11529              	.LVL1231:
 11530              	.L857:
7734:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MREP) != RESET)
 11531              		.loc 1 7734 0
 11532 00ce 2368     		ldr	r3, [r4]
 11533 00d0 5A68     		ldr	r2, [r3, #4]
 11534 00d2 12F0100F 		tst	r2, #16
 11535 00d6 09D0     		beq	.L858
7736:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MREP) != RESET)
 11536              		.loc 1 7736 0
 11537 00d8 DA68     		ldr	r2, [r3, #12]
 11538 00da 12F0100F 		tst	r2, #16
 11539 00de 05D0     		beq	.L858
7738:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MREP);
 11540              		.loc 1 7738 0
 11541 00e0 1022     		movs	r2, #16
 11542 00e2 9A60     		str	r2, [r3, #8]
7741:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RepetitionEventCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
 11543              		.loc 1 7741 0
 11544 00e4 2046     		mov	r0, r4
 11545 00e6 0521     		movs	r1, #5
 11546 00e8 FFF7FEFF 		bl	HAL_HRTIM_RepetitionEventCallback
 11547              	.LVL1232:
 11548              	.L858:
7746:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_SYNC) != RESET)
 11549              		.loc 1 7746 0
 11550 00ec 2368     		ldr	r3, [r4]
 11551 00ee 5A68     		ldr	r2, [r3, #4]
 11552 00f0 12F0200F 		tst	r2, #32
 11553 00f4 08D0     		beq	.L859
7748:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_SYNC) != RESET)
 11554              		.loc 1 7748 0
 11555 00f6 DA68     		ldr	r2, [r3, #12]
 11556 00f8 12F0200F 		tst	r2, #32
 11557 00fc 04D0     		beq	.L859
ARM GAS  /tmp/ccWQyto6.s 			page 368


7750:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_SYNC);
 11558              		.loc 1 7750 0
 11559 00fe 2022     		movs	r2, #32
 11560 0100 9A60     		str	r2, [r3, #8]
7753:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_SynchronizationEventCallback(hhrtim);  
 11561              		.loc 1 7753 0
 11562 0102 2046     		mov	r0, r4
 11563 0104 FFF7FEFF 		bl	HAL_HRTIM_SynchronizationEventCallback
 11564              	.LVL1233:
 11565              	.L859:
7758:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_MASTER_GET_FLAG(hhrtim, HRTIM_MASTER_FLAG_MUPD) != RESET)
 11566              		.loc 1 7758 0
 11567 0108 2368     		ldr	r3, [r4]
 11568 010a 5A68     		ldr	r2, [r3, #4]
 11569 010c 12F0400F 		tst	r2, #64
 11570 0110 09D0     		beq	.L851
7760:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_MASTER_GET_ITSTATUS(hhrtim, HRTIM_MASTER_IT_MUPD) != RESET)
 11571              		.loc 1 7760 0
 11572 0112 DA68     		ldr	r2, [r3, #12]
 11573 0114 12F0400F 		tst	r2, #64
 11574 0118 05D0     		beq	.L851
7762:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_MASTER_CLEAR_IT(hhrtim, HRTIM_MASTER_IT_MUPD);
 11575              		.loc 1 7762 0
 11576 011a 4022     		movs	r2, #64
 11577 011c 9A60     		str	r2, [r3, #8]
7765:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RegistersUpdateCallback(hhrtim, HRTIM_TIMERINDEX_MASTER);  
 11578              		.loc 1 7765 0
 11579 011e 2046     		mov	r0, r4
 11580 0120 0521     		movs	r1, #5
 11581 0122 FFF7FEFF 		bl	HAL_HRTIM_RegistersUpdateCallback
 11582              	.LVL1234:
 11583              	.L851:
 11584 0126 10BD     		pop	{r4, pc}
 11585              		.cfi_endproc
 11586              	.LFE244:
 11588              		.section	.text.HAL_HRTIM_Capture1EventCallback,"ax",%progbits
 11589              		.align	2
 11590              		.weak	HAL_HRTIM_Capture1EventCallback
 11591              		.thumb
 11592              		.thumb_func
 11594              	HAL_HRTIM_Capture1EventCallback:
 11595              	.LFB219:
6283:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11596              		.loc 1 6283 0
 11597              		.cfi_startproc
 11598              		@ args = 0, pretend = 0, frame = 0
 11599              		@ frame_needed = 0, uses_anonymous_args = 0
 11600              		@ link register save eliminated.
 11601              	.LVL1235:
 11602 0000 7047     		bx	lr
 11603              		.cfi_endproc
 11604              	.LFE219:
 11606 0002 00BF     		.section	.text.HAL_HRTIM_Capture2EventCallback,"ax",%progbits
 11607              		.align	2
 11608              		.weak	HAL_HRTIM_Capture2EventCallback
 11609              		.thumb
 11610              		.thumb_func
ARM GAS  /tmp/ccWQyto6.s 			page 369


 11612              	HAL_HRTIM_Capture2EventCallback:
 11613              	.LFB220:
6307:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11614              		.loc 1 6307 0
 11615              		.cfi_startproc
 11616              		@ args = 0, pretend = 0, frame = 0
 11617              		@ frame_needed = 0, uses_anonymous_args = 0
 11618              		@ link register save eliminated.
 11619              	.LVL1236:
 11620 0000 7047     		bx	lr
 11621              		.cfi_endproc
 11622              	.LFE220:
 11624 0002 00BF     		.section	.text.HAL_HRTIM_DelayedProtectionCallback,"ax",%progbits
 11625              		.align	2
 11626              		.weak	HAL_HRTIM_DelayedProtectionCallback
 11627              		.thumb
 11628              		.thumb_func
 11630              	HAL_HRTIM_DelayedProtectionCallback:
 11631              	.LFB221:
6332:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11632              		.loc 1 6332 0
 11633              		.cfi_startproc
 11634              		@ args = 0, pretend = 0, frame = 0
 11635              		@ frame_needed = 0, uses_anonymous_args = 0
 11636              		@ link register save eliminated.
 11637              	.LVL1237:
 11638 0000 7047     		bx	lr
 11639              		.cfi_endproc
 11640              	.LFE221:
 11642 0002 00BF     		.section	.text.HAL_HRTIM_CounterResetCallback,"ax",%progbits
 11643              		.align	2
 11644              		.weak	HAL_HRTIM_CounterResetCallback
 11645              		.thumb
 11646              		.thumb_func
 11648              	HAL_HRTIM_CounterResetCallback:
 11649              	.LFB222:
6357:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11650              		.loc 1 6357 0
 11651              		.cfi_startproc
 11652              		@ args = 0, pretend = 0, frame = 0
 11653              		@ frame_needed = 0, uses_anonymous_args = 0
 11654              		@ link register save eliminated.
 11655              	.LVL1238:
 11656 0000 7047     		bx	lr
 11657              		.cfi_endproc
 11658              	.LFE222:
 11660 0002 00BF     		.section	.text.HAL_HRTIM_Output1SetCallback,"ax",%progbits
 11661              		.align	2
 11662              		.weak	HAL_HRTIM_Output1SetCallback
 11663              		.thumb
 11664              		.thumb_func
 11666              	HAL_HRTIM_Output1SetCallback:
 11667              	.LFB223:
6381:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11668              		.loc 1 6381 0
 11669              		.cfi_startproc
 11670              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccWQyto6.s 			page 370


 11671              		@ frame_needed = 0, uses_anonymous_args = 0
 11672              		@ link register save eliminated.
 11673              	.LVL1239:
 11674 0000 7047     		bx	lr
 11675              		.cfi_endproc
 11676              	.LFE223:
 11678 0002 00BF     		.section	.text.HAL_HRTIM_Output1ResetCallback,"ax",%progbits
 11679              		.align	2
 11680              		.weak	HAL_HRTIM_Output1ResetCallback
 11681              		.thumb
 11682              		.thumb_func
 11684              	HAL_HRTIM_Output1ResetCallback:
 11685              	.LFB224:
6405:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11686              		.loc 1 6405 0
 11687              		.cfi_startproc
 11688              		@ args = 0, pretend = 0, frame = 0
 11689              		@ frame_needed = 0, uses_anonymous_args = 0
 11690              		@ link register save eliminated.
 11691              	.LVL1240:
 11692 0000 7047     		bx	lr
 11693              		.cfi_endproc
 11694              	.LFE224:
 11696 0002 00BF     		.section	.text.HAL_HRTIM_Output2SetCallback,"ax",%progbits
 11697              		.align	2
 11698              		.weak	HAL_HRTIM_Output2SetCallback
 11699              		.thumb
 11700              		.thumb_func
 11702              	HAL_HRTIM_Output2SetCallback:
 11703              	.LFB225:
6429:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11704              		.loc 1 6429 0
 11705              		.cfi_startproc
 11706              		@ args = 0, pretend = 0, frame = 0
 11707              		@ frame_needed = 0, uses_anonymous_args = 0
 11708              		@ link register save eliminated.
 11709              	.LVL1241:
 11710 0000 7047     		bx	lr
 11711              		.cfi_endproc
 11712              	.LFE225:
 11714 0002 00BF     		.section	.text.HAL_HRTIM_Output2ResetCallback,"ax",%progbits
 11715              		.align	2
 11716              		.weak	HAL_HRTIM_Output2ResetCallback
 11717              		.thumb
 11718              		.thumb_func
 11720              	HAL_HRTIM_Output2ResetCallback:
 11721              	.LFB226:
6453:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11722              		.loc 1 6453 0
 11723              		.cfi_startproc
 11724              		@ args = 0, pretend = 0, frame = 0
 11725              		@ frame_needed = 0, uses_anonymous_args = 0
 11726              		@ link register save eliminated.
 11727              	.LVL1242:
 11728 0000 7047     		bx	lr
 11729              		.cfi_endproc
 11730              	.LFE226:
ARM GAS  /tmp/ccWQyto6.s 			page 371


 11732 0002 00BF     		.section	.text.HRTIM_DMATimerxCplt,"ax",%progbits
 11733              		.align	2
 11734              		.thumb
 11735              		.thumb_func
 11737              	HRTIM_DMATimerxCplt:
 11738              	.LFB247:
7990:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
7991:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
7992:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
7993:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
7994:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  DMA callback invoked upon timer A..E related DMA request completion
7995:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hdma: pointer to DMA handle.
7996:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
7997:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
7998:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_DMATimerxCplt(DMA_HandleTypeDef *hdma)
7999:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11739              		.loc 1 7999 0
 11740              		.cfi_startproc
 11741              		@ args = 0, pretend = 0, frame = 0
 11742              		@ frame_needed = 0, uses_anonymous_args = 0
 11743              	.LVL1243:
 11744              		.loc 1 7999 0
 11745 0000 10B5     		push	{r4, lr}
 11746              	.LCFI77:
 11747              		.cfi_def_cfa_offset 8
 11748              		.cfi_offset 4, -8
 11749              		.cfi_offset 14, -4
8000:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   uint8_t timer_idx;
8001:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
8002:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_HandleTypeDef * hrtim = (HRTIM_HandleTypeDef *)((DMA_HandleTypeDef* )hdma)->Parent;
 11750              		.loc 1 8002 0
 11751 0002 446A     		ldr	r4, [r0, #36]
 11752              	.LVL1244:
8003:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
8004:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   timer_idx = GetTimerIdxFromDMAHandle(hdma);
 11753              		.loc 1 8004 0
 11754 0004 FFF7FEFF 		bl	GetTimerIdxFromDMAHandle
 11755              	.LVL1245:
8005:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
8006:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_CMP1) != RESET)
 11756              		.loc 1 8006 0
 11757 0008 2368     		ldr	r3, [r4]
 11758 000a C1B2     		uxtb	r1, r0
 11759 000c 03EBC112 		add	r2, r3, r1, lsl #7
 11760 0010 8832     		adds	r2, r2, #136
 11761 0012 5268     		ldr	r2, [r2, #4]
 11762 0014 12F4803F 		tst	r2, #65536
 11763 0018 03D0     		beq	.L870
8007:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8008:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare1EventCallback(hrtim, timer_idx);
 11764              		.loc 1 8008 0
 11765 001a 2046     		mov	r0, r4
 11766              	.LVL1246:
 11767 001c FFF7FEFF 		bl	HAL_HRTIM_Compare1EventCallback
 11768              	.LVL1247:
 11769 0020 10BD     		pop	{r4, pc}
 11770              	.LVL1248:
ARM GAS  /tmp/ccWQyto6.s 			page 372


 11771              	.L870:
8009:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8010:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_CMP2) != RESET)
 11772              		.loc 1 8010 0
 11773 0022 03EBC112 		add	r2, r3, r1, lsl #7
 11774 0026 8832     		adds	r2, r2, #136
 11775 0028 5268     		ldr	r2, [r2, #4]
 11776 002a 12F4003F 		tst	r2, #131072
 11777 002e 03D0     		beq	.L872
8011:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8012:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare2EventCallback(hrtim, timer_idx);
 11778              		.loc 1 8012 0
 11779 0030 2046     		mov	r0, r4
 11780              	.LVL1249:
 11781 0032 FFF7FEFF 		bl	HAL_HRTIM_Compare2EventCallback
 11782              	.LVL1250:
 11783 0036 10BD     		pop	{r4, pc}
 11784              	.LVL1251:
 11785              	.L872:
8013:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8014:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_CMP3) != RESET)
 11786              		.loc 1 8014 0
 11787 0038 03EBC112 		add	r2, r3, r1, lsl #7
 11788 003c 8832     		adds	r2, r2, #136
 11789 003e 5268     		ldr	r2, [r2, #4]
 11790 0040 12F4802F 		tst	r2, #262144
 11791 0044 03D0     		beq	.L873
8015:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8016:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare3EventCallback(hrtim, timer_idx);
 11792              		.loc 1 8016 0
 11793 0046 2046     		mov	r0, r4
 11794              	.LVL1252:
 11795 0048 FFF7FEFF 		bl	HAL_HRTIM_Compare3EventCallback
 11796              	.LVL1253:
 11797 004c 10BD     		pop	{r4, pc}
 11798              	.LVL1254:
 11799              	.L873:
8017:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8018:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_CMP4) != RESET)
 11800              		.loc 1 8018 0
 11801 004e 03EBC112 		add	r2, r3, r1, lsl #7
 11802 0052 8832     		adds	r2, r2, #136
 11803 0054 5268     		ldr	r2, [r2, #4]
 11804 0056 12F4002F 		tst	r2, #524288
 11805 005a 03D0     		beq	.L874
8019:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8020:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Compare4EventCallback(hrtim, timer_idx);
 11806              		.loc 1 8020 0
 11807 005c 2046     		mov	r0, r4
 11808              	.LVL1255:
 11809 005e FFF7FEFF 		bl	HAL_HRTIM_Compare4EventCallback
 11810              	.LVL1256:
 11811 0062 10BD     		pop	{r4, pc}
 11812              	.LVL1257:
 11813              	.L874:
8021:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8022:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_REP) != RESET)
ARM GAS  /tmp/ccWQyto6.s 			page 373


 11814              		.loc 1 8022 0
 11815 0064 03EBC112 		add	r2, r3, r1, lsl #7
 11816 0068 8832     		adds	r2, r2, #136
 11817 006a 5268     		ldr	r2, [r2, #4]
 11818 006c 12F4801F 		tst	r2, #1048576
 11819 0070 03D0     		beq	.L875
8023:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8024:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_RepetitionEventCallback(hrtim, timer_idx);
 11820              		.loc 1 8024 0
 11821 0072 2046     		mov	r0, r4
 11822              	.LVL1258:
 11823 0074 FFF7FEFF 		bl	HAL_HRTIM_RepetitionEventCallback
 11824              	.LVL1259:
 11825 0078 10BD     		pop	{r4, pc}
 11826              	.LVL1260:
 11827              	.L875:
8025:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8026:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_UPD) != RESET)
 11828              		.loc 1 8026 0
 11829 007a 03EBC112 		add	r2, r3, r1, lsl #7
 11830 007e 8832     		adds	r2, r2, #136
 11831 0080 5268     		ldr	r2, [r2, #4]
 11832 0082 12F4800F 		tst	r2, #4194304
 11833 0086 03D0     		beq	.L876
8027:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8028:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_RegistersUpdateCallback(hrtim, timer_idx);
 11834              		.loc 1 8028 0
 11835 0088 2046     		mov	r0, r4
 11836              	.LVL1261:
 11837 008a FFF7FEFF 		bl	HAL_HRTIM_RegistersUpdateCallback
 11838              	.LVL1262:
 11839 008e 10BD     		pop	{r4, pc}
 11840              	.LVL1263:
 11841              	.L876:
8029:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8030:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_CPT1) != RESET)
 11842              		.loc 1 8030 0
 11843 0090 03EBC112 		add	r2, r3, r1, lsl #7
 11844 0094 8832     		adds	r2, r2, #136
 11845 0096 5268     		ldr	r2, [r2, #4]
 11846 0098 12F4000F 		tst	r2, #8388608
 11847 009c 03D0     		beq	.L877
8031:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8032:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Capture1EventCallback(hrtim, timer_idx);
 11848              		.loc 1 8032 0
 11849 009e 2046     		mov	r0, r4
 11850              	.LVL1264:
 11851 00a0 FFF7FEFF 		bl	HAL_HRTIM_Capture1EventCallback
 11852              	.LVL1265:
 11853 00a4 10BD     		pop	{r4, pc}
 11854              	.LVL1266:
 11855              	.L877:
8033:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8034:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_CPT2) != RESET)
 11856              		.loc 1 8034 0
 11857 00a6 03EBC112 		add	r2, r3, r1, lsl #7
 11858 00aa 8832     		adds	r2, r2, #136
ARM GAS  /tmp/ccWQyto6.s 			page 374


 11859 00ac 5268     		ldr	r2, [r2, #4]
 11860 00ae 12F0807F 		tst	r2, #16777216
 11861 00b2 03D0     		beq	.L878
8035:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8036:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Capture2EventCallback(hrtim, timer_idx);
 11862              		.loc 1 8036 0
 11863 00b4 2046     		mov	r0, r4
 11864              	.LVL1267:
 11865 00b6 FFF7FEFF 		bl	HAL_HRTIM_Capture2EventCallback
 11866              	.LVL1268:
 11867 00ba 10BD     		pop	{r4, pc}
 11868              	.LVL1269:
 11869              	.L878:
8037:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8038:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_SET1) != RESET)
 11870              		.loc 1 8038 0
 11871 00bc 03EBC112 		add	r2, r3, r1, lsl #7
 11872 00c0 8832     		adds	r2, r2, #136
 11873 00c2 5268     		ldr	r2, [r2, #4]
 11874 00c4 12F0007F 		tst	r2, #33554432
 11875 00c8 03D0     		beq	.L879
8039:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8040:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Output1SetCallback(hrtim, timer_idx);
 11876              		.loc 1 8040 0
 11877 00ca 2046     		mov	r0, r4
 11878              	.LVL1270:
 11879 00cc FFF7FEFF 		bl	HAL_HRTIM_Output1SetCallback
 11880              	.LVL1271:
 11881 00d0 10BD     		pop	{r4, pc}
 11882              	.LVL1272:
 11883              	.L879:
8041:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8042:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_RST1) != RESET)
 11884              		.loc 1 8042 0
 11885 00d2 03EBC112 		add	r2, r3, r1, lsl #7
 11886 00d6 8832     		adds	r2, r2, #136
 11887 00d8 5268     		ldr	r2, [r2, #4]
 11888 00da 12F0806F 		tst	r2, #67108864
 11889 00de 03D0     		beq	.L880
8043:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8044:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Output1ResetCallback(hrtim, timer_idx);
 11890              		.loc 1 8044 0
 11891 00e0 2046     		mov	r0, r4
 11892              	.LVL1273:
 11893 00e2 FFF7FEFF 		bl	HAL_HRTIM_Output1ResetCallback
 11894              	.LVL1274:
 11895 00e6 10BD     		pop	{r4, pc}
 11896              	.LVL1275:
 11897              	.L880:
8045:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8046:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_SET2) != RESET)
 11898              		.loc 1 8046 0
 11899 00e8 03EBC112 		add	r2, r3, r1, lsl #7
 11900 00ec 8832     		adds	r2, r2, #136
 11901 00ee 5268     		ldr	r2, [r2, #4]
 11902 00f0 12F0006F 		tst	r2, #134217728
 11903 00f4 03D0     		beq	.L881
ARM GAS  /tmp/ccWQyto6.s 			page 375


8047:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8048:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Output2SetCallback(hrtim, timer_idx);
 11904              		.loc 1 8048 0
 11905 00f6 2046     		mov	r0, r4
 11906              	.LVL1276:
 11907 00f8 FFF7FEFF 		bl	HAL_HRTIM_Output2SetCallback
 11908              	.LVL1277:
 11909 00fc 10BD     		pop	{r4, pc}
 11910              	.LVL1278:
 11911              	.L881:
8049:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8050:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_RST2) != RESET)
 11912              		.loc 1 8050 0
 11913 00fe 03EBC112 		add	r2, r3, r1, lsl #7
 11914 0102 8832     		adds	r2, r2, #136
 11915 0104 5268     		ldr	r2, [r2, #4]
 11916 0106 12F0805F 		tst	r2, #268435456
 11917 010a 03D0     		beq	.L882
8051:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8052:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_Output2ResetCallback(hrtim, timer_idx);
 11918              		.loc 1 8052 0
 11919 010c 2046     		mov	r0, r4
 11920              	.LVL1279:
 11921 010e FFF7FEFF 		bl	HAL_HRTIM_Output2ResetCallback
 11922              	.LVL1280:
 11923 0112 10BD     		pop	{r4, pc}
 11924              	.LVL1281:
 11925              	.L882:
8053:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8054:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_RST) != RESET)
 11926              		.loc 1 8054 0
 11927 0114 03EBC112 		add	r2, r3, r1, lsl #7
 11928 0118 8832     		adds	r2, r2, #136
 11929 011a 5268     		ldr	r2, [r2, #4]
 11930 011c 12F0005F 		tst	r2, #536870912
 11931 0120 03D0     		beq	.L883
8055:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8056:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_CounterResetCallback(hrtim, timer_idx);
 11932              		.loc 1 8056 0
 11933 0122 2046     		mov	r0, r4
 11934              	.LVL1282:
 11935 0124 FFF7FEFF 		bl	HAL_HRTIM_CounterResetCallback
 11936              	.LVL1283:
 11937 0128 10BD     		pop	{r4, pc}
 11938              	.LVL1284:
 11939              	.L883:
8057:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8058:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if ((hrtim->Instance->sTimerxRegs[timer_idx].TIMxDIER & HRTIM_TIM_DMA_DLYPRT) != RESET)
 11940              		.loc 1 8058 0
 11941 012a 03EBC113 		add	r3, r3, r1, lsl #7
 11942 012e 8833     		adds	r3, r3, #136
 11943 0130 5B68     		ldr	r3, [r3, #4]
 11944 0132 13F0804F 		tst	r3, #1073741824
 11945 0136 02D0     		beq	.L869
8059:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   {
8060:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HAL_HRTIM_DelayedProtectionCallback(hrtim, timer_idx);
 11946              		.loc 1 8060 0
ARM GAS  /tmp/ccWQyto6.s 			page 376


 11947 0138 2046     		mov	r0, r4
 11948              	.LVL1285:
 11949 013a FFF7FEFF 		bl	HAL_HRTIM_DelayedProtectionCallback
 11950              	.LVL1286:
 11951              	.L869:
 11952 013e 10BD     		pop	{r4, pc}
 11953              		.cfi_endproc
 11954              	.LFE247:
 11956              		.section	.text.HRTIM_Timer_ISR,"ax",%progbits
 11957              		.align	2
 11958              		.thumb
 11959              		.thumb_func
 11961              	HRTIM_Timer_ISR:
 11962              	.LFB245:
7784:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 11963              		.loc 1 7784 0
 11964              		.cfi_startproc
 11965              		@ args = 0, pretend = 0, frame = 0
 11966              		@ frame_needed = 0, uses_anonymous_args = 0
 11967              	.LVL1287:
 11968 0000 38B5     		push	{r3, r4, r5, lr}
 11969              	.LCFI78:
 11970              		.cfi_def_cfa_offset 16
 11971              		.cfi_offset 3, -16
 11972              		.cfi_offset 4, -12
 11973              		.cfi_offset 5, -8
 11974              		.cfi_offset 14, -4
 11975 0002 0546     		mov	r5, r0
 11976 0004 0C46     		mov	r4, r1
7786:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP1) != RESET)
 11977              		.loc 1 7786 0
 11978 0006 0368     		ldr	r3, [r0]
 11979 0008 4A1C     		adds	r2, r1, #1
 11980 000a 03EBC212 		add	r2, r3, r2, lsl #7
 11981 000e 5268     		ldr	r2, [r2, #4]
 11982 0010 12F0010F 		tst	r2, #1
 11983 0014 0DD0     		beq	.L885
7788:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1) != RESET)
 11984              		.loc 1 7788 0
 11985 0016 03EBC112 		add	r2, r3, r1, lsl #7
 11986 001a 8832     		adds	r2, r2, #136
 11987 001c 5268     		ldr	r2, [r2, #4]
 11988 001e 12F0010F 		tst	r2, #1
 11989 0022 06D0     		beq	.L885
7790:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP1);
 11990              		.loc 1 7790 0
 11991 0024 03EBC113 		add	r3, r3, r1, lsl #7
 11992 0028 0122     		movs	r2, #1
 11993 002a C3F88820 		str	r2, [r3, #136]
7793:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare1EventCallback(hhrtim, TimerIdx);  
 11994              		.loc 1 7793 0
 11995 002e FFF7FEFF 		bl	HAL_HRTIM_Compare1EventCallback
 11996              	.LVL1288:
 11997              	.L885:
7798:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP2) != RESET)
 11998              		.loc 1 7798 0
 11999 0032 2B68     		ldr	r3, [r5]
ARM GAS  /tmp/ccWQyto6.s 			page 377


 12000 0034 621C     		adds	r2, r4, #1
 12001 0036 03EBC212 		add	r2, r3, r2, lsl #7
 12002 003a 5268     		ldr	r2, [r2, #4]
 12003 003c 12F0020F 		tst	r2, #2
 12004 0040 0FD0     		beq	.L886
7800:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2) != RESET)
 12005              		.loc 1 7800 0
 12006 0042 03EBC412 		add	r2, r3, r4, lsl #7
 12007 0046 8832     		adds	r2, r2, #136
 12008 0048 5268     		ldr	r2, [r2, #4]
 12009 004a 12F0020F 		tst	r2, #2
 12010 004e 08D0     		beq	.L886
7802:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP2);
 12011              		.loc 1 7802 0
 12012 0050 03EBC413 		add	r3, r3, r4, lsl #7
 12013 0054 0222     		movs	r2, #2
 12014 0056 C3F88820 		str	r2, [r3, #136]
7805:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare2EventCallback(hhrtim, TimerIdx);  
 12015              		.loc 1 7805 0
 12016 005a 2846     		mov	r0, r5
 12017 005c 2146     		mov	r1, r4
 12018 005e FFF7FEFF 		bl	HAL_HRTIM_Compare2EventCallback
 12019              	.LVL1289:
 12020              	.L886:
7810:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP3) != RESET)
 12021              		.loc 1 7810 0
 12022 0062 2B68     		ldr	r3, [r5]
 12023 0064 621C     		adds	r2, r4, #1
 12024 0066 03EBC212 		add	r2, r3, r2, lsl #7
 12025 006a 5268     		ldr	r2, [r2, #4]
 12026 006c 12F0040F 		tst	r2, #4
 12027 0070 0FD0     		beq	.L887
7812:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP3) != RESET)
 12028              		.loc 1 7812 0
 12029 0072 03EBC412 		add	r2, r3, r4, lsl #7
 12030 0076 8832     		adds	r2, r2, #136
 12031 0078 5268     		ldr	r2, [r2, #4]
 12032 007a 12F0040F 		tst	r2, #4
 12033 007e 08D0     		beq	.L887
7814:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP3);
 12034              		.loc 1 7814 0
 12035 0080 03EBC413 		add	r3, r3, r4, lsl #7
 12036 0084 0422     		movs	r2, #4
 12037 0086 C3F88820 		str	r2, [r3, #136]
7817:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare3EventCallback(hhrtim, TimerIdx);  
 12038              		.loc 1 7817 0
 12039 008a 2846     		mov	r0, r5
 12040 008c 2146     		mov	r1, r4
 12041 008e FFF7FEFF 		bl	HAL_HRTIM_Compare3EventCallback
 12042              	.LVL1290:
 12043              	.L887:
7822:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CMP4) != RESET)
 12044              		.loc 1 7822 0
 12045 0092 2B68     		ldr	r3, [r5]
 12046 0094 621C     		adds	r2, r4, #1
 12047 0096 03EBC212 		add	r2, r3, r2, lsl #7
 12048 009a 5268     		ldr	r2, [r2, #4]
ARM GAS  /tmp/ccWQyto6.s 			page 378


 12049 009c 12F0080F 		tst	r2, #8
 12050 00a0 0FD0     		beq	.L888
7824:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP4) != RESET)
 12051              		.loc 1 7824 0
 12052 00a2 03EBC412 		add	r2, r3, r4, lsl #7
 12053 00a6 8832     		adds	r2, r2, #136
 12054 00a8 5268     		ldr	r2, [r2, #4]
 12055 00aa 12F0080F 		tst	r2, #8
 12056 00ae 08D0     		beq	.L888
7826:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CMP4);
 12057              		.loc 1 7826 0
 12058 00b0 03EBC413 		add	r3, r3, r4, lsl #7
 12059 00b4 0822     		movs	r2, #8
 12060 00b6 C3F88820 		str	r2, [r3, #136]
7829:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Compare4EventCallback(hhrtim, TimerIdx);  
 12061              		.loc 1 7829 0
 12062 00ba 2846     		mov	r0, r5
 12063 00bc 2146     		mov	r1, r4
 12064 00be FFF7FEFF 		bl	HAL_HRTIM_Compare4EventCallback
 12065              	.LVL1291:
 12066              	.L888:
7834:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_REP) != RESET)
 12067              		.loc 1 7834 0
 12068 00c2 2B68     		ldr	r3, [r5]
 12069 00c4 621C     		adds	r2, r4, #1
 12070 00c6 03EBC212 		add	r2, r3, r2, lsl #7
 12071 00ca 5268     		ldr	r2, [r2, #4]
 12072 00cc 12F0100F 		tst	r2, #16
 12073 00d0 0FD0     		beq	.L889
7836:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_REP) != RESET)
 12074              		.loc 1 7836 0
 12075 00d2 03EBC412 		add	r2, r3, r4, lsl #7
 12076 00d6 8832     		adds	r2, r2, #136
 12077 00d8 5268     		ldr	r2, [r2, #4]
 12078 00da 12F0100F 		tst	r2, #16
 12079 00de 08D0     		beq	.L889
7838:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_REP);
 12080              		.loc 1 7838 0
 12081 00e0 03EBC413 		add	r3, r3, r4, lsl #7
 12082 00e4 1022     		movs	r2, #16
 12083 00e6 C3F88820 		str	r2, [r3, #136]
7841:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RepetitionEventCallback(hhrtim, TimerIdx);  
 12084              		.loc 1 7841 0
 12085 00ea 2846     		mov	r0, r5
 12086 00ec 2146     		mov	r1, r4
 12087 00ee FFF7FEFF 		bl	HAL_HRTIM_RepetitionEventCallback
 12088              	.LVL1292:
 12089              	.L889:
7846:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_UPD) != RESET)
 12090              		.loc 1 7846 0
 12091 00f2 2B68     		ldr	r3, [r5]
 12092 00f4 621C     		adds	r2, r4, #1
 12093 00f6 03EBC212 		add	r2, r3, r2, lsl #7
 12094 00fa 5268     		ldr	r2, [r2, #4]
 12095 00fc 12F0400F 		tst	r2, #64
 12096 0100 0FD0     		beq	.L890
7848:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_UPD) != RESET)
ARM GAS  /tmp/ccWQyto6.s 			page 379


 12097              		.loc 1 7848 0
 12098 0102 03EBC412 		add	r2, r3, r4, lsl #7
 12099 0106 8832     		adds	r2, r2, #136
 12100 0108 5268     		ldr	r2, [r2, #4]
 12101 010a 12F0400F 		tst	r2, #64
 12102 010e 08D0     		beq	.L890
7850:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_UPD);
 12103              		.loc 1 7850 0
 12104 0110 03EBC413 		add	r3, r3, r4, lsl #7
 12105 0114 4022     		movs	r2, #64
 12106 0116 C3F88820 		str	r2, [r3, #136]
7853:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_RegistersUpdateCallback(hhrtim, TimerIdx);  
 12107              		.loc 1 7853 0
 12108 011a 2846     		mov	r0, r5
 12109 011c 2146     		mov	r1, r4
 12110 011e FFF7FEFF 		bl	HAL_HRTIM_RegistersUpdateCallback
 12111              	.LVL1293:
 12112              	.L890:
7858:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CPT1) != RESET)
 12113              		.loc 1 7858 0
 12114 0122 2B68     		ldr	r3, [r5]
 12115 0124 621C     		adds	r2, r4, #1
 12116 0126 03EBC212 		add	r2, r3, r2, lsl #7
 12117 012a 5268     		ldr	r2, [r2, #4]
 12118 012c 12F0800F 		tst	r2, #128
 12119 0130 0FD0     		beq	.L891
7860:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1) != RESET)
 12120              		.loc 1 7860 0
 12121 0132 03EBC412 		add	r2, r3, r4, lsl #7
 12122 0136 8832     		adds	r2, r2, #136
 12123 0138 5268     		ldr	r2, [r2, #4]
 12124 013a 12F0800F 		tst	r2, #128
 12125 013e 08D0     		beq	.L891
7862:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT1);
 12126              		.loc 1 7862 0
 12127 0140 03EBC413 		add	r3, r3, r4, lsl #7
 12128 0144 8022     		movs	r2, #128
 12129 0146 C3F88820 		str	r2, [r3, #136]
7865:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Capture1EventCallback(hhrtim, TimerIdx);  
 12130              		.loc 1 7865 0
 12131 014a 2846     		mov	r0, r5
 12132 014c 2146     		mov	r1, r4
 12133 014e FFF7FEFF 		bl	HAL_HRTIM_Capture1EventCallback
 12134              	.LVL1294:
 12135              	.L891:
7870:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_CPT2) != RESET)
 12136              		.loc 1 7870 0
 12137 0152 2B68     		ldr	r3, [r5]
 12138 0154 621C     		adds	r2, r4, #1
 12139 0156 03EBC212 		add	r2, r3, r2, lsl #7
 12140 015a 5268     		ldr	r2, [r2, #4]
 12141 015c 12F4807F 		tst	r2, #256
 12142 0160 10D0     		beq	.L892
7872:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2) != RESET)
 12143              		.loc 1 7872 0
 12144 0162 03EBC412 		add	r2, r3, r4, lsl #7
 12145 0166 8832     		adds	r2, r2, #136
ARM GAS  /tmp/ccWQyto6.s 			page 380


 12146 0168 5268     		ldr	r2, [r2, #4]
 12147 016a 12F4807F 		tst	r2, #256
 12148 016e 09D0     		beq	.L892
7874:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_CPT2);
 12149              		.loc 1 7874 0
 12150 0170 03EBC413 		add	r3, r3, r4, lsl #7
 12151 0174 4FF48072 		mov	r2, #256
 12152 0178 C3F88820 		str	r2, [r3, #136]
7877:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Capture2EventCallback(hhrtim, TimerIdx);  
 12153              		.loc 1 7877 0
 12154 017c 2846     		mov	r0, r5
 12155 017e 2146     		mov	r1, r4
 12156 0180 FFF7FEFF 		bl	HAL_HRTIM_Capture2EventCallback
 12157              	.LVL1295:
 12158              	.L892:
7882:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_SET1) != RESET)
 12159              		.loc 1 7882 0
 12160 0184 2B68     		ldr	r3, [r5]
 12161 0186 621C     		adds	r2, r4, #1
 12162 0188 03EBC212 		add	r2, r3, r2, lsl #7
 12163 018c 5268     		ldr	r2, [r2, #4]
 12164 018e 12F4007F 		tst	r2, #512
 12165 0192 10D0     		beq	.L893
7884:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_SET1) != RESET)
 12166              		.loc 1 7884 0
 12167 0194 03EBC412 		add	r2, r3, r4, lsl #7
 12168 0198 8832     		adds	r2, r2, #136
 12169 019a 5268     		ldr	r2, [r2, #4]
 12170 019c 12F4007F 		tst	r2, #512
 12171 01a0 09D0     		beq	.L893
7886:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_SET1);
 12172              		.loc 1 7886 0
 12173 01a2 03EBC413 		add	r3, r3, r4, lsl #7
 12174 01a6 4FF40072 		mov	r2, #512
 12175 01aa C3F88820 		str	r2, [r3, #136]
7889:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output1SetCallback(hhrtim, TimerIdx);  
 12176              		.loc 1 7889 0
 12177 01ae 2846     		mov	r0, r5
 12178 01b0 2146     		mov	r1, r4
 12179 01b2 FFF7FEFF 		bl	HAL_HRTIM_Output1SetCallback
 12180              	.LVL1296:
 12181              	.L893:
7894:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_RST1) != RESET)
 12182              		.loc 1 7894 0
 12183 01b6 2B68     		ldr	r3, [r5]
 12184 01b8 621C     		adds	r2, r4, #1
 12185 01ba 03EBC212 		add	r2, r3, r2, lsl #7
 12186 01be 5268     		ldr	r2, [r2, #4]
 12187 01c0 12F4806F 		tst	r2, #1024
 12188 01c4 10D0     		beq	.L894
7896:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_RST1) != RESET)
 12189              		.loc 1 7896 0
 12190 01c6 03EBC412 		add	r2, r3, r4, lsl #7
 12191 01ca 8832     		adds	r2, r2, #136
 12192 01cc 5268     		ldr	r2, [r2, #4]
 12193 01ce 12F4806F 		tst	r2, #1024
 12194 01d2 09D0     		beq	.L894
ARM GAS  /tmp/ccWQyto6.s 			page 381


7898:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_RST1);
 12195              		.loc 1 7898 0
 12196 01d4 03EBC413 		add	r3, r3, r4, lsl #7
 12197 01d8 4FF48062 		mov	r2, #1024
 12198 01dc C3F88820 		str	r2, [r3, #136]
7901:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output1ResetCallback(hhrtim, TimerIdx);  
 12199              		.loc 1 7901 0
 12200 01e0 2846     		mov	r0, r5
 12201 01e2 2146     		mov	r1, r4
 12202 01e4 FFF7FEFF 		bl	HAL_HRTIM_Output1ResetCallback
 12203              	.LVL1297:
 12204              	.L894:
7906:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_SET2) != RESET)
 12205              		.loc 1 7906 0
 12206 01e8 2B68     		ldr	r3, [r5]
 12207 01ea 621C     		adds	r2, r4, #1
 12208 01ec 03EBC212 		add	r2, r3, r2, lsl #7
 12209 01f0 5268     		ldr	r2, [r2, #4]
 12210 01f2 12F4006F 		tst	r2, #2048
 12211 01f6 10D0     		beq	.L895
7908:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_SET2) != RESET)
 12212              		.loc 1 7908 0
 12213 01f8 03EBC412 		add	r2, r3, r4, lsl #7
 12214 01fc 8832     		adds	r2, r2, #136
 12215 01fe 5268     		ldr	r2, [r2, #4]
 12216 0200 12F4006F 		tst	r2, #2048
 12217 0204 09D0     		beq	.L895
7910:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_SET2);
 12218              		.loc 1 7910 0
 12219 0206 03EBC413 		add	r3, r3, r4, lsl #7
 12220 020a 4FF40062 		mov	r2, #2048
 12221 020e C3F88820 		str	r2, [r3, #136]
7913:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output2SetCallback(hhrtim, TimerIdx);  
 12222              		.loc 1 7913 0
 12223 0212 2846     		mov	r0, r5
 12224 0214 2146     		mov	r1, r4
 12225 0216 FFF7FEFF 		bl	HAL_HRTIM_Output2SetCallback
 12226              	.LVL1298:
 12227              	.L895:
7918:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_RST2) != RESET)
 12228              		.loc 1 7918 0
 12229 021a 2B68     		ldr	r3, [r5]
 12230 021c 621C     		adds	r2, r4, #1
 12231 021e 03EBC212 		add	r2, r3, r2, lsl #7
 12232 0222 5268     		ldr	r2, [r2, #4]
 12233 0224 12F4805F 		tst	r2, #4096
 12234 0228 10D0     		beq	.L896
7920:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_RST2) != RESET)
 12235              		.loc 1 7920 0
 12236 022a 03EBC412 		add	r2, r3, r4, lsl #7
 12237 022e 8832     		adds	r2, r2, #136
 12238 0230 5268     		ldr	r2, [r2, #4]
 12239 0232 12F4805F 		tst	r2, #4096
 12240 0236 09D0     		beq	.L896
7922:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_RST2);
 12241              		.loc 1 7922 0
 12242 0238 03EBC413 		add	r3, r3, r4, lsl #7
ARM GAS  /tmp/ccWQyto6.s 			page 382


 12243 023c 4FF48052 		mov	r2, #4096
 12244 0240 C3F88820 		str	r2, [r3, #136]
7925:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_Output2ResetCallback(hhrtim, TimerIdx);  
 12245              		.loc 1 7925 0
 12246 0244 2846     		mov	r0, r5
 12247 0246 2146     		mov	r1, r4
 12248 0248 FFF7FEFF 		bl	HAL_HRTIM_Output2ResetCallback
 12249              	.LVL1299:
 12250              	.L896:
7930:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_RST) != RESET)
 12251              		.loc 1 7930 0
 12252 024c 2B68     		ldr	r3, [r5]
 12253 024e 621C     		adds	r2, r4, #1
 12254 0250 03EBC212 		add	r2, r3, r2, lsl #7
 12255 0254 5268     		ldr	r2, [r2, #4]
 12256 0256 12F4005F 		tst	r2, #8192
 12257 025a 10D0     		beq	.L897
7932:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_RST) != RESET)
 12258              		.loc 1 7932 0
 12259 025c 03EBC412 		add	r2, r3, r4, lsl #7
 12260 0260 8832     		adds	r2, r2, #136
 12261 0262 5268     		ldr	r2, [r2, #4]
 12262 0264 12F4005F 		tst	r2, #8192
 12263 0268 09D0     		beq	.L897
7934:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_RST);
 12264              		.loc 1 7934 0
 12265 026a 03EBC413 		add	r3, r3, r4, lsl #7
 12266 026e 4FF40052 		mov	r2, #8192
 12267 0272 C3F88820 		str	r2, [r3, #136]
7937:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_CounterResetCallback(hhrtim, TimerIdx);  
 12268              		.loc 1 7937 0
 12269 0276 2846     		mov	r0, r5
 12270 0278 2146     		mov	r1, r4
 12271 027a FFF7FEFF 		bl	HAL_HRTIM_CounterResetCallback
 12272              	.LVL1300:
 12273              	.L897:
7942:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if(__HAL_HRTIM_TIMER_GET_FLAG(hhrtim, TimerIdx, HRTIM_TIM_FLAG_DLYPRT) != RESET)
 12274              		.loc 1 7942 0
 12275 027e 2B68     		ldr	r3, [r5]
 12276 0280 621C     		adds	r2, r4, #1
 12277 0282 03EBC212 		add	r2, r3, r2, lsl #7
 12278 0286 5268     		ldr	r2, [r2, #4]
 12279 0288 12F4804F 		tst	r2, #16384
 12280 028c 10D0     		beq	.L884
7944:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     if(__HAL_HRTIM_TIMER_GET_ITSTATUS(hhrtim, TimerIdx, HRTIM_TIM_IT_DLYPRT) != RESET)
 12281              		.loc 1 7944 0
 12282 028e 03EBC412 		add	r2, r3, r4, lsl #7
 12283 0292 8832     		adds	r2, r2, #136
 12284 0294 5268     		ldr	r2, [r2, #4]
 12285 0296 12F4804F 		tst	r2, #16384
 12286 029a 09D0     		beq	.L884
7946:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       __HAL_HRTIM_TIMER_CLEAR_IT(hhrtim, TimerIdx, HRTIM_TIM_IT_DLYPRT);
 12287              		.loc 1 7946 0
 12288 029c 03EBC413 		add	r3, r3, r4, lsl #7
 12289 02a0 4FF48042 		mov	r2, #16384
 12290 02a4 C3F88820 		str	r2, [r3, #136]
7949:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HAL_HRTIM_DelayedProtectionCallback(hhrtim, TimerIdx);  
ARM GAS  /tmp/ccWQyto6.s 			page 383


 12291              		.loc 1 7949 0
 12292 02a8 2846     		mov	r0, r5
 12293 02aa 2146     		mov	r1, r4
 12294 02ac FFF7FEFF 		bl	HAL_HRTIM_DelayedProtectionCallback
 12295              	.LVL1301:
 12296              	.L884:
 12297 02b0 38BD     		pop	{r3, r4, r5, pc}
 12298              		.cfi_endproc
 12299              	.LFE245:
 12301 02b2 00BF     		.section	.text.HAL_HRTIM_IRQHandler,"ax",%progbits
 12302              		.align	2
 12303              		.global	HAL_HRTIM_IRQHandler
 12304              		.thumb
 12305              		.thumb_func
 12307              	HAL_HRTIM_IRQHandler:
 12308              	.LFB203:
5961:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 12309              		.loc 1 5961 0
 12310              		.cfi_startproc
 12311              		@ args = 0, pretend = 0, frame = 0
 12312              		@ frame_needed = 0, uses_anonymous_args = 0
 12313              	.LVL1302:
 12314 0000 08B5     		push	{r3, lr}
 12315              	.LCFI79:
 12316              		.cfi_def_cfa_offset 8
 12317              		.cfi_offset 3, -8
 12318              		.cfi_offset 14, -4
5963:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   if (TimerIdx == HRTIM_TIMERINDEX_COMMON)
 12319              		.loc 1 5963 0
 12320 0002 FF29     		cmp	r1, #255
 12321 0004 02D1     		bne	.L900
5965:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_HRTIM_ISR(hhrtim);
 12322              		.loc 1 5965 0
 12323 0006 FFF7FEFF 		bl	HRTIM_HRTIM_ISR
 12324              	.LVL1303:
 12325 000a 08BD     		pop	{r3, pc}
 12326              	.LVL1304:
 12327              	.L900:
5967:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   else if (TimerIdx == HRTIM_TIMERINDEX_MASTER)
 12328              		.loc 1 5967 0
 12329 000c 0529     		cmp	r1, #5
 12330 000e 02D1     		bne	.L902
5970:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****       HRTIM_Master_ISR(hhrtim);
 12331              		.loc 1 5970 0
 12332 0010 FFF7FEFF 		bl	HRTIM_Master_ISR
 12333              	.LVL1305:
 12334 0014 08BD     		pop	{r3, pc}
 12335              	.LVL1306:
 12336              	.L902:
5975:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****     HRTIM_Timer_ISR(hhrtim, TimerIdx);
 12337              		.loc 1 5975 0
 12338 0016 FFF7FEFF 		bl	HRTIM_Timer_ISR
 12339              	.LVL1307:
 12340 001a 08BD     		pop	{r3, pc}
 12341              		.cfi_endproc
 12342              	.LFE203:
 12344              		.section	.text.HAL_HRTIM_BurstDMATransferCallback,"ax",%progbits
ARM GAS  /tmp/ccWQyto6.s 			page 384


 12345              		.align	2
 12346              		.weak	HAL_HRTIM_BurstDMATransferCallback
 12347              		.thumb
 12348              		.thumb_func
 12350              	HAL_HRTIM_BurstDMATransferCallback:
 12351              	.LFB227:
6478:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 12352              		.loc 1 6478 0
 12353              		.cfi_startproc
 12354              		@ args = 0, pretend = 0, frame = 0
 12355              		@ frame_needed = 0, uses_anonymous_args = 0
 12356              		@ link register save eliminated.
 12357              	.LVL1308:
 12358 0000 7047     		bx	lr
 12359              		.cfi_endproc
 12360              	.LFE227:
 12362 0002 00BF     		.section	.text.HRTIM_BurstDMACplt,"ax",%progbits
 12363              		.align	2
 12364              		.thumb
 12365              		.thumb_func
 12367              	HRTIM_BurstDMACplt:
 12368              	.LFB249:
8061:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   }
8062:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
8063:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
8064:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
8065:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** * @brief  DMA error callback 
8066:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** * @param  hdma: pointer to DMA handle.
8067:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** * @retval None
8068:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** */
8069:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_DMAError(DMA_HandleTypeDef *hdma)
8070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
8071:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_HandleTypeDef * hrtim = (HRTIM_HandleTypeDef *)((DMA_HandleTypeDef* )hdma)->Parent;
8072:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
8073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_HRTIM_ErrorCallback(hrtim);
8074:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** }
8075:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** 
8076:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** /**
8077:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @brief  DMA callback invoked upon burst DMA transfer completion
8078:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @param  hdma: pointer to DMA handle.
8079:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   * @retval None
8080:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   */
8081:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** static void HRTIM_BurstDMACplt(DMA_HandleTypeDef *hdma)
8082:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 12369              		.loc 1 8082 0
 12370              		.cfi_startproc
 12371              		@ args = 0, pretend = 0, frame = 0
 12372              		@ frame_needed = 0, uses_anonymous_args = 0
 12373              	.LVL1309:
 12374              		.loc 1 8082 0
 12375 0000 10B5     		push	{r4, lr}
 12376              	.LCFI80:
 12377              		.cfi_def_cfa_offset 8
 12378              		.cfi_offset 4, -8
 12379              		.cfi_offset 14, -4
8083:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HRTIM_HandleTypeDef * hrtim = (HRTIM_HandleTypeDef *)((DMA_HandleTypeDef* )hdma)->Parent;
 12380              		.loc 1 8083 0
ARM GAS  /tmp/ccWQyto6.s 			page 385


 12381 0002 446A     		ldr	r4, [r0, #36]
 12382              	.LVL1310:
8084:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   
8085:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_HRTIM_BurstDMATransferCallback(hrtim, GetTimerIdxFromDMAHandle(hdma));
 12383              		.loc 1 8085 0
 12384 0004 FFF7FEFF 		bl	GetTimerIdxFromDMAHandle
 12385              	.LVL1311:
 12386 0008 0146     		mov	r1, r0
 12387 000a 2046     		mov	r0, r4
 12388 000c FFF7FEFF 		bl	HAL_HRTIM_BurstDMATransferCallback
 12389              	.LVL1312:
 12390 0010 10BD     		pop	{r4, pc}
 12391              		.cfi_endproc
 12392              	.LFE249:
 12394 0012 00BF     		.section	.text.HAL_HRTIM_ErrorCallback,"ax",%progbits
 12395              		.align	2
 12396              		.weak	HAL_HRTIM_ErrorCallback
 12397              		.thumb
 12398              		.thumb_func
 12400              	HAL_HRTIM_ErrorCallback:
 12401              	.LFB228:
6494:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 12402              		.loc 1 6494 0
 12403              		.cfi_startproc
 12404              		@ args = 0, pretend = 0, frame = 0
 12405              		@ frame_needed = 0, uses_anonymous_args = 0
 12406              		@ link register save eliminated.
 12407              	.LVL1313:
 12408 0000 7047     		bx	lr
 12409              		.cfi_endproc
 12410              	.LFE228:
 12412 0002 00BF     		.section	.text.HRTIM_DMAError,"ax",%progbits
 12413              		.align	2
 12414              		.thumb
 12415              		.thumb_func
 12417              	HRTIM_DMAError:
 12418              	.LFB248:
8070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 12419              		.loc 1 8070 0
 12420              		.cfi_startproc
 12421              		@ args = 0, pretend = 0, frame = 0
 12422              		@ frame_needed = 0, uses_anonymous_args = 0
 12423              	.LVL1314:
8070:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c **** {
 12424              		.loc 1 8070 0
 12425 0000 08B5     		push	{r3, lr}
 12426              	.LCFI81:
 12427              		.cfi_def_cfa_offset 8
 12428              		.cfi_offset 3, -8
 12429              		.cfi_offset 14, -4
 12430              	.LVL1315:
8073:Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_hrtim.c ****   HAL_HRTIM_ErrorCallback(hrtim);
 12431              		.loc 1 8073 0
 12432 0002 406A     		ldr	r0, [r0, #36]
 12433              	.LVL1316:
 12434 0004 FFF7FEFF 		bl	HAL_HRTIM_ErrorCallback
 12435              	.LVL1317:
ARM GAS  /tmp/ccWQyto6.s 			page 386


 12436 0008 08BD     		pop	{r3, pc}
 12437              		.cfi_endproc
 12438              	.LFE248:
 12440 000a 00BF     		.section	.rodata.TimerIdxToTimerId,"a",%progbits
 12441              		.align	2
 12442              		.set	.LANCHOR0,. + 0
 12445              	TimerIdxToTimerId:
 12446 0000 00000200 		.word	131072
 12447 0004 00000400 		.word	262144
 12448 0008 00000800 		.word	524288
 12449 000c 00001000 		.word	1048576
 12450 0010 00002000 		.word	2097152
 12451 0014 00000100 		.word	65536
 12452              		.text
 12453              	.Letext0:
 12454              		.file 2 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/machine/_defaul
 12455              		.file 3 "/home/niklas/Downloads/gcc-arm-none-eabi-4_8-2014q3/arm-none-eabi/include/stdint.h"
 12456              		.file 4 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f334x8.h"
 12457              		.file 5 "Drivers/CMSIS/Device/ST/STM32F3xx/Include/stm32f3xx.h"
 12458              		.file 6 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_def.h"
 12459              		.file 7 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_dma.h"
 12460              		.file 8 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal_hrtim.h"
 12461              		.file 9 "Drivers/CMSIS/Include/core_cm4.h"
 12462              		.file 10 "Drivers/STM32F3xx_HAL_Driver/Inc/stm32f3xx_hal.h"
ARM GAS  /tmp/ccWQyto6.s 			page 387


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f3xx_hal_hrtim.c
     /tmp/ccWQyto6.s:21     .text.HRTIM_MasterBase_Config:00000000 $t
     /tmp/ccWQyto6.s:25     .text.HRTIM_MasterBase_Config:00000000 HRTIM_MasterBase_Config
     /tmp/ccWQyto6.s:74     .text.HRTIM_TimingUnitBase_Config:00000000 $t
     /tmp/ccWQyto6.s:78     .text.HRTIM_TimingUnitBase_Config:00000000 HRTIM_TimingUnitBase_Config
     /tmp/ccWQyto6.s:135    .text.HRTIM_MasterWaveform_Config:00000000 $t
     /tmp/ccWQyto6.s:139    .text.HRTIM_MasterWaveform_Config:00000000 HRTIM_MasterWaveform_Config
     /tmp/ccWQyto6.s:228    .text.HRTIM_TimingUnitWaveform_Config:00000000 $t
     /tmp/ccWQyto6.s:232    .text.HRTIM_TimingUnitWaveform_Config:00000000 HRTIM_TimingUnitWaveform_Config
     /tmp/ccWQyto6.s:397    .text.HRTIM_TimingUnitWaveform_Config:000000d8 $d
     /tmp/ccWQyto6.s:490    .text.HRTIM_CompareUnitConfig:00000000 $t
     /tmp/ccWQyto6.s:494    .text.HRTIM_CompareUnitConfig:00000000 HRTIM_CompareUnitConfig
     /tmp/ccWQyto6.s:517    .text.HRTIM_CompareUnitConfig:00000010 $d
     /tmp/ccWQyto6.s:525    .text.HRTIM_CompareUnitConfig:00000018 $t
     /tmp/ccWQyto6.s:571    .text.HRTIM_CompareUnitConfig:00000042 $d
     /tmp/ccWQyto6.s:579    .text.HRTIM_CompareUnitConfig:0000004a $t
     /tmp/ccWQyto6.s:630    .text.HRTIM_CaptureUnitConfig:00000000 $t
     /tmp/ccWQyto6.s:634    .text.HRTIM_CaptureUnitConfig:00000000 HRTIM_CaptureUnitConfig
     /tmp/ccWQyto6.s:774    .text.HRTIM_OutputConfig:00000000 $t
     /tmp/ccWQyto6.s:778    .text.HRTIM_OutputConfig:00000000 HRTIM_OutputConfig
     /tmp/ccWQyto6.s:934    .text.HRTIM_EventConfig:00000000 $t
     /tmp/ccWQyto6.s:938    .text.HRTIM_EventConfig:00000000 HRTIM_EventConfig
     /tmp/ccWQyto6.s:1337   .text.HRTIM_TIM_ResetConfig:00000000 $t
     /tmp/ccWQyto6.s:1341   .text.HRTIM_TIM_ResetConfig:00000000 HRTIM_TIM_ResetConfig
     /tmp/ccWQyto6.s:1482   .text.HRTIM_GetITFromOCMode:00000000 $t
     /tmp/ccWQyto6.s:1486   .text.HRTIM_GetITFromOCMode:00000000 HRTIM_GetITFromOCMode
     /tmp/ccWQyto6.s:1646   .text.HRTIM_GetDMAFromOCMode:00000000 $t
     /tmp/ccWQyto6.s:1650   .text.HRTIM_GetDMAFromOCMode:00000000 HRTIM_GetDMAFromOCMode
     /tmp/ccWQyto6.s:1810   .text.HRTIM_GetDMAHandleFromTimerIdx:00000000 $t
     /tmp/ccWQyto6.s:1814   .text.HRTIM_GetDMAHandleFromTimerIdx:00000000 HRTIM_GetDMAHandleFromTimerIdx
     /tmp/ccWQyto6.s:1827   .text.HRTIM_GetDMAHandleFromTimerIdx:00000008 $d
     /tmp/ccWQyto6.s:1833   .text.HRTIM_GetDMAHandleFromTimerIdx:0000000e $t
     /tmp/ccWQyto6.s:1886   .text.GetTimerIdxFromDMAHandle:00000000 $t
     /tmp/ccWQyto6.s:1890   .text.GetTimerIdxFromDMAHandle:00000000 GetTimerIdxFromDMAHandle
     /tmp/ccWQyto6.s:1967   .text.GetTimerIdxFromDMAHandle:00000044 $d
     /tmp/ccWQyto6.s:1972   .text.HRTIM_ForceRegistersUpdate:00000000 $t
     /tmp/ccWQyto6.s:1976   .text.HRTIM_ForceRegistersUpdate:00000000 HRTIM_ForceRegistersUpdate
     /tmp/ccWQyto6.s:1989   .text.HRTIM_ForceRegistersUpdate:00000008 $d
     /tmp/ccWQyto6.s:1995   .text.HRTIM_ForceRegistersUpdate:0000000e $t
     /tmp/ccWQyto6.s:2048   .text.HAL_HRTIM_MspInit:00000000 $t
     /tmp/ccWQyto6.s:2053   .text.HAL_HRTIM_MspInit:00000000 HAL_HRTIM_MspInit
     /tmp/ccWQyto6.s:2066   .text.HAL_HRTIM_Init:00000000 $t
     /tmp/ccWQyto6.s:2071   .text.HAL_HRTIM_Init:00000000 HAL_HRTIM_Init
     /tmp/ccWQyto6.s:2233   .text.HAL_HRTIM_Init:000000c4 $d
     /tmp/ccWQyto6.s:2239   .text.HAL_HRTIM_MspDeInit:00000000 $t
     /tmp/ccWQyto6.s:2244   .text.HAL_HRTIM_MspDeInit:00000000 HAL_HRTIM_MspDeInit
     /tmp/ccWQyto6.s:2257   .text.HAL_HRTIM_DeInit:00000000 $t
     /tmp/ccWQyto6.s:2262   .text.HAL_HRTIM_DeInit:00000000 HAL_HRTIM_DeInit
     /tmp/ccWQyto6.s:2301   .text.HAL_HRTIM_DLLCalibrationStart:00000000 $t
     /tmp/ccWQyto6.s:2306   .text.HAL_HRTIM_DLLCalibrationStart:00000000 HAL_HRTIM_DLLCalibrationStart
     /tmp/ccWQyto6.s:2366   .text.HAL_HRTIM_DLLCalibrationStart_IT:00000000 $t
     /tmp/ccWQyto6.s:2371   .text.HAL_HRTIM_DLLCalibrationStart_IT:00000000 HAL_HRTIM_DLLCalibrationStart_IT
     /tmp/ccWQyto6.s:2436   .text.HAL_HRTIM_PollForDLLCalibration:00000000 $t
     /tmp/ccWQyto6.s:2441   .text.HAL_HRTIM_PollForDLLCalibration:00000000 HAL_HRTIM_PollForDLLCalibration
     /tmp/ccWQyto6.s:2504   .text.HAL_HRTIM_TimeBaseConfig:00000000 $t
     /tmp/ccWQyto6.s:2509   .text.HAL_HRTIM_TimeBaseConfig:00000000 HAL_HRTIM_TimeBaseConfig
ARM GAS  /tmp/ccWQyto6.s 			page 388


     /tmp/ccWQyto6.s:2562   .text.HAL_HRTIM_SimpleBaseStart:00000000 $t
     /tmp/ccWQyto6.s:2567   .text.HAL_HRTIM_SimpleBaseStart:00000000 HAL_HRTIM_SimpleBaseStart
     /tmp/ccWQyto6.s:2619   .text.HAL_HRTIM_SimpleBaseStart:00000038 $d
     /tmp/ccWQyto6.s:2624   .text.HAL_HRTIM_SimpleBaseStop:00000000 $t
     /tmp/ccWQyto6.s:2629   .text.HAL_HRTIM_SimpleBaseStop:00000000 HAL_HRTIM_SimpleBaseStop
     /tmp/ccWQyto6.s:2748   .text.HAL_HRTIM_SimpleBaseStop:000000e0 $d
     /tmp/ccWQyto6.s:2753   .text.HAL_HRTIM_SimpleBaseStart_IT:00000000 $t
     /tmp/ccWQyto6.s:2758   .text.HAL_HRTIM_SimpleBaseStart_IT:00000000 HAL_HRTIM_SimpleBaseStart_IT
     /tmp/ccWQyto6.s:2826   .text.HAL_HRTIM_SimpleBaseStart_IT:00000060 $d
     /tmp/ccWQyto6.s:2831   .text.HAL_HRTIM_SimpleBaseStop_IT:00000000 $t
     /tmp/ccWQyto6.s:2836   .text.HAL_HRTIM_SimpleBaseStop_IT:00000000 HAL_HRTIM_SimpleBaseStop_IT
     /tmp/ccWQyto6.s:2972   .text.HAL_HRTIM_SimpleBaseStop_IT:00000100 $d
     /tmp/ccWQyto6.s:2977   .text.HAL_HRTIM_SimpleBaseStart_DMA:00000000 $t
     /tmp/ccWQyto6.s:2982   .text.HAL_HRTIM_SimpleBaseStart_DMA:00000000 HAL_HRTIM_SimpleBaseStart_DMA
     /tmp/ccWQyto6.s:3121   .text.HAL_HRTIM_SimpleBaseStart_DMA:000000b8 $d
     /tmp/ccWQyto6.s:11307  .text.HRTIM_DMAMasterCplt:00000000 HRTIM_DMAMasterCplt
     /tmp/ccWQyto6.s:11737  .text.HRTIM_DMATimerxCplt:00000000 HRTIM_DMATimerxCplt
     /tmp/ccWQyto6.s:12417  .text.HRTIM_DMAError:00000000 HRTIM_DMAError
     /tmp/ccWQyto6.s:3129   .text.HAL_HRTIM_SimpleBaseStop_DMA:00000000 $t
     /tmp/ccWQyto6.s:3134   .text.HAL_HRTIM_SimpleBaseStop_DMA:00000000 HAL_HRTIM_SimpleBaseStop_DMA
     /tmp/ccWQyto6.s:3286   .text.HAL_HRTIM_SimpleBaseStop_DMA:00000110 $d
     /tmp/ccWQyto6.s:3291   .text.HAL_HRTIM_SimpleOCChannelConfig:00000000 $t
     /tmp/ccWQyto6.s:3296   .text.HAL_HRTIM_SimpleOCChannelConfig:00000000 HAL_HRTIM_SimpleOCChannelConfig
     /tmp/ccWQyto6.s:3504   .text.HAL_HRTIM_SimpleOCStart:00000000 $t
     /tmp/ccWQyto6.s:3509   .text.HAL_HRTIM_SimpleOCStart:00000000 HAL_HRTIM_SimpleOCStart
     /tmp/ccWQyto6.s:3567   .text.HAL_HRTIM_SimpleOCStart:00000044 $d
     /tmp/ccWQyto6.s:3572   .text.HAL_HRTIM_SimpleOCStop:00000000 $t
     /tmp/ccWQyto6.s:3577   .text.HAL_HRTIM_SimpleOCStop:00000000 HAL_HRTIM_SimpleOCStop
     /tmp/ccWQyto6.s:3708   .text.HAL_HRTIM_SimpleOCStop:000000f0 $d
     /tmp/ccWQyto6.s:3713   .text.HAL_HRTIM_SimpleOCStart_IT:00000000 $t
     /tmp/ccWQyto6.s:3718   .text.HAL_HRTIM_SimpleOCStart_IT:00000000 HAL_HRTIM_SimpleOCStart_IT
     /tmp/ccWQyto6.s:3788   .text.HAL_HRTIM_SimpleOCStart_IT:0000005c $d
     /tmp/ccWQyto6.s:3793   .text.HAL_HRTIM_SimpleOCStop_IT:00000000 $t
     /tmp/ccWQyto6.s:3798   .text.HAL_HRTIM_SimpleOCStop_IT:00000000 HAL_HRTIM_SimpleOCStop_IT
     /tmp/ccWQyto6.s:3941   .text.HAL_HRTIM_SimpleOCStop_IT:00000108 $d
     /tmp/ccWQyto6.s:3946   .text.HAL_HRTIM_SimpleOCStart_DMA:00000000 $t
     /tmp/ccWQyto6.s:3951   .text.HAL_HRTIM_SimpleOCStart_DMA:00000000 HAL_HRTIM_SimpleOCStart_DMA
     /tmp/ccWQyto6.s:4082   .text.HAL_HRTIM_SimpleOCStart_DMA:000000c0 $d
     /tmp/ccWQyto6.s:4089   .text.HAL_HRTIM_SimpleOCStop_DMA:00000000 $t
     /tmp/ccWQyto6.s:4094   .text.HAL_HRTIM_SimpleOCStop_DMA:00000000 HAL_HRTIM_SimpleOCStop_DMA
     /tmp/ccWQyto6.s:4246   .text.HAL_HRTIM_SimpleOCStop_DMA:00000114 $d
     /tmp/ccWQyto6.s:4251   .text.HAL_HRTIM_SimplePWMChannelConfig:00000000 $t
     /tmp/ccWQyto6.s:4256   .text.HAL_HRTIM_SimplePWMChannelConfig:00000000 HAL_HRTIM_SimplePWMChannelConfig
     /tmp/ccWQyto6.s:4437   .text.HAL_HRTIM_SimplePWMStart:00000000 $t
     /tmp/ccWQyto6.s:4442   .text.HAL_HRTIM_SimplePWMStart:00000000 HAL_HRTIM_SimplePWMStart
     /tmp/ccWQyto6.s:4500   .text.HAL_HRTIM_SimplePWMStart:00000044 $d
     /tmp/ccWQyto6.s:4505   .text.HAL_HRTIM_SimplePWMStop:00000000 $t
     /tmp/ccWQyto6.s:4510   .text.HAL_HRTIM_SimplePWMStop:00000000 HAL_HRTIM_SimplePWMStop
     /tmp/ccWQyto6.s:4641   .text.HAL_HRTIM_SimplePWMStop:000000f0 $d
     /tmp/ccWQyto6.s:4646   .text.HAL_HRTIM_SimplePWMStart_IT:00000000 $t
     /tmp/ccWQyto6.s:4651   .text.HAL_HRTIM_SimplePWMStart_IT:00000000 HAL_HRTIM_SimplePWMStart_IT
     /tmp/ccWQyto6.s:4758   .text.HAL_HRTIM_SimplePWMStart_IT:000000a8 $d
     /tmp/ccWQyto6.s:4763   .text.HAL_HRTIM_SimplePWMStop_IT:00000000 $t
     /tmp/ccWQyto6.s:4768   .text.HAL_HRTIM_SimplePWMStop_IT:00000000 HAL_HRTIM_SimplePWMStop_IT
     /tmp/ccWQyto6.s:4949   .text.HAL_HRTIM_SimplePWMStop_IT:00000154 $d
     /tmp/ccWQyto6.s:4954   .text.HAL_HRTIM_SimplePWMStart_DMA:00000000 $t
     /tmp/ccWQyto6.s:4959   .text.HAL_HRTIM_SimplePWMStart_DMA:00000000 HAL_HRTIM_SimplePWMStart_DMA
ARM GAS  /tmp/ccWQyto6.s 			page 389


     /tmp/ccWQyto6.s:5127   .text.HAL_HRTIM_SimplePWMStart_DMA:000000f8 $d
     /tmp/ccWQyto6.s:5134   .text.HAL_HRTIM_SimplePWMStop_DMA:00000000 $t
     /tmp/ccWQyto6.s:5139   .text.HAL_HRTIM_SimplePWMStop_DMA:00000000 HAL_HRTIM_SimplePWMStop_DMA
     /tmp/ccWQyto6.s:5326   .text.HAL_HRTIM_SimplePWMStop_DMA:0000015c $d
     /tmp/ccWQyto6.s:5331   .text.HAL_HRTIM_SimpleCaptureChannelConfig:00000000 $t
     /tmp/ccWQyto6.s:5336   .text.HAL_HRTIM_SimpleCaptureChannelConfig:00000000 HAL_HRTIM_SimpleCaptureChannelConfig
     /tmp/ccWQyto6.s:5432   .text.HAL_HRTIM_SimpleCaptureStart:00000000 $t
     /tmp/ccWQyto6.s:5437   .text.HAL_HRTIM_SimpleCaptureStart:00000000 HAL_HRTIM_SimpleCaptureStart
     /tmp/ccWQyto6.s:5518   .text.HAL_HRTIM_SimpleCaptureStart:00000070 $d
     /tmp/ccWQyto6.s:5523   .text.HAL_HRTIM_SimpleCaptureStop:00000000 $t
     /tmp/ccWQyto6.s:5528   .text.HAL_HRTIM_SimpleCaptureStop:00000000 HAL_HRTIM_SimpleCaptureStop
     /tmp/ccWQyto6.s:5683   .text.HAL_HRTIM_SimpleCaptureStop:0000011c $d
     /tmp/ccWQyto6.s:5688   .text.HAL_HRTIM_SimpleCaptureStart_IT:00000000 $t
     /tmp/ccWQyto6.s:5693   .text.HAL_HRTIM_SimpleCaptureStart_IT:00000000 HAL_HRTIM_SimpleCaptureStart_IT
     /tmp/ccWQyto6.s:5788   .text.HAL_HRTIM_SimpleCaptureStart_IT:00000090 $d
     /tmp/ccWQyto6.s:5793   .text.HAL_HRTIM_SimpleCaptureStop_IT:00000000 $t
     /tmp/ccWQyto6.s:5798   .text.HAL_HRTIM_SimpleCaptureStop_IT:00000000 HAL_HRTIM_SimpleCaptureStop_IT
     /tmp/ccWQyto6.s:5973   .text.HAL_HRTIM_SimpleCaptureStop_IT:00000144 $d
     /tmp/ccWQyto6.s:5978   .text.HAL_HRTIM_SimpleCaptureStart_DMA:00000000 $t
     /tmp/ccWQyto6.s:5983   .text.HAL_HRTIM_SimpleCaptureStart_DMA:00000000 HAL_HRTIM_SimpleCaptureStart_DMA
     /tmp/ccWQyto6.s:6097   .text.HAL_HRTIM_SimpleCaptureStart_DMA:000000ac $d
     /tmp/ccWQyto6.s:6104   .text.HAL_HRTIM_SimpleCaptureStop_DMA:00000000 $t
     /tmp/ccWQyto6.s:6109   .text.HAL_HRTIM_SimpleCaptureStop_DMA:00000000 HAL_HRTIM_SimpleCaptureStop_DMA
     /tmp/ccWQyto6.s:6289   .text.HAL_HRTIM_SimpleCaptureStop_DMA:0000014c $d
     /tmp/ccWQyto6.s:6294   .text.HAL_HRTIM_SimpleOnePulseChannelConfig:00000000 $t
     /tmp/ccWQyto6.s:6299   .text.HAL_HRTIM_SimpleOnePulseChannelConfig:00000000 HAL_HRTIM_SimpleOnePulseChannelConfig
     /tmp/ccWQyto6.s:6496   .text.HAL_HRTIM_SimpleOnePulseStart:00000000 $t
     /tmp/ccWQyto6.s:6501   .text.HAL_HRTIM_SimpleOnePulseStart:00000000 HAL_HRTIM_SimpleOnePulseStart
     /tmp/ccWQyto6.s:6559   .text.HAL_HRTIM_SimpleOnePulseStart:00000044 $d
     /tmp/ccWQyto6.s:6564   .text.HAL_HRTIM_SimpleOnePulseStop:00000000 $t
     /tmp/ccWQyto6.s:6569   .text.HAL_HRTIM_SimpleOnePulseStop:00000000 HAL_HRTIM_SimpleOnePulseStop
     /tmp/ccWQyto6.s:6700   .text.HAL_HRTIM_SimpleOnePulseStop:000000f0 $d
     /tmp/ccWQyto6.s:6705   .text.HAL_HRTIM_SimpleOnePulseStart_IT:00000000 $t
     /tmp/ccWQyto6.s:6710   .text.HAL_HRTIM_SimpleOnePulseStart_IT:00000000 HAL_HRTIM_SimpleOnePulseStart_IT
     /tmp/ccWQyto6.s:6817   .text.HAL_HRTIM_SimpleOnePulseStart_IT:000000a8 $d
     /tmp/ccWQyto6.s:6822   .text.HAL_HRTIM_SimpleOnePulseStop_IT:00000000 $t
     /tmp/ccWQyto6.s:6827   .text.HAL_HRTIM_SimpleOnePulseStop_IT:00000000 HAL_HRTIM_SimpleOnePulseStop_IT
     /tmp/ccWQyto6.s:7008   .text.HAL_HRTIM_SimpleOnePulseStop_IT:00000154 $d
     /tmp/ccWQyto6.s:7013   .text.HAL_HRTIM_BurstModeConfig:00000000 $t
     /tmp/ccWQyto6.s:7018   .text.HAL_HRTIM_BurstModeConfig:00000000 HAL_HRTIM_BurstModeConfig
     /tmp/ccWQyto6.s:7121   .text.HAL_HRTIM_EventConfig:00000000 $t
     /tmp/ccWQyto6.s:7126   .text.HAL_HRTIM_EventConfig:00000000 HAL_HRTIM_EventConfig
     /tmp/ccWQyto6.s:7183   .text.HAL_HRTIM_EventPrescalerConfig:00000000 $t
     /tmp/ccWQyto6.s:7188   .text.HAL_HRTIM_EventPrescalerConfig:00000000 HAL_HRTIM_EventPrescalerConfig
     /tmp/ccWQyto6.s:7255   .text.HAL_HRTIM_FaultConfig:00000000 $t
     /tmp/ccWQyto6.s:7260   .text.HAL_HRTIM_FaultConfig:00000000 HAL_HRTIM_FaultConfig
     /tmp/ccWQyto6.s:7303   .text.HAL_HRTIM_FaultConfig:00000034 $d
     /tmp/ccWQyto6.s:7319   .text.HAL_HRTIM_FaultConfig:00000044 $t
     /tmp/ccWQyto6.s:7464   .text.HAL_HRTIM_FaultPrescalerConfig:00000000 $t
     /tmp/ccWQyto6.s:7469   .text.HAL_HRTIM_FaultPrescalerConfig:00000000 HAL_HRTIM_FaultPrescalerConfig
     /tmp/ccWQyto6.s:7536   .text.HAL_HRTIM_FaultModeCtl:00000000 $t
     /tmp/ccWQyto6.s:7541   .text.HAL_HRTIM_FaultModeCtl:00000000 HAL_HRTIM_FaultModeCtl
     /tmp/ccWQyto6.s:7626   .text.HAL_HRTIM_ADCTriggerConfig:00000000 $t
     /tmp/ccWQyto6.s:7631   .text.HAL_HRTIM_ADCTriggerConfig:00000000 HAL_HRTIM_ADCTriggerConfig
     /tmp/ccWQyto6.s:7670   .text.HAL_HRTIM_ADCTriggerConfig:00000030 $d
     /tmp/ccWQyto6.s:7678   .text.HAL_HRTIM_ADCTriggerConfig:00000038 $t
     /tmp/ccWQyto6.s:7779   .text.HAL_HRTIM_WaveformTimerConfig:00000000 $t
ARM GAS  /tmp/ccWQyto6.s 			page 390


     /tmp/ccWQyto6.s:7784   .text.HAL_HRTIM_WaveformTimerConfig:00000000 HAL_HRTIM_WaveformTimerConfig
     /tmp/ccWQyto6.s:7880   .text.HAL_HRTIM_TimerEventFilteringConfig:00000000 $t
     /tmp/ccWQyto6.s:7885   .text.HAL_HRTIM_TimerEventFilteringConfig:00000000 HAL_HRTIM_TimerEventFilteringConfig
     /tmp/ccWQyto6.s:8220   .text.HAL_HRTIM_DeadTimeConfig:00000000 $t
     /tmp/ccWQyto6.s:8225   .text.HAL_HRTIM_DeadTimeConfig:00000000 HAL_HRTIM_DeadTimeConfig
     /tmp/ccWQyto6.s:8330   .text.HAL_HRTIM_DeadTimeConfig:00000070 $d
     /tmp/ccWQyto6.s:8335   .text.HAL_HRTIM_ChopperModeConfig:00000000 $t
     /tmp/ccWQyto6.s:8340   .text.HAL_HRTIM_ChopperModeConfig:00000000 HAL_HRTIM_ChopperModeConfig
     /tmp/ccWQyto6.s:8421   .text.HAL_HRTIM_BurstDMAConfig:00000000 $t
     /tmp/ccWQyto6.s:8426   .text.HAL_HRTIM_BurstDMAConfig:00000000 HAL_HRTIM_BurstDMAConfig
     /tmp/ccWQyto6.s:8454   .text.HAL_HRTIM_BurstDMAConfig:00000026 $d
     /tmp/ccWQyto6.s:8460   .text.HAL_HRTIM_BurstDMAConfig:0000002c $t
     /tmp/ccWQyto6.s:8523   .text.HAL_HRTIM_WaveformCompareConfig:00000000 $t
     /tmp/ccWQyto6.s:8528   .text.HAL_HRTIM_WaveformCompareConfig:00000000 HAL_HRTIM_WaveformCompareConfig
     /tmp/ccWQyto6.s:8568   .text.HAL_HRTIM_WaveformCompareConfig:00000032 $d
     /tmp/ccWQyto6.s:8576   .text.HAL_HRTIM_WaveformCompareConfig:0000003a $t
     /tmp/ccWQyto6.s:8622   .text.HAL_HRTIM_WaveformCompareConfig:00000064 $d
     /tmp/ccWQyto6.s:8630   .text.HAL_HRTIM_WaveformCompareConfig:0000006c $t
     /tmp/ccWQyto6.s:8774   .text.HAL_HRTIM_WaveformCaptureConfig:00000000 $t
     /tmp/ccWQyto6.s:8779   .text.HAL_HRTIM_WaveformCaptureConfig:00000000 HAL_HRTIM_WaveformCaptureConfig
     /tmp/ccWQyto6.s:8862   .text.HAL_HRTIM_WaveformOutputConfig:00000000 $t
     /tmp/ccWQyto6.s:8867   .text.HAL_HRTIM_WaveformOutputConfig:00000000 HAL_HRTIM_WaveformOutputConfig
     /tmp/ccWQyto6.s:8924   .text.HAL_HRTIM_WaveformSetOutputLevel:00000000 $t
     /tmp/ccWQyto6.s:8929   .text.HAL_HRTIM_WaveformSetOutputLevel:00000000 HAL_HRTIM_WaveformSetOutputLevel
     /tmp/ccWQyto6.s:9065   .text.HAL_HRTIM_WaveformOutputStart:00000000 $t
     /tmp/ccWQyto6.s:9070   .text.HAL_HRTIM_WaveformOutputStart:00000000 HAL_HRTIM_WaveformOutputStart
     /tmp/ccWQyto6.s:9120   .text.HAL_HRTIM_WaveformOutputStop:00000000 $t
     /tmp/ccWQyto6.s:9125   .text.HAL_HRTIM_WaveformOutputStop:00000000 HAL_HRTIM_WaveformOutputStop
     /tmp/ccWQyto6.s:9175   .text.HAL_HRTIM_WaveformCounterStart:00000000 $t
     /tmp/ccWQyto6.s:9180   .text.HAL_HRTIM_WaveformCounterStart:00000000 HAL_HRTIM_WaveformCounterStart
     /tmp/ccWQyto6.s:9230   .text.HAL_HRTIM_WaveformCounterStop:00000000 $t
     /tmp/ccWQyto6.s:9235   .text.HAL_HRTIM_WaveformCounterStop:00000000 HAL_HRTIM_WaveformCounterStop
     /tmp/ccWQyto6.s:9285   .text.HAL_HRTIM_WaveformCounterStart_IT:00000000 $t
     /tmp/ccWQyto6.s:9290   .text.HAL_HRTIM_WaveformCounterStart_IT:00000000 HAL_HRTIM_WaveformCounterStart_IT
     /tmp/ccWQyto6.s:9390   .text.HAL_HRTIM_WaveformCounterStart_IT:00000084 $d
     /tmp/ccWQyto6.s:9395   .text.HAL_HRTIM_WaveformCounterStop_IT:00000000 $t
     /tmp/ccWQyto6.s:9400   .text.HAL_HRTIM_WaveformCounterStop_IT:00000000 HAL_HRTIM_WaveformCounterStop_IT
     /tmp/ccWQyto6.s:9516   .text.HAL_HRTIM_WaveformCounterStop_IT:000000a4 $d
     /tmp/ccWQyto6.s:9521   .text.HAL_HRTIM_WaveformCounterStart_DMA:00000000 $t
     /tmp/ccWQyto6.s:9526   .text.HAL_HRTIM_WaveformCounterStart_DMA:00000000 HAL_HRTIM_WaveformCounterStart_DMA
     /tmp/ccWQyto6.s:9683   .text.HAL_HRTIM_WaveformCounterStart_DMA:000000f4 $d
     /tmp/ccWQyto6.s:9691   .text.HAL_HRTIM_WaveformCounterStop_DMA:00000000 $t
     /tmp/ccWQyto6.s:9696   .text.HAL_HRTIM_WaveformCounterStop_DMA:00000000 HAL_HRTIM_WaveformCounterStop_DMA
     /tmp/ccWQyto6.s:9863   .text.HAL_HRTIM_WaveformCounterStop_DMA:0000011c $d
     /tmp/ccWQyto6.s:9868   .text.HAL_HRTIM_BurstModeCtl:00000000 $t
     /tmp/ccWQyto6.s:9873   .text.HAL_HRTIM_BurstModeCtl:00000000 HAL_HRTIM_BurstModeCtl
     /tmp/ccWQyto6.s:9940   .text.HAL_HRTIM_BurstModeSoftwareTrigger:00000000 $t
     /tmp/ccWQyto6.s:9945   .text.HAL_HRTIM_BurstModeSoftwareTrigger:00000000 HAL_HRTIM_BurstModeSoftwareTrigger
     /tmp/ccWQyto6.s:9999   .text.HAL_HRTIM_SoftwareCapture:00000000 $t
     /tmp/ccWQyto6.s:10004  .text.HAL_HRTIM_SoftwareCapture:00000000 HAL_HRTIM_SoftwareCapture
     /tmp/ccWQyto6.s:10080  .text.HAL_HRTIM_SoftwareUpdate:00000000 $t
     /tmp/ccWQyto6.s:10085  .text.HAL_HRTIM_SoftwareUpdate:00000000 HAL_HRTIM_SoftwareUpdate
     /tmp/ccWQyto6.s:10146  .text.HAL_HRTIM_SoftwareReset:00000000 $t
     /tmp/ccWQyto6.s:10151  .text.HAL_HRTIM_SoftwareReset:00000000 HAL_HRTIM_SoftwareReset
     /tmp/ccWQyto6.s:10201  .text.HAL_HRTIM_BurstDMATransfer:00000000 $t
     /tmp/ccWQyto6.s:10206  .text.HAL_HRTIM_BurstDMATransfer:00000000 HAL_HRTIM_BurstDMATransfer
     /tmp/ccWQyto6.s:10301  .text.HAL_HRTIM_BurstDMATransfer:0000006c $d
ARM GAS  /tmp/ccWQyto6.s 			page 391


     /tmp/ccWQyto6.s:12367  .text.HRTIM_BurstDMACplt:00000000 HRTIM_BurstDMACplt
     /tmp/ccWQyto6.s:10307  .text.HAL_HRTIM_UpdateEnable:00000000 $t
     /tmp/ccWQyto6.s:10312  .text.HAL_HRTIM_UpdateEnable:00000000 HAL_HRTIM_UpdateEnable
     /tmp/ccWQyto6.s:10362  .text.HAL_HRTIM_UpdateDisable:00000000 $t
     /tmp/ccWQyto6.s:10367  .text.HAL_HRTIM_UpdateDisable:00000000 HAL_HRTIM_UpdateDisable
     /tmp/ccWQyto6.s:10417  .text.HAL_HRTIM_GetState:00000000 $t
     /tmp/ccWQyto6.s:10422  .text.HAL_HRTIM_GetState:00000000 HAL_HRTIM_GetState
     /tmp/ccWQyto6.s:10439  .text.HAL_HRTIM_GetCapturedValue:00000000 $t
     /tmp/ccWQyto6.s:10444  .text.HAL_HRTIM_GetCapturedValue:00000000 HAL_HRTIM_GetCapturedValue
     /tmp/ccWQyto6.s:10488  .text.HAL_HRTIM_WaveformGetOutputLevel:00000000 $t
     /tmp/ccWQyto6.s:10493  .text.HAL_HRTIM_WaveformGetOutputLevel:00000000 HAL_HRTIM_WaveformGetOutputLevel
     /tmp/ccWQyto6.s:10584  .text.HAL_HRTIM_WaveformGetOutputState:00000000 $t
     /tmp/ccWQyto6.s:10589  .text.HAL_HRTIM_WaveformGetOutputState:00000000 HAL_HRTIM_WaveformGetOutputState
     /tmp/ccWQyto6.s:10732  .text.HAL_HRTIM_GetDelayedProtectionStatus:00000000 $t
     /tmp/ccWQyto6.s:10737  .text.HAL_HRTIM_GetDelayedProtectionStatus:00000000 HAL_HRTIM_GetDelayedProtectionStatus
     /tmp/ccWQyto6.s:10828  .text.HAL_HRTIM_GetBurstStatus:00000000 $t
     /tmp/ccWQyto6.s:10833  .text.HAL_HRTIM_GetBurstStatus:00000000 HAL_HRTIM_GetBurstStatus
     /tmp/ccWQyto6.s:10853  .text.HAL_HRTIM_GetCurrentPushPullStatus:00000000 $t
     /tmp/ccWQyto6.s:10858  .text.HAL_HRTIM_GetCurrentPushPullStatus:00000000 HAL_HRTIM_GetCurrentPushPullStatus
     /tmp/ccWQyto6.s:10881  .text.HAL_HRTIM_GetIdlePushPullStatus:00000000 $t
     /tmp/ccWQyto6.s:10886  .text.HAL_HRTIM_GetIdlePushPullStatus:00000000 HAL_HRTIM_GetIdlePushPullStatus
     /tmp/ccWQyto6.s:10909  .text.HAL_HRTIM_Fault1Callback:00000000 $t
     /tmp/ccWQyto6.s:10914  .text.HAL_HRTIM_Fault1Callback:00000000 HAL_HRTIM_Fault1Callback
     /tmp/ccWQyto6.s:10927  .text.HAL_HRTIM_Fault2Callback:00000000 $t
     /tmp/ccWQyto6.s:10932  .text.HAL_HRTIM_Fault2Callback:00000000 HAL_HRTIM_Fault2Callback
     /tmp/ccWQyto6.s:10945  .text.HAL_HRTIM_Fault3Callback:00000000 $t
     /tmp/ccWQyto6.s:10950  .text.HAL_HRTIM_Fault3Callback:00000000 HAL_HRTIM_Fault3Callback
     /tmp/ccWQyto6.s:10963  .text.HAL_HRTIM_Fault4Callback:00000000 $t
     /tmp/ccWQyto6.s:10968  .text.HAL_HRTIM_Fault4Callback:00000000 HAL_HRTIM_Fault4Callback
     /tmp/ccWQyto6.s:10981  .text.HAL_HRTIM_Fault5Callback:00000000 $t
     /tmp/ccWQyto6.s:10986  .text.HAL_HRTIM_Fault5Callback:00000000 HAL_HRTIM_Fault5Callback
     /tmp/ccWQyto6.s:10999  .text.HAL_HRTIM_SystemFaultCallback:00000000 $t
     /tmp/ccWQyto6.s:11004  .text.HAL_HRTIM_SystemFaultCallback:00000000 HAL_HRTIM_SystemFaultCallback
     /tmp/ccWQyto6.s:11017  .text.HRTIM_HRTIM_ISR:00000000 $t
     /tmp/ccWQyto6.s:11021  .text.HRTIM_HRTIM_ISR:00000000 HRTIM_HRTIM_ISR
     /tmp/ccWQyto6.s:11141  .text.HAL_HRTIM_DLLCalbrationReadyCallback:00000000 $t
     /tmp/ccWQyto6.s:11146  .text.HAL_HRTIM_DLLCalbrationReadyCallback:00000000 HAL_HRTIM_DLLCalbrationReadyCallback
     /tmp/ccWQyto6.s:11159  .text.HAL_HRTIM_BurstModePeriodCallback:00000000 $t
     /tmp/ccWQyto6.s:11164  .text.HAL_HRTIM_BurstModePeriodCallback:00000000 HAL_HRTIM_BurstModePeriodCallback
     /tmp/ccWQyto6.s:11177  .text.HAL_HRTIM_SynchronizationEventCallback:00000000 $t
     /tmp/ccWQyto6.s:11182  .text.HAL_HRTIM_SynchronizationEventCallback:00000000 HAL_HRTIM_SynchronizationEventCallback
     /tmp/ccWQyto6.s:11195  .text.HAL_HRTIM_RegistersUpdateCallback:00000000 $t
     /tmp/ccWQyto6.s:11200  .text.HAL_HRTIM_RegistersUpdateCallback:00000000 HAL_HRTIM_RegistersUpdateCallback
     /tmp/ccWQyto6.s:11213  .text.HAL_HRTIM_RepetitionEventCallback:00000000 $t
     /tmp/ccWQyto6.s:11218  .text.HAL_HRTIM_RepetitionEventCallback:00000000 HAL_HRTIM_RepetitionEventCallback
     /tmp/ccWQyto6.s:11231  .text.HAL_HRTIM_Compare1EventCallback:00000000 $t
     /tmp/ccWQyto6.s:11236  .text.HAL_HRTIM_Compare1EventCallback:00000000 HAL_HRTIM_Compare1EventCallback
     /tmp/ccWQyto6.s:11249  .text.HAL_HRTIM_Compare2EventCallback:00000000 $t
     /tmp/ccWQyto6.s:11254  .text.HAL_HRTIM_Compare2EventCallback:00000000 HAL_HRTIM_Compare2EventCallback
     /tmp/ccWQyto6.s:11267  .text.HAL_HRTIM_Compare3EventCallback:00000000 $t
     /tmp/ccWQyto6.s:11272  .text.HAL_HRTIM_Compare3EventCallback:00000000 HAL_HRTIM_Compare3EventCallback
     /tmp/ccWQyto6.s:11285  .text.HAL_HRTIM_Compare4EventCallback:00000000 $t
     /tmp/ccWQyto6.s:11290  .text.HAL_HRTIM_Compare4EventCallback:00000000 HAL_HRTIM_Compare4EventCallback
     /tmp/ccWQyto6.s:11303  .text.HRTIM_DMAMasterCplt:00000000 $t
     /tmp/ccWQyto6.s:11403  .text.HRTIM_Master_ISR:00000000 $t
     /tmp/ccWQyto6.s:11407  .text.HRTIM_Master_ISR:00000000 HRTIM_Master_ISR
     /tmp/ccWQyto6.s:11589  .text.HAL_HRTIM_Capture1EventCallback:00000000 $t
ARM GAS  /tmp/ccWQyto6.s 			page 392


     /tmp/ccWQyto6.s:11594  .text.HAL_HRTIM_Capture1EventCallback:00000000 HAL_HRTIM_Capture1EventCallback
     /tmp/ccWQyto6.s:11607  .text.HAL_HRTIM_Capture2EventCallback:00000000 $t
     /tmp/ccWQyto6.s:11612  .text.HAL_HRTIM_Capture2EventCallback:00000000 HAL_HRTIM_Capture2EventCallback
     /tmp/ccWQyto6.s:11625  .text.HAL_HRTIM_DelayedProtectionCallback:00000000 $t
     /tmp/ccWQyto6.s:11630  .text.HAL_HRTIM_DelayedProtectionCallback:00000000 HAL_HRTIM_DelayedProtectionCallback
     /tmp/ccWQyto6.s:11643  .text.HAL_HRTIM_CounterResetCallback:00000000 $t
     /tmp/ccWQyto6.s:11648  .text.HAL_HRTIM_CounterResetCallback:00000000 HAL_HRTIM_CounterResetCallback
     /tmp/ccWQyto6.s:11661  .text.HAL_HRTIM_Output1SetCallback:00000000 $t
     /tmp/ccWQyto6.s:11666  .text.HAL_HRTIM_Output1SetCallback:00000000 HAL_HRTIM_Output1SetCallback
     /tmp/ccWQyto6.s:11679  .text.HAL_HRTIM_Output1ResetCallback:00000000 $t
     /tmp/ccWQyto6.s:11684  .text.HAL_HRTIM_Output1ResetCallback:00000000 HAL_HRTIM_Output1ResetCallback
     /tmp/ccWQyto6.s:11697  .text.HAL_HRTIM_Output2SetCallback:00000000 $t
     /tmp/ccWQyto6.s:11702  .text.HAL_HRTIM_Output2SetCallback:00000000 HAL_HRTIM_Output2SetCallback
     /tmp/ccWQyto6.s:11715  .text.HAL_HRTIM_Output2ResetCallback:00000000 $t
     /tmp/ccWQyto6.s:11720  .text.HAL_HRTIM_Output2ResetCallback:00000000 HAL_HRTIM_Output2ResetCallback
     /tmp/ccWQyto6.s:11733  .text.HRTIM_DMATimerxCplt:00000000 $t
     /tmp/ccWQyto6.s:11957  .text.HRTIM_Timer_ISR:00000000 $t
     /tmp/ccWQyto6.s:11961  .text.HRTIM_Timer_ISR:00000000 HRTIM_Timer_ISR
     /tmp/ccWQyto6.s:12302  .text.HAL_HRTIM_IRQHandler:00000000 $t
     /tmp/ccWQyto6.s:12307  .text.HAL_HRTIM_IRQHandler:00000000 HAL_HRTIM_IRQHandler
     /tmp/ccWQyto6.s:12345  .text.HAL_HRTIM_BurstDMATransferCallback:00000000 $t
     /tmp/ccWQyto6.s:12350  .text.HAL_HRTIM_BurstDMATransferCallback:00000000 HAL_HRTIM_BurstDMATransferCallback
     /tmp/ccWQyto6.s:12363  .text.HRTIM_BurstDMACplt:00000000 $t
     /tmp/ccWQyto6.s:12395  .text.HAL_HRTIM_ErrorCallback:00000000 $t
     /tmp/ccWQyto6.s:12400  .text.HAL_HRTIM_ErrorCallback:00000000 HAL_HRTIM_ErrorCallback
     /tmp/ccWQyto6.s:12413  .text.HRTIM_DMAError:00000000 $t
     /tmp/ccWQyto6.s:12441  .rodata.TimerIdxToTimerId:00000000 $d
     /tmp/ccWQyto6.s:12445  .rodata.TimerIdxToTimerId:00000000 TimerIdxToTimerId
                     .debug_frame:00000010 $d
     /tmp/ccWQyto6.s:402    .text.HRTIM_TimingUnitWaveform_Config:000000dd $d
     /tmp/ccWQyto6.s:402    .text.HRTIM_TimingUnitWaveform_Config:000000de $t

UNDEFINED SYMBOLS
HAL_GetTick
HAL_DMA_Start_IT
HAL_DMA_Abort
